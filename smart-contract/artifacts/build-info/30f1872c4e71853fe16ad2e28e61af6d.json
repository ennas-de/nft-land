{"id":"30f1872c4e71853fe16ad2e28e61af6d","_format":"hh-sol-build-info-1","solcVersion":"0.8.27","solcLongVersion":"0.8.27+commit.40a35a09","input":{"language":"Solidity","sources":{"@openzeppelin/contracts/access/Ownable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"},"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC-20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC-721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC-1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"},"@openzeppelin/contracts/interfaces/IERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC165.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"../utils/introspection/IERC165.sol\";\n"},"@openzeppelin/contracts/interfaces/IERC4906.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/IERC4906.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"./IERC165.sol\";\nimport {IERC721} from \"./IERC721.sol\";\n\n/// @title ERC-721 Metadata Update Extension\ninterface IERC4906 is IERC165, IERC721 {\n    /// @dev This event emits when the metadata of a token is changed.\n    /// So that the third-party platforms such as NFT market could\n    /// timely update the images and related attributes of the NFT.\n    event MetadataUpdate(uint256 _tokenId);\n\n    /// @dev This event emits when the metadata of a range of tokens is changed.\n    /// So that the third-party platforms such as NFT market could\n    /// timely update the images and related attributes of the NFTs.\n    event BatchMetadataUpdate(uint256 _fromTokenId, uint256 _toTokenId);\n}\n"},"@openzeppelin/contracts/interfaces/IERC721.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC721.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC721} from \"../token/ERC721/IERC721.sol\";\n"},"@openzeppelin/contracts/token/ERC721/ERC721.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC721/ERC721.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC721} from \"./IERC721.sol\";\nimport {IERC721Metadata} from \"./extensions/IERC721Metadata.sol\";\nimport {ERC721Utils} from \"./utils/ERC721Utils.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {Strings} from \"../../utils/Strings.sol\";\nimport {IERC165, ERC165} from \"../../utils/introspection/ERC165.sol\";\nimport {IERC721Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC-721] Non-Fungible Token Standard, including\n * the Metadata extension, but not including the Enumerable extension, which is available separately as\n * {ERC721Enumerable}.\n */\nabstract contract ERC721 is Context, ERC165, IERC721, IERC721Metadata, IERC721Errors {\n    using Strings for uint256;\n\n    // Token name\n    string private _name;\n\n    // Token symbol\n    string private _symbol;\n\n    mapping(uint256 tokenId => address) private _owners;\n\n    mapping(address owner => uint256) private _balances;\n\n    mapping(uint256 tokenId => address) private _tokenApprovals;\n\n    mapping(address owner => mapping(address operator => bool)) private _operatorApprovals;\n\n    /**\n     * @dev Initializes the contract by setting a `name` and a `symbol` to the token collection.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\n        return\n            interfaceId == type(IERC721).interfaceId ||\n            interfaceId == type(IERC721Metadata).interfaceId ||\n            super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev See {IERC721-balanceOf}.\n     */\n    function balanceOf(address owner) public view virtual returns (uint256) {\n        if (owner == address(0)) {\n            revert ERC721InvalidOwner(address(0));\n        }\n        return _balances[owner];\n    }\n\n    /**\n     * @dev See {IERC721-ownerOf}.\n     */\n    function ownerOf(uint256 tokenId) public view virtual returns (address) {\n        return _requireOwned(tokenId);\n    }\n\n    /**\n     * @dev See {IERC721Metadata-name}.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-symbol}.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-tokenURI}.\n     */\n    function tokenURI(uint256 tokenId) public view virtual returns (string memory) {\n        _requireOwned(tokenId);\n\n        string memory baseURI = _baseURI();\n        return bytes(baseURI).length > 0 ? string.concat(baseURI, tokenId.toString()) : \"\";\n    }\n\n    /**\n     * @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n     * token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n     * by default, can be overridden in child contracts.\n     */\n    function _baseURI() internal view virtual returns (string memory) {\n        return \"\";\n    }\n\n    /**\n     * @dev See {IERC721-approve}.\n     */\n    function approve(address to, uint256 tokenId) public virtual {\n        _approve(to, tokenId, _msgSender());\n    }\n\n    /**\n     * @dev See {IERC721-getApproved}.\n     */\n    function getApproved(uint256 tokenId) public view virtual returns (address) {\n        _requireOwned(tokenId);\n\n        return _getApproved(tokenId);\n    }\n\n    /**\n     * @dev See {IERC721-setApprovalForAll}.\n     */\n    function setApprovalForAll(address operator, bool approved) public virtual {\n        _setApprovalForAll(_msgSender(), operator, approved);\n    }\n\n    /**\n     * @dev See {IERC721-isApprovedForAll}.\n     */\n    function isApprovedForAll(address owner, address operator) public view virtual returns (bool) {\n        return _operatorApprovals[owner][operator];\n    }\n\n    /**\n     * @dev See {IERC721-transferFrom}.\n     */\n    function transferFrom(address from, address to, uint256 tokenId) public virtual {\n        if (to == address(0)) {\n            revert ERC721InvalidReceiver(address(0));\n        }\n        // Setting an \"auth\" arguments enables the `_isAuthorized` check which verifies that the token exists\n        // (from != 0). Therefore, it is not needed to verify that the return value is not 0 here.\n        address previousOwner = _update(to, tokenId, _msgSender());\n        if (previousOwner != from) {\n            revert ERC721IncorrectOwner(from, tokenId, previousOwner);\n        }\n    }\n\n    /**\n     * @dev See {IERC721-safeTransferFrom}.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId) public {\n        safeTransferFrom(from, to, tokenId, \"\");\n    }\n\n    /**\n     * @dev See {IERC721-safeTransferFrom}.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory data) public virtual {\n        transferFrom(from, to, tokenId);\n        ERC721Utils.checkOnERC721Received(_msgSender(), from, to, tokenId, data);\n    }\n\n    /**\n     * @dev Returns the owner of the `tokenId`. Does NOT revert if token doesn't exist\n     *\n     * IMPORTANT: Any overrides to this function that add ownership of tokens not tracked by the\n     * core ERC-721 logic MUST be matched with the use of {_increaseBalance} to keep balances\n     * consistent with ownership. The invariant to preserve is that for any address `a` the value returned by\n     * `balanceOf(a)` must be equal to the number of tokens such that `_ownerOf(tokenId)` is `a`.\n     */\n    function _ownerOf(uint256 tokenId) internal view virtual returns (address) {\n        return _owners[tokenId];\n    }\n\n    /**\n     * @dev Returns the approved address for `tokenId`. Returns 0 if `tokenId` is not minted.\n     */\n    function _getApproved(uint256 tokenId) internal view virtual returns (address) {\n        return _tokenApprovals[tokenId];\n    }\n\n    /**\n     * @dev Returns whether `spender` is allowed to manage `owner`'s tokens, or `tokenId` in\n     * particular (ignoring whether it is owned by `owner`).\n     *\n     * WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n     * assumption.\n     */\n    function _isAuthorized(address owner, address spender, uint256 tokenId) internal view virtual returns (bool) {\n        return\n            spender != address(0) &&\n            (owner == spender || isApprovedForAll(owner, spender) || _getApproved(tokenId) == spender);\n    }\n\n    /**\n     * @dev Checks if `spender` can operate on `tokenId`, assuming the provided `owner` is the actual owner.\n     * Reverts if:\n     * - `spender` does not have approval from `owner` for `tokenId`.\n     * - `spender` does not have approval to manage all of `owner`'s assets.\n     *\n     * WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n     * assumption.\n     */\n    function _checkAuthorized(address owner, address spender, uint256 tokenId) internal view virtual {\n        if (!_isAuthorized(owner, spender, tokenId)) {\n            if (owner == address(0)) {\n                revert ERC721NonexistentToken(tokenId);\n            } else {\n                revert ERC721InsufficientApproval(spender, tokenId);\n            }\n        }\n    }\n\n    /**\n     * @dev Unsafe write access to the balances, used by extensions that \"mint\" tokens using an {ownerOf} override.\n     *\n     * NOTE: the value is limited to type(uint128).max. This protect against _balance overflow. It is unrealistic that\n     * a uint256 would ever overflow from increments when these increments are bounded to uint128 values.\n     *\n     * WARNING: Increasing an account's balance using this function tends to be paired with an override of the\n     * {_ownerOf} function to resolve the ownership of the corresponding tokens so that balances and ownership\n     * remain consistent with one another.\n     */\n    function _increaseBalance(address account, uint128 value) internal virtual {\n        unchecked {\n            _balances[account] += value;\n        }\n    }\n\n    /**\n     * @dev Transfers `tokenId` from its current owner to `to`, or alternatively mints (or burns) if the current owner\n     * (or `to`) is the zero address. Returns the owner of the `tokenId` before the update.\n     *\n     * The `auth` argument is optional. If the value passed is non 0, then this function will check that\n     * `auth` is either the owner of the token, or approved to operate on the token (by the owner).\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: If overriding this function in a way that tracks balances, see also {_increaseBalance}.\n     */\n    function _update(address to, uint256 tokenId, address auth) internal virtual returns (address) {\n        address from = _ownerOf(tokenId);\n\n        // Perform (optional) operator check\n        if (auth != address(0)) {\n            _checkAuthorized(from, auth, tokenId);\n        }\n\n        // Execute the update\n        if (from != address(0)) {\n            // Clear approval. No need to re-authorize or emit the Approval event\n            _approve(address(0), tokenId, address(0), false);\n\n            unchecked {\n                _balances[from] -= 1;\n            }\n        }\n\n        if (to != address(0)) {\n            unchecked {\n                _balances[to] += 1;\n            }\n        }\n\n        _owners[tokenId] = to;\n\n        emit Transfer(from, to, tokenId);\n\n        return from;\n    }\n\n    /**\n     * @dev Mints `tokenId` and transfers it to `to`.\n     *\n     * WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\n     *\n     * Requirements:\n     *\n     * - `tokenId` must not exist.\n     * - `to` cannot be the zero address.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _mint(address to, uint256 tokenId) internal {\n        if (to == address(0)) {\n            revert ERC721InvalidReceiver(address(0));\n        }\n        address previousOwner = _update(to, tokenId, address(0));\n        if (previousOwner != address(0)) {\n            revert ERC721InvalidSender(address(0));\n        }\n    }\n\n    /**\n     * @dev Mints `tokenId`, transfers it to `to` and checks for `to` acceptance.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must not exist.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _safeMint(address to, uint256 tokenId) internal {\n        _safeMint(to, tokenId, \"\");\n    }\n\n    /**\n     * @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\n     */\n    function _safeMint(address to, uint256 tokenId, bytes memory data) internal virtual {\n        _mint(to, tokenId);\n        ERC721Utils.checkOnERC721Received(_msgSender(), address(0), to, tokenId, data);\n    }\n\n    /**\n     * @dev Destroys `tokenId`.\n     * The approval is cleared when the token is burned.\n     * This is an internal function that does not check if the sender is authorized to operate on the token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _burn(uint256 tokenId) internal {\n        address previousOwner = _update(address(0), tokenId, address(0));\n        if (previousOwner == address(0)) {\n            revert ERC721NonexistentToken(tokenId);\n        }\n    }\n\n    /**\n     * @dev Transfers `tokenId` from `from` to `to`.\n     *  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _transfer(address from, address to, uint256 tokenId) internal {\n        if (to == address(0)) {\n            revert ERC721InvalidReceiver(address(0));\n        }\n        address previousOwner = _update(to, tokenId, address(0));\n        if (previousOwner == address(0)) {\n            revert ERC721NonexistentToken(tokenId);\n        } else if (previousOwner != from) {\n            revert ERC721IncorrectOwner(from, tokenId, previousOwner);\n        }\n    }\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking that contract recipients\n     * are aware of the ERC-721 standard to prevent tokens from being forever locked.\n     *\n     * `data` is additional data, it has no specified format and it is sent in call to `to`.\n     *\n     * This internal function is like {safeTransferFrom} in the sense that it invokes\n     * {IERC721Receiver-onERC721Received} on the receiver, and can be used to e.g.\n     * implement alternative mechanisms to perform token transfer, such as signature-based.\n     *\n     * Requirements:\n     *\n     * - `tokenId` token must exist and be owned by `from`.\n     * - `to` cannot be the zero address.\n     * - `from` cannot be the zero address.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _safeTransfer(address from, address to, uint256 tokenId) internal {\n        _safeTransfer(from, to, tokenId, \"\");\n    }\n\n    /**\n     * @dev Same as {xref-ERC721-_safeTransfer-address-address-uint256-}[`_safeTransfer`], with an additional `data` parameter which is\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\n     */\n    function _safeTransfer(address from, address to, uint256 tokenId, bytes memory data) internal virtual {\n        _transfer(from, to, tokenId);\n        ERC721Utils.checkOnERC721Received(_msgSender(), from, to, tokenId, data);\n    }\n\n    /**\n     * @dev Approve `to` to operate on `tokenId`\n     *\n     * The `auth` argument is optional. If the value passed is non 0, then this function will check that `auth` is\n     * either the owner of the token, or approved to operate on all tokens held by this owner.\n     *\n     * Emits an {Approval} event.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address to, uint256 tokenId, address auth) internal {\n        _approve(to, tokenId, auth, true);\n    }\n\n    /**\n     * @dev Variant of `_approve` with an optional flag to enable or disable the {Approval} event. The event is not\n     * emitted in the context of transfers.\n     */\n    function _approve(address to, uint256 tokenId, address auth, bool emitEvent) internal virtual {\n        // Avoid reading the owner unless necessary\n        if (emitEvent || auth != address(0)) {\n            address owner = _requireOwned(tokenId);\n\n            // We do not use _isAuthorized because single-token approvals should not be able to call approve\n            if (auth != address(0) && owner != auth && !isApprovedForAll(owner, auth)) {\n                revert ERC721InvalidApprover(auth);\n            }\n\n            if (emitEvent) {\n                emit Approval(owner, to, tokenId);\n            }\n        }\n\n        _tokenApprovals[tokenId] = to;\n    }\n\n    /**\n     * @dev Approve `operator` to operate on all of `owner` tokens\n     *\n     * Requirements:\n     * - operator can't be the address zero.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {\n        if (operator == address(0)) {\n            revert ERC721InvalidOperator(operator);\n        }\n        _operatorApprovals[owner][operator] = approved;\n        emit ApprovalForAll(owner, operator, approved);\n    }\n\n    /**\n     * @dev Reverts if the `tokenId` doesn't have a current owner (it hasn't been minted, or it has been burned).\n     * Returns the owner.\n     *\n     * Overrides to ownership logic should be done to {_ownerOf}.\n     */\n    function _requireOwned(uint256 tokenId) internal view returns (address) {\n        address owner = _ownerOf(tokenId);\n        if (owner == address(0)) {\n            revert ERC721NonexistentToken(tokenId);\n        }\n        return owner;\n    }\n}\n"},"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC721/extensions/ERC721URIStorage.sol)\n\npragma solidity ^0.8.20;\n\nimport {ERC721} from \"../ERC721.sol\";\nimport {Strings} from \"../../../utils/Strings.sol\";\nimport {IERC4906} from \"../../../interfaces/IERC4906.sol\";\nimport {IERC165} from \"../../../interfaces/IERC165.sol\";\n\n/**\n * @dev ERC-721 token with storage based token URI management.\n */\nabstract contract ERC721URIStorage is IERC4906, ERC721 {\n    using Strings for uint256;\n\n    // Interface ID as defined in ERC-4906. This does not correspond to a traditional interface ID as ERC-4906 only\n    // defines events and does not include any external function.\n    bytes4 private constant ERC4906_INTERFACE_ID = bytes4(0x49064906);\n\n    // Optional mapping for token URIs\n    mapping(uint256 tokenId => string) private _tokenURIs;\n\n    /**\n     * @dev See {IERC165-supportsInterface}\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC721, IERC165) returns (bool) {\n        return interfaceId == ERC4906_INTERFACE_ID || super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev See {IERC721Metadata-tokenURI}.\n     */\n    function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {\n        _requireOwned(tokenId);\n\n        string memory _tokenURI = _tokenURIs[tokenId];\n        string memory base = _baseURI();\n\n        // If there is no base URI, return the token URI.\n        if (bytes(base).length == 0) {\n            return _tokenURI;\n        }\n        // If both are set, concatenate the baseURI and tokenURI (via string.concat).\n        if (bytes(_tokenURI).length > 0) {\n            return string.concat(base, _tokenURI);\n        }\n\n        return super.tokenURI(tokenId);\n    }\n\n    /**\n     * @dev Sets `_tokenURI` as the tokenURI of `tokenId`.\n     *\n     * Emits {MetadataUpdate}.\n     */\n    function _setTokenURI(uint256 tokenId, string memory _tokenURI) internal virtual {\n        _tokenURIs[tokenId] = _tokenURI;\n        emit MetadataUpdate(tokenId);\n    }\n}\n"},"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/extensions/IERC721Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC721} from \"../IERC721.sol\";\n\n/**\n * @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n * @dev See https://eips.ethereum.org/EIPS/eip-721\n */\ninterface IERC721Metadata is IERC721 {\n    /**\n     * @dev Returns the token collection name.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the token collection symbol.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\n     */\n    function tokenURI(uint256 tokenId) external view returns (string memory);\n}\n"},"@openzeppelin/contracts/token/ERC721/IERC721.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC721/IERC721.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Required interface of an ERC-721 compliant contract.\n */\ninterface IERC721 is IERC165 {\n    /**\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\n     */\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\n     */\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\n\n    /**\n     * @dev Returns the number of tokens in ``owner``'s account.\n     */\n    function balanceOf(address owner) external view returns (uint256 balance);\n\n    /**\n     * @dev Returns the owner of the `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function ownerOf(uint256 tokenId) external view returns (address owner);\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n     *   a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes calldata data) external;\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n     * are aware of the ERC-721 protocol to prevent tokens from being forever locked.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or\n     *   {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n     *   a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId) external;\n\n    /**\n     * @dev Transfers `tokenId` token from `from` to `to`.\n     *\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 tokenId) external;\n\n    /**\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\n     * The approval is cleared when the token is transferred.\n     *\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n     *\n     * Requirements:\n     *\n     * - The caller must own the token or be an approved operator.\n     * - `tokenId` must exist.\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address to, uint256 tokenId) external;\n\n    /**\n     * @dev Approve or remove `operator` as an operator for the caller.\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n     *\n     * Requirements:\n     *\n     * - The `operator` cannot be the address zero.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function setApprovalForAll(address operator, bool approved) external;\n\n    /**\n     * @dev Returns the account approved for `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function getApproved(uint256 tokenId) external view returns (address operator);\n\n    /**\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n     *\n     * See {setApprovalForAll}\n     */\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\n}\n"},"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC721/IERC721Receiver.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @title ERC-721 token receiver interface\n * @dev Interface for any contract that wants to support safeTransfers\n * from ERC-721 asset contracts.\n */\ninterface IERC721Receiver {\n    /**\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n     * by `operator` from `from`, this function is called.\n     *\n     * It must return its Solidity selector to confirm the token transfer.\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be\n     * reverted.\n     *\n     * The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\n     */\n    function onERC721Received(\n        address operator,\n        address from,\n        uint256 tokenId,\n        bytes calldata data\n    ) external returns (bytes4);\n}\n"},"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC721/utils/ERC721Utils.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC721Receiver} from \"../IERC721Receiver.sol\";\nimport {IERC721Errors} from \"../../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Library that provide common ERC-721 utility functions.\n *\n * See https://eips.ethereum.org/EIPS/eip-721[ERC-721].\n *\n * _Available since v5.1._\n */\nlibrary ERC721Utils {\n    /**\n     * @dev Performs an acceptance check for the provided `operator` by calling {IERC721-onERC721Received}\n     * on the `to` address. The `operator` is generally the address that initiated the token transfer (i.e. `msg.sender`).\n     *\n     * The acceptance call is not executed and treated as a no-op if the target address doesn't contain code (i.e. an EOA).\n     * Otherwise, the recipient must implement {IERC721Receiver-onERC721Received} and return the acceptance magic value to accept\n     * the transfer.\n     */\n    function checkOnERC721Received(\n        address operator,\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes memory data\n    ) internal {\n        if (to.code.length > 0) {\n            try IERC721Receiver(to).onERC721Received(operator, from, tokenId, data) returns (bytes4 retval) {\n                if (retval != IERC721Receiver.onERC721Received.selector) {\n                    // Token rejected\n                    revert IERC721Errors.ERC721InvalidReceiver(to);\n                }\n            } catch (bytes memory reason) {\n                if (reason.length == 0) {\n                    // non-IERC721Receiver implementer\n                    revert IERC721Errors.ERC721InvalidReceiver(to);\n                } else {\n                    assembly (\"memory-safe\") {\n                        revert(add(32, reason), mload(reason))\n                    }\n                }\n            }\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Context.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"./IERC165.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n */\nabstract contract ERC165 is IERC165 {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[ERC].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"},"@openzeppelin/contracts/utils/math/Math.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.20;\n\nimport {Panic} from \"../Panic.sol\";\nimport {SafeCast} from \"./SafeCast.sol\";\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    enum Rounding {\n        Floor, // Toward negative infinity\n        Ceil, // Toward positive infinity\n        Trunc, // Toward zero\n        Expand // Away from zero\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, with an success flag (no overflow).\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with an success flag (no overflow).\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an success flag (no overflow).\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a success flag (no division by zero).\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a success flag (no division by zero).\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n     *\n     * IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n     * However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n     * one branch when needed, making this function more expensive.\n     */\n    function ternary(bool condition, uint256 a, uint256 b) internal pure returns (uint256) {\n        unchecked {\n            // branchless ternary works because:\n            // b ^ (a ^ b) == a\n            // b ^ 0 == b\n            return b ^ ((a ^ b) * SafeCast.toUint(condition));\n        }\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return ternary(a > b, a, b);\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return ternary(a < b, a, b);\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds towards infinity instead\n     * of rounding towards zero.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        if (b == 0) {\n            // Guarantee the same behavior as in a regular Solidity division.\n            Panic.panic(Panic.DIVISION_BY_ZERO);\n        }\n\n        // The following calculation ensures accurate ceiling division without overflow.\n        // Since a is non-zero, (a - 1) / b will not overflow.\n        // The largest possible result occurs when (a - 1) / b is type(uint256).max,\n        // but the largest value we can obtain is type(uint256).max - 1, which happens\n        // when a = type(uint256).max and b = 1.\n        unchecked {\n            return SafeCast.toUint(a > 0) * ((a - 1) / b + 1);\n        }\n    }\n\n    /**\n     * @dev Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n     * denominator == 0.\n     *\n     * Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n     * Uniswap Labs also under MIT license.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\n        unchecked {\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2²⁵⁶ and mod 2²⁵⁶ - 1, then use\n            // the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n            // variables such that product = prod1 * 2²⁵⁶ + prod0.\n            uint256 prod0 = x * y; // Least significant 256 bits of the product\n            uint256 prod1; // Most significant 256 bits of the product\n            assembly {\n                let mm := mulmod(x, y, not(0))\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\n            }\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (prod1 == 0) {\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\n                // The surrounding unchecked block does not change this fact.\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\n                return prod0 / denominator;\n            }\n\n            // Make sure the result is less than 2²⁵⁶. Also prevents denominator == 0.\n            if (denominator <= prod1) {\n                Panic.panic(ternary(denominator == 0, Panic.DIVISION_BY_ZERO, Panic.UNDER_OVERFLOW));\n            }\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [prod1 prod0].\n            uint256 remainder;\n            assembly {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                prod1 := sub(prod1, gt(remainder, prod0))\n                prod0 := sub(prod0, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator.\n            // Always >= 1. See https://cs.stackexchange.com/q/138556/92363.\n\n            uint256 twos = denominator & (0 - denominator);\n            assembly {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [prod1 prod0] by twos.\n                prod0 := div(prod0, twos)\n\n                // Flip twos such that it is 2²⁵⁶ / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from prod1 into prod0.\n            prod0 |= prod1 * twos;\n\n            // Invert denominator mod 2²⁵⁶. Now that denominator is an odd number, it has an inverse modulo 2²⁵⁶ such\n            // that denominator * inv ≡ 1 mod 2²⁵⁶. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv ≡ 1 mod 2⁴.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also\n            // works in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2⁸\n            inverse *= 2 - denominator * inverse; // inverse mod 2¹⁶\n            inverse *= 2 - denominator * inverse; // inverse mod 2³²\n            inverse *= 2 - denominator * inverse; // inverse mod 2⁶⁴\n            inverse *= 2 - denominator * inverse; // inverse mod 2¹²⁸\n            inverse *= 2 - denominator * inverse; // inverse mod 2²⁵⁶\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2²⁵⁶. Since the preconditions guarantee that the outcome is\n            // less than 2²⁵⁶, this is the final result. We don't need to compute the high bits of the result and prod1\n            // is no longer required.\n            result = prod0 * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @dev Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\n        return mulDiv(x, y, denominator) + SafeCast.toUint(unsignedRoundsUp(rounding) && mulmod(x, y, denominator) > 0);\n    }\n\n    /**\n     * @dev Calculate the modular multiplicative inverse of a number in Z/nZ.\n     *\n     * If n is a prime, then Z/nZ is a field. In that case all elements are inversible, except 0.\n     * If n is not a prime, then Z/nZ is not a field, and some elements might not be inversible.\n     *\n     * If the input value is not inversible, 0 is returned.\n     *\n     * NOTE: If you know for sure that n is (big) a prime, it may be cheaper to use Fermat's little theorem and get the\n     * inverse using `Math.modExp(a, n - 2, n)`. See {invModPrime}.\n     */\n    function invMod(uint256 a, uint256 n) internal pure returns (uint256) {\n        unchecked {\n            if (n == 0) return 0;\n\n            // The inverse modulo is calculated using the Extended Euclidean Algorithm (iterative version)\n            // Used to compute integers x and y such that: ax + ny = gcd(a, n).\n            // When the gcd is 1, then the inverse of a modulo n exists and it's x.\n            // ax + ny = 1\n            // ax = 1 + (-y)n\n            // ax ≡ 1 (mod n) # x is the inverse of a modulo n\n\n            // If the remainder is 0 the gcd is n right away.\n            uint256 remainder = a % n;\n            uint256 gcd = n;\n\n            // Therefore the initial coefficients are:\n            // ax + ny = gcd(a, n) = n\n            // 0a + 1n = n\n            int256 x = 0;\n            int256 y = 1;\n\n            while (remainder != 0) {\n                uint256 quotient = gcd / remainder;\n\n                (gcd, remainder) = (\n                    // The old remainder is the next gcd to try.\n                    remainder,\n                    // Compute the next remainder.\n                    // Can't overflow given that (a % gcd) * (gcd // (a % gcd)) <= gcd\n                    // where gcd is at most n (capped to type(uint256).max)\n                    gcd - remainder * quotient\n                );\n\n                (x, y) = (\n                    // Increment the coefficient of a.\n                    y,\n                    // Decrement the coefficient of n.\n                    // Can overflow, but the result is casted to uint256 so that the\n                    // next value of y is \"wrapped around\" to a value between 0 and n - 1.\n                    x - y * int256(quotient)\n                );\n            }\n\n            if (gcd != 1) return 0; // No inverse exists.\n            return ternary(x < 0, n - uint256(-x), uint256(x)); // Wrap the result if it's negative.\n        }\n    }\n\n    /**\n     * @dev Variant of {invMod}. More efficient, but only works if `p` is known to be a prime greater than `2`.\n     *\n     * From https://en.wikipedia.org/wiki/Fermat%27s_little_theorem[Fermat's little theorem], we know that if p is\n     * prime, then `a**(p-1) ≡ 1 mod p`. As a consequence, we have `a * a**(p-2) ≡ 1 mod p`, which means that\n     * `a**(p-2)` is the modular multiplicative inverse of a in Fp.\n     *\n     * NOTE: this function does NOT check that `p` is a prime greater than `2`.\n     */\n    function invModPrime(uint256 a, uint256 p) internal view returns (uint256) {\n        unchecked {\n            return Math.modExp(a, p - 2, p);\n        }\n    }\n\n    /**\n     * @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m)\n     *\n     * Requirements:\n     * - modulus can't be zero\n     * - underlying staticcall to precompile must succeed\n     *\n     * IMPORTANT: The result is only valid if the underlying call succeeds. When using this function, make\n     * sure the chain you're using it on supports the precompiled contract for modular exponentiation\n     * at address 0x05 as specified in https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise,\n     * the underlying function will succeed given the lack of a revert, but the result may be incorrectly\n     * interpreted as 0.\n     */\n    function modExp(uint256 b, uint256 e, uint256 m) internal view returns (uint256) {\n        (bool success, uint256 result) = tryModExp(b, e, m);\n        if (!success) {\n            Panic.panic(Panic.DIVISION_BY_ZERO);\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m).\n     * It includes a success flag indicating if the operation succeeded. Operation will be marked as failed if trying\n     * to operate modulo 0 or if the underlying precompile reverted.\n     *\n     * IMPORTANT: The result is only valid if the success flag is true. When using this function, make sure the chain\n     * you're using it on supports the precompiled contract for modular exponentiation at address 0x05 as specified in\n     * https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise, the underlying function will succeed given the lack\n     * of a revert, but the result may be incorrectly interpreted as 0.\n     */\n    function tryModExp(uint256 b, uint256 e, uint256 m) internal view returns (bool success, uint256 result) {\n        if (m == 0) return (false, 0);\n        assembly (\"memory-safe\") {\n            let ptr := mload(0x40)\n            // | Offset    | Content    | Content (Hex)                                                      |\n            // |-----------|------------|--------------------------------------------------------------------|\n            // | 0x00:0x1f | size of b  | 0x0000000000000000000000000000000000000000000000000000000000000020 |\n            // | 0x20:0x3f | size of e  | 0x0000000000000000000000000000000000000000000000000000000000000020 |\n            // | 0x40:0x5f | size of m  | 0x0000000000000000000000000000000000000000000000000000000000000020 |\n            // | 0x60:0x7f | value of b | 0x<.............................................................b> |\n            // | 0x80:0x9f | value of e | 0x<.............................................................e> |\n            // | 0xa0:0xbf | value of m | 0x<.............................................................m> |\n            mstore(ptr, 0x20)\n            mstore(add(ptr, 0x20), 0x20)\n            mstore(add(ptr, 0x40), 0x20)\n            mstore(add(ptr, 0x60), b)\n            mstore(add(ptr, 0x80), e)\n            mstore(add(ptr, 0xa0), m)\n\n            // Given the result < m, it's guaranteed to fit in 32 bytes,\n            // so we can use the memory scratch space located at offset 0.\n            success := staticcall(gas(), 0x05, ptr, 0xc0, 0x00, 0x20)\n            result := mload(0x00)\n        }\n    }\n\n    /**\n     * @dev Variant of {modExp} that supports inputs of arbitrary length.\n     */\n    function modExp(bytes memory b, bytes memory e, bytes memory m) internal view returns (bytes memory) {\n        (bool success, bytes memory result) = tryModExp(b, e, m);\n        if (!success) {\n            Panic.panic(Panic.DIVISION_BY_ZERO);\n        }\n        return result;\n    }\n\n    /**\n     * @dev Variant of {tryModExp} that supports inputs of arbitrary length.\n     */\n    function tryModExp(\n        bytes memory b,\n        bytes memory e,\n        bytes memory m\n    ) internal view returns (bool success, bytes memory result) {\n        if (_zeroBytes(m)) return (false, new bytes(0));\n\n        uint256 mLen = m.length;\n\n        // Encode call args in result and move the free memory pointer\n        result = abi.encodePacked(b.length, e.length, mLen, b, e, m);\n\n        assembly (\"memory-safe\") {\n            let dataPtr := add(result, 0x20)\n            // Write result on top of args to avoid allocating extra memory.\n            success := staticcall(gas(), 0x05, dataPtr, mload(result), dataPtr, mLen)\n            // Overwrite the length.\n            // result.length > returndatasize() is guaranteed because returndatasize() == m.length\n            mstore(result, mLen)\n            // Set the memory pointer after the returned data.\n            mstore(0x40, add(dataPtr, mLen))\n        }\n    }\n\n    /**\n     * @dev Returns whether the provided byte array is zero.\n     */\n    function _zeroBytes(bytes memory byteArray) private pure returns (bool) {\n        for (uint256 i = 0; i < byteArray.length; ++i) {\n            if (byteArray[i] != 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n     * towards zero.\n     *\n     * This method is based on Newton's method for computing square roots; the algorithm is restricted to only\n     * using integer operations.\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        unchecked {\n            // Take care of easy edge cases when a == 0 or a == 1\n            if (a <= 1) {\n                return a;\n            }\n\n            // In this function, we use Newton's method to get a root of `f(x) := x² - a`. It involves building a\n            // sequence x_n that converges toward sqrt(a). For each iteration x_n, we also define the error between\n            // the current value as `ε_n = | x_n - sqrt(a) |`.\n            //\n            // For our first estimation, we consider `e` the smallest power of 2 which is bigger than the square root\n            // of the target. (i.e. `2**(e-1) ≤ sqrt(a) < 2**e`). We know that `e ≤ 128` because `(2¹²⁸)² = 2²⁵⁶` is\n            // bigger than any uint256.\n            //\n            // By noticing that\n            // `2**(e-1) ≤ sqrt(a) < 2**e → (2**(e-1))² ≤ a < (2**e)² → 2**(2*e-2) ≤ a < 2**(2*e)`\n            // we can deduce that `e - 1` is `log2(a) / 2`. We can thus compute `x_n = 2**(e-1)` using a method similar\n            // to the msb function.\n            uint256 aa = a;\n            uint256 xn = 1;\n\n            if (aa >= (1 << 128)) {\n                aa >>= 128;\n                xn <<= 64;\n            }\n            if (aa >= (1 << 64)) {\n                aa >>= 64;\n                xn <<= 32;\n            }\n            if (aa >= (1 << 32)) {\n                aa >>= 32;\n                xn <<= 16;\n            }\n            if (aa >= (1 << 16)) {\n                aa >>= 16;\n                xn <<= 8;\n            }\n            if (aa >= (1 << 8)) {\n                aa >>= 8;\n                xn <<= 4;\n            }\n            if (aa >= (1 << 4)) {\n                aa >>= 4;\n                xn <<= 2;\n            }\n            if (aa >= (1 << 2)) {\n                xn <<= 1;\n            }\n\n            // We now have x_n such that `x_n = 2**(e-1) ≤ sqrt(a) < 2**e = 2 * x_n`. This implies ε_n ≤ 2**(e-1).\n            //\n            // We can refine our estimation by noticing that the middle of that interval minimizes the error.\n            // If we move x_n to equal 2**(e-1) + 2**(e-2), then we reduce the error to ε_n ≤ 2**(e-2).\n            // This is going to be our x_0 (and ε_0)\n            xn = (3 * xn) >> 1; // ε_0 := | x_0 - sqrt(a) | ≤ 2**(e-2)\n\n            // From here, Newton's method give us:\n            // x_{n+1} = (x_n + a / x_n) / 2\n            //\n            // One should note that:\n            // x_{n+1}² - a = ((x_n + a / x_n) / 2)² - a\n            //              = ((x_n² + a) / (2 * x_n))² - a\n            //              = (x_n⁴ + 2 * a * x_n² + a²) / (4 * x_n²) - a\n            //              = (x_n⁴ + 2 * a * x_n² + a² - 4 * a * x_n²) / (4 * x_n²)\n            //              = (x_n⁴ - 2 * a * x_n² + a²) / (4 * x_n²)\n            //              = (x_n² - a)² / (2 * x_n)²\n            //              = ((x_n² - a) / (2 * x_n))²\n            //              ≥ 0\n            // Which proves that for all n ≥ 1, sqrt(a) ≤ x_n\n            //\n            // This gives us the proof of quadratic convergence of the sequence:\n            // ε_{n+1} = | x_{n+1} - sqrt(a) |\n            //         = | (x_n + a / x_n) / 2 - sqrt(a) |\n            //         = | (x_n² + a - 2*x_n*sqrt(a)) / (2 * x_n) |\n            //         = | (x_n - sqrt(a))² / (2 * x_n) |\n            //         = | ε_n² / (2 * x_n) |\n            //         = ε_n² / | (2 * x_n) |\n            //\n            // For the first iteration, we have a special case where x_0 is known:\n            // ε_1 = ε_0² / | (2 * x_0) |\n            //     ≤ (2**(e-2))² / (2 * (2**(e-1) + 2**(e-2)))\n            //     ≤ 2**(2*e-4) / (3 * 2**(e-1))\n            //     ≤ 2**(e-3) / 3\n            //     ≤ 2**(e-3-log2(3))\n            //     ≤ 2**(e-4.5)\n            //\n            // For the following iterations, we use the fact that, 2**(e-1) ≤ sqrt(a) ≤ x_n:\n            // ε_{n+1} = ε_n² / | (2 * x_n) |\n            //         ≤ (2**(e-k))² / (2 * 2**(e-1))\n            //         ≤ 2**(2*e-2*k) / 2**e\n            //         ≤ 2**(e-2*k)\n            xn = (xn + a / xn) >> 1; // ε_1 := | x_1 - sqrt(a) | ≤ 2**(e-4.5)  -- special case, see above\n            xn = (xn + a / xn) >> 1; // ε_2 := | x_2 - sqrt(a) | ≤ 2**(e-9)    -- general case with k = 4.5\n            xn = (xn + a / xn) >> 1; // ε_3 := | x_3 - sqrt(a) | ≤ 2**(e-18)   -- general case with k = 9\n            xn = (xn + a / xn) >> 1; // ε_4 := | x_4 - sqrt(a) | ≤ 2**(e-36)   -- general case with k = 18\n            xn = (xn + a / xn) >> 1; // ε_5 := | x_5 - sqrt(a) | ≤ 2**(e-72)   -- general case with k = 36\n            xn = (xn + a / xn) >> 1; // ε_6 := | x_6 - sqrt(a) | ≤ 2**(e-144)  -- general case with k = 72\n\n            // Because e ≤ 128 (as discussed during the first estimation phase), we know have reached a precision\n            // ε_6 ≤ 2**(e-144) < 1. Given we're operating on integers, then we can ensure that xn is now either\n            // sqrt(a) or sqrt(a) + 1.\n            return xn - SafeCast.toUint(xn > a / xn);\n        }\n    }\n\n    /**\n     * @dev Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && result * result < a);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        uint256 exp;\n        unchecked {\n            exp = 128 * SafeCast.toUint(value > (1 << 128) - 1);\n            value >>= exp;\n            result += exp;\n\n            exp = 64 * SafeCast.toUint(value > (1 << 64) - 1);\n            value >>= exp;\n            result += exp;\n\n            exp = 32 * SafeCast.toUint(value > (1 << 32) - 1);\n            value >>= exp;\n            result += exp;\n\n            exp = 16 * SafeCast.toUint(value > (1 << 16) - 1);\n            value >>= exp;\n            result += exp;\n\n            exp = 8 * SafeCast.toUint(value > (1 << 8) - 1);\n            value >>= exp;\n            result += exp;\n\n            exp = 4 * SafeCast.toUint(value > (1 << 4) - 1);\n            value >>= exp;\n            result += exp;\n\n            exp = 2 * SafeCast.toUint(value > (1 << 2) - 1);\n            value >>= exp;\n            result += exp;\n\n            result += SafeCast.toUint(value > 1);\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && 1 << result < value);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10 ** 64) {\n                value /= 10 ** 64;\n                result += 64;\n            }\n            if (value >= 10 ** 32) {\n                value /= 10 ** 32;\n                result += 32;\n            }\n            if (value >= 10 ** 16) {\n                value /= 10 ** 16;\n                result += 16;\n            }\n            if (value >= 10 ** 8) {\n                value /= 10 ** 8;\n                result += 8;\n            }\n            if (value >= 10 ** 4) {\n                value /= 10 ** 4;\n                result += 4;\n            }\n            if (value >= 10 ** 2) {\n                value /= 10 ** 2;\n                result += 2;\n            }\n            if (value >= 10 ** 1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && 10 ** result < value);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        uint256 isGt;\n        unchecked {\n            isGt = SafeCast.toUint(value > (1 << 128) - 1);\n            value >>= isGt * 128;\n            result += isGt * 16;\n\n            isGt = SafeCast.toUint(value > (1 << 64) - 1);\n            value >>= isGt * 64;\n            result += isGt * 8;\n\n            isGt = SafeCast.toUint(value > (1 << 32) - 1);\n            value >>= isGt * 32;\n            result += isGt * 4;\n\n            isGt = SafeCast.toUint(value > (1 << 16) - 1);\n            value >>= isGt * 16;\n            result += isGt * 2;\n\n            result += SafeCast.toUint(value > (1 << 8) - 1);\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && 1 << (result << 3) < value);\n        }\n    }\n\n    /**\n     * @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers.\n     */\n    function unsignedRoundsUp(Rounding rounding) internal pure returns (bool) {\n        return uint8(rounding) % 2 == 1;\n    }\n}\n"},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/math/SafeCast.sol)\n// This file was procedurally generated from scripts/generate/templates/SafeCast.js.\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow\n * checks.\n *\n * Downcasting from uint256/int256 in Solidity does not revert on overflow. This can\n * easily result in undesired exploitation or bugs, since developers usually\n * assume that overflows raise errors. `SafeCast` restores this intuition by\n * reverting the transaction when such an operation overflows.\n *\n * Using this library instead of the unchecked operations eliminates an entire\n * class of bugs, so it's recommended to use it always.\n */\nlibrary SafeCast {\n    /**\n     * @dev Value doesn't fit in an uint of `bits` size.\n     */\n    error SafeCastOverflowedUintDowncast(uint8 bits, uint256 value);\n\n    /**\n     * @dev An int value doesn't fit in an uint of `bits` size.\n     */\n    error SafeCastOverflowedIntToUint(int256 value);\n\n    /**\n     * @dev Value doesn't fit in an int of `bits` size.\n     */\n    error SafeCastOverflowedIntDowncast(uint8 bits, int256 value);\n\n    /**\n     * @dev An uint value doesn't fit in an int of `bits` size.\n     */\n    error SafeCastOverflowedUintToInt(uint256 value);\n\n    /**\n     * @dev Returns the downcasted uint248 from uint256, reverting on\n     * overflow (when the input is greater than largest uint248).\n     *\n     * Counterpart to Solidity's `uint248` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 248 bits\n     */\n    function toUint248(uint256 value) internal pure returns (uint248) {\n        if (value > type(uint248).max) {\n            revert SafeCastOverflowedUintDowncast(248, value);\n        }\n        return uint248(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint240 from uint256, reverting on\n     * overflow (when the input is greater than largest uint240).\n     *\n     * Counterpart to Solidity's `uint240` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 240 bits\n     */\n    function toUint240(uint256 value) internal pure returns (uint240) {\n        if (value > type(uint240).max) {\n            revert SafeCastOverflowedUintDowncast(240, value);\n        }\n        return uint240(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint232 from uint256, reverting on\n     * overflow (when the input is greater than largest uint232).\n     *\n     * Counterpart to Solidity's `uint232` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 232 bits\n     */\n    function toUint232(uint256 value) internal pure returns (uint232) {\n        if (value > type(uint232).max) {\n            revert SafeCastOverflowedUintDowncast(232, value);\n        }\n        return uint232(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint224 from uint256, reverting on\n     * overflow (when the input is greater than largest uint224).\n     *\n     * Counterpart to Solidity's `uint224` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 224 bits\n     */\n    function toUint224(uint256 value) internal pure returns (uint224) {\n        if (value > type(uint224).max) {\n            revert SafeCastOverflowedUintDowncast(224, value);\n        }\n        return uint224(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint216 from uint256, reverting on\n     * overflow (when the input is greater than largest uint216).\n     *\n     * Counterpart to Solidity's `uint216` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 216 bits\n     */\n    function toUint216(uint256 value) internal pure returns (uint216) {\n        if (value > type(uint216).max) {\n            revert SafeCastOverflowedUintDowncast(216, value);\n        }\n        return uint216(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint208 from uint256, reverting on\n     * overflow (when the input is greater than largest uint208).\n     *\n     * Counterpart to Solidity's `uint208` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 208 bits\n     */\n    function toUint208(uint256 value) internal pure returns (uint208) {\n        if (value > type(uint208).max) {\n            revert SafeCastOverflowedUintDowncast(208, value);\n        }\n        return uint208(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint200 from uint256, reverting on\n     * overflow (when the input is greater than largest uint200).\n     *\n     * Counterpart to Solidity's `uint200` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 200 bits\n     */\n    function toUint200(uint256 value) internal pure returns (uint200) {\n        if (value > type(uint200).max) {\n            revert SafeCastOverflowedUintDowncast(200, value);\n        }\n        return uint200(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint192 from uint256, reverting on\n     * overflow (when the input is greater than largest uint192).\n     *\n     * Counterpart to Solidity's `uint192` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 192 bits\n     */\n    function toUint192(uint256 value) internal pure returns (uint192) {\n        if (value > type(uint192).max) {\n            revert SafeCastOverflowedUintDowncast(192, value);\n        }\n        return uint192(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint184 from uint256, reverting on\n     * overflow (when the input is greater than largest uint184).\n     *\n     * Counterpart to Solidity's `uint184` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 184 bits\n     */\n    function toUint184(uint256 value) internal pure returns (uint184) {\n        if (value > type(uint184).max) {\n            revert SafeCastOverflowedUintDowncast(184, value);\n        }\n        return uint184(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint176 from uint256, reverting on\n     * overflow (when the input is greater than largest uint176).\n     *\n     * Counterpart to Solidity's `uint176` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 176 bits\n     */\n    function toUint176(uint256 value) internal pure returns (uint176) {\n        if (value > type(uint176).max) {\n            revert SafeCastOverflowedUintDowncast(176, value);\n        }\n        return uint176(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint168 from uint256, reverting on\n     * overflow (when the input is greater than largest uint168).\n     *\n     * Counterpart to Solidity's `uint168` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 168 bits\n     */\n    function toUint168(uint256 value) internal pure returns (uint168) {\n        if (value > type(uint168).max) {\n            revert SafeCastOverflowedUintDowncast(168, value);\n        }\n        return uint168(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint160 from uint256, reverting on\n     * overflow (when the input is greater than largest uint160).\n     *\n     * Counterpart to Solidity's `uint160` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 160 bits\n     */\n    function toUint160(uint256 value) internal pure returns (uint160) {\n        if (value > type(uint160).max) {\n            revert SafeCastOverflowedUintDowncast(160, value);\n        }\n        return uint160(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint152 from uint256, reverting on\n     * overflow (when the input is greater than largest uint152).\n     *\n     * Counterpart to Solidity's `uint152` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 152 bits\n     */\n    function toUint152(uint256 value) internal pure returns (uint152) {\n        if (value > type(uint152).max) {\n            revert SafeCastOverflowedUintDowncast(152, value);\n        }\n        return uint152(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint144 from uint256, reverting on\n     * overflow (when the input is greater than largest uint144).\n     *\n     * Counterpart to Solidity's `uint144` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 144 bits\n     */\n    function toUint144(uint256 value) internal pure returns (uint144) {\n        if (value > type(uint144).max) {\n            revert SafeCastOverflowedUintDowncast(144, value);\n        }\n        return uint144(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint136 from uint256, reverting on\n     * overflow (when the input is greater than largest uint136).\n     *\n     * Counterpart to Solidity's `uint136` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 136 bits\n     */\n    function toUint136(uint256 value) internal pure returns (uint136) {\n        if (value > type(uint136).max) {\n            revert SafeCastOverflowedUintDowncast(136, value);\n        }\n        return uint136(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint128 from uint256, reverting on\n     * overflow (when the input is greater than largest uint128).\n     *\n     * Counterpart to Solidity's `uint128` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 128 bits\n     */\n    function toUint128(uint256 value) internal pure returns (uint128) {\n        if (value > type(uint128).max) {\n            revert SafeCastOverflowedUintDowncast(128, value);\n        }\n        return uint128(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint120 from uint256, reverting on\n     * overflow (when the input is greater than largest uint120).\n     *\n     * Counterpart to Solidity's `uint120` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 120 bits\n     */\n    function toUint120(uint256 value) internal pure returns (uint120) {\n        if (value > type(uint120).max) {\n            revert SafeCastOverflowedUintDowncast(120, value);\n        }\n        return uint120(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint112 from uint256, reverting on\n     * overflow (when the input is greater than largest uint112).\n     *\n     * Counterpart to Solidity's `uint112` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 112 bits\n     */\n    function toUint112(uint256 value) internal pure returns (uint112) {\n        if (value > type(uint112).max) {\n            revert SafeCastOverflowedUintDowncast(112, value);\n        }\n        return uint112(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint104 from uint256, reverting on\n     * overflow (when the input is greater than largest uint104).\n     *\n     * Counterpart to Solidity's `uint104` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 104 bits\n     */\n    function toUint104(uint256 value) internal pure returns (uint104) {\n        if (value > type(uint104).max) {\n            revert SafeCastOverflowedUintDowncast(104, value);\n        }\n        return uint104(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint96 from uint256, reverting on\n     * overflow (when the input is greater than largest uint96).\n     *\n     * Counterpart to Solidity's `uint96` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 96 bits\n     */\n    function toUint96(uint256 value) internal pure returns (uint96) {\n        if (value > type(uint96).max) {\n            revert SafeCastOverflowedUintDowncast(96, value);\n        }\n        return uint96(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint88 from uint256, reverting on\n     * overflow (when the input is greater than largest uint88).\n     *\n     * Counterpart to Solidity's `uint88` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 88 bits\n     */\n    function toUint88(uint256 value) internal pure returns (uint88) {\n        if (value > type(uint88).max) {\n            revert SafeCastOverflowedUintDowncast(88, value);\n        }\n        return uint88(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint80 from uint256, reverting on\n     * overflow (when the input is greater than largest uint80).\n     *\n     * Counterpart to Solidity's `uint80` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 80 bits\n     */\n    function toUint80(uint256 value) internal pure returns (uint80) {\n        if (value > type(uint80).max) {\n            revert SafeCastOverflowedUintDowncast(80, value);\n        }\n        return uint80(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint72 from uint256, reverting on\n     * overflow (when the input is greater than largest uint72).\n     *\n     * Counterpart to Solidity's `uint72` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 72 bits\n     */\n    function toUint72(uint256 value) internal pure returns (uint72) {\n        if (value > type(uint72).max) {\n            revert SafeCastOverflowedUintDowncast(72, value);\n        }\n        return uint72(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint64 from uint256, reverting on\n     * overflow (when the input is greater than largest uint64).\n     *\n     * Counterpart to Solidity's `uint64` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 64 bits\n     */\n    function toUint64(uint256 value) internal pure returns (uint64) {\n        if (value > type(uint64).max) {\n            revert SafeCastOverflowedUintDowncast(64, value);\n        }\n        return uint64(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint56 from uint256, reverting on\n     * overflow (when the input is greater than largest uint56).\n     *\n     * Counterpart to Solidity's `uint56` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 56 bits\n     */\n    function toUint56(uint256 value) internal pure returns (uint56) {\n        if (value > type(uint56).max) {\n            revert SafeCastOverflowedUintDowncast(56, value);\n        }\n        return uint56(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint48 from uint256, reverting on\n     * overflow (when the input is greater than largest uint48).\n     *\n     * Counterpart to Solidity's `uint48` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 48 bits\n     */\n    function toUint48(uint256 value) internal pure returns (uint48) {\n        if (value > type(uint48).max) {\n            revert SafeCastOverflowedUintDowncast(48, value);\n        }\n        return uint48(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint40 from uint256, reverting on\n     * overflow (when the input is greater than largest uint40).\n     *\n     * Counterpart to Solidity's `uint40` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 40 bits\n     */\n    function toUint40(uint256 value) internal pure returns (uint40) {\n        if (value > type(uint40).max) {\n            revert SafeCastOverflowedUintDowncast(40, value);\n        }\n        return uint40(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint32 from uint256, reverting on\n     * overflow (when the input is greater than largest uint32).\n     *\n     * Counterpart to Solidity's `uint32` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 32 bits\n     */\n    function toUint32(uint256 value) internal pure returns (uint32) {\n        if (value > type(uint32).max) {\n            revert SafeCastOverflowedUintDowncast(32, value);\n        }\n        return uint32(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint24 from uint256, reverting on\n     * overflow (when the input is greater than largest uint24).\n     *\n     * Counterpart to Solidity's `uint24` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 24 bits\n     */\n    function toUint24(uint256 value) internal pure returns (uint24) {\n        if (value > type(uint24).max) {\n            revert SafeCastOverflowedUintDowncast(24, value);\n        }\n        return uint24(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint16 from uint256, reverting on\n     * overflow (when the input is greater than largest uint16).\n     *\n     * Counterpart to Solidity's `uint16` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 16 bits\n     */\n    function toUint16(uint256 value) internal pure returns (uint16) {\n        if (value > type(uint16).max) {\n            revert SafeCastOverflowedUintDowncast(16, value);\n        }\n        return uint16(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint8 from uint256, reverting on\n     * overflow (when the input is greater than largest uint8).\n     *\n     * Counterpart to Solidity's `uint8` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 8 bits\n     */\n    function toUint8(uint256 value) internal pure returns (uint8) {\n        if (value > type(uint8).max) {\n            revert SafeCastOverflowedUintDowncast(8, value);\n        }\n        return uint8(value);\n    }\n\n    /**\n     * @dev Converts a signed int256 into an unsigned uint256.\n     *\n     * Requirements:\n     *\n     * - input must be greater than or equal to 0.\n     */\n    function toUint256(int256 value) internal pure returns (uint256) {\n        if (value < 0) {\n            revert SafeCastOverflowedIntToUint(value);\n        }\n        return uint256(value);\n    }\n\n    /**\n     * @dev Returns the downcasted int248 from int256, reverting on\n     * overflow (when the input is less than smallest int248 or\n     * greater than largest int248).\n     *\n     * Counterpart to Solidity's `int248` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 248 bits\n     */\n    function toInt248(int256 value) internal pure returns (int248 downcasted) {\n        downcasted = int248(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(248, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int240 from int256, reverting on\n     * overflow (when the input is less than smallest int240 or\n     * greater than largest int240).\n     *\n     * Counterpart to Solidity's `int240` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 240 bits\n     */\n    function toInt240(int256 value) internal pure returns (int240 downcasted) {\n        downcasted = int240(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(240, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int232 from int256, reverting on\n     * overflow (when the input is less than smallest int232 or\n     * greater than largest int232).\n     *\n     * Counterpart to Solidity's `int232` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 232 bits\n     */\n    function toInt232(int256 value) internal pure returns (int232 downcasted) {\n        downcasted = int232(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(232, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int224 from int256, reverting on\n     * overflow (when the input is less than smallest int224 or\n     * greater than largest int224).\n     *\n     * Counterpart to Solidity's `int224` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 224 bits\n     */\n    function toInt224(int256 value) internal pure returns (int224 downcasted) {\n        downcasted = int224(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(224, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int216 from int256, reverting on\n     * overflow (when the input is less than smallest int216 or\n     * greater than largest int216).\n     *\n     * Counterpart to Solidity's `int216` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 216 bits\n     */\n    function toInt216(int256 value) internal pure returns (int216 downcasted) {\n        downcasted = int216(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(216, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int208 from int256, reverting on\n     * overflow (when the input is less than smallest int208 or\n     * greater than largest int208).\n     *\n     * Counterpart to Solidity's `int208` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 208 bits\n     */\n    function toInt208(int256 value) internal pure returns (int208 downcasted) {\n        downcasted = int208(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(208, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int200 from int256, reverting on\n     * overflow (when the input is less than smallest int200 or\n     * greater than largest int200).\n     *\n     * Counterpart to Solidity's `int200` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 200 bits\n     */\n    function toInt200(int256 value) internal pure returns (int200 downcasted) {\n        downcasted = int200(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(200, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int192 from int256, reverting on\n     * overflow (when the input is less than smallest int192 or\n     * greater than largest int192).\n     *\n     * Counterpart to Solidity's `int192` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 192 bits\n     */\n    function toInt192(int256 value) internal pure returns (int192 downcasted) {\n        downcasted = int192(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(192, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int184 from int256, reverting on\n     * overflow (when the input is less than smallest int184 or\n     * greater than largest int184).\n     *\n     * Counterpart to Solidity's `int184` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 184 bits\n     */\n    function toInt184(int256 value) internal pure returns (int184 downcasted) {\n        downcasted = int184(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(184, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int176 from int256, reverting on\n     * overflow (when the input is less than smallest int176 or\n     * greater than largest int176).\n     *\n     * Counterpart to Solidity's `int176` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 176 bits\n     */\n    function toInt176(int256 value) internal pure returns (int176 downcasted) {\n        downcasted = int176(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(176, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int168 from int256, reverting on\n     * overflow (when the input is less than smallest int168 or\n     * greater than largest int168).\n     *\n     * Counterpart to Solidity's `int168` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 168 bits\n     */\n    function toInt168(int256 value) internal pure returns (int168 downcasted) {\n        downcasted = int168(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(168, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int160 from int256, reverting on\n     * overflow (when the input is less than smallest int160 or\n     * greater than largest int160).\n     *\n     * Counterpart to Solidity's `int160` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 160 bits\n     */\n    function toInt160(int256 value) internal pure returns (int160 downcasted) {\n        downcasted = int160(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(160, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int152 from int256, reverting on\n     * overflow (when the input is less than smallest int152 or\n     * greater than largest int152).\n     *\n     * Counterpart to Solidity's `int152` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 152 bits\n     */\n    function toInt152(int256 value) internal pure returns (int152 downcasted) {\n        downcasted = int152(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(152, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int144 from int256, reverting on\n     * overflow (when the input is less than smallest int144 or\n     * greater than largest int144).\n     *\n     * Counterpart to Solidity's `int144` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 144 bits\n     */\n    function toInt144(int256 value) internal pure returns (int144 downcasted) {\n        downcasted = int144(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(144, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int136 from int256, reverting on\n     * overflow (when the input is less than smallest int136 or\n     * greater than largest int136).\n     *\n     * Counterpart to Solidity's `int136` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 136 bits\n     */\n    function toInt136(int256 value) internal pure returns (int136 downcasted) {\n        downcasted = int136(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(136, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int128 from int256, reverting on\n     * overflow (when the input is less than smallest int128 or\n     * greater than largest int128).\n     *\n     * Counterpart to Solidity's `int128` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 128 bits\n     */\n    function toInt128(int256 value) internal pure returns (int128 downcasted) {\n        downcasted = int128(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(128, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int120 from int256, reverting on\n     * overflow (when the input is less than smallest int120 or\n     * greater than largest int120).\n     *\n     * Counterpart to Solidity's `int120` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 120 bits\n     */\n    function toInt120(int256 value) internal pure returns (int120 downcasted) {\n        downcasted = int120(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(120, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int112 from int256, reverting on\n     * overflow (when the input is less than smallest int112 or\n     * greater than largest int112).\n     *\n     * Counterpart to Solidity's `int112` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 112 bits\n     */\n    function toInt112(int256 value) internal pure returns (int112 downcasted) {\n        downcasted = int112(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(112, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int104 from int256, reverting on\n     * overflow (when the input is less than smallest int104 or\n     * greater than largest int104).\n     *\n     * Counterpart to Solidity's `int104` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 104 bits\n     */\n    function toInt104(int256 value) internal pure returns (int104 downcasted) {\n        downcasted = int104(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(104, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int96 from int256, reverting on\n     * overflow (when the input is less than smallest int96 or\n     * greater than largest int96).\n     *\n     * Counterpart to Solidity's `int96` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 96 bits\n     */\n    function toInt96(int256 value) internal pure returns (int96 downcasted) {\n        downcasted = int96(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(96, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int88 from int256, reverting on\n     * overflow (when the input is less than smallest int88 or\n     * greater than largest int88).\n     *\n     * Counterpart to Solidity's `int88` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 88 bits\n     */\n    function toInt88(int256 value) internal pure returns (int88 downcasted) {\n        downcasted = int88(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(88, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int80 from int256, reverting on\n     * overflow (when the input is less than smallest int80 or\n     * greater than largest int80).\n     *\n     * Counterpart to Solidity's `int80` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 80 bits\n     */\n    function toInt80(int256 value) internal pure returns (int80 downcasted) {\n        downcasted = int80(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(80, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int72 from int256, reverting on\n     * overflow (when the input is less than smallest int72 or\n     * greater than largest int72).\n     *\n     * Counterpart to Solidity's `int72` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 72 bits\n     */\n    function toInt72(int256 value) internal pure returns (int72 downcasted) {\n        downcasted = int72(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(72, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int64 from int256, reverting on\n     * overflow (when the input is less than smallest int64 or\n     * greater than largest int64).\n     *\n     * Counterpart to Solidity's `int64` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 64 bits\n     */\n    function toInt64(int256 value) internal pure returns (int64 downcasted) {\n        downcasted = int64(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(64, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int56 from int256, reverting on\n     * overflow (when the input is less than smallest int56 or\n     * greater than largest int56).\n     *\n     * Counterpart to Solidity's `int56` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 56 bits\n     */\n    function toInt56(int256 value) internal pure returns (int56 downcasted) {\n        downcasted = int56(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(56, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int48 from int256, reverting on\n     * overflow (when the input is less than smallest int48 or\n     * greater than largest int48).\n     *\n     * Counterpart to Solidity's `int48` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 48 bits\n     */\n    function toInt48(int256 value) internal pure returns (int48 downcasted) {\n        downcasted = int48(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(48, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int40 from int256, reverting on\n     * overflow (when the input is less than smallest int40 or\n     * greater than largest int40).\n     *\n     * Counterpart to Solidity's `int40` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 40 bits\n     */\n    function toInt40(int256 value) internal pure returns (int40 downcasted) {\n        downcasted = int40(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(40, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int32 from int256, reverting on\n     * overflow (when the input is less than smallest int32 or\n     * greater than largest int32).\n     *\n     * Counterpart to Solidity's `int32` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 32 bits\n     */\n    function toInt32(int256 value) internal pure returns (int32 downcasted) {\n        downcasted = int32(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(32, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int24 from int256, reverting on\n     * overflow (when the input is less than smallest int24 or\n     * greater than largest int24).\n     *\n     * Counterpart to Solidity's `int24` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 24 bits\n     */\n    function toInt24(int256 value) internal pure returns (int24 downcasted) {\n        downcasted = int24(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(24, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int16 from int256, reverting on\n     * overflow (when the input is less than smallest int16 or\n     * greater than largest int16).\n     *\n     * Counterpart to Solidity's `int16` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 16 bits\n     */\n    function toInt16(int256 value) internal pure returns (int16 downcasted) {\n        downcasted = int16(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(16, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int8 from int256, reverting on\n     * overflow (when the input is less than smallest int8 or\n     * greater than largest int8).\n     *\n     * Counterpart to Solidity's `int8` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 8 bits\n     */\n    function toInt8(int256 value) internal pure returns (int8 downcasted) {\n        downcasted = int8(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(8, value);\n        }\n    }\n\n    /**\n     * @dev Converts an unsigned uint256 into a signed int256.\n     *\n     * Requirements:\n     *\n     * - input must be less than or equal to maxInt256.\n     */\n    function toInt256(uint256 value) internal pure returns (int256) {\n        // Note: Unsafe cast below is okay because `type(int256).max` is guaranteed to be positive\n        if (value > uint256(type(int256).max)) {\n            revert SafeCastOverflowedUintToInt(value);\n        }\n        return int256(value);\n    }\n\n    /**\n     * @dev Cast a boolean (false or true) to a uint256 (0 or 1) with no jump.\n     */\n    function toUint(bool b) internal pure returns (uint256 u) {\n        assembly (\"memory-safe\") {\n            u := iszero(iszero(b))\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/math/SignedMath.sol)\n\npragma solidity ^0.8.20;\n\nimport {SafeCast} from \"./SafeCast.sol\";\n\n/**\n * @dev Standard signed math utilities missing in the Solidity language.\n */\nlibrary SignedMath {\n    /**\n     * @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n     *\n     * IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n     * However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n     * one branch when needed, making this function more expensive.\n     */\n    function ternary(bool condition, int256 a, int256 b) internal pure returns (int256) {\n        unchecked {\n            // branchless ternary works because:\n            // b ^ (a ^ b) == a\n            // b ^ 0 == b\n            return b ^ ((a ^ b) * int256(SafeCast.toUint(condition)));\n        }\n    }\n\n    /**\n     * @dev Returns the largest of two signed numbers.\n     */\n    function max(int256 a, int256 b) internal pure returns (int256) {\n        return ternary(a > b, a, b);\n    }\n\n    /**\n     * @dev Returns the smallest of two signed numbers.\n     */\n    function min(int256 a, int256 b) internal pure returns (int256) {\n        return ternary(a < b, a, b);\n    }\n\n    /**\n     * @dev Returns the average of two signed numbers without overflow.\n     * The result is rounded towards zero.\n     */\n    function average(int256 a, int256 b) internal pure returns (int256) {\n        // Formula from the book \"Hacker's Delight\"\n        int256 x = (a & b) + ((a ^ b) >> 1);\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\n    }\n\n    /**\n     * @dev Returns the absolute unsigned value of a signed value.\n     */\n    function abs(int256 n) internal pure returns (uint256) {\n        unchecked {\n            // Formula from the \"Bit Twiddling Hacks\" by Sean Eron Anderson.\n            // Since `n` is a signed integer, the generated bytecode will use the SAR opcode to perform the right shift,\n            // taking advantage of the most significant (or \"sign\" bit) in two's complement representation.\n            // This opcode adds new most significant bits set to the value of the previous most significant bit. As a result,\n            // the mask will either be `bytes32(0)` (if n is positive) or `~bytes32(0)` (if n is negative).\n            int256 mask = n >> 255;\n\n            // A `bytes32(0)` mask leaves the input unchanged, while a `~bytes32(0)` mask complements it.\n            return uint256((n + mask) ^ mask);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Panic.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/Panic.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Helper library for emitting standardized panic codes.\n *\n * ```solidity\n * contract Example {\n *      using Panic for uint256;\n *\n *      // Use any of the declared internal constants\n *      function foo() { Panic.GENERIC.panic(); }\n *\n *      // Alternatively\n *      function foo() { Panic.panic(Panic.GENERIC); }\n * }\n * ```\n *\n * Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil].\n *\n * _Available since v5.1._\n */\n// slither-disable-next-line unused-state\nlibrary Panic {\n    /// @dev generic / unspecified error\n    uint256 internal constant GENERIC = 0x00;\n    /// @dev used by the assert() builtin\n    uint256 internal constant ASSERT = 0x01;\n    /// @dev arithmetic underflow or overflow\n    uint256 internal constant UNDER_OVERFLOW = 0x11;\n    /// @dev division or modulo by zero\n    uint256 internal constant DIVISION_BY_ZERO = 0x12;\n    /// @dev enum conversion error\n    uint256 internal constant ENUM_CONVERSION_ERROR = 0x21;\n    /// @dev invalid encoding in storage\n    uint256 internal constant STORAGE_ENCODING_ERROR = 0x22;\n    /// @dev empty array pop\n    uint256 internal constant EMPTY_ARRAY_POP = 0x31;\n    /// @dev array out of bounds access\n    uint256 internal constant ARRAY_OUT_OF_BOUNDS = 0x32;\n    /// @dev resource error (too large allocation or too large array)\n    uint256 internal constant RESOURCE_ERROR = 0x41;\n    /// @dev calling invalid internal function\n    uint256 internal constant INVALID_INTERNAL_FUNCTION = 0x51;\n\n    /// @dev Reverts with a panic code. Recommended to use with\n    /// the internal constants with predefined codes.\n    function panic(uint256 code) internal pure {\n        assembly (\"memory-safe\") {\n            mstore(0x00, 0x4e487b71)\n            mstore(0x20, code)\n            revert(0x1c, 0x24)\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/ReentrancyGuard.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/ReentrancyGuard.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If EIP-1153 (transient storage) is available on the chain you're deploying at,\n * consider using {ReentrancyGuardTransient} instead.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant NOT_ENTERED = 1;\n    uint256 private constant ENTERED = 2;\n\n    uint256 private _status;\n\n    /**\n     * @dev Unauthorized reentrant call.\n     */\n    error ReentrancyGuardReentrantCall();\n\n    constructor() {\n        _status = NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        _nonReentrantBefore();\n        _;\n        _nonReentrantAfter();\n    }\n\n    function _nonReentrantBefore() private {\n        // On the first call to nonReentrant, _status will be NOT_ENTERED\n        if (_status == ENTERED) {\n            revert ReentrancyGuardReentrantCall();\n        }\n\n        // Any calls to nonReentrant after this point will fail\n        _status = ENTERED;\n    }\n\n    function _nonReentrantAfter() private {\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = NOT_ENTERED;\n    }\n\n    /**\n     * @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n     * `nonReentrant` function in the call stack.\n     */\n    function _reentrancyGuardEntered() internal view returns (bool) {\n        return _status == ENTERED;\n    }\n}\n"},"@openzeppelin/contracts/utils/Strings.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/Strings.sol)\n\npragma solidity ^0.8.20;\n\nimport {Math} from \"./math/Math.sol\";\nimport {SignedMath} from \"./math/SignedMath.sol\";\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    bytes16 private constant HEX_DIGITS = \"0123456789abcdef\";\n    uint8 private constant ADDRESS_LENGTH = 20;\n\n    /**\n     * @dev The `value` string doesn't fit in the specified `length`.\n     */\n    error StringsInsufficientHexLength(uint256 value, uint256 length);\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            uint256 length = Math.log10(value) + 1;\n            string memory buffer = new string(length);\n            uint256 ptr;\n            assembly (\"memory-safe\") {\n                ptr := add(buffer, add(32, length))\n            }\n            while (true) {\n                ptr--;\n                assembly (\"memory-safe\") {\n                    mstore8(ptr, byte(mod(value, 10), HEX_DIGITS))\n                }\n                value /= 10;\n                if (value == 0) break;\n            }\n            return buffer;\n        }\n    }\n\n    /**\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\n     */\n    function toStringSigned(int256 value) internal pure returns (string memory) {\n        return string.concat(value < 0 ? \"-\" : \"\", toString(SignedMath.abs(value)));\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            return toHexString(value, Math.log256(value) + 1);\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        uint256 localValue = value;\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = HEX_DIGITS[localValue & 0xf];\n            localValue >>= 4;\n        }\n        if (localValue != 0) {\n            revert StringsInsufficientHexLength(value, length);\n        }\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n     * representation.\n     */\n    function toHexString(address addr) internal pure returns (string memory) {\n        return toHexString(uint256(uint160(addr)), ADDRESS_LENGTH);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its checksummed ASCII `string` hexadecimal\n     * representation, according to EIP-55.\n     */\n    function toChecksumHexString(address addr) internal pure returns (string memory) {\n        bytes memory buffer = bytes(toHexString(addr));\n\n        // hash the hex part of buffer (skip length + 2 bytes, length 40)\n        uint256 hashValue;\n        assembly (\"memory-safe\") {\n            hashValue := shr(96, keccak256(add(buffer, 0x22), 40))\n        }\n\n        for (uint256 i = 41; i > 1; --i) {\n            // possible values for buffer[i] are 48 (0) to 57 (9) and 97 (a) to 102 (f)\n            if (hashValue & 0xf > 7 && uint8(buffer[i]) > 96) {\n                // case shift by xoring with 0x20\n                buffer[i] ^= 0x20;\n            }\n            hashValue >>= 4;\n        }\n        return string(buffer);\n    }\n\n    /**\n     * @dev Returns true if the two strings are equal.\n     */\n    function equal(string memory a, string memory b) internal pure returns (bool) {\n        return bytes(a).length == bytes(b).length && keccak256(bytes(a)) == keccak256(bytes(b));\n    }\n}\n"},"contracts/NextRound.sol":{"content":"// // SPDX-License-Identifier: UNLICENSED\r\n// pragma solidity ^0.8.27;\r\n\r\n// import \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\r\n// import \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\";\r\n// import \"@openzeppelin/contracts/access/Ownable.sol\";\r\n// import \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\";\r\n\r\n// contract NextRound is ERC20, ERC20Burnable, Ownable(msg.sender), ReentrancyGuard {\r\n//     // Platform constants\r\n//     uint256 public constant TOTAL_SUPPLY = 1_00_000_000_000; // no fractionability of the tokens\r\n//     // uint256 public constant NRCReward = 1; // * (10 ** 18); // reward coin amount // removed the fractionability of the amount\r\n//     // uint256 public constant NRCPricePerMint = 5; // * (10 ** 18); // price for minting // removed the fractionability of the amount\r\n\r\n//     // mapping for registered user details\r\n//     mapping(address => bool) public registeredUsers;\r\n//     // struct for batch transactions\r\n//     struct BatchTx {\r\n//         address wallet;\r\n//         string action;\r\n//         uint256 amount;\r\n//     } \r\n//     // enum for batch transaction actions\r\n//     enum BatchTxActions {Reward, Charge}\r\n\r\n//     address[] public registeredUserAddresses; // keeps track of registered wallets\r\n\r\n//     // events\r\n//     event UserRegistered(address indexed _user);\r\n//     event UserRewarded(address indexed _user, uint256 _amount);\r\n//     event NRCPayment(address indexed _user, uint256 _amount);\r\n//     event BatchTransaction(string _message, uint256 _txCount);\r\n//     event AccountReset(string _message);\r\n\r\n//     /**\r\n//     * Constructor for the Next Round Platform Smart Contract\r\n//      */\r\n//     constructor() ERC20(\"NextRound Coin\", \"NRC\") {\r\n//         _mint(msg.sender, TOTAL_SUPPLY);\r\n//     }\r\n\r\n//     // ==========================\r\n//     //        MODIFIERS\r\n//     // ==========================\r\n\r\n//     /**\r\n//     * @dev Ensures only registered users can interact with the contract\r\n//     */\r\n//     modifier onlyRegistered(address _user) {\r\n//         require(registeredUsers[_user], \"This user is not registered on our platform yet.\");\r\n//         _;\r\n//     }\r\n\r\n//     // ===========================\r\n//     //    PLATFORM-WIDE ACTIONS \r\n//     // ===========================\r\n\r\n//     /**\r\n//     * @dev Register a new user\r\n//     * @param _user Wallet address of the new user\r\n//     */\r\n//     function register(address _user) external onlyOwner {\r\n//         require(!registeredUsers[_user], \"Account already registered.\");\r\n\r\n//         registeredUsers[_user] = true;\r\n\r\n//         registeredUserAddresses.push(_user);\r\n\r\n//         emit UserRegistered(_user);\r\n//     }\r\n    \r\n//     // ===========================\r\n//     //    TOKEN-BASED ACTIONS \r\n//     // ===========================\r\n\r\n//     /**\r\n//     * @dev Balance of user\r\n//     * @param _user wallet address of user \r\n//      */\r\n//     function userBalance(address _user) external view onlyRegistered(_user) returns (uint256 _balance)  {\r\n//         return balanceOf(_user);\r\n//     }\r\n\r\n//     /**\r\n//     * @dev Reward a user\r\n//     * @param _user Wallet address of user to reward\r\n//     * @param _amount Amount of tokens to send to wallet address of user\r\n//      */\r\n//     function rewardUser(address _user, uint256 _amount) external onlyRegistered(_user) onlyOwner nonReentrant {\r\n//         require(balanceOf(owner()) >= _amount, \"Insufficient balance to reward your actions.\");\r\n//         require(_user != address(0), \"Invalid user address.\");\r\n\r\n//         _transfer(owner(), _user, _amount);\r\n\r\n//         emit UserRewarded(_user, _amount);\r\n//     }\r\n    \r\n//     /**\r\n//     * @dev Payment of activities with NRC\r\n//     * @param _user Wallet address of user performing the action\r\n//     * @param _amount Amount of NRC the user is paying with\r\n//      */\r\n//     function chargeUser(address _user, uint256 _amount) external onlyOwner onlyRegistered(_user) nonReentrant {\r\n//         require(balanceOf(_user) >= _amount, \"Insufficient balance.\");\r\n\r\n//         _transfer(_user, owner(), _amount);\r\n\r\n//         emit NRCPayment(_user, _amount);\r\n//     } \r\n\r\n//     /**\r\n//     * @dev Batch several users transactions\r\n//     * @param _transactions Transactions to batch process\r\n//     */\r\n//     function batchTransactions(BatchTx[] calldata _transactions) external onlyOwner nonReentrant {\r\n//         uint256 _txCount = _transactions.length;\r\n//         uint i = 0;\r\n\r\n//         for (i; i < _txCount; i++) {\r\n//             BatchTx calldata _tx = _transactions[i];\r\n\r\n//             if (keccak256(abi.encodePacked(_tx.action)) == keccak256(abi.encodePacked(\"reward\"))) {\r\n//                 rewardUser(_tx.wallet, _tx.amount);\r\n//             }\r\n//             if (keccak256(abi.encodePacked(_tx.action)) == keccak256(abi.encodePacked(\"charge\"))) {\r\n//                 chargeUser(_tx.wallet, _tx.amount);\r\n//             }\r\n//         }\r\n\r\n//         string memory _message = \"Batch Transactions fulfilled.\";\r\n//         emit BatchTransaction(_message, _txCount);\r\n//     }\r\n\r\n//     /**\r\n//     * @dev Monthly reset of NRC (Burn all existing Coins)\r\n//      */\r\n//     function resetAllNRC() external onlyOwner {\r\n//         uint256 balance;\r\n\r\n//         for (uint256 i = 0; i < registeredUserAddresses.length; i++) {\r\n//             address _user = registeredUserAddresses[i];\r\n\r\n//             balance = balanceOf(_user);\r\n\r\n//             if (balance > 0) {\r\n//                  _transfer(_user, owner(), balance);\r\n//                  _burn(_user, balance);\r\n//             }\r\n//         }\r\n\r\n//         string memory _message = \"All tokens have been reset.\";\r\n//         emit AccountReset(_message); \r\n//     }\r\n\r\n\r\n\r\n\r\n// }"},"contracts/NextRoundNFT.sol":{"content":"// SPDX-License-Identifier: UNLICENSED\r\npragma solidity ^0.8.27;\r\n\r\nimport \"@openzeppelin/contracts/token/ERC721/ERC721.sol\";\r\nimport \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\";\r\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\r\nimport \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\";\r\n\r\ninterface INRCoin {\r\n    function userBalance(address user) external view returns (uint256);\r\n    function rewardUser(address _user, uint256 _amount) external;\r\n    function chargeUser(address _user, uint256 _amount) external;\r\n}\r\n\r\ncontract NextRoundNFT is ERC721, ERC721URIStorage, ReentrancyGuard, Ownable(msg.sender) {\r\n    // address private _owner;\r\n    INRCoin public NRCoin;\r\n\r\n    // NFT constants\r\n    uint256 public constant DailyScanLimit = 5; // Number of scans per day\r\n    uint256 public constant NRCPricePerNicknaming = 1; // Number of scans per day // removed the fractionability of the amount\r\n    uint256 public constant NRCReward = 1; // * (10 ** 18); // reward coin amount // removed the fractionability of the amount\r\n    uint256 public constant NRCPricePerMint = 5; // * (10 ** 18); // price for minting // removed the fractionability of the amount\r\n\r\n    uint256 private _nftIdCounter = 0;\r\n\r\n    // struct of coaster details\r\n    struct Coaster {\r\n        string id;\r\n        string name;\r\n        string description;\r\n        string assetURI;\r\n        address owner;\r\n        string nickname;\r\n        address namerAccount;\r\n        address[] scannersAccount;\r\n    }\r\n\r\n    address[] public registeredUserAddresses; // keeps track of registered wallets\r\n    mapping(string => Coaster) private coasters; // keep record of coasters\r\n    // mapping for users NFT details\r\n    mapping(address => mapping(string => bool)) public ownedCoasters;\r\n    mapping(address => mapping(string => bool)) public scannedCoasters;\r\n\r\n    // events\r\n    event UserRegistered(address indexed _user);\r\n    event NFTMinted(address indexed _user, string _assetId);\r\n    event CoasterScanned(address indexed _user, string _coasterId);\r\n    event CoasterNamed(address indexed _namerAccount, string _assetId, string _nickname);\r\n\r\n    /**\r\n    * Constructor for the NextRound NFT Smart Contract\r\n    * @param _NRCoin The contract address for the NR Platform (Coin) contract\r\n     */\r\n    constructor(address _NRCoin) ERC721(\"NextRound NFT\", \"NRNFT\") {\r\n        // _owner = msg.sender;\r\n        NRCoin = INRCoin(_NRCoin);\r\n    }\r\n\r\n    // ===================\r\n    //      MODIFIER \r\n    // ===================\r\n\r\n    // modifier onlyOwner() {\r\n    //     require(msg.sender == _owner, \"Only the contract owner can call this function.\");\r\n    //     _;\r\n    // }\r\n\r\n    // Override functions to resolve multiple inheritance issues\r\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC721, ERC721URIStorage) returns (bool) {\r\n        return super.supportsInterface(interfaceId);\r\n    }\r\n\r\n    function tokenURI(uint256 tokenId) public view virtual override(ERC721, ERC721URIStorage) returns (string memory) {\r\n        return super.tokenURI(tokenId);\r\n    }\r\n\r\n    // ===================\r\n    //     NFT ACTIONS \r\n    // ===================\r\n\r\n    /**\r\n    * @dev Mint an NFT asset\r\n    * @param _user wallet address of user who is scanning\r\n    * @param _assetId ID of the asset to mint\r\n    * @param _name Name of the asset to mint\r\n    * @param _description Description of the asset to mint\r\n    * @param _assetURI Location resource (image url) of the asset to mint\r\n     */\r\n    function mintNFT(\r\n        address _user, \r\n        string calldata _name, \r\n        string calldata _description, \r\n        string calldata _assetURI, \r\n        string calldata _assetId\r\n    ) external onlyOwner nonReentrant {\r\n        require(bytes(coasters[_assetId].id).length == 0, \"Coaster already exist.\");\r\n        require(NRCoin.userBalance(_user) >= NRCPricePerMint, \"Insufficient balance.\");\r\n\r\n        _nftIdCounter++; // increment nft counter\r\n\r\n        // Mint NFT\r\n        uint256 nftId = _nftIdCounter;\r\n        _safeMint(_user, nftId);\r\n        _setTokenURI(nftId, _assetURI);\r\n\r\n        // id, owner, name, description, nickname, namer, scanners[]\r\n        coasters[_assetId] = Coaster({\r\n            id: _assetId,\r\n            owner: _user,\r\n            name: _name,\r\n            assetURI: _assetURI,\r\n            description: _description,\r\n            nickname: \"\",\r\n            namerAccount: address(0),\r\n            scannersAccount: new address[](0) \r\n        });\r\n\r\n        // pay with NR coin -> ayWithNRC, \r\n        // NRCoin.payWithNRC(_user, NRCPricePerMint);\r\n\r\n        ownedCoasters[_user][_assetId] = true;\r\n\r\n        emit NFTMinted(_user, _assetId);\r\n    }\r\n\r\n    /**\r\n    * @dev Record a scan and reward a user\r\n    * @param _user wallet address of user who is scanning\r\n    * @param _scanCount total scans for the user (resets daily)\r\n    * @param _coasterId ID of the coaster asset to scan\r\n     */\r\n    function scanCoaster(address _user, uint256 _scanCount, string calldata _coasterId) external onlyOwner nonReentrant {\r\n        require(!scannedCoasters[_user][_coasterId], \"Coaster already scanned.\");\r\n        require(!ownedCoasters[_user][_coasterId], \"You can not scan your own Coaster.\");\r\n        require(NRCoin.userBalance(_user) >= 0, \"Invalid user account.\");\r\n        require(_scanCount <= DailyScanLimit, \"You have reached your daily limit of scans. Try again tomorrow.\");\r\n\r\n        scannedCoasters[_user][_coasterId] = true;\r\n\r\n        coasters[_coasterId].scannersAccount.push(_user);\r\n\r\n        // get NR coin reward -> rewardUser \r\n        // NRCoin.rewardUser(_user);\r\n\r\n        emit CoasterScanned(_user, _coasterId);\r\n    }\r\n\r\n    /**\r\n    * @dev Nickname NFT by first scanner\r\n    * @param _user Wallet address of first scanner\r\n    * @param _assetId ID of the NFT asset to name\r\n    * @param _nickname Nick name to give NFT\r\n     */\r\n    function nicknameNFT(\r\n        address _user, \r\n        string calldata _assetId, \r\n        string calldata _nickname\r\n    ) external onlyOwner nonReentrant {\r\n        require(NRCoin.userBalance(_user) >= NRCPricePerNicknaming, \"Insufficient balance.\");\r\n\r\n        Coaster storage coaster = coasters[_assetId];\r\n        require(bytes(coaster.nickname).length == 0, \"Asset already named\");\r\n        require(coaster.owner != address(0), \"Coaster does not exist.\");\r\n\r\n        coaster.nickname = _nickname;\r\n        coaster.namerAccount = _user;\r\n\r\n        // // pay with NR coin -> ayWithNRC, \r\n        // NRCoin.chargeUser(_user, NRCPricePerNicknaming);\r\n\r\n        emit CoasterNamed(_user, _assetId, _nickname);\r\n    }\r\n\r\n    /**\r\n    * @dev Get NFT detail\r\n    * @param _user Wallet of user\r\n    * @param _coasterId Coaster ID to fetch by user\r\n     */\r\n    function getNFT(address _user, string memory _coasterId) external view onlyOwner returns (Coaster memory) {\r\n        require(ownedCoasters[_user][_coasterId] || scannedCoasters[_user][_coasterId], \"Coaster asset not found in your collection.\");\r\n\r\n        Coaster memory _coaster = coasters[_coasterId];\r\n\r\n        return _coaster;\r\n    }\r\n}"}},"settings":{"optimizer":{"enabled":true,"runs":200},"evmVersion":"paris","outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata"],"":["ast"]}}}},"output":{"errors":[{"component":"general","errorCode":"3420","formattedMessage":"Warning: Source file does not specify required compiler version! Consider adding \"pragma solidity ^0.8.27;\"\n--> contracts/NextRound.sol\n\n","message":"Source file does not specify required compiler version! Consider adding \"pragma solidity ^0.8.27;\"","severity":"warning","sourceLocation":{"end":-1,"file":"contracts/NextRound.sol","start":-1},"type":"Warning"}],"sources":{"@openzeppelin/contracts/access/Ownable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","exportedSymbols":{"Context":[1669],"Ownable":[147]},"id":148,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"102:24:0"},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../utils/Context.sol","id":3,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":148,"sourceUnit":1670,"src":"128:45:0","symbolAliases":[{"foreign":{"id":2,"name":"Context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1669,"src":"136:7:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":5,"name":"Context","nameLocations":["692:7:0"],"nodeType":"IdentifierPath","referencedDeclaration":1669,"src":"692:7:0"},"id":6,"nodeType":"InheritanceSpecifier","src":"692:7:0"}],"canonicalName":"Ownable","contractDependencies":[],"contractKind":"contract","documentation":{"id":4,"nodeType":"StructuredDocumentation","src":"175:487:0","text":" @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."},"fullyImplemented":true,"id":147,"linearizedBaseContracts":[147,1669],"name":"Ownable","nameLocation":"681:7:0","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":8,"mutability":"mutable","name":"_owner","nameLocation":"722:6:0","nodeType":"VariableDeclaration","scope":147,"src":"706:22:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7,"name":"address","nodeType":"ElementaryTypeName","src":"706:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"documentation":{"id":9,"nodeType":"StructuredDocumentation","src":"735:85:0","text":" @dev The caller account is not authorized to perform an operation."},"errorSelector":"118cdaa7","id":13,"name":"OwnableUnauthorizedAccount","nameLocation":"831:26:0","nodeType":"ErrorDefinition","parameters":{"id":12,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11,"mutability":"mutable","name":"account","nameLocation":"866:7:0","nodeType":"VariableDeclaration","scope":13,"src":"858:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10,"name":"address","nodeType":"ElementaryTypeName","src":"858:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"857:17:0"},"src":"825:50:0"},{"documentation":{"id":14,"nodeType":"StructuredDocumentation","src":"881:82:0","text":" @dev The owner is not a valid owner account. (eg. `address(0)`)"},"errorSelector":"1e4fbdf7","id":18,"name":"OwnableInvalidOwner","nameLocation":"974:19:0","nodeType":"ErrorDefinition","parameters":{"id":17,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16,"mutability":"mutable","name":"owner","nameLocation":"1002:5:0","nodeType":"VariableDeclaration","scope":18,"src":"994:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15,"name":"address","nodeType":"ElementaryTypeName","src":"994:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"993:15:0"},"src":"968:41:0"},{"anonymous":false,"eventSelector":"8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0","id":24,"name":"OwnershipTransferred","nameLocation":"1021:20:0","nodeType":"EventDefinition","parameters":{"id":23,"nodeType":"ParameterList","parameters":[{"constant":false,"id":20,"indexed":true,"mutability":"mutable","name":"previousOwner","nameLocation":"1058:13:0","nodeType":"VariableDeclaration","scope":24,"src":"1042:29:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":19,"name":"address","nodeType":"ElementaryTypeName","src":"1042:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":22,"indexed":true,"mutability":"mutable","name":"newOwner","nameLocation":"1089:8:0","nodeType":"VariableDeclaration","scope":24,"src":"1073:24:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":21,"name":"address","nodeType":"ElementaryTypeName","src":"1073:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1041:57:0"},"src":"1015:84:0"},{"body":{"id":49,"nodeType":"Block","src":"1259:153:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":35,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":30,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":27,"src":"1273:12:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":33,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1297:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":32,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1289:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":31,"name":"address","nodeType":"ElementaryTypeName","src":"1289:7:0","typeDescriptions":{}}},"id":34,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1289:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1273:26:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":44,"nodeType":"IfStatement","src":"1269:95:0","trueBody":{"id":43,"nodeType":"Block","src":"1301:63:0","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":39,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1350:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":38,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1342:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":37,"name":"address","nodeType":"ElementaryTypeName","src":"1342:7:0","typeDescriptions":{}}},"id":40,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1342:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":36,"name":"OwnableInvalidOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":18,"src":"1322:19:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":41,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1322:31:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":42,"nodeType":"RevertStatement","src":"1315:38:0"}]}},{"expression":{"arguments":[{"id":46,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":27,"src":"1392:12:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":45,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":146,"src":"1373:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":47,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1373:32:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":48,"nodeType":"ExpressionStatement","src":"1373:32:0"}]},"documentation":{"id":25,"nodeType":"StructuredDocumentation","src":"1105:115:0","text":" @dev Initializes the contract setting the address provided by the deployer as the initial owner."},"id":50,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":28,"nodeType":"ParameterList","parameters":[{"constant":false,"id":27,"mutability":"mutable","name":"initialOwner","nameLocation":"1245:12:0","nodeType":"VariableDeclaration","scope":50,"src":"1237:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":26,"name":"address","nodeType":"ElementaryTypeName","src":"1237:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1236:22:0"},"returnParameters":{"id":29,"nodeType":"ParameterList","parameters":[],"src":"1259:0:0"},"scope":147,"src":"1225:187:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":57,"nodeType":"Block","src":"1521:41:0","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":53,"name":"_checkOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":84,"src":"1531:11:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":54,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1531:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":55,"nodeType":"ExpressionStatement","src":"1531:13:0"},{"id":56,"nodeType":"PlaceholderStatement","src":"1554:1:0"}]},"documentation":{"id":51,"nodeType":"StructuredDocumentation","src":"1418:77:0","text":" @dev Throws if called by any account other than the owner."},"id":58,"name":"onlyOwner","nameLocation":"1509:9:0","nodeType":"ModifierDefinition","parameters":{"id":52,"nodeType":"ParameterList","parameters":[],"src":"1518:2:0"},"src":"1500:62:0","virtual":false,"visibility":"internal"},{"body":{"id":66,"nodeType":"Block","src":"1693:30:0","statements":[{"expression":{"id":64,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8,"src":"1710:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":63,"id":65,"nodeType":"Return","src":"1703:13:0"}]},"documentation":{"id":59,"nodeType":"StructuredDocumentation","src":"1568:65:0","text":" @dev Returns the address of the current owner."},"functionSelector":"8da5cb5b","id":67,"implemented":true,"kind":"function","modifiers":[],"name":"owner","nameLocation":"1647:5:0","nodeType":"FunctionDefinition","parameters":{"id":60,"nodeType":"ParameterList","parameters":[],"src":"1652:2:0"},"returnParameters":{"id":63,"nodeType":"ParameterList","parameters":[{"constant":false,"id":62,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":67,"src":"1684:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":61,"name":"address","nodeType":"ElementaryTypeName","src":"1684:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1683:9:0"},"scope":147,"src":"1638:85:0","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":83,"nodeType":"Block","src":"1841:117:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":75,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":71,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":67,"src":"1855:5:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":72,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1855:7:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":73,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1651,"src":"1866:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":74,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1866:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1855:23:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":82,"nodeType":"IfStatement","src":"1851:101:0","trueBody":{"id":81,"nodeType":"Block","src":"1880:72:0","statements":[{"errorCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":77,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1651,"src":"1928:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":78,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1928:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":76,"name":"OwnableUnauthorizedAccount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":13,"src":"1901:26:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":79,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1901:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":80,"nodeType":"RevertStatement","src":"1894:47:0"}]}}]},"documentation":{"id":68,"nodeType":"StructuredDocumentation","src":"1729:62:0","text":" @dev Throws if the sender is not the owner."},"id":84,"implemented":true,"kind":"function","modifiers":[],"name":"_checkOwner","nameLocation":"1805:11:0","nodeType":"FunctionDefinition","parameters":{"id":69,"nodeType":"ParameterList","parameters":[],"src":"1816:2:0"},"returnParameters":{"id":70,"nodeType":"ParameterList","parameters":[],"src":"1841:0:0"},"scope":147,"src":"1796:162:0","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":97,"nodeType":"Block","src":"2347:47:0","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":93,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2384:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":92,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2376:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":91,"name":"address","nodeType":"ElementaryTypeName","src":"2376:7:0","typeDescriptions":{}}},"id":94,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2376:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":90,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":146,"src":"2357:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":95,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2357:30:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":96,"nodeType":"ExpressionStatement","src":"2357:30:0"}]},"documentation":{"id":85,"nodeType":"StructuredDocumentation","src":"1964:324:0","text":" @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."},"functionSelector":"715018a6","id":98,"implemented":true,"kind":"function","modifiers":[{"id":88,"kind":"modifierInvocation","modifierName":{"id":87,"name":"onlyOwner","nameLocations":["2337:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"2337:9:0"},"nodeType":"ModifierInvocation","src":"2337:9:0"}],"name":"renounceOwnership","nameLocation":"2302:17:0","nodeType":"FunctionDefinition","parameters":{"id":86,"nodeType":"ParameterList","parameters":[],"src":"2319:2:0"},"returnParameters":{"id":89,"nodeType":"ParameterList","parameters":[],"src":"2347:0:0"},"scope":147,"src":"2293:101:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":125,"nodeType":"Block","src":"2613:145:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":111,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":106,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":101,"src":"2627:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":109,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2647:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":108,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2639:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":107,"name":"address","nodeType":"ElementaryTypeName","src":"2639:7:0","typeDescriptions":{}}},"id":110,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2639:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2627:22:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":120,"nodeType":"IfStatement","src":"2623:91:0","trueBody":{"id":119,"nodeType":"Block","src":"2651:63:0","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":115,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2700:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":114,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2692:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":113,"name":"address","nodeType":"ElementaryTypeName","src":"2692:7:0","typeDescriptions":{}}},"id":116,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2692:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":112,"name":"OwnableInvalidOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":18,"src":"2672:19:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":117,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2672:31:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":118,"nodeType":"RevertStatement","src":"2665:38:0"}]}},{"expression":{"arguments":[{"id":122,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":101,"src":"2742:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":121,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":146,"src":"2723:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":123,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2723:28:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":124,"nodeType":"ExpressionStatement","src":"2723:28:0"}]},"documentation":{"id":99,"nodeType":"StructuredDocumentation","src":"2400:138:0","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."},"functionSelector":"f2fde38b","id":126,"implemented":true,"kind":"function","modifiers":[{"id":104,"kind":"modifierInvocation","modifierName":{"id":103,"name":"onlyOwner","nameLocations":["2603:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"2603:9:0"},"nodeType":"ModifierInvocation","src":"2603:9:0"}],"name":"transferOwnership","nameLocation":"2552:17:0","nodeType":"FunctionDefinition","parameters":{"id":102,"nodeType":"ParameterList","parameters":[{"constant":false,"id":101,"mutability":"mutable","name":"newOwner","nameLocation":"2578:8:0","nodeType":"VariableDeclaration","scope":126,"src":"2570:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":100,"name":"address","nodeType":"ElementaryTypeName","src":"2570:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2569:18:0"},"returnParameters":{"id":105,"nodeType":"ParameterList","parameters":[],"src":"2613:0:0"},"scope":147,"src":"2543:215:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":145,"nodeType":"Block","src":"2975:124:0","statements":[{"assignments":[133],"declarations":[{"constant":false,"id":133,"mutability":"mutable","name":"oldOwner","nameLocation":"2993:8:0","nodeType":"VariableDeclaration","scope":145,"src":"2985:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":132,"name":"address","nodeType":"ElementaryTypeName","src":"2985:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":135,"initialValue":{"id":134,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8,"src":"3004:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2985:25:0"},{"expression":{"id":138,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":136,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8,"src":"3020:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":137,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":129,"src":"3029:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3020:17:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":139,"nodeType":"ExpressionStatement","src":"3020:17:0"},{"eventCall":{"arguments":[{"id":141,"name":"oldOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":133,"src":"3073:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":142,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":129,"src":"3083:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":140,"name":"OwnershipTransferred","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":24,"src":"3052:20:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":143,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3052:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":144,"nodeType":"EmitStatement","src":"3047:45:0"}]},"documentation":{"id":127,"nodeType":"StructuredDocumentation","src":"2764:143:0","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."},"id":146,"implemented":true,"kind":"function","modifiers":[],"name":"_transferOwnership","nameLocation":"2921:18:0","nodeType":"FunctionDefinition","parameters":{"id":130,"nodeType":"ParameterList","parameters":[{"constant":false,"id":129,"mutability":"mutable","name":"newOwner","nameLocation":"2948:8:0","nodeType":"VariableDeclaration","scope":146,"src":"2940:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":128,"name":"address","nodeType":"ElementaryTypeName","src":"2940:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2939:18:0"},"returnParameters":{"id":131,"nodeType":"ParameterList","parameters":[],"src":"2975:0:0"},"scope":147,"src":"2912:187:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":148,"src":"663:2438:0","usedErrors":[13,18],"usedEvents":[24]}],"src":"102:3000:0"},"id":0},"@openzeppelin/contracts/interfaces/IERC165.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/IERC165.sol","exportedSymbols":{"IERC165":[2146]},"id":152,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":149,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"106:24:1"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"../utils/introspection/IERC165.sol","id":151,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":152,"sourceUnit":2147,"src":"132:59:1","symbolAliases":[{"foreign":{"id":150,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2146,"src":"140:7:1","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""}],"src":"106:86:1"},"id":1},"@openzeppelin/contracts/interfaces/IERC4906.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/IERC4906.sol","exportedSymbols":{"IERC165":[2146],"IERC4906":[175],"IERC721":[1390]},"id":176,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":153,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"107:24:2"},{"absolutePath":"@openzeppelin/contracts/interfaces/IERC165.sol","file":"./IERC165.sol","id":155,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":176,"sourceUnit":152,"src":"133:38:2","symbolAliases":[{"foreign":{"id":154,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2146,"src":"141:7:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/IERC721.sol","file":"./IERC721.sol","id":157,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":176,"sourceUnit":180,"src":"172:38:2","symbolAliases":[{"foreign":{"id":156,"name":"IERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1390,"src":"180:7:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":159,"name":"IERC165","nameLocations":["279:7:2"],"nodeType":"IdentifierPath","referencedDeclaration":2146,"src":"279:7:2"},"id":160,"nodeType":"InheritanceSpecifier","src":"279:7:2"},{"baseName":{"id":161,"name":"IERC721","nameLocations":["288:7:2"],"nodeType":"IdentifierPath","referencedDeclaration":1390,"src":"288:7:2"},"id":162,"nodeType":"InheritanceSpecifier","src":"288:7:2"}],"canonicalName":"IERC4906","contractDependencies":[],"contractKind":"interface","documentation":{"id":158,"nodeType":"StructuredDocumentation","src":"212:45:2","text":"@title ERC-721 Metadata Update Extension"},"fullyImplemented":false,"id":175,"linearizedBaseContracts":[175,1390,2146],"name":"IERC4906","nameLocation":"267:8:2","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":163,"nodeType":"StructuredDocumentation","src":"302:201:2","text":"@dev This event emits when the metadata of a token is changed.\n So that the third-party platforms such as NFT market could\n timely update the images and related attributes of the NFT."},"eventSelector":"f8e1a15aba9398e019f0b49df1a4fde98ee17ae345cb5f6b5e2c27f5033e8ce7","id":167,"name":"MetadataUpdate","nameLocation":"514:14:2","nodeType":"EventDefinition","parameters":{"id":166,"nodeType":"ParameterList","parameters":[{"constant":false,"id":165,"indexed":false,"mutability":"mutable","name":"_tokenId","nameLocation":"537:8:2","nodeType":"VariableDeclaration","scope":167,"src":"529:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":164,"name":"uint256","nodeType":"ElementaryTypeName","src":"529:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"528:18:2"},"src":"508:39:2"},{"anonymous":false,"documentation":{"id":168,"nodeType":"StructuredDocumentation","src":"553:212:2","text":"@dev This event emits when the metadata of a range of tokens is changed.\n So that the third-party platforms such as NFT market could\n timely update the images and related attributes of the NFTs."},"eventSelector":"6bd5c950a8d8df17f772f5af37cb3655737899cbf903264b9795592da439661c","id":174,"name":"BatchMetadataUpdate","nameLocation":"776:19:2","nodeType":"EventDefinition","parameters":{"id":173,"nodeType":"ParameterList","parameters":[{"constant":false,"id":170,"indexed":false,"mutability":"mutable","name":"_fromTokenId","nameLocation":"804:12:2","nodeType":"VariableDeclaration","scope":174,"src":"796:20:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":169,"name":"uint256","nodeType":"ElementaryTypeName","src":"796:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":172,"indexed":false,"mutability":"mutable","name":"_toTokenId","nameLocation":"826:10:2","nodeType":"VariableDeclaration","scope":174,"src":"818:18:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":171,"name":"uint256","nodeType":"ElementaryTypeName","src":"818:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"795:42:2"},"src":"770:68:2"}],"scope":176,"src":"257:583:2","usedErrors":[],"usedEvents":[167,174,1289,1298,1307]}],"src":"107:734:2"},"id":2},"@openzeppelin/contracts/interfaces/IERC721.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/IERC721.sol","exportedSymbols":{"IERC721":[1390]},"id":180,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":177,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"106:24:3"},{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721.sol","file":"../token/ERC721/IERC721.sol","id":179,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":180,"sourceUnit":1391,"src":"132:52:3","symbolAliases":[{"foreign":{"id":178,"name":"IERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1390,"src":"140:7:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""}],"src":"106:79:3"},"id":3},"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC6093.sol","exportedSymbols":{"IERC1155Errors":[316],"IERC20Errors":[221],"IERC721Errors":[269]},"id":317,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":181,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"112:24:4"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":182,"nodeType":"StructuredDocumentation","src":"138:141:4","text":" @dev Standard ERC-20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens."},"fullyImplemented":true,"id":221,"linearizedBaseContracts":[221],"name":"IERC20Errors","nameLocation":"290:12:4","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":183,"nodeType":"StructuredDocumentation","src":"309:309:4","text":" @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."},"errorSelector":"e450d38c","id":191,"name":"ERC20InsufficientBalance","nameLocation":"629:24:4","nodeType":"ErrorDefinition","parameters":{"id":190,"nodeType":"ParameterList","parameters":[{"constant":false,"id":185,"mutability":"mutable","name":"sender","nameLocation":"662:6:4","nodeType":"VariableDeclaration","scope":191,"src":"654:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":184,"name":"address","nodeType":"ElementaryTypeName","src":"654:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":187,"mutability":"mutable","name":"balance","nameLocation":"678:7:4","nodeType":"VariableDeclaration","scope":191,"src":"670:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":186,"name":"uint256","nodeType":"ElementaryTypeName","src":"670:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":189,"mutability":"mutable","name":"needed","nameLocation":"695:6:4","nodeType":"VariableDeclaration","scope":191,"src":"687:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":188,"name":"uint256","nodeType":"ElementaryTypeName","src":"687:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"653:49:4"},"src":"623:80:4"},{"documentation":{"id":192,"nodeType":"StructuredDocumentation","src":"709:152:4","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"96c6fd1e","id":196,"name":"ERC20InvalidSender","nameLocation":"872:18:4","nodeType":"ErrorDefinition","parameters":{"id":195,"nodeType":"ParameterList","parameters":[{"constant":false,"id":194,"mutability":"mutable","name":"sender","nameLocation":"899:6:4","nodeType":"VariableDeclaration","scope":196,"src":"891:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":193,"name":"address","nodeType":"ElementaryTypeName","src":"891:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"890:16:4"},"src":"866:41:4"},{"documentation":{"id":197,"nodeType":"StructuredDocumentation","src":"913:159:4","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"ec442f05","id":201,"name":"ERC20InvalidReceiver","nameLocation":"1083:20:4","nodeType":"ErrorDefinition","parameters":{"id":200,"nodeType":"ParameterList","parameters":[{"constant":false,"id":199,"mutability":"mutable","name":"receiver","nameLocation":"1112:8:4","nodeType":"VariableDeclaration","scope":201,"src":"1104:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":198,"name":"address","nodeType":"ElementaryTypeName","src":"1104:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1103:18:4"},"src":"1077:45:4"},{"documentation":{"id":202,"nodeType":"StructuredDocumentation","src":"1128:345:4","text":" @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."},"errorSelector":"fb8f41b2","id":210,"name":"ERC20InsufficientAllowance","nameLocation":"1484:26:4","nodeType":"ErrorDefinition","parameters":{"id":209,"nodeType":"ParameterList","parameters":[{"constant":false,"id":204,"mutability":"mutable","name":"spender","nameLocation":"1519:7:4","nodeType":"VariableDeclaration","scope":210,"src":"1511:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":203,"name":"address","nodeType":"ElementaryTypeName","src":"1511:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":206,"mutability":"mutable","name":"allowance","nameLocation":"1536:9:4","nodeType":"VariableDeclaration","scope":210,"src":"1528:17:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":205,"name":"uint256","nodeType":"ElementaryTypeName","src":"1528:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":208,"mutability":"mutable","name":"needed","nameLocation":"1555:6:4","nodeType":"VariableDeclaration","scope":210,"src":"1547:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":207,"name":"uint256","nodeType":"ElementaryTypeName","src":"1547:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1510:52:4"},"src":"1478:85:4"},{"documentation":{"id":211,"nodeType":"StructuredDocumentation","src":"1569:174:4","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"e602df05","id":215,"name":"ERC20InvalidApprover","nameLocation":"1754:20:4","nodeType":"ErrorDefinition","parameters":{"id":214,"nodeType":"ParameterList","parameters":[{"constant":false,"id":213,"mutability":"mutable","name":"approver","nameLocation":"1783:8:4","nodeType":"VariableDeclaration","scope":215,"src":"1775:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":212,"name":"address","nodeType":"ElementaryTypeName","src":"1775:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1774:18:4"},"src":"1748:45:4"},{"documentation":{"id":216,"nodeType":"StructuredDocumentation","src":"1799:195:4","text":" @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"94280d62","id":220,"name":"ERC20InvalidSpender","nameLocation":"2005:19:4","nodeType":"ErrorDefinition","parameters":{"id":219,"nodeType":"ParameterList","parameters":[{"constant":false,"id":218,"mutability":"mutable","name":"spender","nameLocation":"2033:7:4","nodeType":"VariableDeclaration","scope":220,"src":"2025:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":217,"name":"address","nodeType":"ElementaryTypeName","src":"2025:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2024:17:4"},"src":"1999:43:4"}],"scope":317,"src":"280:1764:4","usedErrors":[191,196,201,210,215,220],"usedEvents":[]},{"abstract":false,"baseContracts":[],"canonicalName":"IERC721Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":222,"nodeType":"StructuredDocumentation","src":"2046:143:4","text":" @dev Standard ERC-721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens."},"fullyImplemented":true,"id":269,"linearizedBaseContracts":[269],"name":"IERC721Errors","nameLocation":"2200:13:4","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":223,"nodeType":"StructuredDocumentation","src":"2220:219:4","text":" @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."},"errorSelector":"89c62b64","id":227,"name":"ERC721InvalidOwner","nameLocation":"2450:18:4","nodeType":"ErrorDefinition","parameters":{"id":226,"nodeType":"ParameterList","parameters":[{"constant":false,"id":225,"mutability":"mutable","name":"owner","nameLocation":"2477:5:4","nodeType":"VariableDeclaration","scope":227,"src":"2469:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":224,"name":"address","nodeType":"ElementaryTypeName","src":"2469:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2468:15:4"},"src":"2444:40:4"},{"documentation":{"id":228,"nodeType":"StructuredDocumentation","src":"2490:132:4","text":" @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."},"errorSelector":"7e273289","id":232,"name":"ERC721NonexistentToken","nameLocation":"2633:22:4","nodeType":"ErrorDefinition","parameters":{"id":231,"nodeType":"ParameterList","parameters":[{"constant":false,"id":230,"mutability":"mutable","name":"tokenId","nameLocation":"2664:7:4","nodeType":"VariableDeclaration","scope":232,"src":"2656:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":229,"name":"uint256","nodeType":"ElementaryTypeName","src":"2656:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2655:17:4"},"src":"2627:46:4"},{"documentation":{"id":233,"nodeType":"StructuredDocumentation","src":"2679:289:4","text":" @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."},"errorSelector":"64283d7b","id":241,"name":"ERC721IncorrectOwner","nameLocation":"2979:20:4","nodeType":"ErrorDefinition","parameters":{"id":240,"nodeType":"ParameterList","parameters":[{"constant":false,"id":235,"mutability":"mutable","name":"sender","nameLocation":"3008:6:4","nodeType":"VariableDeclaration","scope":241,"src":"3000:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":234,"name":"address","nodeType":"ElementaryTypeName","src":"3000:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":237,"mutability":"mutable","name":"tokenId","nameLocation":"3024:7:4","nodeType":"VariableDeclaration","scope":241,"src":"3016:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":236,"name":"uint256","nodeType":"ElementaryTypeName","src":"3016:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":239,"mutability":"mutable","name":"owner","nameLocation":"3041:5:4","nodeType":"VariableDeclaration","scope":241,"src":"3033:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":238,"name":"address","nodeType":"ElementaryTypeName","src":"3033:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2999:48:4"},"src":"2973:75:4"},{"documentation":{"id":242,"nodeType":"StructuredDocumentation","src":"3054:152:4","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"73c6ac6e","id":246,"name":"ERC721InvalidSender","nameLocation":"3217:19:4","nodeType":"ErrorDefinition","parameters":{"id":245,"nodeType":"ParameterList","parameters":[{"constant":false,"id":244,"mutability":"mutable","name":"sender","nameLocation":"3245:6:4","nodeType":"VariableDeclaration","scope":246,"src":"3237:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":243,"name":"address","nodeType":"ElementaryTypeName","src":"3237:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3236:16:4"},"src":"3211:42:4"},{"documentation":{"id":247,"nodeType":"StructuredDocumentation","src":"3259:159:4","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"64a0ae92","id":251,"name":"ERC721InvalidReceiver","nameLocation":"3429:21:4","nodeType":"ErrorDefinition","parameters":{"id":250,"nodeType":"ParameterList","parameters":[{"constant":false,"id":249,"mutability":"mutable","name":"receiver","nameLocation":"3459:8:4","nodeType":"VariableDeclaration","scope":251,"src":"3451:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":248,"name":"address","nodeType":"ElementaryTypeName","src":"3451:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3450:18:4"},"src":"3423:46:4"},{"documentation":{"id":252,"nodeType":"StructuredDocumentation","src":"3475:247:4","text":" @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."},"errorSelector":"177e802f","id":258,"name":"ERC721InsufficientApproval","nameLocation":"3733:26:4","nodeType":"ErrorDefinition","parameters":{"id":257,"nodeType":"ParameterList","parameters":[{"constant":false,"id":254,"mutability":"mutable","name":"operator","nameLocation":"3768:8:4","nodeType":"VariableDeclaration","scope":258,"src":"3760:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":253,"name":"address","nodeType":"ElementaryTypeName","src":"3760:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":256,"mutability":"mutable","name":"tokenId","nameLocation":"3786:7:4","nodeType":"VariableDeclaration","scope":258,"src":"3778:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":255,"name":"uint256","nodeType":"ElementaryTypeName","src":"3778:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3759:35:4"},"src":"3727:68:4"},{"documentation":{"id":259,"nodeType":"StructuredDocumentation","src":"3801:174:4","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"a9fbf51f","id":263,"name":"ERC721InvalidApprover","nameLocation":"3986:21:4","nodeType":"ErrorDefinition","parameters":{"id":262,"nodeType":"ParameterList","parameters":[{"constant":false,"id":261,"mutability":"mutable","name":"approver","nameLocation":"4016:8:4","nodeType":"VariableDeclaration","scope":263,"src":"4008:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":260,"name":"address","nodeType":"ElementaryTypeName","src":"4008:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4007:18:4"},"src":"3980:46:4"},{"documentation":{"id":264,"nodeType":"StructuredDocumentation","src":"4032:197:4","text":" @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"5b08ba18","id":268,"name":"ERC721InvalidOperator","nameLocation":"4240:21:4","nodeType":"ErrorDefinition","parameters":{"id":267,"nodeType":"ParameterList","parameters":[{"constant":false,"id":266,"mutability":"mutable","name":"operator","nameLocation":"4270:8:4","nodeType":"VariableDeclaration","scope":268,"src":"4262:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":265,"name":"address","nodeType":"ElementaryTypeName","src":"4262:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4261:18:4"},"src":"4234:46:4"}],"scope":317,"src":"2190:2092:4","usedErrors":[227,232,241,246,251,258,263,268],"usedEvents":[]},{"abstract":false,"baseContracts":[],"canonicalName":"IERC1155Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":270,"nodeType":"StructuredDocumentation","src":"4284:145:4","text":" @dev Standard ERC-1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens."},"fullyImplemented":true,"id":316,"linearizedBaseContracts":[316],"name":"IERC1155Errors","nameLocation":"4440:14:4","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":271,"nodeType":"StructuredDocumentation","src":"4461:361:4","text":" @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."},"errorSelector":"03dee4c5","id":281,"name":"ERC1155InsufficientBalance","nameLocation":"4833:26:4","nodeType":"ErrorDefinition","parameters":{"id":280,"nodeType":"ParameterList","parameters":[{"constant":false,"id":273,"mutability":"mutable","name":"sender","nameLocation":"4868:6:4","nodeType":"VariableDeclaration","scope":281,"src":"4860:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":272,"name":"address","nodeType":"ElementaryTypeName","src":"4860:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":275,"mutability":"mutable","name":"balance","nameLocation":"4884:7:4","nodeType":"VariableDeclaration","scope":281,"src":"4876:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":274,"name":"uint256","nodeType":"ElementaryTypeName","src":"4876:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":277,"mutability":"mutable","name":"needed","nameLocation":"4901:6:4","nodeType":"VariableDeclaration","scope":281,"src":"4893:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":276,"name":"uint256","nodeType":"ElementaryTypeName","src":"4893:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":279,"mutability":"mutable","name":"tokenId","nameLocation":"4917:7:4","nodeType":"VariableDeclaration","scope":281,"src":"4909:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":278,"name":"uint256","nodeType":"ElementaryTypeName","src":"4909:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4859:66:4"},"src":"4827:99:4"},{"documentation":{"id":282,"nodeType":"StructuredDocumentation","src":"4932:152:4","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"01a83514","id":286,"name":"ERC1155InvalidSender","nameLocation":"5095:20:4","nodeType":"ErrorDefinition","parameters":{"id":285,"nodeType":"ParameterList","parameters":[{"constant":false,"id":284,"mutability":"mutable","name":"sender","nameLocation":"5124:6:4","nodeType":"VariableDeclaration","scope":286,"src":"5116:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":283,"name":"address","nodeType":"ElementaryTypeName","src":"5116:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5115:16:4"},"src":"5089:43:4"},{"documentation":{"id":287,"nodeType":"StructuredDocumentation","src":"5138:159:4","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"57f447ce","id":291,"name":"ERC1155InvalidReceiver","nameLocation":"5308:22:4","nodeType":"ErrorDefinition","parameters":{"id":290,"nodeType":"ParameterList","parameters":[{"constant":false,"id":289,"mutability":"mutable","name":"receiver","nameLocation":"5339:8:4","nodeType":"VariableDeclaration","scope":291,"src":"5331:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":288,"name":"address","nodeType":"ElementaryTypeName","src":"5331:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5330:18:4"},"src":"5302:47:4"},{"documentation":{"id":292,"nodeType":"StructuredDocumentation","src":"5355:256:4","text":" @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."},"errorSelector":"e237d922","id":298,"name":"ERC1155MissingApprovalForAll","nameLocation":"5622:28:4","nodeType":"ErrorDefinition","parameters":{"id":297,"nodeType":"ParameterList","parameters":[{"constant":false,"id":294,"mutability":"mutable","name":"operator","nameLocation":"5659:8:4","nodeType":"VariableDeclaration","scope":298,"src":"5651:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":293,"name":"address","nodeType":"ElementaryTypeName","src":"5651:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":296,"mutability":"mutable","name":"owner","nameLocation":"5677:5:4","nodeType":"VariableDeclaration","scope":298,"src":"5669:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":295,"name":"address","nodeType":"ElementaryTypeName","src":"5669:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5650:33:4"},"src":"5616:68:4"},{"documentation":{"id":299,"nodeType":"StructuredDocumentation","src":"5690:174:4","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"3e31884e","id":303,"name":"ERC1155InvalidApprover","nameLocation":"5875:22:4","nodeType":"ErrorDefinition","parameters":{"id":302,"nodeType":"ParameterList","parameters":[{"constant":false,"id":301,"mutability":"mutable","name":"approver","nameLocation":"5906:8:4","nodeType":"VariableDeclaration","scope":303,"src":"5898:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":300,"name":"address","nodeType":"ElementaryTypeName","src":"5898:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5897:18:4"},"src":"5869:47:4"},{"documentation":{"id":304,"nodeType":"StructuredDocumentation","src":"5922:197:4","text":" @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"ced3e100","id":308,"name":"ERC1155InvalidOperator","nameLocation":"6130:22:4","nodeType":"ErrorDefinition","parameters":{"id":307,"nodeType":"ParameterList","parameters":[{"constant":false,"id":306,"mutability":"mutable","name":"operator","nameLocation":"6161:8:4","nodeType":"VariableDeclaration","scope":308,"src":"6153:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":305,"name":"address","nodeType":"ElementaryTypeName","src":"6153:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6152:18:4"},"src":"6124:47:4"},{"documentation":{"id":309,"nodeType":"StructuredDocumentation","src":"6177:280:4","text":" @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"},"errorSelector":"5b059991","id":315,"name":"ERC1155InvalidArrayLength","nameLocation":"6468:25:4","nodeType":"ErrorDefinition","parameters":{"id":314,"nodeType":"ParameterList","parameters":[{"constant":false,"id":311,"mutability":"mutable","name":"idsLength","nameLocation":"6502:9:4","nodeType":"VariableDeclaration","scope":315,"src":"6494:17:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":310,"name":"uint256","nodeType":"ElementaryTypeName","src":"6494:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":313,"mutability":"mutable","name":"valuesLength","nameLocation":"6521:12:4","nodeType":"VariableDeclaration","scope":315,"src":"6513:20:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":312,"name":"uint256","nodeType":"ElementaryTypeName","src":"6513:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6493:41:4"},"src":"6462:73:4"}],"scope":317,"src":"4430:2107:4","usedErrors":[281,286,291,298,303,308,315],"usedEvents":[]}],"src":"112:6426:4"},"id":4},"@openzeppelin/contracts/token/ERC721/ERC721.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/ERC721.sol","exportedSymbols":{"Context":[1669],"ERC165":[2134],"ERC721":[1273],"ERC721Utils":[1639],"IERC165":[2146],"IERC721":[1390],"IERC721Errors":[269],"IERC721Metadata":[1562],"Strings":[2110]},"id":1274,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":318,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"107:24:5"},{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721.sol","file":"./IERC721.sol","id":320,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1274,"sourceUnit":1391,"src":"133:38:5","symbolAliases":[{"foreign":{"id":319,"name":"IERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1390,"src":"141:7:5","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol","file":"./extensions/IERC721Metadata.sol","id":322,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1274,"sourceUnit":1563,"src":"172:65:5","symbolAliases":[{"foreign":{"id":321,"name":"IERC721Metadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1562,"src":"180:15:5","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol","file":"./utils/ERC721Utils.sol","id":324,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1274,"sourceUnit":1640,"src":"238:52:5","symbolAliases":[{"foreign":{"id":323,"name":"ERC721Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1639,"src":"246:11:5","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../../utils/Context.sol","id":326,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1274,"sourceUnit":1670,"src":"291:48:5","symbolAliases":[{"foreign":{"id":325,"name":"Context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1669,"src":"299:7:5","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","file":"../../utils/Strings.sol","id":328,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1274,"sourceUnit":2111,"src":"340:48:5","symbolAliases":[{"foreign":{"id":327,"name":"Strings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2110,"src":"348:7:5","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/introspection/ERC165.sol","file":"../../utils/introspection/ERC165.sol","id":331,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1274,"sourceUnit":2135,"src":"389:69:5","symbolAliases":[{"foreign":{"id":329,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2146,"src":"397:7:5","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":330,"name":"ERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2134,"src":"406:6:5","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC6093.sol","file":"../../interfaces/draft-IERC6093.sol","id":333,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1274,"sourceUnit":317,"src":"459:66:5","symbolAliases":[{"foreign":{"id":332,"name":"IERC721Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":269,"src":"467:13:5","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":335,"name":"Context","nameLocations":["803:7:5"],"nodeType":"IdentifierPath","referencedDeclaration":1669,"src":"803:7:5"},"id":336,"nodeType":"InheritanceSpecifier","src":"803:7:5"},{"baseName":{"id":337,"name":"ERC165","nameLocations":["812:6:5"],"nodeType":"IdentifierPath","referencedDeclaration":2134,"src":"812:6:5"},"id":338,"nodeType":"InheritanceSpecifier","src":"812:6:5"},{"baseName":{"id":339,"name":"IERC721","nameLocations":["820:7:5"],"nodeType":"IdentifierPath","referencedDeclaration":1390,"src":"820:7:5"},"id":340,"nodeType":"InheritanceSpecifier","src":"820:7:5"},{"baseName":{"id":341,"name":"IERC721Metadata","nameLocations":["829:15:5"],"nodeType":"IdentifierPath","referencedDeclaration":1562,"src":"829:15:5"},"id":342,"nodeType":"InheritanceSpecifier","src":"829:15:5"},{"baseName":{"id":343,"name":"IERC721Errors","nameLocations":["846:13:5"],"nodeType":"IdentifierPath","referencedDeclaration":269,"src":"846:13:5"},"id":344,"nodeType":"InheritanceSpecifier","src":"846:13:5"}],"canonicalName":"ERC721","contractDependencies":[],"contractKind":"contract","documentation":{"id":334,"nodeType":"StructuredDocumentation","src":"527:247:5","text":" @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC-721] Non-Fungible Token Standard, including\n the Metadata extension, but not including the Enumerable extension, which is available separately as\n {ERC721Enumerable}."},"fullyImplemented":true,"id":1273,"linearizedBaseContracts":[1273,269,1562,1390,2134,2146,1669],"name":"ERC721","nameLocation":"793:6:5","nodeType":"ContractDefinition","nodes":[{"global":false,"id":347,"libraryName":{"id":345,"name":"Strings","nameLocations":["872:7:5"],"nodeType":"IdentifierPath","referencedDeclaration":2110,"src":"872:7:5"},"nodeType":"UsingForDirective","src":"866:26:5","typeName":{"id":346,"name":"uint256","nodeType":"ElementaryTypeName","src":"884:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},{"constant":false,"id":349,"mutability":"mutable","name":"_name","nameLocation":"931:5:5","nodeType":"VariableDeclaration","scope":1273,"src":"916:20:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":348,"name":"string","nodeType":"ElementaryTypeName","src":"916:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":false,"id":351,"mutability":"mutable","name":"_symbol","nameLocation":"978:7:5","nodeType":"VariableDeclaration","scope":1273,"src":"963:22:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":350,"name":"string","nodeType":"ElementaryTypeName","src":"963:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":false,"id":355,"mutability":"mutable","name":"_owners","nameLocation":"1036:7:5","nodeType":"VariableDeclaration","scope":1273,"src":"992:51:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"},"typeName":{"id":354,"keyName":"tokenId","keyNameLocation":"1008:7:5","keyType":{"id":352,"name":"uint256","nodeType":"ElementaryTypeName","src":"1000:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"992:35:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":353,"name":"address","nodeType":"ElementaryTypeName","src":"1019:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},"visibility":"private"},{"constant":false,"id":359,"mutability":"mutable","name":"_balances","nameLocation":"1092:9:5","nodeType":"VariableDeclaration","scope":1273,"src":"1050:51:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":358,"keyName":"owner","keyNameLocation":"1066:5:5","keyType":{"id":356,"name":"address","nodeType":"ElementaryTypeName","src":"1058:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1050:33:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":357,"name":"uint256","nodeType":"ElementaryTypeName","src":"1075:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"private"},{"constant":false,"id":363,"mutability":"mutable","name":"_tokenApprovals","nameLocation":"1152:15:5","nodeType":"VariableDeclaration","scope":1273,"src":"1108:59:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"},"typeName":{"id":362,"keyName":"tokenId","keyNameLocation":"1124:7:5","keyType":{"id":360,"name":"uint256","nodeType":"ElementaryTypeName","src":"1116:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"1108:35:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":361,"name":"address","nodeType":"ElementaryTypeName","src":"1135:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},"visibility":"private"},{"constant":false,"id":369,"mutability":"mutable","name":"_operatorApprovals","nameLocation":"1242:18:5","nodeType":"VariableDeclaration","scope":1273,"src":"1174:86:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"},"typeName":{"id":368,"keyName":"owner","keyNameLocation":"1190:5:5","keyType":{"id":364,"name":"address","nodeType":"ElementaryTypeName","src":"1182:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1174:59:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":367,"keyName":"operator","keyNameLocation":"1215:8:5","keyType":{"id":365,"name":"address","nodeType":"ElementaryTypeName","src":"1207:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1199:33:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":366,"name":"bool","nodeType":"ElementaryTypeName","src":"1227:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}}},"visibility":"private"},{"body":{"id":385,"nodeType":"Block","src":"1436:57:5","statements":[{"expression":{"id":379,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":377,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":349,"src":"1446:5:5","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":378,"name":"name_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":372,"src":"1454:5:5","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"1446:13:5","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":380,"nodeType":"ExpressionStatement","src":"1446:13:5"},{"expression":{"id":383,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":381,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":351,"src":"1469:7:5","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":382,"name":"symbol_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":374,"src":"1479:7:5","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"1469:17:5","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":384,"nodeType":"ExpressionStatement","src":"1469:17:5"}]},"documentation":{"id":370,"nodeType":"StructuredDocumentation","src":"1267:108:5","text":" @dev Initializes the contract by setting a `name` and a `symbol` to the token collection."},"id":386,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":375,"nodeType":"ParameterList","parameters":[{"constant":false,"id":372,"mutability":"mutable","name":"name_","nameLocation":"1406:5:5","nodeType":"VariableDeclaration","scope":386,"src":"1392:19:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":371,"name":"string","nodeType":"ElementaryTypeName","src":"1392:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":374,"mutability":"mutable","name":"symbol_","nameLocation":"1427:7:5","nodeType":"VariableDeclaration","scope":386,"src":"1413:21:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":373,"name":"string","nodeType":"ElementaryTypeName","src":"1413:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1391:44:5"},"returnParameters":{"id":376,"nodeType":"ParameterList","parameters":[],"src":"1436:0:5"},"scope":1273,"src":"1380:113:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[2133,2145],"body":{"id":416,"nodeType":"Block","src":"1668:192:5","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":414,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":409,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":402,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":397,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":389,"src":"1697:11:5","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":399,"name":"IERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1390,"src":"1717:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721_$1390_$","typeString":"type(contract IERC721)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC721_$1390_$","typeString":"type(contract IERC721)"}],"id":398,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1712:4:5","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":400,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1712:13:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC721_$1390","typeString":"type(contract IERC721)"}},"id":401,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1726:11:5","memberName":"interfaceId","nodeType":"MemberAccess","src":"1712:25:5","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"1697:40:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":408,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":403,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":389,"src":"1753:11:5","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":405,"name":"IERC721Metadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1562,"src":"1773:15:5","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721Metadata_$1562_$","typeString":"type(contract IERC721Metadata)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC721Metadata_$1562_$","typeString":"type(contract IERC721Metadata)"}],"id":404,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1768:4:5","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":406,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1768:21:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC721Metadata_$1562","typeString":"type(contract IERC721Metadata)"}},"id":407,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1790:11:5","memberName":"interfaceId","nodeType":"MemberAccess","src":"1768:33:5","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"1753:48:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1697:104:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":412,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":389,"src":"1841:11:5","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"id":410,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"1817:5:5","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC721_$1273_$","typeString":"type(contract super ERC721)"}},"id":411,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1823:17:5","memberName":"supportsInterface","nodeType":"MemberAccess","referencedDeclaration":2133,"src":"1817:23:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes4_$returns$_t_bool_$","typeString":"function (bytes4) view returns (bool)"}},"id":413,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1817:36:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1697:156:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":396,"id":415,"nodeType":"Return","src":"1678:175:5"}]},"documentation":{"id":387,"nodeType":"StructuredDocumentation","src":"1499:56:5","text":" @dev See {IERC165-supportsInterface}."},"functionSelector":"01ffc9a7","id":417,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"1569:17:5","nodeType":"FunctionDefinition","overrides":{"id":393,"nodeType":"OverrideSpecifier","overrides":[{"id":391,"name":"ERC165","nameLocations":["1636:6:5"],"nodeType":"IdentifierPath","referencedDeclaration":2134,"src":"1636:6:5"},{"id":392,"name":"IERC165","nameLocations":["1644:7:5"],"nodeType":"IdentifierPath","referencedDeclaration":2146,"src":"1644:7:5"}],"src":"1627:25:5"},"parameters":{"id":390,"nodeType":"ParameterList","parameters":[{"constant":false,"id":389,"mutability":"mutable","name":"interfaceId","nameLocation":"1594:11:5","nodeType":"VariableDeclaration","scope":417,"src":"1587:18:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":388,"name":"bytes4","nodeType":"ElementaryTypeName","src":"1587:6:5","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"1586:20:5"},"returnParameters":{"id":396,"nodeType":"ParameterList","parameters":[{"constant":false,"id":395,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":417,"src":"1662:4:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":394,"name":"bool","nodeType":"ElementaryTypeName","src":"1662:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1661:6:5"},"scope":1273,"src":"1560:300:5","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1315],"body":{"id":444,"nodeType":"Block","src":"1991:136:5","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":430,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":425,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":420,"src":"2005:5:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":428,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2022:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":427,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2014:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":426,"name":"address","nodeType":"ElementaryTypeName","src":"2014:7:5","typeDescriptions":{}}},"id":429,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2014:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2005:19:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":439,"nodeType":"IfStatement","src":"2001:87:5","trueBody":{"id":438,"nodeType":"Block","src":"2026:62:5","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":434,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2074:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":433,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2066:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":432,"name":"address","nodeType":"ElementaryTypeName","src":"2066:7:5","typeDescriptions":{}}},"id":435,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2066:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":431,"name":"ERC721InvalidOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":227,"src":"2047:18:5","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":436,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2047:30:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":437,"nodeType":"RevertStatement","src":"2040:37:5"}]}},{"expression":{"baseExpression":{"id":440,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":359,"src":"2104:9:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":442,"indexExpression":{"id":441,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":420,"src":"2114:5:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2104:16:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":424,"id":443,"nodeType":"Return","src":"2097:23:5"}]},"documentation":{"id":418,"nodeType":"StructuredDocumentation","src":"1866:48:5","text":" @dev See {IERC721-balanceOf}."},"functionSelector":"70a08231","id":445,"implemented":true,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"1928:9:5","nodeType":"FunctionDefinition","parameters":{"id":421,"nodeType":"ParameterList","parameters":[{"constant":false,"id":420,"mutability":"mutable","name":"owner","nameLocation":"1946:5:5","nodeType":"VariableDeclaration","scope":445,"src":"1938:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":419,"name":"address","nodeType":"ElementaryTypeName","src":"1938:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1937:15:5"},"returnParameters":{"id":424,"nodeType":"ParameterList","parameters":[{"constant":false,"id":423,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":445,"src":"1982:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":422,"name":"uint256","nodeType":"ElementaryTypeName","src":"1982:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1981:9:5"},"scope":1273,"src":"1919:208:5","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1323],"body":{"id":457,"nodeType":"Block","src":"2256:46:5","statements":[{"expression":{"arguments":[{"id":454,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":448,"src":"2287:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":453,"name":"_requireOwned","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1272,"src":"2273:13:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":455,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2273:22:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":452,"id":456,"nodeType":"Return","src":"2266:29:5"}]},"documentation":{"id":446,"nodeType":"StructuredDocumentation","src":"2133:46:5","text":" @dev See {IERC721-ownerOf}."},"functionSelector":"6352211e","id":458,"implemented":true,"kind":"function","modifiers":[],"name":"ownerOf","nameLocation":"2193:7:5","nodeType":"FunctionDefinition","parameters":{"id":449,"nodeType":"ParameterList","parameters":[{"constant":false,"id":448,"mutability":"mutable","name":"tokenId","nameLocation":"2209:7:5","nodeType":"VariableDeclaration","scope":458,"src":"2201:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":447,"name":"uint256","nodeType":"ElementaryTypeName","src":"2201:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2200:17:5"},"returnParameters":{"id":452,"nodeType":"ParameterList","parameters":[{"constant":false,"id":451,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":458,"src":"2247:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":450,"name":"address","nodeType":"ElementaryTypeName","src":"2247:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2246:9:5"},"scope":1273,"src":"2184:118:5","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1547],"body":{"id":466,"nodeType":"Block","src":"2424:29:5","statements":[{"expression":{"id":464,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":349,"src":"2441:5:5","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":463,"id":465,"nodeType":"Return","src":"2434:12:5"}]},"documentation":{"id":459,"nodeType":"StructuredDocumentation","src":"2308:51:5","text":" @dev See {IERC721Metadata-name}."},"functionSelector":"06fdde03","id":467,"implemented":true,"kind":"function","modifiers":[],"name":"name","nameLocation":"2373:4:5","nodeType":"FunctionDefinition","parameters":{"id":460,"nodeType":"ParameterList","parameters":[],"src":"2377:2:5"},"returnParameters":{"id":463,"nodeType":"ParameterList","parameters":[{"constant":false,"id":462,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":467,"src":"2409:13:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":461,"name":"string","nodeType":"ElementaryTypeName","src":"2409:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2408:15:5"},"scope":1273,"src":"2364:89:5","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1553],"body":{"id":475,"nodeType":"Block","src":"2579:31:5","statements":[{"expression":{"id":473,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":351,"src":"2596:7:5","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":472,"id":474,"nodeType":"Return","src":"2589:14:5"}]},"documentation":{"id":468,"nodeType":"StructuredDocumentation","src":"2459:53:5","text":" @dev See {IERC721Metadata-symbol}."},"functionSelector":"95d89b41","id":476,"implemented":true,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"2526:6:5","nodeType":"FunctionDefinition","parameters":{"id":469,"nodeType":"ParameterList","parameters":[],"src":"2532:2:5"},"returnParameters":{"id":472,"nodeType":"ParameterList","parameters":[{"constant":false,"id":471,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":476,"src":"2564:13:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":470,"name":"string","nodeType":"ElementaryTypeName","src":"2564:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2563:15:5"},"scope":1273,"src":"2517:93:5","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1561],"body":{"id":511,"nodeType":"Block","src":"2755:176:5","statements":[{"expression":{"arguments":[{"id":485,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":479,"src":"2779:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":484,"name":"_requireOwned","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1272,"src":"2765:13:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":486,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2765:22:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":487,"nodeType":"ExpressionStatement","src":"2765:22:5"},{"assignments":[489],"declarations":[{"constant":false,"id":489,"mutability":"mutable","name":"baseURI","nameLocation":"2812:7:5","nodeType":"VariableDeclaration","scope":511,"src":"2798:21:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":488,"name":"string","nodeType":"ElementaryTypeName","src":"2798:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":492,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":490,"name":"_baseURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":521,"src":"2822:8:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_string_memory_ptr_$","typeString":"function () view returns (string memory)"}},"id":491,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2822:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"2798:34:5"},{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":499,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":495,"name":"baseURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":489,"src":"2855:7:5","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":494,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2849:5:5","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":493,"name":"bytes","nodeType":"ElementaryTypeName","src":"2849:5:5","typeDescriptions":{}}},"id":496,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2849:14:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":497,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2864:6:5","memberName":"length","nodeType":"MemberAccess","src":"2849:21:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":498,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2873:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2849:25:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"","id":508,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2922:2:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"id":509,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"2849:75:5","trueExpression":{"arguments":[{"id":503,"name":"baseURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":489,"src":"2891:7:5","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":504,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":479,"src":"2900:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":505,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2908:8:5","memberName":"toString","nodeType":"MemberAccess","referencedDeclaration":1858,"src":"2900:16:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$attached_to$_t_uint256_$","typeString":"function (uint256) pure returns (string memory)"}},"id":506,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2900:18:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":501,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2877:6:5","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":500,"name":"string","nodeType":"ElementaryTypeName","src":"2877:6:5","typeDescriptions":{}}},"id":502,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2884:6:5","memberName":"concat","nodeType":"MemberAccess","src":"2877:13:5","typeDescriptions":{"typeIdentifier":"t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$","typeString":"function () pure returns (string memory)"}},"id":507,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2877:42:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":483,"id":510,"nodeType":"Return","src":"2842:82:5"}]},"documentation":{"id":477,"nodeType":"StructuredDocumentation","src":"2616:55:5","text":" @dev See {IERC721Metadata-tokenURI}."},"functionSelector":"c87b56dd","id":512,"implemented":true,"kind":"function","modifiers":[],"name":"tokenURI","nameLocation":"2685:8:5","nodeType":"FunctionDefinition","parameters":{"id":480,"nodeType":"ParameterList","parameters":[{"constant":false,"id":479,"mutability":"mutable","name":"tokenId","nameLocation":"2702:7:5","nodeType":"VariableDeclaration","scope":512,"src":"2694:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":478,"name":"uint256","nodeType":"ElementaryTypeName","src":"2694:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2693:17:5"},"returnParameters":{"id":483,"nodeType":"ParameterList","parameters":[{"constant":false,"id":482,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":512,"src":"2740:13:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":481,"name":"string","nodeType":"ElementaryTypeName","src":"2740:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2739:15:5"},"scope":1273,"src":"2676:255:5","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":520,"nodeType":"Block","src":"3239:26:5","statements":[{"expression":{"hexValue":"","id":518,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3256:2:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"functionReturnParameters":517,"id":519,"nodeType":"Return","src":"3249:9:5"}]},"documentation":{"id":513,"nodeType":"StructuredDocumentation","src":"2937:231:5","text":" @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n by default, can be overridden in child contracts."},"id":521,"implemented":true,"kind":"function","modifiers":[],"name":"_baseURI","nameLocation":"3182:8:5","nodeType":"FunctionDefinition","parameters":{"id":514,"nodeType":"ParameterList","parameters":[],"src":"3190:2:5"},"returnParameters":{"id":517,"nodeType":"ParameterList","parameters":[{"constant":false,"id":516,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":521,"src":"3224:13:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":515,"name":"string","nodeType":"ElementaryTypeName","src":"3224:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3223:15:5"},"scope":1273,"src":"3173:92:5","stateMutability":"view","virtual":true,"visibility":"internal"},{"baseFunctions":[1363],"body":{"id":536,"nodeType":"Block","src":"3383:52:5","statements":[{"expression":{"arguments":[{"id":530,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":524,"src":"3402:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":531,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":526,"src":"3406:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[],"expression":{"argumentTypes":[],"id":532,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1651,"src":"3415:10:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":533,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3415:12:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":529,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[1140,1206],"referencedDeclaration":1140,"src":"3393:8:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$__$","typeString":"function (address,uint256,address)"}},"id":534,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3393:35:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":535,"nodeType":"ExpressionStatement","src":"3393:35:5"}]},"documentation":{"id":522,"nodeType":"StructuredDocumentation","src":"3271:46:5","text":" @dev See {IERC721-approve}."},"functionSelector":"095ea7b3","id":537,"implemented":true,"kind":"function","modifiers":[],"name":"approve","nameLocation":"3331:7:5","nodeType":"FunctionDefinition","parameters":{"id":527,"nodeType":"ParameterList","parameters":[{"constant":false,"id":524,"mutability":"mutable","name":"to","nameLocation":"3347:2:5","nodeType":"VariableDeclaration","scope":537,"src":"3339:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":523,"name":"address","nodeType":"ElementaryTypeName","src":"3339:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":526,"mutability":"mutable","name":"tokenId","nameLocation":"3359:7:5","nodeType":"VariableDeclaration","scope":537,"src":"3351:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":525,"name":"uint256","nodeType":"ElementaryTypeName","src":"3351:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3338:29:5"},"returnParameters":{"id":528,"nodeType":"ParameterList","parameters":[],"src":"3383:0:5"},"scope":1273,"src":"3322:113:5","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1379],"body":{"id":553,"nodeType":"Block","src":"3572:78:5","statements":[{"expression":{"arguments":[{"id":546,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":540,"src":"3596:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":545,"name":"_requireOwned","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1272,"src":"3582:13:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":547,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3582:22:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":548,"nodeType":"ExpressionStatement","src":"3582:22:5"},{"expression":{"arguments":[{"id":550,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":540,"src":"3635:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":549,"name":"_getApproved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":707,"src":"3622:12:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":551,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3622:21:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":544,"id":552,"nodeType":"Return","src":"3615:28:5"}]},"documentation":{"id":538,"nodeType":"StructuredDocumentation","src":"3441:50:5","text":" @dev See {IERC721-getApproved}."},"functionSelector":"081812fc","id":554,"implemented":true,"kind":"function","modifiers":[],"name":"getApproved","nameLocation":"3505:11:5","nodeType":"FunctionDefinition","parameters":{"id":541,"nodeType":"ParameterList","parameters":[{"constant":false,"id":540,"mutability":"mutable","name":"tokenId","nameLocation":"3525:7:5","nodeType":"VariableDeclaration","scope":554,"src":"3517:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":539,"name":"uint256","nodeType":"ElementaryTypeName","src":"3517:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3516:17:5"},"returnParameters":{"id":544,"nodeType":"ParameterList","parameters":[{"constant":false,"id":543,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":554,"src":"3563:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":542,"name":"address","nodeType":"ElementaryTypeName","src":"3563:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3562:9:5"},"scope":1273,"src":"3496:154:5","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1371],"body":{"id":569,"nodeType":"Block","src":"3792:69:5","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":563,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1651,"src":"3821:10:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":564,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3821:12:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":565,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":557,"src":"3835:8:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":566,"name":"approved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":559,"src":"3845:8:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":562,"name":"_setApprovalForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1243,"src":"3802:18:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$","typeString":"function (address,address,bool)"}},"id":567,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3802:52:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":568,"nodeType":"ExpressionStatement","src":"3802:52:5"}]},"documentation":{"id":555,"nodeType":"StructuredDocumentation","src":"3656:56:5","text":" @dev See {IERC721-setApprovalForAll}."},"functionSelector":"a22cb465","id":570,"implemented":true,"kind":"function","modifiers":[],"name":"setApprovalForAll","nameLocation":"3726:17:5","nodeType":"FunctionDefinition","parameters":{"id":560,"nodeType":"ParameterList","parameters":[{"constant":false,"id":557,"mutability":"mutable","name":"operator","nameLocation":"3752:8:5","nodeType":"VariableDeclaration","scope":570,"src":"3744:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":556,"name":"address","nodeType":"ElementaryTypeName","src":"3744:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":559,"mutability":"mutable","name":"approved","nameLocation":"3767:8:5","nodeType":"VariableDeclaration","scope":570,"src":"3762:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":558,"name":"bool","nodeType":"ElementaryTypeName","src":"3762:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3743:33:5"},"returnParameters":{"id":561,"nodeType":"ParameterList","parameters":[],"src":"3792:0:5"},"scope":1273,"src":"3717:144:5","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1389],"body":{"id":586,"nodeType":"Block","src":"4021:59:5","statements":[{"expression":{"baseExpression":{"baseExpression":{"id":580,"name":"_operatorApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":369,"src":"4038:18:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"}},"id":582,"indexExpression":{"id":581,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":573,"src":"4057:5:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4038:25:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":584,"indexExpression":{"id":583,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":575,"src":"4064:8:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4038:35:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":579,"id":585,"nodeType":"Return","src":"4031:42:5"}]},"documentation":{"id":571,"nodeType":"StructuredDocumentation","src":"3867:55:5","text":" @dev See {IERC721-isApprovedForAll}."},"functionSelector":"e985e9c5","id":587,"implemented":true,"kind":"function","modifiers":[],"name":"isApprovedForAll","nameLocation":"3936:16:5","nodeType":"FunctionDefinition","parameters":{"id":576,"nodeType":"ParameterList","parameters":[{"constant":false,"id":573,"mutability":"mutable","name":"owner","nameLocation":"3961:5:5","nodeType":"VariableDeclaration","scope":587,"src":"3953:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":572,"name":"address","nodeType":"ElementaryTypeName","src":"3953:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":575,"mutability":"mutable","name":"operator","nameLocation":"3976:8:5","nodeType":"VariableDeclaration","scope":587,"src":"3968:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":574,"name":"address","nodeType":"ElementaryTypeName","src":"3968:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3952:33:5"},"returnParameters":{"id":579,"nodeType":"ParameterList","parameters":[{"constant":false,"id":578,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":587,"src":"4015:4:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":577,"name":"bool","nodeType":"ElementaryTypeName","src":"4015:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4014:6:5"},"scope":1273,"src":"3927:153:5","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1355],"body":{"id":632,"nodeType":"Block","src":"4222:498:5","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":602,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":597,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":592,"src":"4236:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":600,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4250:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":599,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4242:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":598,"name":"address","nodeType":"ElementaryTypeName","src":"4242:7:5","typeDescriptions":{}}},"id":601,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4242:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4236:16:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":611,"nodeType":"IfStatement","src":"4232:87:5","trueBody":{"id":610,"nodeType":"Block","src":"4254:65:5","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":606,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4305:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":605,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4297:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":604,"name":"address","nodeType":"ElementaryTypeName","src":"4297:7:5","typeDescriptions":{}}},"id":607,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4297:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":603,"name":"ERC721InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":251,"src":"4275:21:5","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":608,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4275:33:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":609,"nodeType":"RevertStatement","src":"4268:40:5"}]}},{"assignments":[613],"declarations":[{"constant":false,"id":613,"mutability":"mutable","name":"previousOwner","nameLocation":"4545:13:5","nodeType":"VariableDeclaration","scope":632,"src":"4537:21:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":612,"name":"address","nodeType":"ElementaryTypeName","src":"4537:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":620,"initialValue":{"arguments":[{"id":615,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":592,"src":"4569:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":616,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":594,"src":"4573:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[],"expression":{"argumentTypes":[],"id":617,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1651,"src":"4582:10:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":618,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4582:12:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":614,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":886,"src":"4561:7:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$","typeString":"function (address,uint256,address) returns (address)"}},"id":619,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4561:34:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"4537:58:5"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":623,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":621,"name":"previousOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":613,"src":"4609:13:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":622,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":590,"src":"4626:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4609:21:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":631,"nodeType":"IfStatement","src":"4605:109:5","trueBody":{"id":630,"nodeType":"Block","src":"4632:82:5","statements":[{"errorCall":{"arguments":[{"id":625,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":590,"src":"4674:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":626,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":594,"src":"4680:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":627,"name":"previousOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":613,"src":"4689:13:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":624,"name":"ERC721IncorrectOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":241,"src":"4653:20:5","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$_t_address_$returns$_t_error_$","typeString":"function (address,uint256,address) pure returns (error)"}},"id":628,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4653:50:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":629,"nodeType":"RevertStatement","src":"4646:57:5"}]}}]},"documentation":{"id":588,"nodeType":"StructuredDocumentation","src":"4086:51:5","text":" @dev See {IERC721-transferFrom}."},"functionSelector":"23b872dd","id":633,"implemented":true,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"4151:12:5","nodeType":"FunctionDefinition","parameters":{"id":595,"nodeType":"ParameterList","parameters":[{"constant":false,"id":590,"mutability":"mutable","name":"from","nameLocation":"4172:4:5","nodeType":"VariableDeclaration","scope":633,"src":"4164:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":589,"name":"address","nodeType":"ElementaryTypeName","src":"4164:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":592,"mutability":"mutable","name":"to","nameLocation":"4186:2:5","nodeType":"VariableDeclaration","scope":633,"src":"4178:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":591,"name":"address","nodeType":"ElementaryTypeName","src":"4178:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":594,"mutability":"mutable","name":"tokenId","nameLocation":"4198:7:5","nodeType":"VariableDeclaration","scope":633,"src":"4190:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":593,"name":"uint256","nodeType":"ElementaryTypeName","src":"4190:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4163:43:5"},"returnParameters":{"id":596,"nodeType":"ParameterList","parameters":[],"src":"4222:0:5"},"scope":1273,"src":"4142:578:5","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1345],"body":{"id":650,"nodeType":"Block","src":"4862:56:5","statements":[{"expression":{"arguments":[{"id":644,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":636,"src":"4889:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":645,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":638,"src":"4895:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":646,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":640,"src":"4899:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"","id":647,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4908:2:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":643,"name":"safeTransferFrom","nodeType":"Identifier","overloadedDeclarations":[651,681],"referencedDeclaration":681,"src":"4872:16:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256,bytes memory)"}},"id":648,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4872:39:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":649,"nodeType":"ExpressionStatement","src":"4872:39:5"}]},"documentation":{"id":634,"nodeType":"StructuredDocumentation","src":"4726:55:5","text":" @dev See {IERC721-safeTransferFrom}."},"functionSelector":"42842e0e","id":651,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"4795:16:5","nodeType":"FunctionDefinition","parameters":{"id":641,"nodeType":"ParameterList","parameters":[{"constant":false,"id":636,"mutability":"mutable","name":"from","nameLocation":"4820:4:5","nodeType":"VariableDeclaration","scope":651,"src":"4812:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":635,"name":"address","nodeType":"ElementaryTypeName","src":"4812:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":638,"mutability":"mutable","name":"to","nameLocation":"4834:2:5","nodeType":"VariableDeclaration","scope":651,"src":"4826:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":637,"name":"address","nodeType":"ElementaryTypeName","src":"4826:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":640,"mutability":"mutable","name":"tokenId","nameLocation":"4846:7:5","nodeType":"VariableDeclaration","scope":651,"src":"4838:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":639,"name":"uint256","nodeType":"ElementaryTypeName","src":"4838:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4811:43:5"},"returnParameters":{"id":642,"nodeType":"ParameterList","parameters":[],"src":"4862:0:5"},"scope":1273,"src":"4786:132:5","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[1335],"body":{"id":680,"nodeType":"Block","src":"5087:130:5","statements":[{"expression":{"arguments":[{"id":664,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":654,"src":"5110:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":665,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":656,"src":"5116:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":666,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":658,"src":"5120:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":663,"name":"transferFrom","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":633,"src":"5097:12:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":667,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5097:31:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":668,"nodeType":"ExpressionStatement","src":"5097:31:5"},{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":672,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1651,"src":"5172:10:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":673,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5172:12:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":674,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":654,"src":"5186:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":675,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":656,"src":"5192:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":676,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":658,"src":"5196:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":677,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":660,"src":"5205:4:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":669,"name":"ERC721Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1639,"src":"5138:11:5","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC721Utils_$1639_$","typeString":"type(library ERC721Utils)"}},"id":671,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5150:21:5","memberName":"checkOnERC721Received","nodeType":"MemberAccess","referencedDeclaration":1638,"src":"5138:33:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,address,uint256,bytes memory)"}},"id":678,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5138:72:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":679,"nodeType":"ExpressionStatement","src":"5138:72:5"}]},"documentation":{"id":652,"nodeType":"StructuredDocumentation","src":"4924:55:5","text":" @dev See {IERC721-safeTransferFrom}."},"functionSelector":"b88d4fde","id":681,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"4993:16:5","nodeType":"FunctionDefinition","parameters":{"id":661,"nodeType":"ParameterList","parameters":[{"constant":false,"id":654,"mutability":"mutable","name":"from","nameLocation":"5018:4:5","nodeType":"VariableDeclaration","scope":681,"src":"5010:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":653,"name":"address","nodeType":"ElementaryTypeName","src":"5010:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":656,"mutability":"mutable","name":"to","nameLocation":"5032:2:5","nodeType":"VariableDeclaration","scope":681,"src":"5024:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":655,"name":"address","nodeType":"ElementaryTypeName","src":"5024:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":658,"mutability":"mutable","name":"tokenId","nameLocation":"5044:7:5","nodeType":"VariableDeclaration","scope":681,"src":"5036:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":657,"name":"uint256","nodeType":"ElementaryTypeName","src":"5036:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":660,"mutability":"mutable","name":"data","nameLocation":"5066:4:5","nodeType":"VariableDeclaration","scope":681,"src":"5053:17:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":659,"name":"bytes","nodeType":"ElementaryTypeName","src":"5053:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5009:62:5"},"returnParameters":{"id":662,"nodeType":"ParameterList","parameters":[],"src":"5087:0:5"},"scope":1273,"src":"4984:233:5","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":693,"nodeType":"Block","src":"5807:40:5","statements":[{"expression":{"baseExpression":{"id":689,"name":"_owners","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":355,"src":"5824:7:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":691,"indexExpression":{"id":690,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":684,"src":"5832:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5824:16:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":688,"id":692,"nodeType":"Return","src":"5817:23:5"}]},"documentation":{"id":682,"nodeType":"StructuredDocumentation","src":"5223:504:5","text":" @dev Returns the owner of the `tokenId`. Does NOT revert if token doesn't exist\n IMPORTANT: Any overrides to this function that add ownership of tokens not tracked by the\n core ERC-721 logic MUST be matched with the use of {_increaseBalance} to keep balances\n consistent with ownership. The invariant to preserve is that for any address `a` the value returned by\n `balanceOf(a)` must be equal to the number of tokens such that `_ownerOf(tokenId)` is `a`."},"id":694,"implemented":true,"kind":"function","modifiers":[],"name":"_ownerOf","nameLocation":"5741:8:5","nodeType":"FunctionDefinition","parameters":{"id":685,"nodeType":"ParameterList","parameters":[{"constant":false,"id":684,"mutability":"mutable","name":"tokenId","nameLocation":"5758:7:5","nodeType":"VariableDeclaration","scope":694,"src":"5750:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":683,"name":"uint256","nodeType":"ElementaryTypeName","src":"5750:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5749:17:5"},"returnParameters":{"id":688,"nodeType":"ParameterList","parameters":[{"constant":false,"id":687,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":694,"src":"5798:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":686,"name":"address","nodeType":"ElementaryTypeName","src":"5798:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5797:9:5"},"scope":1273,"src":"5732:115:5","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":706,"nodeType":"Block","src":"6042:48:5","statements":[{"expression":{"baseExpression":{"id":702,"name":"_tokenApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":363,"src":"6059:15:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":704,"indexExpression":{"id":703,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":697,"src":"6075:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6059:24:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":701,"id":705,"nodeType":"Return","src":"6052:31:5"}]},"documentation":{"id":695,"nodeType":"StructuredDocumentation","src":"5853:105:5","text":" @dev Returns the approved address for `tokenId`. Returns 0 if `tokenId` is not minted."},"id":707,"implemented":true,"kind":"function","modifiers":[],"name":"_getApproved","nameLocation":"5972:12:5","nodeType":"FunctionDefinition","parameters":{"id":698,"nodeType":"ParameterList","parameters":[{"constant":false,"id":697,"mutability":"mutable","name":"tokenId","nameLocation":"5993:7:5","nodeType":"VariableDeclaration","scope":707,"src":"5985:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":696,"name":"uint256","nodeType":"ElementaryTypeName","src":"5985:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5984:17:5"},"returnParameters":{"id":701,"nodeType":"ParameterList","parameters":[{"constant":false,"id":700,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":707,"src":"6033:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":699,"name":"address","nodeType":"ElementaryTypeName","src":"6033:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6032:9:5"},"scope":1273,"src":"5963:127:5","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":742,"nodeType":"Block","src":"6510:163:5","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":740,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":724,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":719,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":712,"src":"6539:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":722,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6558:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":721,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6550:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":720,"name":"address","nodeType":"ElementaryTypeName","src":"6550:7:5","typeDescriptions":{}}},"id":723,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6550:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6539:21:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":738,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":732,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":727,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":725,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":710,"src":"6577:5:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":726,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":712,"src":"6586:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6577:16:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":729,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":710,"src":"6614:5:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":730,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":712,"src":"6621:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":728,"name":"isApprovedForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":587,"src":"6597:16:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) view returns (bool)"}},"id":731,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6597:32:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6577:52:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":737,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":734,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":714,"src":"6646:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":733,"name":"_getApproved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":707,"src":"6633:12:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":735,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6633:21:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":736,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":712,"src":"6658:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6633:32:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6577:88:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":739,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6576:90:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6539:127:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":718,"id":741,"nodeType":"Return","src":"6520:146:5"}]},"documentation":{"id":708,"nodeType":"StructuredDocumentation","src":"6096:300:5","text":" @dev Returns whether `spender` is allowed to manage `owner`'s tokens, or `tokenId` in\n particular (ignoring whether it is owned by `owner`).\n WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n assumption."},"id":743,"implemented":true,"kind":"function","modifiers":[],"name":"_isAuthorized","nameLocation":"6410:13:5","nodeType":"FunctionDefinition","parameters":{"id":715,"nodeType":"ParameterList","parameters":[{"constant":false,"id":710,"mutability":"mutable","name":"owner","nameLocation":"6432:5:5","nodeType":"VariableDeclaration","scope":743,"src":"6424:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":709,"name":"address","nodeType":"ElementaryTypeName","src":"6424:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":712,"mutability":"mutable","name":"spender","nameLocation":"6447:7:5","nodeType":"VariableDeclaration","scope":743,"src":"6439:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":711,"name":"address","nodeType":"ElementaryTypeName","src":"6439:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":714,"mutability":"mutable","name":"tokenId","nameLocation":"6464:7:5","nodeType":"VariableDeclaration","scope":743,"src":"6456:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":713,"name":"uint256","nodeType":"ElementaryTypeName","src":"6456:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6423:49:5"},"returnParameters":{"id":718,"nodeType":"ParameterList","parameters":[{"constant":false,"id":717,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":743,"src":"6504:4:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":716,"name":"bool","nodeType":"ElementaryTypeName","src":"6504:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6503:6:5"},"scope":1273,"src":"6401:272:5","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":779,"nodeType":"Block","src":"7202:271:5","statements":[{"condition":{"id":758,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"7216:39:5","subExpression":{"arguments":[{"id":754,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":746,"src":"7231:5:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":755,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":748,"src":"7238:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":756,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":750,"src":"7247:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":753,"name":"_isAuthorized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":743,"src":"7217:13:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) view returns (bool)"}},"id":757,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7217:38:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":778,"nodeType":"IfStatement","src":"7212:255:5","trueBody":{"id":777,"nodeType":"Block","src":"7257:210:5","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":764,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":759,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":746,"src":"7275:5:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":762,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7292:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":761,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7284:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":760,"name":"address","nodeType":"ElementaryTypeName","src":"7284:7:5","typeDescriptions":{}}},"id":763,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7284:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7275:19:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":775,"nodeType":"Block","src":"7373:84:5","statements":[{"errorCall":{"arguments":[{"id":771,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":748,"src":"7425:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":772,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":750,"src":"7434:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":770,"name":"ERC721InsufficientApproval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":258,"src":"7398:26:5","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$returns$_t_error_$","typeString":"function (address,uint256) pure returns (error)"}},"id":773,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7398:44:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":774,"nodeType":"RevertStatement","src":"7391:51:5"}]},"id":776,"nodeType":"IfStatement","src":"7271:186:5","trueBody":{"id":769,"nodeType":"Block","src":"7296:71:5","statements":[{"errorCall":{"arguments":[{"id":766,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":750,"src":"7344:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":765,"name":"ERC721NonexistentToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":232,"src":"7321:22:5","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$_t_error_$","typeString":"function (uint256) pure returns (error)"}},"id":767,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7321:31:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":768,"nodeType":"RevertStatement","src":"7314:38:5"}]}}]}}]},"documentation":{"id":744,"nodeType":"StructuredDocumentation","src":"6679:421:5","text":" @dev Checks if `spender` can operate on `tokenId`, assuming the provided `owner` is the actual owner.\n Reverts if:\n - `spender` does not have approval from `owner` for `tokenId`.\n - `spender` does not have approval to manage all of `owner`'s assets.\n WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n assumption."},"id":780,"implemented":true,"kind":"function","modifiers":[],"name":"_checkAuthorized","nameLocation":"7114:16:5","nodeType":"FunctionDefinition","parameters":{"id":751,"nodeType":"ParameterList","parameters":[{"constant":false,"id":746,"mutability":"mutable","name":"owner","nameLocation":"7139:5:5","nodeType":"VariableDeclaration","scope":780,"src":"7131:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":745,"name":"address","nodeType":"ElementaryTypeName","src":"7131:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":748,"mutability":"mutable","name":"spender","nameLocation":"7154:7:5","nodeType":"VariableDeclaration","scope":780,"src":"7146:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":747,"name":"address","nodeType":"ElementaryTypeName","src":"7146:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":750,"mutability":"mutable","name":"tokenId","nameLocation":"7171:7:5","nodeType":"VariableDeclaration","scope":780,"src":"7163:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":749,"name":"uint256","nodeType":"ElementaryTypeName","src":"7163:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7130:49:5"},"returnParameters":{"id":752,"nodeType":"ParameterList","parameters":[],"src":"7202:0:5"},"scope":1273,"src":"7105:368:5","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":795,"nodeType":"Block","src":"8190:78:5","statements":[{"id":794,"nodeType":"UncheckedBlock","src":"8200:62:5","statements":[{"expression":{"id":792,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":788,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":359,"src":"8224:9:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":790,"indexExpression":{"id":789,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":783,"src":"8234:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"8224:18:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":791,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":785,"src":"8246:5:5","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"src":"8224:27:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":793,"nodeType":"ExpressionStatement","src":"8224:27:5"}]}]},"documentation":{"id":781,"nodeType":"StructuredDocumentation","src":"7479:631:5","text":" @dev Unsafe write access to the balances, used by extensions that \"mint\" tokens using an {ownerOf} override.\n NOTE: the value is limited to type(uint128).max. This protect against _balance overflow. It is unrealistic that\n a uint256 would ever overflow from increments when these increments are bounded to uint128 values.\n WARNING: Increasing an account's balance using this function tends to be paired with an override of the\n {_ownerOf} function to resolve the ownership of the corresponding tokens so that balances and ownership\n remain consistent with one another."},"id":796,"implemented":true,"kind":"function","modifiers":[],"name":"_increaseBalance","nameLocation":"8124:16:5","nodeType":"FunctionDefinition","parameters":{"id":786,"nodeType":"ParameterList","parameters":[{"constant":false,"id":783,"mutability":"mutable","name":"account","nameLocation":"8149:7:5","nodeType":"VariableDeclaration","scope":796,"src":"8141:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":782,"name":"address","nodeType":"ElementaryTypeName","src":"8141:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":785,"mutability":"mutable","name":"value","nameLocation":"8166:5:5","nodeType":"VariableDeclaration","scope":796,"src":"8158:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":784,"name":"uint128","nodeType":"ElementaryTypeName","src":"8158:7:5","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"}],"src":"8140:32:5"},"returnParameters":{"id":787,"nodeType":"ParameterList","parameters":[],"src":"8190:0:5"},"scope":1273,"src":"8115:153:5","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":885,"nodeType":"Block","src":"8956:700:5","statements":[{"assignments":[809],"declarations":[{"constant":false,"id":809,"mutability":"mutable","name":"from","nameLocation":"8974:4:5","nodeType":"VariableDeclaration","scope":885,"src":"8966:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":808,"name":"address","nodeType":"ElementaryTypeName","src":"8966:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":813,"initialValue":{"arguments":[{"id":811,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":801,"src":"8990:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":810,"name":"_ownerOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":694,"src":"8981:8:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":812,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8981:17:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"8966:32:5"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":819,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":814,"name":"auth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":803,"src":"9058:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":817,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9074:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":816,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9066:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":815,"name":"address","nodeType":"ElementaryTypeName","src":"9066:7:5","typeDescriptions":{}}},"id":818,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9066:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9058:18:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":827,"nodeType":"IfStatement","src":"9054:86:5","trueBody":{"id":826,"nodeType":"Block","src":"9078:62:5","statements":[{"expression":{"arguments":[{"id":821,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":809,"src":"9109:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":822,"name":"auth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":803,"src":"9115:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":823,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":801,"src":"9121:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":820,"name":"_checkAuthorized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":780,"src":"9092:16:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256) view"}},"id":824,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9092:37:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":825,"nodeType":"ExpressionStatement","src":"9092:37:5"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":833,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":828,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":809,"src":"9184:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":831,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9200:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":830,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9192:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":829,"name":"address","nodeType":"ElementaryTypeName","src":"9192:7:5","typeDescriptions":{}}},"id":832,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9192:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9184:18:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":855,"nodeType":"IfStatement","src":"9180:256:5","trueBody":{"id":854,"nodeType":"Block","src":"9204:232:5","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":837,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9317:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":836,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9309:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":835,"name":"address","nodeType":"ElementaryTypeName","src":"9309:7:5","typeDescriptions":{}}},"id":838,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9309:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":839,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":801,"src":"9321:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"hexValue":"30","id":842,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9338:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":841,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9330:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":840,"name":"address","nodeType":"ElementaryTypeName","src":"9330:7:5","typeDescriptions":{}}},"id":843,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9330:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"66616c7365","id":844,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"9342:5:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":834,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[1140,1206],"referencedDeclaration":1206,"src":"9300:8:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_bool_$returns$__$","typeString":"function (address,uint256,address,bool)"}},"id":845,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9300:48:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":846,"nodeType":"ExpressionStatement","src":"9300:48:5"},{"id":853,"nodeType":"UncheckedBlock","src":"9363:63:5","statements":[{"expression":{"id":851,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":847,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":359,"src":"9391:9:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":849,"indexExpression":{"id":848,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":809,"src":"9401:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9391:15:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"31","id":850,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9410:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9391:20:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":852,"nodeType":"ExpressionStatement","src":"9391:20:5"}]}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":861,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":856,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":799,"src":"9450:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":859,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9464:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":858,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9456:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":857,"name":"address","nodeType":"ElementaryTypeName","src":"9456:7:5","typeDescriptions":{}}},"id":860,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9456:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9450:16:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":870,"nodeType":"IfStatement","src":"9446:107:5","trueBody":{"id":869,"nodeType":"Block","src":"9468:85:5","statements":[{"id":868,"nodeType":"UncheckedBlock","src":"9482:61:5","statements":[{"expression":{"id":866,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":862,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":359,"src":"9510:9:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":864,"indexExpression":{"id":863,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":799,"src":"9520:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9510:13:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":865,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9527:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9510:18:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":867,"nodeType":"ExpressionStatement","src":"9510:18:5"}]}]}},{"expression":{"id":875,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":871,"name":"_owners","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":355,"src":"9563:7:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":873,"indexExpression":{"id":872,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":801,"src":"9571:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9563:16:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":874,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":799,"src":"9582:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9563:21:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":876,"nodeType":"ExpressionStatement","src":"9563:21:5"},{"eventCall":{"arguments":[{"id":878,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":809,"src":"9609:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":879,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":799,"src":"9615:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":880,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":801,"src":"9619:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":877,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1289,"src":"9600:8:5","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":881,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9600:27:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":882,"nodeType":"EmitStatement","src":"9595:32:5"},{"expression":{"id":883,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":809,"src":"9645:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":807,"id":884,"nodeType":"Return","src":"9638:11:5"}]},"documentation":{"id":797,"nodeType":"StructuredDocumentation","src":"8274:582:5","text":" @dev Transfers `tokenId` from its current owner to `to`, or alternatively mints (or burns) if the current owner\n (or `to`) is the zero address. Returns the owner of the `tokenId` before the update.\n The `auth` argument is optional. If the value passed is non 0, then this function will check that\n `auth` is either the owner of the token, or approved to operate on the token (by the owner).\n Emits a {Transfer} event.\n NOTE: If overriding this function in a way that tracks balances, see also {_increaseBalance}."},"id":886,"implemented":true,"kind":"function","modifiers":[],"name":"_update","nameLocation":"8870:7:5","nodeType":"FunctionDefinition","parameters":{"id":804,"nodeType":"ParameterList","parameters":[{"constant":false,"id":799,"mutability":"mutable","name":"to","nameLocation":"8886:2:5","nodeType":"VariableDeclaration","scope":886,"src":"8878:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":798,"name":"address","nodeType":"ElementaryTypeName","src":"8878:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":801,"mutability":"mutable","name":"tokenId","nameLocation":"8898:7:5","nodeType":"VariableDeclaration","scope":886,"src":"8890:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":800,"name":"uint256","nodeType":"ElementaryTypeName","src":"8890:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":803,"mutability":"mutable","name":"auth","nameLocation":"8915:4:5","nodeType":"VariableDeclaration","scope":886,"src":"8907:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":802,"name":"address","nodeType":"ElementaryTypeName","src":"8907:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8877:43:5"},"returnParameters":{"id":807,"nodeType":"ParameterList","parameters":[{"constant":false,"id":806,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":886,"src":"8947:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":805,"name":"address","nodeType":"ElementaryTypeName","src":"8947:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8946:9:5"},"scope":1273,"src":"8861:795:5","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":935,"nodeType":"Block","src":"10031:274:5","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":899,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":894,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":889,"src":"10045:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":897,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10059:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":896,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10051:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":895,"name":"address","nodeType":"ElementaryTypeName","src":"10051:7:5","typeDescriptions":{}}},"id":898,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10051:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10045:16:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":908,"nodeType":"IfStatement","src":"10041:87:5","trueBody":{"id":907,"nodeType":"Block","src":"10063:65:5","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":903,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10114:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":902,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10106:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":901,"name":"address","nodeType":"ElementaryTypeName","src":"10106:7:5","typeDescriptions":{}}},"id":904,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10106:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":900,"name":"ERC721InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":251,"src":"10084:21:5","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":905,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10084:33:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":906,"nodeType":"RevertStatement","src":"10077:40:5"}]}},{"assignments":[910],"declarations":[{"constant":false,"id":910,"mutability":"mutable","name":"previousOwner","nameLocation":"10145:13:5","nodeType":"VariableDeclaration","scope":935,"src":"10137:21:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":909,"name":"address","nodeType":"ElementaryTypeName","src":"10137:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":919,"initialValue":{"arguments":[{"id":912,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":889,"src":"10169:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":913,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":891,"src":"10173:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"hexValue":"30","id":916,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10190:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":915,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10182:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":914,"name":"address","nodeType":"ElementaryTypeName","src":"10182:7:5","typeDescriptions":{}}},"id":917,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10182:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":911,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":886,"src":"10161:7:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$","typeString":"function (address,uint256,address) returns (address)"}},"id":918,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10161:32:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"10137:56:5"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":925,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":920,"name":"previousOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":910,"src":"10207:13:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":923,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10232:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":922,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10224:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":921,"name":"address","nodeType":"ElementaryTypeName","src":"10224:7:5","typeDescriptions":{}}},"id":924,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10224:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10207:27:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":934,"nodeType":"IfStatement","src":"10203:96:5","trueBody":{"id":933,"nodeType":"Block","src":"10236:63:5","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":929,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10285:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":928,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10277:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":927,"name":"address","nodeType":"ElementaryTypeName","src":"10277:7:5","typeDescriptions":{}}},"id":930,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10277:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":926,"name":"ERC721InvalidSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":246,"src":"10257:19:5","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":931,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10257:31:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":932,"nodeType":"RevertStatement","src":"10250:38:5"}]}}]},"documentation":{"id":887,"nodeType":"StructuredDocumentation","src":"9662:311:5","text":" @dev Mints `tokenId` and transfers it to `to`.\n WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\n Requirements:\n - `tokenId` must not exist.\n - `to` cannot be the zero address.\n Emits a {Transfer} event."},"id":936,"implemented":true,"kind":"function","modifiers":[],"name":"_mint","nameLocation":"9987:5:5","nodeType":"FunctionDefinition","parameters":{"id":892,"nodeType":"ParameterList","parameters":[{"constant":false,"id":889,"mutability":"mutable","name":"to","nameLocation":"10001:2:5","nodeType":"VariableDeclaration","scope":936,"src":"9993:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":888,"name":"address","nodeType":"ElementaryTypeName","src":"9993:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":891,"mutability":"mutable","name":"tokenId","nameLocation":"10013:7:5","nodeType":"VariableDeclaration","scope":936,"src":"10005:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":890,"name":"uint256","nodeType":"ElementaryTypeName","src":"10005:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9992:29:5"},"returnParameters":{"id":893,"nodeType":"ParameterList","parameters":[],"src":"10031:0:5"},"scope":1273,"src":"9978:327:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":950,"nodeType":"Block","src":"10713:43:5","statements":[{"expression":{"arguments":[{"id":945,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":939,"src":"10733:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":946,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":941,"src":"10737:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"","id":947,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10746:2:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":944,"name":"_safeMint","nodeType":"Identifier","overloadedDeclarations":[951,981],"referencedDeclaration":981,"src":"10723:9:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,uint256,bytes memory)"}},"id":948,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10723:26:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":949,"nodeType":"ExpressionStatement","src":"10723:26:5"}]},"documentation":{"id":937,"nodeType":"StructuredDocumentation","src":"10311:340:5","text":" @dev Mints `tokenId`, transfers it to `to` and checks for `to` acceptance.\n Requirements:\n - `tokenId` must not exist.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."},"id":951,"implemented":true,"kind":"function","modifiers":[],"name":"_safeMint","nameLocation":"10665:9:5","nodeType":"FunctionDefinition","parameters":{"id":942,"nodeType":"ParameterList","parameters":[{"constant":false,"id":939,"mutability":"mutable","name":"to","nameLocation":"10683:2:5","nodeType":"VariableDeclaration","scope":951,"src":"10675:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":938,"name":"address","nodeType":"ElementaryTypeName","src":"10675:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":941,"mutability":"mutable","name":"tokenId","nameLocation":"10695:7:5","nodeType":"VariableDeclaration","scope":951,"src":"10687:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":940,"name":"uint256","nodeType":"ElementaryTypeName","src":"10687:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10674:29:5"},"returnParameters":{"id":943,"nodeType":"ParameterList","parameters":[],"src":"10713:0:5"},"scope":1273,"src":"10656:100:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":980,"nodeType":"Block","src":"11061:123:5","statements":[{"expression":{"arguments":[{"id":962,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":954,"src":"11077:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":963,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":956,"src":"11081:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":961,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":936,"src":"11071:5:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":964,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11071:18:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":965,"nodeType":"ExpressionStatement","src":"11071:18:5"},{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":969,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1651,"src":"11133:10:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":970,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11133:12:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":973,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11155:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":972,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11147:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":971,"name":"address","nodeType":"ElementaryTypeName","src":"11147:7:5","typeDescriptions":{}}},"id":974,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11147:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":975,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":954,"src":"11159:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":976,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":956,"src":"11163:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":977,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":958,"src":"11172:4:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":966,"name":"ERC721Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1639,"src":"11099:11:5","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC721Utils_$1639_$","typeString":"type(library ERC721Utils)"}},"id":968,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11111:21:5","memberName":"checkOnERC721Received","nodeType":"MemberAccess","referencedDeclaration":1638,"src":"11099:33:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,address,uint256,bytes memory)"}},"id":978,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11099:78:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":979,"nodeType":"ExpressionStatement","src":"11099:78:5"}]},"documentation":{"id":952,"nodeType":"StructuredDocumentation","src":"10762:210:5","text":" @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\n forwarded in {IERC721Receiver-onERC721Received} to contract recipients."},"id":981,"implemented":true,"kind":"function","modifiers":[],"name":"_safeMint","nameLocation":"10986:9:5","nodeType":"FunctionDefinition","parameters":{"id":959,"nodeType":"ParameterList","parameters":[{"constant":false,"id":954,"mutability":"mutable","name":"to","nameLocation":"11004:2:5","nodeType":"VariableDeclaration","scope":981,"src":"10996:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":953,"name":"address","nodeType":"ElementaryTypeName","src":"10996:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":956,"mutability":"mutable","name":"tokenId","nameLocation":"11016:7:5","nodeType":"VariableDeclaration","scope":981,"src":"11008:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":955,"name":"uint256","nodeType":"ElementaryTypeName","src":"11008:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":958,"mutability":"mutable","name":"data","nameLocation":"11038:4:5","nodeType":"VariableDeclaration","scope":981,"src":"11025:17:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":957,"name":"bytes","nodeType":"ElementaryTypeName","src":"11025:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"10995:48:5"},"returnParameters":{"id":960,"nodeType":"ParameterList","parameters":[],"src":"11061:0:5"},"scope":1273,"src":"10977:207:5","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1013,"nodeType":"Block","src":"11551:186:5","statements":[{"assignments":[988],"declarations":[{"constant":false,"id":988,"mutability":"mutable","name":"previousOwner","nameLocation":"11569:13:5","nodeType":"VariableDeclaration","scope":1013,"src":"11561:21:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":987,"name":"address","nodeType":"ElementaryTypeName","src":"11561:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1000,"initialValue":{"arguments":[{"arguments":[{"hexValue":"30","id":992,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11601:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":991,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11593:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":990,"name":"address","nodeType":"ElementaryTypeName","src":"11593:7:5","typeDescriptions":{}}},"id":993,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11593:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":994,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":984,"src":"11605:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"hexValue":"30","id":997,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11622:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":996,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11614:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":995,"name":"address","nodeType":"ElementaryTypeName","src":"11614:7:5","typeDescriptions":{}}},"id":998,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11614:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":989,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":886,"src":"11585:7:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$","typeString":"function (address,uint256,address) returns (address)"}},"id":999,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11585:40:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"11561:64:5"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1006,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1001,"name":"previousOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":988,"src":"11639:13:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1004,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11664:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1003,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11656:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1002,"name":"address","nodeType":"ElementaryTypeName","src":"11656:7:5","typeDescriptions":{}}},"id":1005,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11656:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"11639:27:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1012,"nodeType":"IfStatement","src":"11635:96:5","trueBody":{"id":1011,"nodeType":"Block","src":"11668:63:5","statements":[{"errorCall":{"arguments":[{"id":1008,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":984,"src":"11712:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1007,"name":"ERC721NonexistentToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":232,"src":"11689:22:5","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$_t_error_$","typeString":"function (uint256) pure returns (error)"}},"id":1009,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11689:31:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1010,"nodeType":"RevertStatement","src":"11682:38:5"}]}}]},"documentation":{"id":982,"nodeType":"StructuredDocumentation","src":"11190:315:5","text":" @dev Destroys `tokenId`.\n The approval is cleared when the token is burned.\n This is an internal function that does not check if the sender is authorized to operate on the token.\n Requirements:\n - `tokenId` must exist.\n Emits a {Transfer} event."},"id":1014,"implemented":true,"kind":"function","modifiers":[],"name":"_burn","nameLocation":"11519:5:5","nodeType":"FunctionDefinition","parameters":{"id":985,"nodeType":"ParameterList","parameters":[{"constant":false,"id":984,"mutability":"mutable","name":"tokenId","nameLocation":"11533:7:5","nodeType":"VariableDeclaration","scope":1014,"src":"11525:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":983,"name":"uint256","nodeType":"ElementaryTypeName","src":"11525:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11524:17:5"},"returnParameters":{"id":986,"nodeType":"ParameterList","parameters":[],"src":"11551:0:5"},"scope":1273,"src":"11510:227:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1073,"nodeType":"Block","src":"12132:389:5","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1029,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1024,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1019,"src":"12146:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1027,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12160:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1026,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12152:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1025,"name":"address","nodeType":"ElementaryTypeName","src":"12152:7:5","typeDescriptions":{}}},"id":1028,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12152:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"12146:16:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1038,"nodeType":"IfStatement","src":"12142:87:5","trueBody":{"id":1037,"nodeType":"Block","src":"12164:65:5","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1033,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12215:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1032,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12207:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1031,"name":"address","nodeType":"ElementaryTypeName","src":"12207:7:5","typeDescriptions":{}}},"id":1034,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12207:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1030,"name":"ERC721InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":251,"src":"12185:21:5","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":1035,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12185:33:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1036,"nodeType":"RevertStatement","src":"12178:40:5"}]}},{"assignments":[1040],"declarations":[{"constant":false,"id":1040,"mutability":"mutable","name":"previousOwner","nameLocation":"12246:13:5","nodeType":"VariableDeclaration","scope":1073,"src":"12238:21:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1039,"name":"address","nodeType":"ElementaryTypeName","src":"12238:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1049,"initialValue":{"arguments":[{"id":1042,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1019,"src":"12270:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1043,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1021,"src":"12274:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"hexValue":"30","id":1046,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12291:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1045,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12283:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1044,"name":"address","nodeType":"ElementaryTypeName","src":"12283:7:5","typeDescriptions":{}}},"id":1047,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12283:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1041,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":886,"src":"12262:7:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$","typeString":"function (address,uint256,address) returns (address)"}},"id":1048,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12262:32:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"12238:56:5"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1055,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1050,"name":"previousOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1040,"src":"12308:13:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1053,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12333:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1052,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12325:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1051,"name":"address","nodeType":"ElementaryTypeName","src":"12325:7:5","typeDescriptions":{}}},"id":1054,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12325:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"12308:27:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1063,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1061,"name":"previousOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1040,"src":"12410:13:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":1062,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1017,"src":"12427:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"12410:21:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1071,"nodeType":"IfStatement","src":"12406:109:5","trueBody":{"id":1070,"nodeType":"Block","src":"12433:82:5","statements":[{"errorCall":{"arguments":[{"id":1065,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1017,"src":"12475:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1066,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1021,"src":"12481:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1067,"name":"previousOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1040,"src":"12490:13:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1064,"name":"ERC721IncorrectOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":241,"src":"12454:20:5","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$_t_address_$returns$_t_error_$","typeString":"function (address,uint256,address) pure returns (error)"}},"id":1068,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12454:50:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1069,"nodeType":"RevertStatement","src":"12447:57:5"}]}},"id":1072,"nodeType":"IfStatement","src":"12304:211:5","trueBody":{"id":1060,"nodeType":"Block","src":"12337:63:5","statements":[{"errorCall":{"arguments":[{"id":1057,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1021,"src":"12381:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1056,"name":"ERC721NonexistentToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":232,"src":"12358:22:5","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$_t_error_$","typeString":"function (uint256) pure returns (error)"}},"id":1058,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12358:31:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1059,"nodeType":"RevertStatement","src":"12351:38:5"}]}}]},"documentation":{"id":1015,"nodeType":"StructuredDocumentation","src":"11743:313:5","text":" @dev Transfers `tokenId` from `from` to `to`.\n  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\n Requirements:\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n Emits a {Transfer} event."},"id":1074,"implemented":true,"kind":"function","modifiers":[],"name":"_transfer","nameLocation":"12070:9:5","nodeType":"FunctionDefinition","parameters":{"id":1022,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1017,"mutability":"mutable","name":"from","nameLocation":"12088:4:5","nodeType":"VariableDeclaration","scope":1074,"src":"12080:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1016,"name":"address","nodeType":"ElementaryTypeName","src":"12080:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1019,"mutability":"mutable","name":"to","nameLocation":"12102:2:5","nodeType":"VariableDeclaration","scope":1074,"src":"12094:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1018,"name":"address","nodeType":"ElementaryTypeName","src":"12094:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1021,"mutability":"mutable","name":"tokenId","nameLocation":"12114:7:5","nodeType":"VariableDeclaration","scope":1074,"src":"12106:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1020,"name":"uint256","nodeType":"ElementaryTypeName","src":"12106:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12079:43:5"},"returnParameters":{"id":1023,"nodeType":"ParameterList","parameters":[],"src":"12132:0:5"},"scope":1273,"src":"12061:460:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1091,"nodeType":"Block","src":"13530:53:5","statements":[{"expression":{"arguments":[{"id":1085,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1077,"src":"13554:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1086,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1079,"src":"13560:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1087,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1081,"src":"13564:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"","id":1088,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13573:2:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":1084,"name":"_safeTransfer","nodeType":"Identifier","overloadedDeclarations":[1092,1122],"referencedDeclaration":1122,"src":"13540:13:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256,bytes memory)"}},"id":1089,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13540:36:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1090,"nodeType":"ExpressionStatement","src":"13540:36:5"}]},"documentation":{"id":1075,"nodeType":"StructuredDocumentation","src":"12527:923:5","text":" @dev Safely transfers `tokenId` token from `from` to `to`, checking that contract recipients\n are aware of the ERC-721 standard to prevent tokens from being forever locked.\n `data` is additional data, it has no specified format and it is sent in call to `to`.\n This internal function is like {safeTransferFrom} in the sense that it invokes\n {IERC721Receiver-onERC721Received} on the receiver, and can be used to e.g.\n implement alternative mechanisms to perform token transfer, such as signature-based.\n Requirements:\n - `tokenId` token must exist and be owned by `from`.\n - `to` cannot be the zero address.\n - `from` cannot be the zero address.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."},"id":1092,"implemented":true,"kind":"function","modifiers":[],"name":"_safeTransfer","nameLocation":"13464:13:5","nodeType":"FunctionDefinition","parameters":{"id":1082,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1077,"mutability":"mutable","name":"from","nameLocation":"13486:4:5","nodeType":"VariableDeclaration","scope":1092,"src":"13478:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1076,"name":"address","nodeType":"ElementaryTypeName","src":"13478:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1079,"mutability":"mutable","name":"to","nameLocation":"13500:2:5","nodeType":"VariableDeclaration","scope":1092,"src":"13492:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1078,"name":"address","nodeType":"ElementaryTypeName","src":"13492:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1081,"mutability":"mutable","name":"tokenId","nameLocation":"13512:7:5","nodeType":"VariableDeclaration","scope":1092,"src":"13504:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1080,"name":"uint256","nodeType":"ElementaryTypeName","src":"13504:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13477:43:5"},"returnParameters":{"id":1083,"nodeType":"ParameterList","parameters":[],"src":"13530:0:5"},"scope":1273,"src":"13455:128:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1121,"nodeType":"Block","src":"13922:127:5","statements":[{"expression":{"arguments":[{"id":1105,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1095,"src":"13942:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1106,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1097,"src":"13948:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1107,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1099,"src":"13952:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1104,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1074,"src":"13932:9:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1108,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13932:28:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1109,"nodeType":"ExpressionStatement","src":"13932:28:5"},{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":1113,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1651,"src":"14004:10:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1114,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14004:12:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1115,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1095,"src":"14018:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1116,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1097,"src":"14024:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1117,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1099,"src":"14028:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1118,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1101,"src":"14037:4:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1110,"name":"ERC721Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1639,"src":"13970:11:5","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC721Utils_$1639_$","typeString":"type(library ERC721Utils)"}},"id":1112,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13982:21:5","memberName":"checkOnERC721Received","nodeType":"MemberAccess","referencedDeclaration":1638,"src":"13970:33:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,address,uint256,bytes memory)"}},"id":1119,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13970:72:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1120,"nodeType":"ExpressionStatement","src":"13970:72:5"}]},"documentation":{"id":1093,"nodeType":"StructuredDocumentation","src":"13589:226:5","text":" @dev Same as {xref-ERC721-_safeTransfer-address-address-uint256-}[`_safeTransfer`], with an additional `data` parameter which is\n forwarded in {IERC721Receiver-onERC721Received} to contract recipients."},"id":1122,"implemented":true,"kind":"function","modifiers":[],"name":"_safeTransfer","nameLocation":"13829:13:5","nodeType":"FunctionDefinition","parameters":{"id":1102,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1095,"mutability":"mutable","name":"from","nameLocation":"13851:4:5","nodeType":"VariableDeclaration","scope":1122,"src":"13843:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1094,"name":"address","nodeType":"ElementaryTypeName","src":"13843:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1097,"mutability":"mutable","name":"to","nameLocation":"13865:2:5","nodeType":"VariableDeclaration","scope":1122,"src":"13857:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1096,"name":"address","nodeType":"ElementaryTypeName","src":"13857:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1099,"mutability":"mutable","name":"tokenId","nameLocation":"13877:7:5","nodeType":"VariableDeclaration","scope":1122,"src":"13869:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1098,"name":"uint256","nodeType":"ElementaryTypeName","src":"13869:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1101,"mutability":"mutable","name":"data","nameLocation":"13899:4:5","nodeType":"VariableDeclaration","scope":1122,"src":"13886:17:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1100,"name":"bytes","nodeType":"ElementaryTypeName","src":"13886:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"13842:62:5"},"returnParameters":{"id":1103,"nodeType":"ParameterList","parameters":[],"src":"13922:0:5"},"scope":1273,"src":"13820:229:5","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1139,"nodeType":"Block","src":"14562:50:5","statements":[{"expression":{"arguments":[{"id":1133,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1125,"src":"14581:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1134,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1127,"src":"14585:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1135,"name":"auth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1129,"src":"14594:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"74727565","id":1136,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"14600:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":1132,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[1140,1206],"referencedDeclaration":1206,"src":"14572:8:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_bool_$returns$__$","typeString":"function (address,uint256,address,bool)"}},"id":1137,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14572:33:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1138,"nodeType":"ExpressionStatement","src":"14572:33:5"}]},"documentation":{"id":1123,"nodeType":"StructuredDocumentation","src":"14055:432:5","text":" @dev Approve `to` to operate on `tokenId`\n The `auth` argument is optional. If the value passed is non 0, then this function will check that `auth` is\n either the owner of the token, or approved to operate on all tokens held by this owner.\n Emits an {Approval} event.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."},"id":1140,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nameLocation":"14501:8:5","nodeType":"FunctionDefinition","parameters":{"id":1130,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1125,"mutability":"mutable","name":"to","nameLocation":"14518:2:5","nodeType":"VariableDeclaration","scope":1140,"src":"14510:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1124,"name":"address","nodeType":"ElementaryTypeName","src":"14510:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1127,"mutability":"mutable","name":"tokenId","nameLocation":"14530:7:5","nodeType":"VariableDeclaration","scope":1140,"src":"14522:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1126,"name":"uint256","nodeType":"ElementaryTypeName","src":"14522:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1129,"mutability":"mutable","name":"auth","nameLocation":"14547:4:5","nodeType":"VariableDeclaration","scope":1140,"src":"14539:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1128,"name":"address","nodeType":"ElementaryTypeName","src":"14539:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"14509:43:5"},"returnParameters":{"id":1131,"nodeType":"ParameterList","parameters":[],"src":"14562:0:5"},"scope":1273,"src":"14492:120:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1205,"nodeType":"Block","src":"14888:568:5","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1159,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1152,"name":"emitEvent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1149,"src":"14954:9:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1158,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1153,"name":"auth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1147,"src":"14967:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1156,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14983:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1155,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14975:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1154,"name":"address","nodeType":"ElementaryTypeName","src":"14975:7:5","typeDescriptions":{}}},"id":1157,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14975:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"14967:18:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"14954:31:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1198,"nodeType":"IfStatement","src":"14950:460:5","trueBody":{"id":1197,"nodeType":"Block","src":"14987:423:5","statements":[{"assignments":[1161],"declarations":[{"constant":false,"id":1161,"mutability":"mutable","name":"owner","nameLocation":"15009:5:5","nodeType":"VariableDeclaration","scope":1197,"src":"15001:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1160,"name":"address","nodeType":"ElementaryTypeName","src":"15001:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1165,"initialValue":{"arguments":[{"id":1163,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1145,"src":"15031:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1162,"name":"_requireOwned","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1272,"src":"15017:13:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":1164,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15017:22:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"15001:38:5"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1181,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1175,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1171,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1166,"name":"auth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1147,"src":"15167:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1169,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15183:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1168,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15175:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1167,"name":"address","nodeType":"ElementaryTypeName","src":"15175:7:5","typeDescriptions":{}}},"id":1170,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15175:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"15167:18:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1174,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1172,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1161,"src":"15189:5:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":1173,"name":"auth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1147,"src":"15198:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"15189:13:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"15167:35:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"id":1180,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"15206:30:5","subExpression":{"arguments":[{"id":1177,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1161,"src":"15224:5:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1178,"name":"auth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1147,"src":"15231:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1176,"name":"isApprovedForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":587,"src":"15207:16:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) view returns (bool)"}},"id":1179,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15207:29:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"15167:69:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1187,"nodeType":"IfStatement","src":"15163:142:5","trueBody":{"id":1186,"nodeType":"Block","src":"15238:67:5","statements":[{"errorCall":{"arguments":[{"id":1183,"name":"auth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1147,"src":"15285:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1182,"name":"ERC721InvalidApprover","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":263,"src":"15263:21:5","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":1184,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15263:27:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1185,"nodeType":"RevertStatement","src":"15256:34:5"}]}},{"condition":{"id":1188,"name":"emitEvent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1149,"src":"15323:9:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1196,"nodeType":"IfStatement","src":"15319:81:5","trueBody":{"id":1195,"nodeType":"Block","src":"15334:66:5","statements":[{"eventCall":{"arguments":[{"id":1190,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1161,"src":"15366:5:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1191,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1143,"src":"15373:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1192,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1145,"src":"15377:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1189,"name":"Approval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1298,"src":"15357:8:5","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1193,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15357:28:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1194,"nodeType":"EmitStatement","src":"15352:33:5"}]}}]}},{"expression":{"id":1203,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1199,"name":"_tokenApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":363,"src":"15420:15:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":1201,"indexExpression":{"id":1200,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1145,"src":"15436:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"15420:24:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1202,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1143,"src":"15447:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"15420:29:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1204,"nodeType":"ExpressionStatement","src":"15420:29:5"}]},"documentation":{"id":1141,"nodeType":"StructuredDocumentation","src":"14618:171:5","text":" @dev Variant of `_approve` with an optional flag to enable or disable the {Approval} event. The event is not\n emitted in the context of transfers."},"id":1206,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nameLocation":"14803:8:5","nodeType":"FunctionDefinition","parameters":{"id":1150,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1143,"mutability":"mutable","name":"to","nameLocation":"14820:2:5","nodeType":"VariableDeclaration","scope":1206,"src":"14812:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1142,"name":"address","nodeType":"ElementaryTypeName","src":"14812:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1145,"mutability":"mutable","name":"tokenId","nameLocation":"14832:7:5","nodeType":"VariableDeclaration","scope":1206,"src":"14824:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1144,"name":"uint256","nodeType":"ElementaryTypeName","src":"14824:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1147,"mutability":"mutable","name":"auth","nameLocation":"14849:4:5","nodeType":"VariableDeclaration","scope":1206,"src":"14841:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1146,"name":"address","nodeType":"ElementaryTypeName","src":"14841:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1149,"mutability":"mutable","name":"emitEvent","nameLocation":"14860:9:5","nodeType":"VariableDeclaration","scope":1206,"src":"14855:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1148,"name":"bool","nodeType":"ElementaryTypeName","src":"14855:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"14811:59:5"},"returnParameters":{"id":1151,"nodeType":"ParameterList","parameters":[],"src":"14888:0:5"},"scope":1273,"src":"14794:662:5","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1242,"nodeType":"Block","src":"15758:219:5","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1221,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1216,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1211,"src":"15772:8:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1219,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15792:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1218,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15784:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1217,"name":"address","nodeType":"ElementaryTypeName","src":"15784:7:5","typeDescriptions":{}}},"id":1220,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15784:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"15772:22:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1227,"nodeType":"IfStatement","src":"15768:91:5","trueBody":{"id":1226,"nodeType":"Block","src":"15796:63:5","statements":[{"errorCall":{"arguments":[{"id":1223,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1211,"src":"15839:8:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1222,"name":"ERC721InvalidOperator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":268,"src":"15817:21:5","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":1224,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15817:31:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1225,"nodeType":"RevertStatement","src":"15810:38:5"}]}},{"expression":{"id":1234,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":1228,"name":"_operatorApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":369,"src":"15868:18:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"}},"id":1231,"indexExpression":{"id":1229,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1209,"src":"15887:5:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"15868:25:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":1232,"indexExpression":{"id":1230,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1211,"src":"15894:8:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"15868:35:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1233,"name":"approved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1213,"src":"15906:8:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"15868:46:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1235,"nodeType":"ExpressionStatement","src":"15868:46:5"},{"eventCall":{"arguments":[{"id":1237,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1209,"src":"15944:5:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1238,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1211,"src":"15951:8:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1239,"name":"approved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1213,"src":"15961:8:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":1236,"name":"ApprovalForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1307,"src":"15929:14:5","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$","typeString":"function (address,address,bool)"}},"id":1240,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15929:41:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1241,"nodeType":"EmitStatement","src":"15924:46:5"}]},"documentation":{"id":1207,"nodeType":"StructuredDocumentation","src":"15462:198:5","text":" @dev Approve `operator` to operate on all of `owner` tokens\n Requirements:\n - operator can't be the address zero.\n Emits an {ApprovalForAll} event."},"id":1243,"implemented":true,"kind":"function","modifiers":[],"name":"_setApprovalForAll","nameLocation":"15674:18:5","nodeType":"FunctionDefinition","parameters":{"id":1214,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1209,"mutability":"mutable","name":"owner","nameLocation":"15701:5:5","nodeType":"VariableDeclaration","scope":1243,"src":"15693:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1208,"name":"address","nodeType":"ElementaryTypeName","src":"15693:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1211,"mutability":"mutable","name":"operator","nameLocation":"15716:8:5","nodeType":"VariableDeclaration","scope":1243,"src":"15708:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1210,"name":"address","nodeType":"ElementaryTypeName","src":"15708:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1213,"mutability":"mutable","name":"approved","nameLocation":"15731:8:5","nodeType":"VariableDeclaration","scope":1243,"src":"15726:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1212,"name":"bool","nodeType":"ElementaryTypeName","src":"15726:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"15692:48:5"},"returnParameters":{"id":1215,"nodeType":"ParameterList","parameters":[],"src":"15758:0:5"},"scope":1273,"src":"15665:312:5","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1271,"nodeType":"Block","src":"16284:169:5","statements":[{"assignments":[1252],"declarations":[{"constant":false,"id":1252,"mutability":"mutable","name":"owner","nameLocation":"16302:5:5","nodeType":"VariableDeclaration","scope":1271,"src":"16294:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1251,"name":"address","nodeType":"ElementaryTypeName","src":"16294:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1256,"initialValue":{"arguments":[{"id":1254,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1246,"src":"16319:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1253,"name":"_ownerOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":694,"src":"16310:8:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":1255,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16310:17:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"16294:33:5"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1262,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1257,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1252,"src":"16341:5:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1260,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16358:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1259,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16350:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1258,"name":"address","nodeType":"ElementaryTypeName","src":"16350:7:5","typeDescriptions":{}}},"id":1261,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16350:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"16341:19:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1268,"nodeType":"IfStatement","src":"16337:88:5","trueBody":{"id":1267,"nodeType":"Block","src":"16362:63:5","statements":[{"errorCall":{"arguments":[{"id":1264,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1246,"src":"16406:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1263,"name":"ERC721NonexistentToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":232,"src":"16383:22:5","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$_t_error_$","typeString":"function (uint256) pure returns (error)"}},"id":1265,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16383:31:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1266,"nodeType":"RevertStatement","src":"16376:38:5"}]}},{"expression":{"id":1269,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1252,"src":"16441:5:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1250,"id":1270,"nodeType":"Return","src":"16434:12:5"}]},"documentation":{"id":1244,"nodeType":"StructuredDocumentation","src":"15983:224:5","text":" @dev Reverts if the `tokenId` doesn't have a current owner (it hasn't been minted, or it has been burned).\n Returns the owner.\n Overrides to ownership logic should be done to {_ownerOf}."},"id":1272,"implemented":true,"kind":"function","modifiers":[],"name":"_requireOwned","nameLocation":"16221:13:5","nodeType":"FunctionDefinition","parameters":{"id":1247,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1246,"mutability":"mutable","name":"tokenId","nameLocation":"16243:7:5","nodeType":"VariableDeclaration","scope":1272,"src":"16235:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1245,"name":"uint256","nodeType":"ElementaryTypeName","src":"16235:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16234:17:5"},"returnParameters":{"id":1250,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1249,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1272,"src":"16275:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1248,"name":"address","nodeType":"ElementaryTypeName","src":"16275:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"16274:9:5"},"scope":1273,"src":"16212:241:5","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":1274,"src":"775:15680:5","usedErrors":[227,232,241,246,251,258,263,268],"usedEvents":[1289,1298,1307]}],"src":"107:16349:5"},"id":5},"@openzeppelin/contracts/token/ERC721/IERC721.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721.sol","exportedSymbols":{"IERC165":[2146],"IERC721":[1390]},"id":1391,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1275,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"108:24:6"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"../../utils/introspection/IERC165.sol","id":1277,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1391,"sourceUnit":2147,"src":"134:62:6","symbolAliases":[{"foreign":{"id":1276,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2146,"src":"142:7:6","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":1279,"name":"IERC165","nameLocations":["288:7:6"],"nodeType":"IdentifierPath","referencedDeclaration":2146,"src":"288:7:6"},"id":1280,"nodeType":"InheritanceSpecifier","src":"288:7:6"}],"canonicalName":"IERC721","contractDependencies":[],"contractKind":"interface","documentation":{"id":1278,"nodeType":"StructuredDocumentation","src":"198:68:6","text":" @dev Required interface of an ERC-721 compliant contract."},"fullyImplemented":false,"id":1390,"linearizedBaseContracts":[1390,2146],"name":"IERC721","nameLocation":"277:7:6","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":1281,"nodeType":"StructuredDocumentation","src":"302:88:6","text":" @dev Emitted when `tokenId` token is transferred from `from` to `to`."},"eventSelector":"ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef","id":1289,"name":"Transfer","nameLocation":"401:8:6","nodeType":"EventDefinition","parameters":{"id":1288,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1283,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"426:4:6","nodeType":"VariableDeclaration","scope":1289,"src":"410:20:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1282,"name":"address","nodeType":"ElementaryTypeName","src":"410:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1285,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"448:2:6","nodeType":"VariableDeclaration","scope":1289,"src":"432:18:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1284,"name":"address","nodeType":"ElementaryTypeName","src":"432:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1287,"indexed":true,"mutability":"mutable","name":"tokenId","nameLocation":"468:7:6","nodeType":"VariableDeclaration","scope":1289,"src":"452:23:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1286,"name":"uint256","nodeType":"ElementaryTypeName","src":"452:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"409:67:6"},"src":"395:82:6"},{"anonymous":false,"documentation":{"id":1290,"nodeType":"StructuredDocumentation","src":"483:94:6","text":" @dev Emitted when `owner` enables `approved` to manage the `tokenId` token."},"eventSelector":"8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925","id":1298,"name":"Approval","nameLocation":"588:8:6","nodeType":"EventDefinition","parameters":{"id":1297,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1292,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"613:5:6","nodeType":"VariableDeclaration","scope":1298,"src":"597:21:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1291,"name":"address","nodeType":"ElementaryTypeName","src":"597:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1294,"indexed":true,"mutability":"mutable","name":"approved","nameLocation":"636:8:6","nodeType":"VariableDeclaration","scope":1298,"src":"620:24:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1293,"name":"address","nodeType":"ElementaryTypeName","src":"620:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1296,"indexed":true,"mutability":"mutable","name":"tokenId","nameLocation":"662:7:6","nodeType":"VariableDeclaration","scope":1298,"src":"646:23:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1295,"name":"uint256","nodeType":"ElementaryTypeName","src":"646:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"596:74:6"},"src":"582:89:6"},{"anonymous":false,"documentation":{"id":1299,"nodeType":"StructuredDocumentation","src":"677:117:6","text":" @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."},"eventSelector":"17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31","id":1307,"name":"ApprovalForAll","nameLocation":"805:14:6","nodeType":"EventDefinition","parameters":{"id":1306,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1301,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"836:5:6","nodeType":"VariableDeclaration","scope":1307,"src":"820:21:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1300,"name":"address","nodeType":"ElementaryTypeName","src":"820:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1303,"indexed":true,"mutability":"mutable","name":"operator","nameLocation":"859:8:6","nodeType":"VariableDeclaration","scope":1307,"src":"843:24:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1302,"name":"address","nodeType":"ElementaryTypeName","src":"843:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1305,"indexed":false,"mutability":"mutable","name":"approved","nameLocation":"874:8:6","nodeType":"VariableDeclaration","scope":1307,"src":"869:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1304,"name":"bool","nodeType":"ElementaryTypeName","src":"869:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"819:64:6"},"src":"799:85:6"},{"documentation":{"id":1308,"nodeType":"StructuredDocumentation","src":"890:76:6","text":" @dev Returns the number of tokens in ``owner``'s account."},"functionSelector":"70a08231","id":1315,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"980:9:6","nodeType":"FunctionDefinition","parameters":{"id":1311,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1310,"mutability":"mutable","name":"owner","nameLocation":"998:5:6","nodeType":"VariableDeclaration","scope":1315,"src":"990:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1309,"name":"address","nodeType":"ElementaryTypeName","src":"990:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"989:15:6"},"returnParameters":{"id":1314,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1313,"mutability":"mutable","name":"balance","nameLocation":"1036:7:6","nodeType":"VariableDeclaration","scope":1315,"src":"1028:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1312,"name":"uint256","nodeType":"ElementaryTypeName","src":"1028:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1027:17:6"},"scope":1390,"src":"971:74:6","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1316,"nodeType":"StructuredDocumentation","src":"1051:131:6","text":" @dev Returns the owner of the `tokenId` token.\n Requirements:\n - `tokenId` must exist."},"functionSelector":"6352211e","id":1323,"implemented":false,"kind":"function","modifiers":[],"name":"ownerOf","nameLocation":"1196:7:6","nodeType":"FunctionDefinition","parameters":{"id":1319,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1318,"mutability":"mutable","name":"tokenId","nameLocation":"1212:7:6","nodeType":"VariableDeclaration","scope":1323,"src":"1204:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1317,"name":"uint256","nodeType":"ElementaryTypeName","src":"1204:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1203:17:6"},"returnParameters":{"id":1322,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1321,"mutability":"mutable","name":"owner","nameLocation":"1252:5:6","nodeType":"VariableDeclaration","scope":1323,"src":"1244:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1320,"name":"address","nodeType":"ElementaryTypeName","src":"1244:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1243:15:6"},"scope":1390,"src":"1187:72:6","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1324,"nodeType":"StructuredDocumentation","src":"1265:565:6","text":" @dev Safely transfers `tokenId` token from `from` to `to`.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n   a safe transfer.\n Emits a {Transfer} event."},"functionSelector":"b88d4fde","id":1335,"implemented":false,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"1844:16:6","nodeType":"FunctionDefinition","parameters":{"id":1333,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1326,"mutability":"mutable","name":"from","nameLocation":"1869:4:6","nodeType":"VariableDeclaration","scope":1335,"src":"1861:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1325,"name":"address","nodeType":"ElementaryTypeName","src":"1861:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1328,"mutability":"mutable","name":"to","nameLocation":"1883:2:6","nodeType":"VariableDeclaration","scope":1335,"src":"1875:10:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1327,"name":"address","nodeType":"ElementaryTypeName","src":"1875:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1330,"mutability":"mutable","name":"tokenId","nameLocation":"1895:7:6","nodeType":"VariableDeclaration","scope":1335,"src":"1887:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1329,"name":"uint256","nodeType":"ElementaryTypeName","src":"1887:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1332,"mutability":"mutable","name":"data","nameLocation":"1919:4:6","nodeType":"VariableDeclaration","scope":1335,"src":"1904:19:6","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1331,"name":"bytes","nodeType":"ElementaryTypeName","src":"1904:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1860:64:6"},"returnParameters":{"id":1334,"nodeType":"ParameterList","parameters":[],"src":"1933:0:6"},"scope":1390,"src":"1835:99:6","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1336,"nodeType":"StructuredDocumentation","src":"1940:706:6","text":" @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC-721 protocol to prevent tokens from being forever locked.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must have been allowed to move this token by either {approve} or\n   {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n   a safe transfer.\n Emits a {Transfer} event."},"functionSelector":"42842e0e","id":1345,"implemented":false,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"2660:16:6","nodeType":"FunctionDefinition","parameters":{"id":1343,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1338,"mutability":"mutable","name":"from","nameLocation":"2685:4:6","nodeType":"VariableDeclaration","scope":1345,"src":"2677:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1337,"name":"address","nodeType":"ElementaryTypeName","src":"2677:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1340,"mutability":"mutable","name":"to","nameLocation":"2699:2:6","nodeType":"VariableDeclaration","scope":1345,"src":"2691:10:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1339,"name":"address","nodeType":"ElementaryTypeName","src":"2691:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1342,"mutability":"mutable","name":"tokenId","nameLocation":"2711:7:6","nodeType":"VariableDeclaration","scope":1345,"src":"2703:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1341,"name":"uint256","nodeType":"ElementaryTypeName","src":"2703:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2676:43:6"},"returnParameters":{"id":1344,"nodeType":"ParameterList","parameters":[],"src":"2728:0:6"},"scope":1390,"src":"2651:78:6","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1346,"nodeType":"StructuredDocumentation","src":"2735:733:6","text":" @dev Transfers `tokenId` token from `from` to `to`.\n WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721\n or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n understand this adds an external call which potentially creates a reentrancy vulnerability.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n Emits a {Transfer} event."},"functionSelector":"23b872dd","id":1355,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"3482:12:6","nodeType":"FunctionDefinition","parameters":{"id":1353,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1348,"mutability":"mutable","name":"from","nameLocation":"3503:4:6","nodeType":"VariableDeclaration","scope":1355,"src":"3495:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1347,"name":"address","nodeType":"ElementaryTypeName","src":"3495:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1350,"mutability":"mutable","name":"to","nameLocation":"3517:2:6","nodeType":"VariableDeclaration","scope":1355,"src":"3509:10:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1349,"name":"address","nodeType":"ElementaryTypeName","src":"3509:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1352,"mutability":"mutable","name":"tokenId","nameLocation":"3529:7:6","nodeType":"VariableDeclaration","scope":1355,"src":"3521:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1351,"name":"uint256","nodeType":"ElementaryTypeName","src":"3521:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3494:43:6"},"returnParameters":{"id":1354,"nodeType":"ParameterList","parameters":[],"src":"3546:0:6"},"scope":1390,"src":"3473:74:6","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1356,"nodeType":"StructuredDocumentation","src":"3553:452:6","text":" @dev Gives permission to `to` to transfer `tokenId` token to another account.\n The approval is cleared when the token is transferred.\n Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n Requirements:\n - The caller must own the token or be an approved operator.\n - `tokenId` must exist.\n Emits an {Approval} event."},"functionSelector":"095ea7b3","id":1363,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"4019:7:6","nodeType":"FunctionDefinition","parameters":{"id":1361,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1358,"mutability":"mutable","name":"to","nameLocation":"4035:2:6","nodeType":"VariableDeclaration","scope":1363,"src":"4027:10:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1357,"name":"address","nodeType":"ElementaryTypeName","src":"4027:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1360,"mutability":"mutable","name":"tokenId","nameLocation":"4047:7:6","nodeType":"VariableDeclaration","scope":1363,"src":"4039:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1359,"name":"uint256","nodeType":"ElementaryTypeName","src":"4039:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4026:29:6"},"returnParameters":{"id":1362,"nodeType":"ParameterList","parameters":[],"src":"4064:0:6"},"scope":1390,"src":"4010:55:6","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1364,"nodeType":"StructuredDocumentation","src":"4071:315:6","text":" @dev Approve or remove `operator` as an operator for the caller.\n Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n Requirements:\n - The `operator` cannot be the address zero.\n Emits an {ApprovalForAll} event."},"functionSelector":"a22cb465","id":1371,"implemented":false,"kind":"function","modifiers":[],"name":"setApprovalForAll","nameLocation":"4400:17:6","nodeType":"FunctionDefinition","parameters":{"id":1369,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1366,"mutability":"mutable","name":"operator","nameLocation":"4426:8:6","nodeType":"VariableDeclaration","scope":1371,"src":"4418:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1365,"name":"address","nodeType":"ElementaryTypeName","src":"4418:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1368,"mutability":"mutable","name":"approved","nameLocation":"4441:8:6","nodeType":"VariableDeclaration","scope":1371,"src":"4436:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1367,"name":"bool","nodeType":"ElementaryTypeName","src":"4436:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4417:33:6"},"returnParameters":{"id":1370,"nodeType":"ParameterList","parameters":[],"src":"4459:0:6"},"scope":1390,"src":"4391:69:6","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1372,"nodeType":"StructuredDocumentation","src":"4466:139:6","text":" @dev Returns the account approved for `tokenId` token.\n Requirements:\n - `tokenId` must exist."},"functionSelector":"081812fc","id":1379,"implemented":false,"kind":"function","modifiers":[],"name":"getApproved","nameLocation":"4619:11:6","nodeType":"FunctionDefinition","parameters":{"id":1375,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1374,"mutability":"mutable","name":"tokenId","nameLocation":"4639:7:6","nodeType":"VariableDeclaration","scope":1379,"src":"4631:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1373,"name":"uint256","nodeType":"ElementaryTypeName","src":"4631:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4630:17:6"},"returnParameters":{"id":1378,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1377,"mutability":"mutable","name":"operator","nameLocation":"4679:8:6","nodeType":"VariableDeclaration","scope":1379,"src":"4671:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1376,"name":"address","nodeType":"ElementaryTypeName","src":"4671:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4670:18:6"},"scope":1390,"src":"4610:79:6","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1380,"nodeType":"StructuredDocumentation","src":"4695:138:6","text":" @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n See {setApprovalForAll}"},"functionSelector":"e985e9c5","id":1389,"implemented":false,"kind":"function","modifiers":[],"name":"isApprovedForAll","nameLocation":"4847:16:6","nodeType":"FunctionDefinition","parameters":{"id":1385,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1382,"mutability":"mutable","name":"owner","nameLocation":"4872:5:6","nodeType":"VariableDeclaration","scope":1389,"src":"4864:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1381,"name":"address","nodeType":"ElementaryTypeName","src":"4864:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1384,"mutability":"mutable","name":"operator","nameLocation":"4887:8:6","nodeType":"VariableDeclaration","scope":1389,"src":"4879:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1383,"name":"address","nodeType":"ElementaryTypeName","src":"4879:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4863:33:6"},"returnParameters":{"id":1388,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1387,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1389,"src":"4920:4:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1386,"name":"bool","nodeType":"ElementaryTypeName","src":"4920:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4919:6:6"},"scope":1390,"src":"4838:88:6","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1391,"src":"267:4661:6","usedErrors":[],"usedEvents":[1289,1298,1307]}],"src":"108:4821:6"},"id":6},"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol","exportedSymbols":{"IERC721Receiver":[1408]},"id":1409,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1392,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"116:24:7"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC721Receiver","contractDependencies":[],"contractKind":"interface","documentation":{"id":1393,"nodeType":"StructuredDocumentation","src":"142:154:7","text":" @title ERC-721 token receiver interface\n @dev Interface for any contract that wants to support safeTransfers\n from ERC-721 asset contracts."},"fullyImplemented":false,"id":1408,"linearizedBaseContracts":[1408],"name":"IERC721Receiver","nameLocation":"307:15:7","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1394,"nodeType":"StructuredDocumentation","src":"329:500:7","text":" @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n by `operator` from `from`, this function is called.\n It must return its Solidity selector to confirm the token transfer.\n If any other value is returned or the interface is not implemented by the recipient, the transfer will be\n reverted.\n The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`."},"functionSelector":"150b7a02","id":1407,"implemented":false,"kind":"function","modifiers":[],"name":"onERC721Received","nameLocation":"843:16:7","nodeType":"FunctionDefinition","parameters":{"id":1403,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1396,"mutability":"mutable","name":"operator","nameLocation":"877:8:7","nodeType":"VariableDeclaration","scope":1407,"src":"869:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1395,"name":"address","nodeType":"ElementaryTypeName","src":"869:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1398,"mutability":"mutable","name":"from","nameLocation":"903:4:7","nodeType":"VariableDeclaration","scope":1407,"src":"895:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1397,"name":"address","nodeType":"ElementaryTypeName","src":"895:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1400,"mutability":"mutable","name":"tokenId","nameLocation":"925:7:7","nodeType":"VariableDeclaration","scope":1407,"src":"917:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1399,"name":"uint256","nodeType":"ElementaryTypeName","src":"917:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1402,"mutability":"mutable","name":"data","nameLocation":"957:4:7","nodeType":"VariableDeclaration","scope":1407,"src":"942:19:7","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1401,"name":"bytes","nodeType":"ElementaryTypeName","src":"942:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"859:108:7"},"returnParameters":{"id":1406,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1405,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1407,"src":"986:6:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1404,"name":"bytes4","nodeType":"ElementaryTypeName","src":"986:6:7","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"985:8:7"},"scope":1408,"src":"834:160:7","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":1409,"src":"297:699:7","usedErrors":[],"usedEvents":[]}],"src":"116:881:7"},"id":7},"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol","exportedSymbols":{"ERC721":[1273],"ERC721URIStorage":[1534],"IERC165":[2146],"IERC4906":[175],"Strings":[2110]},"id":1535,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1410,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"128:24:8"},{"absolutePath":"@openzeppelin/contracts/token/ERC721/ERC721.sol","file":"../ERC721.sol","id":1412,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1535,"sourceUnit":1274,"src":"154:37:8","symbolAliases":[{"foreign":{"id":1411,"name":"ERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1273,"src":"162:6:8","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","file":"../../../utils/Strings.sol","id":1414,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1535,"sourceUnit":2111,"src":"192:51:8","symbolAliases":[{"foreign":{"id":1413,"name":"Strings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2110,"src":"200:7:8","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/IERC4906.sol","file":"../../../interfaces/IERC4906.sol","id":1416,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1535,"sourceUnit":176,"src":"244:58:8","symbolAliases":[{"foreign":{"id":1415,"name":"IERC4906","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":175,"src":"252:8:8","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/IERC165.sol","file":"../../../interfaces/IERC165.sol","id":1418,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1535,"sourceUnit":152,"src":"303:56:8","symbolAliases":[{"foreign":{"id":1417,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2146,"src":"311:7:8","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":1420,"name":"IERC4906","nameLocations":["470:8:8"],"nodeType":"IdentifierPath","referencedDeclaration":175,"src":"470:8:8"},"id":1421,"nodeType":"InheritanceSpecifier","src":"470:8:8"},{"baseName":{"id":1422,"name":"ERC721","nameLocations":["480:6:8"],"nodeType":"IdentifierPath","referencedDeclaration":1273,"src":"480:6:8"},"id":1423,"nodeType":"InheritanceSpecifier","src":"480:6:8"}],"canonicalName":"ERC721URIStorage","contractDependencies":[],"contractKind":"contract","documentation":{"id":1419,"nodeType":"StructuredDocumentation","src":"361:70:8","text":" @dev ERC-721 token with storage based token URI management."},"fullyImplemented":true,"id":1534,"linearizedBaseContracts":[1534,1273,269,1562,175,1390,2134,2146,1669],"name":"ERC721URIStorage","nameLocation":"450:16:8","nodeType":"ContractDefinition","nodes":[{"global":false,"id":1426,"libraryName":{"id":1424,"name":"Strings","nameLocations":["499:7:8"],"nodeType":"IdentifierPath","referencedDeclaration":2110,"src":"499:7:8"},"nodeType":"UsingForDirective","src":"493:26:8","typeName":{"id":1425,"name":"uint256","nodeType":"ElementaryTypeName","src":"511:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},{"constant":true,"id":1432,"mutability":"constant","name":"ERC4906_INTERFACE_ID","nameLocation":"731:20:8","nodeType":"VariableDeclaration","scope":1534,"src":"707:65:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1427,"name":"bytes4","nodeType":"ElementaryTypeName","src":"707:6:8","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"value":{"arguments":[{"hexValue":"30783439303634393036","id":1430,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"761:10:8","typeDescriptions":{"typeIdentifier":"t_rational_1225148678_by_1","typeString":"int_const 1225148678"},"value":"0x49064906"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_1225148678_by_1","typeString":"int_const 1225148678"}],"id":1429,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"754:6:8","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes4_$","typeString":"type(bytes4)"},"typeName":{"id":1428,"name":"bytes4","nodeType":"ElementaryTypeName","src":"754:6:8","typeDescriptions":{}}},"id":1431,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"754:18:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"private"},{"constant":false,"id":1436,"mutability":"mutable","name":"_tokenURIs","nameLocation":"861:10:8","nodeType":"VariableDeclaration","scope":1534,"src":"818:53:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_string_storage_$","typeString":"mapping(uint256 => string)"},"typeName":{"id":1435,"keyName":"tokenId","keyNameLocation":"834:7:8","keyType":{"id":1433,"name":"uint256","nodeType":"ElementaryTypeName","src":"826:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"818:34:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_string_storage_$","typeString":"mapping(uint256 => string)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":1434,"name":"string","nodeType":"ElementaryTypeName","src":"845:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}}},"visibility":"private"},{"baseFunctions":[417,2145],"body":{"id":1456,"nodeType":"Block","src":"1046:99:8","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1454,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":1449,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1447,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1439,"src":"1063:11:8","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1448,"name":"ERC4906_INTERFACE_ID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1432,"src":"1078:20:8","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"1063:35:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":1452,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1439,"src":"1126:11:8","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"id":1450,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"1102:5:8","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC721URIStorage_$1534_$","typeString":"type(contract super ERC721URIStorage)"}},"id":1451,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1108:17:8","memberName":"supportsInterface","nodeType":"MemberAccess","referencedDeclaration":417,"src":"1102:23:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes4_$returns$_t_bool_$","typeString":"function (bytes4) view returns (bool)"}},"id":1453,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1102:36:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1063:75:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1446,"id":1455,"nodeType":"Return","src":"1056:82:8"}]},"documentation":{"id":1437,"nodeType":"StructuredDocumentation","src":"878:55:8","text":" @dev See {IERC165-supportsInterface}"},"functionSelector":"01ffc9a7","id":1457,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"947:17:8","nodeType":"FunctionDefinition","overrides":{"id":1443,"nodeType":"OverrideSpecifier","overrides":[{"id":1441,"name":"ERC721","nameLocations":["1014:6:8"],"nodeType":"IdentifierPath","referencedDeclaration":1273,"src":"1014:6:8"},{"id":1442,"name":"IERC165","nameLocations":["1022:7:8"],"nodeType":"IdentifierPath","referencedDeclaration":2146,"src":"1022:7:8"}],"src":"1005:25:8"},"parameters":{"id":1440,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1439,"mutability":"mutable","name":"interfaceId","nameLocation":"972:11:8","nodeType":"VariableDeclaration","scope":1457,"src":"965:18:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1438,"name":"bytes4","nodeType":"ElementaryTypeName","src":"965:6:8","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"964:20:8"},"returnParameters":{"id":1446,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1445,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1457,"src":"1040:4:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1444,"name":"bool","nodeType":"ElementaryTypeName","src":"1040:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1039:6:8"},"scope":1534,"src":"938:207:8","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[512],"body":{"id":1513,"nodeType":"Block","src":"1299:505:8","statements":[{"expression":{"arguments":[{"id":1467,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1460,"src":"1323:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1466,"name":"_requireOwned","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1272,"src":"1309:13:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":1468,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1309:22:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1469,"nodeType":"ExpressionStatement","src":"1309:22:8"},{"assignments":[1471],"declarations":[{"constant":false,"id":1471,"mutability":"mutable","name":"_tokenURI","nameLocation":"1356:9:8","nodeType":"VariableDeclaration","scope":1513,"src":"1342:23:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1470,"name":"string","nodeType":"ElementaryTypeName","src":"1342:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":1475,"initialValue":{"baseExpression":{"id":1472,"name":"_tokenURIs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1436,"src":"1368:10:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_string_storage_$","typeString":"mapping(uint256 => string storage ref)"}},"id":1474,"indexExpression":{"id":1473,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1460,"src":"1379:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1368:19:8","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"VariableDeclarationStatement","src":"1342:45:8"},{"assignments":[1477],"declarations":[{"constant":false,"id":1477,"mutability":"mutable","name":"base","nameLocation":"1411:4:8","nodeType":"VariableDeclaration","scope":1513,"src":"1397:18:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1476,"name":"string","nodeType":"ElementaryTypeName","src":"1397:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":1480,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1478,"name":"_baseURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":521,"src":"1418:8:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_string_memory_ptr_$","typeString":"function () view returns (string memory)"}},"id":1479,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1418:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"1397:31:8"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1487,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":1483,"name":"base","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1477,"src":"1507:4:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1482,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1501:5:8","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1481,"name":"bytes","nodeType":"ElementaryTypeName","src":"1501:5:8","typeDescriptions":{}}},"id":1484,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1501:11:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1485,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1513:6:8","memberName":"length","nodeType":"MemberAccess","src":"1501:18:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1486,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1523:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1501:23:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1491,"nodeType":"IfStatement","src":"1497:70:8","trueBody":{"id":1490,"nodeType":"Block","src":"1526:41:8","statements":[{"expression":{"id":1488,"name":"_tokenURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1471,"src":"1547:9:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1465,"id":1489,"nodeType":"Return","src":"1540:16:8"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1498,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":1494,"name":"_tokenURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1471,"src":"1672:9:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1493,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1666:5:8","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1492,"name":"bytes","nodeType":"ElementaryTypeName","src":"1666:5:8","typeDescriptions":{}}},"id":1495,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1666:16:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1496,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1683:6:8","memberName":"length","nodeType":"MemberAccess","src":"1666:23:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1497,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1692:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1666:27:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1507,"nodeType":"IfStatement","src":"1662:95:8","trueBody":{"id":1506,"nodeType":"Block","src":"1695:62:8","statements":[{"expression":{"arguments":[{"id":1502,"name":"base","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1477,"src":"1730:4:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":1503,"name":"_tokenURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1471,"src":"1736:9:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":1500,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1716:6:8","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":1499,"name":"string","nodeType":"ElementaryTypeName","src":"1716:6:8","typeDescriptions":{}}},"id":1501,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1723:6:8","memberName":"concat","nodeType":"MemberAccess","src":"1716:13:8","typeDescriptions":{"typeIdentifier":"t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$","typeString":"function () pure returns (string memory)"}},"id":1504,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1716:30:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1465,"id":1505,"nodeType":"Return","src":"1709:37:8"}]}},{"expression":{"arguments":[{"id":1510,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1460,"src":"1789:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1508,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"1774:5:8","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC721URIStorage_$1534_$","typeString":"type(contract super ERC721URIStorage)"}},"id":1509,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1780:8:8","memberName":"tokenURI","nodeType":"MemberAccess","referencedDeclaration":512,"src":"1774:14:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) view returns (string memory)"}},"id":1511,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1774:23:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1465,"id":1512,"nodeType":"Return","src":"1767:30:8"}]},"documentation":{"id":1458,"nodeType":"StructuredDocumentation","src":"1151:55:8","text":" @dev See {IERC721Metadata-tokenURI}."},"functionSelector":"c87b56dd","id":1514,"implemented":true,"kind":"function","modifiers":[],"name":"tokenURI","nameLocation":"1220:8:8","nodeType":"FunctionDefinition","overrides":{"id":1462,"nodeType":"OverrideSpecifier","overrides":[],"src":"1266:8:8"},"parameters":{"id":1461,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1460,"mutability":"mutable","name":"tokenId","nameLocation":"1237:7:8","nodeType":"VariableDeclaration","scope":1514,"src":"1229:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1459,"name":"uint256","nodeType":"ElementaryTypeName","src":"1229:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1228:17:8"},"returnParameters":{"id":1465,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1464,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1514,"src":"1284:13:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1463,"name":"string","nodeType":"ElementaryTypeName","src":"1284:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1283:15:8"},"scope":1534,"src":"1211:593:8","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":1532,"nodeType":"Block","src":"2004:86:8","statements":[{"expression":{"id":1526,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1522,"name":"_tokenURIs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1436,"src":"2014:10:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_string_storage_$","typeString":"mapping(uint256 => string storage ref)"}},"id":1524,"indexExpression":{"id":1523,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1517,"src":"2025:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2014:19:8","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1525,"name":"_tokenURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1519,"src":"2036:9:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"2014:31:8","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":1527,"nodeType":"ExpressionStatement","src":"2014:31:8"},{"eventCall":{"arguments":[{"id":1529,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1517,"src":"2075:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1528,"name":"MetadataUpdate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":167,"src":"2060:14:8","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":1530,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2060:23:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1531,"nodeType":"EmitStatement","src":"2055:28:8"}]},"documentation":{"id":1515,"nodeType":"StructuredDocumentation","src":"1810:108:8","text":" @dev Sets `_tokenURI` as the tokenURI of `tokenId`.\n Emits {MetadataUpdate}."},"id":1533,"implemented":true,"kind":"function","modifiers":[],"name":"_setTokenURI","nameLocation":"1932:12:8","nodeType":"FunctionDefinition","parameters":{"id":1520,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1517,"mutability":"mutable","name":"tokenId","nameLocation":"1953:7:8","nodeType":"VariableDeclaration","scope":1533,"src":"1945:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1516,"name":"uint256","nodeType":"ElementaryTypeName","src":"1945:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1519,"mutability":"mutable","name":"_tokenURI","nameLocation":"1976:9:8","nodeType":"VariableDeclaration","scope":1533,"src":"1962:23:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1518,"name":"string","nodeType":"ElementaryTypeName","src":"1962:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1944:42:8"},"returnParameters":{"id":1521,"nodeType":"ParameterList","parameters":[],"src":"2004:0:8"},"scope":1534,"src":"1923:167:8","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":1535,"src":"432:1660:8","usedErrors":[227,232,241,246,251,258,263,268],"usedEvents":[167,174,1289,1298,1307]}],"src":"128:1965:8"},"id":8},"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol","exportedSymbols":{"IERC721":[1390],"IERC721Metadata":[1562]},"id":1563,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1536,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"127:24:9"},{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721.sol","file":"../IERC721.sol","id":1538,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1563,"sourceUnit":1391,"src":"153:39:9","symbolAliases":[{"foreign":{"id":1537,"name":"IERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1390,"src":"161:7:9","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":1540,"name":"IERC721","nameLocations":["357:7:9"],"nodeType":"IdentifierPath","referencedDeclaration":1390,"src":"357:7:9"},"id":1541,"nodeType":"InheritanceSpecifier","src":"357:7:9"}],"canonicalName":"IERC721Metadata","contractDependencies":[],"contractKind":"interface","documentation":{"id":1539,"nodeType":"StructuredDocumentation","src":"194:133:9","text":" @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n @dev See https://eips.ethereum.org/EIPS/eip-721"},"fullyImplemented":false,"id":1562,"linearizedBaseContracts":[1562,1390,2146],"name":"IERC721Metadata","nameLocation":"338:15:9","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1542,"nodeType":"StructuredDocumentation","src":"371:58:9","text":" @dev Returns the token collection name."},"functionSelector":"06fdde03","id":1547,"implemented":false,"kind":"function","modifiers":[],"name":"name","nameLocation":"443:4:9","nodeType":"FunctionDefinition","parameters":{"id":1543,"nodeType":"ParameterList","parameters":[],"src":"447:2:9"},"returnParameters":{"id":1546,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1545,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1547,"src":"473:13:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1544,"name":"string","nodeType":"ElementaryTypeName","src":"473:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"472:15:9"},"scope":1562,"src":"434:54:9","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1548,"nodeType":"StructuredDocumentation","src":"494:60:9","text":" @dev Returns the token collection symbol."},"functionSelector":"95d89b41","id":1553,"implemented":false,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"568:6:9","nodeType":"FunctionDefinition","parameters":{"id":1549,"nodeType":"ParameterList","parameters":[],"src":"574:2:9"},"returnParameters":{"id":1552,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1551,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1553,"src":"600:13:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1550,"name":"string","nodeType":"ElementaryTypeName","src":"600:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"599:15:9"},"scope":1562,"src":"559:56:9","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1554,"nodeType":"StructuredDocumentation","src":"621:90:9","text":" @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token."},"functionSelector":"c87b56dd","id":1561,"implemented":false,"kind":"function","modifiers":[],"name":"tokenURI","nameLocation":"725:8:9","nodeType":"FunctionDefinition","parameters":{"id":1557,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1556,"mutability":"mutable","name":"tokenId","nameLocation":"742:7:9","nodeType":"VariableDeclaration","scope":1561,"src":"734:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1555,"name":"uint256","nodeType":"ElementaryTypeName","src":"734:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"733:17:9"},"returnParameters":{"id":1560,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1559,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1561,"src":"774:13:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1558,"name":"string","nodeType":"ElementaryTypeName","src":"774:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"773:15:9"},"scope":1562,"src":"716:73:9","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1563,"src":"328:463:9","usedErrors":[],"usedEvents":[1289,1298,1307]}],"src":"127:665:9"},"id":9},"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol","exportedSymbols":{"ERC721Utils":[1639],"IERC721Errors":[269],"IERC721Receiver":[1408]},"id":1640,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1564,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"118:24:10"},{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol","file":"../IERC721Receiver.sol","id":1566,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1640,"sourceUnit":1409,"src":"144:55:10","symbolAliases":[{"foreign":{"id":1565,"name":"IERC721Receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1408,"src":"152:15:10","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC6093.sol","file":"../../../interfaces/draft-IERC6093.sol","id":1568,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1640,"sourceUnit":317,"src":"200:69:10","symbolAliases":[{"foreign":{"id":1567,"name":"IERC721Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":269,"src":"208:13:10","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"ERC721Utils","contractDependencies":[],"contractKind":"library","documentation":{"id":1569,"nodeType":"StructuredDocumentation","src":"271:159:10","text":" @dev Library that provide common ERC-721 utility functions.\n See https://eips.ethereum.org/EIPS/eip-721[ERC-721].\n _Available since v5.1._"},"fullyImplemented":true,"id":1639,"linearizedBaseContracts":[1639],"name":"ERC721Utils","nameLocation":"439:11:10","nodeType":"ContractDefinition","nodes":[{"body":{"id":1637,"nodeType":"Block","src":"1151:758:10","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1587,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":1583,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1576,"src":"1165:2:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1584,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1168:4:10","memberName":"code","nodeType":"MemberAccess","src":"1165:7:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1585,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1173:6:10","memberName":"length","nodeType":"MemberAccess","src":"1165:14:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1586,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1182:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1165:18:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1636,"nodeType":"IfStatement","src":"1161:742:10","trueBody":{"id":1635,"nodeType":"Block","src":"1185:718:10","statements":[{"clauses":[{"block":{"id":1613,"nodeType":"Block","src":"1295:214:10","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":1604,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1600,"name":"retval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1598,"src":"1317:6:10","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"expression":{"id":1601,"name":"IERC721Receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1408,"src":"1327:15:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721Receiver_$1408_$","typeString":"type(contract IERC721Receiver)"}},"id":1602,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1343:16:10","memberName":"onERC721Received","nodeType":"MemberAccess","referencedDeclaration":1407,"src":"1327:32:10","typeDescriptions":{"typeIdentifier":"t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$","typeString":"function IERC721Receiver.onERC721Received(address,address,uint256,bytes calldata) returns (bytes4)"}},"id":1603,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1360:8:10","memberName":"selector","nodeType":"MemberAccess","src":"1327:41:10","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"1317:51:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1612,"nodeType":"IfStatement","src":"1313:182:10","trueBody":{"id":1611,"nodeType":"Block","src":"1370:125:10","statements":[{"errorCall":{"arguments":[{"id":1608,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1576,"src":"1473:2:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1605,"name":"IERC721Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":269,"src":"1437:13:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721Errors_$269_$","typeString":"type(contract IERC721Errors)"}},"id":1607,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1451:21:10","memberName":"ERC721InvalidReceiver","nodeType":"MemberAccess","referencedDeclaration":251,"src":"1437:35:10","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":1609,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1437:39:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1610,"nodeType":"RevertStatement","src":"1430:46:10"}]}}]},"errorName":"","id":1614,"nodeType":"TryCatchClause","parameters":{"id":1599,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1598,"mutability":"mutable","name":"retval","nameLocation":"1287:6:10","nodeType":"VariableDeclaration","scope":1614,"src":"1280:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1597,"name":"bytes4","nodeType":"ElementaryTypeName","src":"1280:6:10","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"1279:15:10"},"src":"1271:238:10"},{"block":{"id":1632,"nodeType":"Block","src":"1538:355:10","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1621,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1618,"name":"reason","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1616,"src":"1560:6:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1619,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1567:6:10","memberName":"length","nodeType":"MemberAccess","src":"1560:13:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1620,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1577:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1560:18:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1630,"nodeType":"Block","src":"1728:151:10","statements":[{"AST":{"nativeSrc":"1775:86:10","nodeType":"YulBlock","src":"1775:86:10","statements":[{"expression":{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"1812:2:10","nodeType":"YulLiteral","src":"1812:2:10","type":"","value":"32"},{"name":"reason","nativeSrc":"1816:6:10","nodeType":"YulIdentifier","src":"1816:6:10"}],"functionName":{"name":"add","nativeSrc":"1808:3:10","nodeType":"YulIdentifier","src":"1808:3:10"},"nativeSrc":"1808:15:10","nodeType":"YulFunctionCall","src":"1808:15:10"},{"arguments":[{"name":"reason","nativeSrc":"1831:6:10","nodeType":"YulIdentifier","src":"1831:6:10"}],"functionName":{"name":"mload","nativeSrc":"1825:5:10","nodeType":"YulIdentifier","src":"1825:5:10"},"nativeSrc":"1825:13:10","nodeType":"YulFunctionCall","src":"1825:13:10"}],"functionName":{"name":"revert","nativeSrc":"1801:6:10","nodeType":"YulIdentifier","src":"1801:6:10"},"nativeSrc":"1801:38:10","nodeType":"YulFunctionCall","src":"1801:38:10"},"nativeSrc":"1801:38:10","nodeType":"YulExpressionStatement","src":"1801:38:10"}]},"evmVersion":"paris","externalReferences":[{"declaration":1616,"isOffset":false,"isSlot":false,"src":"1816:6:10","valueSize":1},{"declaration":1616,"isOffset":false,"isSlot":false,"src":"1831:6:10","valueSize":1}],"flags":["memory-safe"],"id":1629,"nodeType":"InlineAssembly","src":"1750:111:10"}]},"id":1631,"nodeType":"IfStatement","src":"1556:323:10","trueBody":{"id":1628,"nodeType":"Block","src":"1580:142:10","statements":[{"errorCall":{"arguments":[{"id":1625,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1576,"src":"1700:2:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1622,"name":"IERC721Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":269,"src":"1664:13:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721Errors_$269_$","typeString":"type(contract IERC721Errors)"}},"id":1624,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1678:21:10","memberName":"ERC721InvalidReceiver","nodeType":"MemberAccess","referencedDeclaration":251,"src":"1664:35:10","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":1626,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1664:39:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1627,"nodeType":"RevertStatement","src":"1657:46:10"}]}}]},"errorName":"","id":1633,"nodeType":"TryCatchClause","parameters":{"id":1617,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1616,"mutability":"mutable","name":"reason","nameLocation":"1530:6:10","nodeType":"VariableDeclaration","scope":1633,"src":"1517:19:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1615,"name":"bytes","nodeType":"ElementaryTypeName","src":"1517:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1516:21:10"},"src":"1510:383:10"}],"externalCall":{"arguments":[{"id":1592,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1572,"src":"1240:8:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1593,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1574,"src":"1250:4:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1594,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1578,"src":"1256:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1595,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1580,"src":"1265:4:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"arguments":[{"id":1589,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1576,"src":"1219:2:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1588,"name":"IERC721Receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1408,"src":"1203:15:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721Receiver_$1408_$","typeString":"type(contract IERC721Receiver)"}},"id":1590,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1203:19:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC721Receiver_$1408","typeString":"contract IERC721Receiver"}},"id":1591,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1223:16:10","memberName":"onERC721Received","nodeType":"MemberAccess","referencedDeclaration":1407,"src":"1203:36:10","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$","typeString":"function (address,address,uint256,bytes memory) external returns (bytes4)"}},"id":1596,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1203:67:10","tryCall":true,"typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"id":1634,"nodeType":"TryStatement","src":"1199:694:10"}]}}]},"documentation":{"id":1570,"nodeType":"StructuredDocumentation","src":"457:523:10","text":" @dev Performs an acceptance check for the provided `operator` by calling {IERC721-onERC721Received}\n on the `to` address. The `operator` is generally the address that initiated the token transfer (i.e. `msg.sender`).\n The acceptance call is not executed and treated as a no-op if the target address doesn't contain code (i.e. an EOA).\n Otherwise, the recipient must implement {IERC721Receiver-onERC721Received} and return the acceptance magic value to accept\n the transfer."},"id":1638,"implemented":true,"kind":"function","modifiers":[],"name":"checkOnERC721Received","nameLocation":"994:21:10","nodeType":"FunctionDefinition","parameters":{"id":1581,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1572,"mutability":"mutable","name":"operator","nameLocation":"1033:8:10","nodeType":"VariableDeclaration","scope":1638,"src":"1025:16:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1571,"name":"address","nodeType":"ElementaryTypeName","src":"1025:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1574,"mutability":"mutable","name":"from","nameLocation":"1059:4:10","nodeType":"VariableDeclaration","scope":1638,"src":"1051:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1573,"name":"address","nodeType":"ElementaryTypeName","src":"1051:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1576,"mutability":"mutable","name":"to","nameLocation":"1081:2:10","nodeType":"VariableDeclaration","scope":1638,"src":"1073:10:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1575,"name":"address","nodeType":"ElementaryTypeName","src":"1073:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1578,"mutability":"mutable","name":"tokenId","nameLocation":"1101:7:10","nodeType":"VariableDeclaration","scope":1638,"src":"1093:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1577,"name":"uint256","nodeType":"ElementaryTypeName","src":"1093:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1580,"mutability":"mutable","name":"data","nameLocation":"1131:4:10","nodeType":"VariableDeclaration","scope":1638,"src":"1118:17:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1579,"name":"bytes","nodeType":"ElementaryTypeName","src":"1118:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1015:126:10"},"returnParameters":{"id":1582,"nodeType":"ParameterList","parameters":[],"src":"1151:0:10"},"scope":1639,"src":"985:924:10","stateMutability":"nonpayable","virtual":false,"visibility":"internal"}],"scope":1640,"src":"431:1480:10","usedErrors":[],"usedEvents":[]}],"src":"118:1794:10"},"id":10},"@openzeppelin/contracts/utils/Context.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","exportedSymbols":{"Context":[1669]},"id":1670,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1641,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"101:24:11"},{"abstract":true,"baseContracts":[],"canonicalName":"Context","contractDependencies":[],"contractKind":"contract","documentation":{"id":1642,"nodeType":"StructuredDocumentation","src":"127:496:11","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"id":1669,"linearizedBaseContracts":[1669],"name":"Context","nameLocation":"642:7:11","nodeType":"ContractDefinition","nodes":[{"body":{"id":1650,"nodeType":"Block","src":"718:34:11","statements":[{"expression":{"expression":{"id":1647,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"735:3:11","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1648,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"739:6:11","memberName":"sender","nodeType":"MemberAccess","src":"735:10:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1646,"id":1649,"nodeType":"Return","src":"728:17:11"}]},"id":1651,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"665:10:11","nodeType":"FunctionDefinition","parameters":{"id":1643,"nodeType":"ParameterList","parameters":[],"src":"675:2:11"},"returnParameters":{"id":1646,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1645,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1651,"src":"709:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1644,"name":"address","nodeType":"ElementaryTypeName","src":"709:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"708:9:11"},"scope":1669,"src":"656:96:11","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1659,"nodeType":"Block","src":"825:32:11","statements":[{"expression":{"expression":{"id":1656,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"842:3:11","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1657,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"846:4:11","memberName":"data","nodeType":"MemberAccess","src":"842:8:11","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":1655,"id":1658,"nodeType":"Return","src":"835:15:11"}]},"id":1660,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"767:8:11","nodeType":"FunctionDefinition","parameters":{"id":1652,"nodeType":"ParameterList","parameters":[],"src":"775:2:11"},"returnParameters":{"id":1655,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1654,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1660,"src":"809:14:11","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1653,"name":"bytes","nodeType":"ElementaryTypeName","src":"809:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"808:16:11"},"scope":1669,"src":"758:99:11","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1667,"nodeType":"Block","src":"935:25:11","statements":[{"expression":{"hexValue":"30","id":1665,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"952:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":1664,"id":1666,"nodeType":"Return","src":"945:8:11"}]},"id":1668,"implemented":true,"kind":"function","modifiers":[],"name":"_contextSuffixLength","nameLocation":"872:20:11","nodeType":"FunctionDefinition","parameters":{"id":1661,"nodeType":"ParameterList","parameters":[],"src":"892:2:11"},"returnParameters":{"id":1664,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1663,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1668,"src":"926:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1662,"name":"uint256","nodeType":"ElementaryTypeName","src":"926:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"925:9:11"},"scope":1669,"src":"863:97:11","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":1670,"src":"624:338:11","usedErrors":[],"usedEvents":[]}],"src":"101:862:11"},"id":11},"@openzeppelin/contracts/utils/Panic.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Panic.sol","exportedSymbols":{"Panic":[1721]},"id":1722,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1671,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"99:24:12"},{"abstract":false,"baseContracts":[],"canonicalName":"Panic","contractDependencies":[],"contractKind":"library","documentation":{"id":1672,"nodeType":"StructuredDocumentation","src":"125:489:12","text":" @dev Helper library for emitting standardized panic codes.\n ```solidity\n contract Example {\n      using Panic for uint256;\n      // Use any of the declared internal constants\n      function foo() { Panic.GENERIC.panic(); }\n      // Alternatively\n      function foo() { Panic.panic(Panic.GENERIC); }\n }\n ```\n Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil].\n _Available since v5.1._"},"fullyImplemented":true,"id":1721,"linearizedBaseContracts":[1721],"name":"Panic","nameLocation":"665:5:12","nodeType":"ContractDefinition","nodes":[{"constant":true,"documentation":{"id":1673,"nodeType":"StructuredDocumentation","src":"677:36:12","text":"@dev generic / unspecified error"},"id":1676,"mutability":"constant","name":"GENERIC","nameLocation":"744:7:12","nodeType":"VariableDeclaration","scope":1721,"src":"718:40:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1674,"name":"uint256","nodeType":"ElementaryTypeName","src":"718:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783030","id":1675,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"754:4:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0x00"},"visibility":"internal"},{"constant":true,"documentation":{"id":1677,"nodeType":"StructuredDocumentation","src":"764:37:12","text":"@dev used by the assert() builtin"},"id":1680,"mutability":"constant","name":"ASSERT","nameLocation":"832:6:12","nodeType":"VariableDeclaration","scope":1721,"src":"806:39:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1678,"name":"uint256","nodeType":"ElementaryTypeName","src":"806:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783031","id":1679,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"841:4:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"0x01"},"visibility":"internal"},{"constant":true,"documentation":{"id":1681,"nodeType":"StructuredDocumentation","src":"851:41:12","text":"@dev arithmetic underflow or overflow"},"id":1684,"mutability":"constant","name":"UNDER_OVERFLOW","nameLocation":"923:14:12","nodeType":"VariableDeclaration","scope":1721,"src":"897:47:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1682,"name":"uint256","nodeType":"ElementaryTypeName","src":"897:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783131","id":1683,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"940:4:12","typeDescriptions":{"typeIdentifier":"t_rational_17_by_1","typeString":"int_const 17"},"value":"0x11"},"visibility":"internal"},{"constant":true,"documentation":{"id":1685,"nodeType":"StructuredDocumentation","src":"950:35:12","text":"@dev division or modulo by zero"},"id":1688,"mutability":"constant","name":"DIVISION_BY_ZERO","nameLocation":"1016:16:12","nodeType":"VariableDeclaration","scope":1721,"src":"990:49:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1686,"name":"uint256","nodeType":"ElementaryTypeName","src":"990:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783132","id":1687,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1035:4:12","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"0x12"},"visibility":"internal"},{"constant":true,"documentation":{"id":1689,"nodeType":"StructuredDocumentation","src":"1045:30:12","text":"@dev enum conversion error"},"id":1692,"mutability":"constant","name":"ENUM_CONVERSION_ERROR","nameLocation":"1106:21:12","nodeType":"VariableDeclaration","scope":1721,"src":"1080:54:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1690,"name":"uint256","nodeType":"ElementaryTypeName","src":"1080:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783231","id":1691,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1130:4:12","typeDescriptions":{"typeIdentifier":"t_rational_33_by_1","typeString":"int_const 33"},"value":"0x21"},"visibility":"internal"},{"constant":true,"documentation":{"id":1693,"nodeType":"StructuredDocumentation","src":"1140:36:12","text":"@dev invalid encoding in storage"},"id":1696,"mutability":"constant","name":"STORAGE_ENCODING_ERROR","nameLocation":"1207:22:12","nodeType":"VariableDeclaration","scope":1721,"src":"1181:55:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1694,"name":"uint256","nodeType":"ElementaryTypeName","src":"1181:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783232","id":1695,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1232:4:12","typeDescriptions":{"typeIdentifier":"t_rational_34_by_1","typeString":"int_const 34"},"value":"0x22"},"visibility":"internal"},{"constant":true,"documentation":{"id":1697,"nodeType":"StructuredDocumentation","src":"1242:24:12","text":"@dev empty array pop"},"id":1700,"mutability":"constant","name":"EMPTY_ARRAY_POP","nameLocation":"1297:15:12","nodeType":"VariableDeclaration","scope":1721,"src":"1271:48:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1698,"name":"uint256","nodeType":"ElementaryTypeName","src":"1271:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783331","id":1699,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1315:4:12","typeDescriptions":{"typeIdentifier":"t_rational_49_by_1","typeString":"int_const 49"},"value":"0x31"},"visibility":"internal"},{"constant":true,"documentation":{"id":1701,"nodeType":"StructuredDocumentation","src":"1325:35:12","text":"@dev array out of bounds access"},"id":1704,"mutability":"constant","name":"ARRAY_OUT_OF_BOUNDS","nameLocation":"1391:19:12","nodeType":"VariableDeclaration","scope":1721,"src":"1365:52:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1702,"name":"uint256","nodeType":"ElementaryTypeName","src":"1365:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783332","id":1703,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1413:4:12","typeDescriptions":{"typeIdentifier":"t_rational_50_by_1","typeString":"int_const 50"},"value":"0x32"},"visibility":"internal"},{"constant":true,"documentation":{"id":1705,"nodeType":"StructuredDocumentation","src":"1423:65:12","text":"@dev resource error (too large allocation or too large array)"},"id":1708,"mutability":"constant","name":"RESOURCE_ERROR","nameLocation":"1519:14:12","nodeType":"VariableDeclaration","scope":1721,"src":"1493:47:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1706,"name":"uint256","nodeType":"ElementaryTypeName","src":"1493:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783431","id":1707,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1536:4:12","typeDescriptions":{"typeIdentifier":"t_rational_65_by_1","typeString":"int_const 65"},"value":"0x41"},"visibility":"internal"},{"constant":true,"documentation":{"id":1709,"nodeType":"StructuredDocumentation","src":"1546:42:12","text":"@dev calling invalid internal function"},"id":1712,"mutability":"constant","name":"INVALID_INTERNAL_FUNCTION","nameLocation":"1619:25:12","nodeType":"VariableDeclaration","scope":1721,"src":"1593:58:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1710,"name":"uint256","nodeType":"ElementaryTypeName","src":"1593:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783531","id":1711,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1647:4:12","typeDescriptions":{"typeIdentifier":"t_rational_81_by_1","typeString":"int_const 81"},"value":"0x51"},"visibility":"internal"},{"body":{"id":1719,"nodeType":"Block","src":"1819:151:12","statements":[{"AST":{"nativeSrc":"1854:110:12","nodeType":"YulBlock","src":"1854:110:12","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1875:4:12","nodeType":"YulLiteral","src":"1875:4:12","type":"","value":"0x00"},{"kind":"number","nativeSrc":"1881:10:12","nodeType":"YulLiteral","src":"1881:10:12","type":"","value":"0x4e487b71"}],"functionName":{"name":"mstore","nativeSrc":"1868:6:12","nodeType":"YulIdentifier","src":"1868:6:12"},"nativeSrc":"1868:24:12","nodeType":"YulFunctionCall","src":"1868:24:12"},"nativeSrc":"1868:24:12","nodeType":"YulExpressionStatement","src":"1868:24:12"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"1912:4:12","nodeType":"YulLiteral","src":"1912:4:12","type":"","value":"0x20"},{"name":"code","nativeSrc":"1918:4:12","nodeType":"YulIdentifier","src":"1918:4:12"}],"functionName":{"name":"mstore","nativeSrc":"1905:6:12","nodeType":"YulIdentifier","src":"1905:6:12"},"nativeSrc":"1905:18:12","nodeType":"YulFunctionCall","src":"1905:18:12"},"nativeSrc":"1905:18:12","nodeType":"YulExpressionStatement","src":"1905:18:12"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"1943:4:12","nodeType":"YulLiteral","src":"1943:4:12","type":"","value":"0x1c"},{"kind":"number","nativeSrc":"1949:4:12","nodeType":"YulLiteral","src":"1949:4:12","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"1936:6:12","nodeType":"YulIdentifier","src":"1936:6:12"},"nativeSrc":"1936:18:12","nodeType":"YulFunctionCall","src":"1936:18:12"},"nativeSrc":"1936:18:12","nodeType":"YulExpressionStatement","src":"1936:18:12"}]},"evmVersion":"paris","externalReferences":[{"declaration":1715,"isOffset":false,"isSlot":false,"src":"1918:4:12","valueSize":1}],"flags":["memory-safe"],"id":1718,"nodeType":"InlineAssembly","src":"1829:135:12"}]},"documentation":{"id":1713,"nodeType":"StructuredDocumentation","src":"1658:113:12","text":"@dev Reverts with a panic code. Recommended to use with\n the internal constants with predefined codes."},"id":1720,"implemented":true,"kind":"function","modifiers":[],"name":"panic","nameLocation":"1785:5:12","nodeType":"FunctionDefinition","parameters":{"id":1716,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1715,"mutability":"mutable","name":"code","nameLocation":"1799:4:12","nodeType":"VariableDeclaration","scope":1720,"src":"1791:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1714,"name":"uint256","nodeType":"ElementaryTypeName","src":"1791:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1790:14:12"},"returnParameters":{"id":1717,"nodeType":"ParameterList","parameters":[],"src":"1819:0:12"},"scope":1721,"src":"1776:194:12","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":1722,"src":"657:1315:12","usedErrors":[],"usedEvents":[]}],"src":"99:1874:12"},"id":12},"@openzeppelin/contracts/utils/ReentrancyGuard.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/ReentrancyGuard.sol","exportedSymbols":{"ReentrancyGuard":[1790]},"id":1791,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1723,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"109:24:13"},{"abstract":true,"baseContracts":[],"canonicalName":"ReentrancyGuard","contractDependencies":[],"contractKind":"contract","documentation":{"id":1724,"nodeType":"StructuredDocumentation","src":"135:894:13","text":" @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If EIP-1153 (transient storage) is available on the chain you're deploying at,\n consider using {ReentrancyGuardTransient} instead.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."},"fullyImplemented":true,"id":1790,"linearizedBaseContracts":[1790],"name":"ReentrancyGuard","nameLocation":"1048:15:13","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":1727,"mutability":"constant","name":"NOT_ENTERED","nameLocation":"1843:11:13","nodeType":"VariableDeclaration","scope":1790,"src":"1818:40:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1725,"name":"uint256","nodeType":"ElementaryTypeName","src":"1818:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"31","id":1726,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1857:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"visibility":"private"},{"constant":true,"id":1730,"mutability":"constant","name":"ENTERED","nameLocation":"1889:7:13","nodeType":"VariableDeclaration","scope":1790,"src":"1864:36:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1728,"name":"uint256","nodeType":"ElementaryTypeName","src":"1864:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"32","id":1729,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1899:1:13","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"visibility":"private"},{"constant":false,"id":1732,"mutability":"mutable","name":"_status","nameLocation":"1923:7:13","nodeType":"VariableDeclaration","scope":1790,"src":"1907:23:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1731,"name":"uint256","nodeType":"ElementaryTypeName","src":"1907:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"documentation":{"id":1733,"nodeType":"StructuredDocumentation","src":"1937:52:13","text":" @dev Unauthorized reentrant call."},"errorSelector":"3ee5aeb5","id":1735,"name":"ReentrancyGuardReentrantCall","nameLocation":"2000:28:13","nodeType":"ErrorDefinition","parameters":{"id":1734,"nodeType":"ParameterList","parameters":[],"src":"2028:2:13"},"src":"1994:37:13"},{"body":{"id":1742,"nodeType":"Block","src":"2051:38:13","statements":[{"expression":{"id":1740,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1738,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1732,"src":"2061:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1739,"name":"NOT_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1727,"src":"2071:11:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2061:21:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1741,"nodeType":"ExpressionStatement","src":"2061:21:13"}]},"id":1743,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":1736,"nodeType":"ParameterList","parameters":[],"src":"2048:2:13"},"returnParameters":{"id":1737,"nodeType":"ParameterList","parameters":[],"src":"2051:0:13"},"scope":1790,"src":"2037:52:13","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1753,"nodeType":"Block","src":"2490:79:13","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":1746,"name":"_nonReentrantBefore","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1770,"src":"2500:19:13","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":1747,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2500:21:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1748,"nodeType":"ExpressionStatement","src":"2500:21:13"},{"id":1749,"nodeType":"PlaceholderStatement","src":"2531:1:13"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":1750,"name":"_nonReentrantAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1778,"src":"2542:18:13","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":1751,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2542:20:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1752,"nodeType":"ExpressionStatement","src":"2542:20:13"}]},"documentation":{"id":1744,"nodeType":"StructuredDocumentation","src":"2095:366:13","text":" @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."},"id":1754,"name":"nonReentrant","nameLocation":"2475:12:13","nodeType":"ModifierDefinition","parameters":{"id":1745,"nodeType":"ParameterList","parameters":[],"src":"2487:2:13"},"src":"2466:103:13","virtual":false,"visibility":"internal"},{"body":{"id":1769,"nodeType":"Block","src":"2614:268:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1759,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1757,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1732,"src":"2702:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1758,"name":"ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1730,"src":"2713:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2702:18:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1764,"nodeType":"IfStatement","src":"2698:86:13","trueBody":{"id":1763,"nodeType":"Block","src":"2722:62:13","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1760,"name":"ReentrancyGuardReentrantCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1735,"src":"2743:28:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":1761,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2743:30:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1762,"nodeType":"RevertStatement","src":"2736:37:13"}]}},{"expression":{"id":1767,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1765,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1732,"src":"2858:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1766,"name":"ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1730,"src":"2868:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2858:17:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1768,"nodeType":"ExpressionStatement","src":"2858:17:13"}]},"id":1770,"implemented":true,"kind":"function","modifiers":[],"name":"_nonReentrantBefore","nameLocation":"2584:19:13","nodeType":"FunctionDefinition","parameters":{"id":1755,"nodeType":"ParameterList","parameters":[],"src":"2603:2:13"},"returnParameters":{"id":1756,"nodeType":"ParameterList","parameters":[],"src":"2614:0:13"},"scope":1790,"src":"2575:307:13","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":1777,"nodeType":"Block","src":"2926:170:13","statements":[{"expression":{"id":1775,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1773,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1732,"src":"3068:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1774,"name":"NOT_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1727,"src":"3078:11:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3068:21:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1776,"nodeType":"ExpressionStatement","src":"3068:21:13"}]},"id":1778,"implemented":true,"kind":"function","modifiers":[],"name":"_nonReentrantAfter","nameLocation":"2897:18:13","nodeType":"FunctionDefinition","parameters":{"id":1771,"nodeType":"ParameterList","parameters":[],"src":"2915:2:13"},"returnParameters":{"id":1772,"nodeType":"ParameterList","parameters":[],"src":"2926:0:13"},"scope":1790,"src":"2888:208:13","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":1788,"nodeType":"Block","src":"3339:42:13","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1786,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1784,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1732,"src":"3356:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1785,"name":"ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1730,"src":"3367:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3356:18:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1783,"id":1787,"nodeType":"Return","src":"3349:25:13"}]},"documentation":{"id":1779,"nodeType":"StructuredDocumentation","src":"3102:168:13","text":" @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n `nonReentrant` function in the call stack."},"id":1789,"implemented":true,"kind":"function","modifiers":[],"name":"_reentrancyGuardEntered","nameLocation":"3284:23:13","nodeType":"FunctionDefinition","parameters":{"id":1780,"nodeType":"ParameterList","parameters":[],"src":"3307:2:13"},"returnParameters":{"id":1783,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1782,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1789,"src":"3333:4:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1781,"name":"bool","nodeType":"ElementaryTypeName","src":"3333:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3332:6:13"},"scope":1790,"src":"3275:106:13","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":1791,"src":"1030:2353:13","usedErrors":[1735],"usedEvents":[]}],"src":"109:3275:13"},"id":13},"@openzeppelin/contracts/utils/Strings.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","exportedSymbols":{"Math":[3752],"SignedMath":[5661],"Strings":[2110]},"id":2111,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1792,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"101:24:14"},{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","file":"./math/Math.sol","id":1794,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2111,"sourceUnit":3753,"src":"127:37:14","symbolAliases":[{"foreign":{"id":1793,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3752,"src":"135:4:14","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SignedMath.sol","file":"./math/SignedMath.sol","id":1796,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2111,"sourceUnit":5662,"src":"165:49:14","symbolAliases":[{"foreign":{"id":1795,"name":"SignedMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5661,"src":"173:10:14","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Strings","contractDependencies":[],"contractKind":"library","documentation":{"id":1797,"nodeType":"StructuredDocumentation","src":"216:34:14","text":" @dev String operations."},"fullyImplemented":true,"id":2110,"linearizedBaseContracts":[2110],"name":"Strings","nameLocation":"259:7:14","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":1800,"mutability":"constant","name":"HEX_DIGITS","nameLocation":"298:10:14","nodeType":"VariableDeclaration","scope":2110,"src":"273:56:14","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"},"typeName":{"id":1798,"name":"bytes16","nodeType":"ElementaryTypeName","src":"273:7:14","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"value":{"hexValue":"30313233343536373839616263646566","id":1799,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"311:18:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f","typeString":"literal_string \"0123456789abcdef\""},"value":"0123456789abcdef"},"visibility":"private"},{"constant":true,"id":1803,"mutability":"constant","name":"ADDRESS_LENGTH","nameLocation":"358:14:14","nodeType":"VariableDeclaration","scope":2110,"src":"335:42:14","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1801,"name":"uint8","nodeType":"ElementaryTypeName","src":"335:5:14","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"value":{"hexValue":"3230","id":1802,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"375:2:14","typeDescriptions":{"typeIdentifier":"t_rational_20_by_1","typeString":"int_const 20"},"value":"20"},"visibility":"private"},{"documentation":{"id":1804,"nodeType":"StructuredDocumentation","src":"384:81:14","text":" @dev The `value` string doesn't fit in the specified `length`."},"errorSelector":"e22e27eb","id":1810,"name":"StringsInsufficientHexLength","nameLocation":"476:28:14","nodeType":"ErrorDefinition","parameters":{"id":1809,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1806,"mutability":"mutable","name":"value","nameLocation":"513:5:14","nodeType":"VariableDeclaration","scope":1810,"src":"505:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1805,"name":"uint256","nodeType":"ElementaryTypeName","src":"505:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1808,"mutability":"mutable","name":"length","nameLocation":"528:6:14","nodeType":"VariableDeclaration","scope":1810,"src":"520:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1807,"name":"uint256","nodeType":"ElementaryTypeName","src":"520:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"504:31:14"},"src":"470:66:14"},{"body":{"id":1857,"nodeType":"Block","src":"708:561:14","statements":[{"id":1856,"nodeType":"UncheckedBlock","src":"718:545:14","statements":[{"assignments":[1819],"declarations":[{"constant":false,"id":1819,"mutability":"mutable","name":"length","nameLocation":"750:6:14","nodeType":"VariableDeclaration","scope":1856,"src":"742:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1818,"name":"uint256","nodeType":"ElementaryTypeName","src":"742:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1826,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1825,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1822,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1813,"src":"770:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1820,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3752,"src":"759:4:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$3752_$","typeString":"type(library Math)"}},"id":1821,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"764:5:14","memberName":"log10","nodeType":"MemberAccess","referencedDeclaration":3524,"src":"759:10:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":1823,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"759:17:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":1824,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"779:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"759:21:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"742:38:14"},{"assignments":[1828],"declarations":[{"constant":false,"id":1828,"mutability":"mutable","name":"buffer","nameLocation":"808:6:14","nodeType":"VariableDeclaration","scope":1856,"src":"794:20:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1827,"name":"string","nodeType":"ElementaryTypeName","src":"794:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":1833,"initialValue":{"arguments":[{"id":1831,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1819,"src":"828:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1830,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"817:10:14","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"},"typeName":{"id":1829,"name":"string","nodeType":"ElementaryTypeName","src":"821:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}}},"id":1832,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"817:18:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"794:41:14"},{"assignments":[1835],"declarations":[{"constant":false,"id":1835,"mutability":"mutable","name":"ptr","nameLocation":"857:3:14","nodeType":"VariableDeclaration","scope":1856,"src":"849:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1834,"name":"uint256","nodeType":"ElementaryTypeName","src":"849:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1836,"nodeType":"VariableDeclarationStatement","src":"849:11:14"},{"AST":{"nativeSrc":"899:67:14","nodeType":"YulBlock","src":"899:67:14","statements":[{"nativeSrc":"917:35:14","nodeType":"YulAssignment","src":"917:35:14","value":{"arguments":[{"name":"buffer","nativeSrc":"928:6:14","nodeType":"YulIdentifier","src":"928:6:14"},{"arguments":[{"kind":"number","nativeSrc":"940:2:14","nodeType":"YulLiteral","src":"940:2:14","type":"","value":"32"},{"name":"length","nativeSrc":"944:6:14","nodeType":"YulIdentifier","src":"944:6:14"}],"functionName":{"name":"add","nativeSrc":"936:3:14","nodeType":"YulIdentifier","src":"936:3:14"},"nativeSrc":"936:15:14","nodeType":"YulFunctionCall","src":"936:15:14"}],"functionName":{"name":"add","nativeSrc":"924:3:14","nodeType":"YulIdentifier","src":"924:3:14"},"nativeSrc":"924:28:14","nodeType":"YulFunctionCall","src":"924:28:14"},"variableNames":[{"name":"ptr","nativeSrc":"917:3:14","nodeType":"YulIdentifier","src":"917:3:14"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1828,"isOffset":false,"isSlot":false,"src":"928:6:14","valueSize":1},{"declaration":1819,"isOffset":false,"isSlot":false,"src":"944:6:14","valueSize":1},{"declaration":1835,"isOffset":false,"isSlot":false,"src":"917:3:14","valueSize":1}],"flags":["memory-safe"],"id":1837,"nodeType":"InlineAssembly","src":"874:92:14"},{"body":{"id":1852,"nodeType":"Block","src":"992:234:14","statements":[{"expression":{"id":1840,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":false,"src":"1010:5:14","subExpression":{"id":1839,"name":"ptr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1835,"src":"1010:3:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1841,"nodeType":"ExpressionStatement","src":"1010:5:14"},{"AST":{"nativeSrc":"1058:86:14","nodeType":"YulBlock","src":"1058:86:14","statements":[{"expression":{"arguments":[{"name":"ptr","nativeSrc":"1088:3:14","nodeType":"YulIdentifier","src":"1088:3:14"},{"arguments":[{"arguments":[{"name":"value","nativeSrc":"1102:5:14","nodeType":"YulIdentifier","src":"1102:5:14"},{"kind":"number","nativeSrc":"1109:2:14","nodeType":"YulLiteral","src":"1109:2:14","type":"","value":"10"}],"functionName":{"name":"mod","nativeSrc":"1098:3:14","nodeType":"YulIdentifier","src":"1098:3:14"},"nativeSrc":"1098:14:14","nodeType":"YulFunctionCall","src":"1098:14:14"},{"name":"HEX_DIGITS","nativeSrc":"1114:10:14","nodeType":"YulIdentifier","src":"1114:10:14"}],"functionName":{"name":"byte","nativeSrc":"1093:4:14","nodeType":"YulIdentifier","src":"1093:4:14"},"nativeSrc":"1093:32:14","nodeType":"YulFunctionCall","src":"1093:32:14"}],"functionName":{"name":"mstore8","nativeSrc":"1080:7:14","nodeType":"YulIdentifier","src":"1080:7:14"},"nativeSrc":"1080:46:14","nodeType":"YulFunctionCall","src":"1080:46:14"},"nativeSrc":"1080:46:14","nodeType":"YulExpressionStatement","src":"1080:46:14"}]},"evmVersion":"paris","externalReferences":[{"declaration":1800,"isOffset":false,"isSlot":false,"src":"1114:10:14","valueSize":1},{"declaration":1835,"isOffset":false,"isSlot":false,"src":"1088:3:14","valueSize":1},{"declaration":1813,"isOffset":false,"isSlot":false,"src":"1102:5:14","valueSize":1}],"flags":["memory-safe"],"id":1842,"nodeType":"InlineAssembly","src":"1033:111:14"},{"expression":{"id":1845,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1843,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1813,"src":"1161:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"hexValue":"3130","id":1844,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1170:2:14","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"1161:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1846,"nodeType":"ExpressionStatement","src":"1161:11:14"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1849,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1847,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1813,"src":"1194:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1848,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1203:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1194:10:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1851,"nodeType":"IfStatement","src":"1190:21:14","trueBody":{"id":1850,"nodeType":"Break","src":"1206:5:14"}}]},"condition":{"hexValue":"74727565","id":1838,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"986:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"id":1853,"nodeType":"WhileStatement","src":"979:247:14"},{"expression":{"id":1854,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1828,"src":"1246:6:14","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1817,"id":1855,"nodeType":"Return","src":"1239:13:14"}]}]},"documentation":{"id":1811,"nodeType":"StructuredDocumentation","src":"542:90:14","text":" @dev Converts a `uint256` to its ASCII `string` decimal representation."},"id":1858,"implemented":true,"kind":"function","modifiers":[],"name":"toString","nameLocation":"646:8:14","nodeType":"FunctionDefinition","parameters":{"id":1814,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1813,"mutability":"mutable","name":"value","nameLocation":"663:5:14","nodeType":"VariableDeclaration","scope":1858,"src":"655:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1812,"name":"uint256","nodeType":"ElementaryTypeName","src":"655:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"654:15:14"},"returnParameters":{"id":1817,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1816,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1858,"src":"693:13:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1815,"name":"string","nodeType":"ElementaryTypeName","src":"693:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"692:15:14"},"scope":2110,"src":"637:632:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1883,"nodeType":"Block","src":"1445:92:14","statements":[{"expression":{"arguments":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":1871,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1869,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1861,"src":"1476:5:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":1870,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1484:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1476:9:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"","id":1873,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1494:2:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"id":1874,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"1476:20:14","trueExpression":{"hexValue":"2d","id":1872,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1488:3:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561","typeString":"literal_string \"-\""},"value":"-"},"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"arguments":[{"arguments":[{"id":1878,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1861,"src":"1522:5:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"expression":{"id":1876,"name":"SignedMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5661,"src":"1507:10:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SignedMath_$5661_$","typeString":"type(library SignedMath)"}},"id":1877,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1518:3:14","memberName":"abs","nodeType":"MemberAccess","referencedDeclaration":5660,"src":"1507:14:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_int256_$returns$_t_uint256_$","typeString":"function (int256) pure returns (uint256)"}},"id":1879,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1507:21:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1875,"name":"toString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1858,"src":"1498:8:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"}},"id":1880,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1498:31:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":1867,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1462:6:14","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":1866,"name":"string","nodeType":"ElementaryTypeName","src":"1462:6:14","typeDescriptions":{}}},"id":1868,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1469:6:14","memberName":"concat","nodeType":"MemberAccess","src":"1462:13:14","typeDescriptions":{"typeIdentifier":"t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$","typeString":"function () pure returns (string memory)"}},"id":1881,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1462:68:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1865,"id":1882,"nodeType":"Return","src":"1455:75:14"}]},"documentation":{"id":1859,"nodeType":"StructuredDocumentation","src":"1275:89:14","text":" @dev Converts a `int256` to its ASCII `string` decimal representation."},"id":1884,"implemented":true,"kind":"function","modifiers":[],"name":"toStringSigned","nameLocation":"1378:14:14","nodeType":"FunctionDefinition","parameters":{"id":1862,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1861,"mutability":"mutable","name":"value","nameLocation":"1400:5:14","nodeType":"VariableDeclaration","scope":1884,"src":"1393:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1860,"name":"int256","nodeType":"ElementaryTypeName","src":"1393:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1392:14:14"},"returnParameters":{"id":1865,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1864,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1884,"src":"1430:13:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1863,"name":"string","nodeType":"ElementaryTypeName","src":"1430:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1429:15:14"},"scope":2110,"src":"1369:168:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1903,"nodeType":"Block","src":"1716:100:14","statements":[{"id":1902,"nodeType":"UncheckedBlock","src":"1726:84:14","statements":[{"expression":{"arguments":[{"id":1893,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1887,"src":"1769:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1899,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1896,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1887,"src":"1788:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1894,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3752,"src":"1776:4:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$3752_$","typeString":"type(library Math)"}},"id":1895,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1781:6:14","memberName":"log256","nodeType":"MemberAccess","referencedDeclaration":3695,"src":"1776:11:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":1897,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1776:18:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":1898,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1797:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1776:22:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1892,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[1904,1987,2007],"referencedDeclaration":1987,"src":"1757:11:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":1900,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1757:42:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1891,"id":1901,"nodeType":"Return","src":"1750:49:14"}]}]},"documentation":{"id":1885,"nodeType":"StructuredDocumentation","src":"1543:94:14","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."},"id":1904,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"1651:11:14","nodeType":"FunctionDefinition","parameters":{"id":1888,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1887,"mutability":"mutable","name":"value","nameLocation":"1671:5:14","nodeType":"VariableDeclaration","scope":1904,"src":"1663:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1886,"name":"uint256","nodeType":"ElementaryTypeName","src":"1663:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1662:15:14"},"returnParameters":{"id":1891,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1890,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1904,"src":"1701:13:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1889,"name":"string","nodeType":"ElementaryTypeName","src":"1701:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1700:15:14"},"scope":2110,"src":"1642:174:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1986,"nodeType":"Block","src":"2029:435:14","statements":[{"assignments":[1915],"declarations":[{"constant":false,"id":1915,"mutability":"mutable","name":"localValue","nameLocation":"2047:10:14","nodeType":"VariableDeclaration","scope":1986,"src":"2039:18:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1914,"name":"uint256","nodeType":"ElementaryTypeName","src":"2039:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1917,"initialValue":{"id":1916,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1907,"src":"2060:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2039:26:14"},{"assignments":[1919],"declarations":[{"constant":false,"id":1919,"mutability":"mutable","name":"buffer","nameLocation":"2088:6:14","nodeType":"VariableDeclaration","scope":1986,"src":"2075:19:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1918,"name":"bytes","nodeType":"ElementaryTypeName","src":"2075:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1928,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1926,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1924,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":1922,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2107:1:14","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1923,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1909,"src":"2111:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2107:10:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"32","id":1925,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2120:1:14","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"2107:14:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1921,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"2097:9:14","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":1920,"name":"bytes","nodeType":"ElementaryTypeName","src":"2101:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":1927,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2097:25:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"2075:47:14"},{"expression":{"id":1933,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1929,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1919,"src":"2132:6:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1931,"indexExpression":{"hexValue":"30","id":1930,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2139:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2132:9:14","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":1932,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2144:3:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d","typeString":"literal_string \"0\""},"value":"0"},"src":"2132:15:14","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":1934,"nodeType":"ExpressionStatement","src":"2132:15:14"},{"expression":{"id":1939,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1935,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1919,"src":"2157:6:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1937,"indexExpression":{"hexValue":"31","id":1936,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2164:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2157:9:14","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"78","id":1938,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2169:3:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83","typeString":"literal_string \"x\""},"value":"x"},"src":"2157:15:14","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":1940,"nodeType":"ExpressionStatement","src":"2157:15:14"},{"body":{"id":1969,"nodeType":"Block","src":"2227:95:14","statements":[{"expression":{"id":1963,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1955,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1919,"src":"2241:6:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1957,"indexExpression":{"id":1956,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1942,"src":"2248:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2241:9:14","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":1958,"name":"HEX_DIGITS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1800,"src":"2253:10:14","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"id":1962,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1961,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1959,"name":"localValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1915,"src":"2264:10:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307866","id":1960,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2277:3:14","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"0xf"},"src":"2264:16:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2253:28:14","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"2241:40:14","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":1964,"nodeType":"ExpressionStatement","src":"2241:40:14"},{"expression":{"id":1967,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1965,"name":"localValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1915,"src":"2295:10:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":1966,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2310:1:14","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"2295:16:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1968,"nodeType":"ExpressionStatement","src":"2295:16:14"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1951,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1949,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1942,"src":"2215:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"31","id":1950,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2219:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2215:5:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1970,"initializationExpression":{"assignments":[1942],"declarations":[{"constant":false,"id":1942,"mutability":"mutable","name":"i","nameLocation":"2195:1:14","nodeType":"VariableDeclaration","scope":1970,"src":"2187:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1941,"name":"uint256","nodeType":"ElementaryTypeName","src":"2187:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1948,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1947,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1945,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":1943,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2199:1:14","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1944,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1909,"src":"2203:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2199:10:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":1946,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2212:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2199:14:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2187:26:14"},"isSimpleCounterLoop":false,"loopExpression":{"expression":{"id":1953,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":true,"src":"2222:3:14","subExpression":{"id":1952,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1942,"src":"2224:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1954,"nodeType":"ExpressionStatement","src":"2222:3:14"},"nodeType":"ForStatement","src":"2182:140:14"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1973,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1971,"name":"localValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1915,"src":"2335:10:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":1972,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2349:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2335:15:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1980,"nodeType":"IfStatement","src":"2331:96:14","trueBody":{"id":1979,"nodeType":"Block","src":"2352:75:14","statements":[{"errorCall":{"arguments":[{"id":1975,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1907,"src":"2402:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1976,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1909,"src":"2409:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1974,"name":"StringsInsufficientHexLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1810,"src":"2373:28:14","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$_t_uint256_$returns$_t_error_$","typeString":"function (uint256,uint256) pure returns (error)"}},"id":1977,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2373:43:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1978,"nodeType":"RevertStatement","src":"2366:50:14"}]}},{"expression":{"arguments":[{"id":1983,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1919,"src":"2450:6:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1982,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2443:6:14","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":1981,"name":"string","nodeType":"ElementaryTypeName","src":"2443:6:14","typeDescriptions":{}}},"id":1984,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2443:14:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1913,"id":1985,"nodeType":"Return","src":"2436:21:14"}]},"documentation":{"id":1905,"nodeType":"StructuredDocumentation","src":"1822:112:14","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."},"id":1987,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"1948:11:14","nodeType":"FunctionDefinition","parameters":{"id":1910,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1907,"mutability":"mutable","name":"value","nameLocation":"1968:5:14","nodeType":"VariableDeclaration","scope":1987,"src":"1960:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1906,"name":"uint256","nodeType":"ElementaryTypeName","src":"1960:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1909,"mutability":"mutable","name":"length","nameLocation":"1983:6:14","nodeType":"VariableDeclaration","scope":1987,"src":"1975:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1908,"name":"uint256","nodeType":"ElementaryTypeName","src":"1975:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1959:31:14"},"returnParameters":{"id":1913,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1912,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1987,"src":"2014:13:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1911,"name":"string","nodeType":"ElementaryTypeName","src":"2014:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2013:15:14"},"scope":2110,"src":"1939:525:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2006,"nodeType":"Block","src":"2696:75:14","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"id":2000,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1990,"src":"2741:4:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1999,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2733:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":1998,"name":"uint160","nodeType":"ElementaryTypeName","src":"2733:7:14","typeDescriptions":{}}},"id":2001,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2733:13:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":1997,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2725:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1996,"name":"uint256","nodeType":"ElementaryTypeName","src":"2725:7:14","typeDescriptions":{}}},"id":2002,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2725:22:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2003,"name":"ADDRESS_LENGTH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1803,"src":"2749:14:14","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":1995,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[1904,1987,2007],"referencedDeclaration":1987,"src":"2713:11:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":2004,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2713:51:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1994,"id":2005,"nodeType":"Return","src":"2706:58:14"}]},"documentation":{"id":1988,"nodeType":"StructuredDocumentation","src":"2470:148:14","text":" @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n representation."},"id":2007,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"2632:11:14","nodeType":"FunctionDefinition","parameters":{"id":1991,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1990,"mutability":"mutable","name":"addr","nameLocation":"2652:4:14","nodeType":"VariableDeclaration","scope":2007,"src":"2644:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1989,"name":"address","nodeType":"ElementaryTypeName","src":"2644:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2643:14:14"},"returnParameters":{"id":1994,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1993,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2007,"src":"2681:13:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1992,"name":"string","nodeType":"ElementaryTypeName","src":"2681:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2680:15:14"},"scope":2110,"src":"2623:148:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2071,"nodeType":"Block","src":"3028:642:14","statements":[{"assignments":[2016],"declarations":[{"constant":false,"id":2016,"mutability":"mutable","name":"buffer","nameLocation":"3051:6:14","nodeType":"VariableDeclaration","scope":2071,"src":"3038:19:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2015,"name":"bytes","nodeType":"ElementaryTypeName","src":"3038:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2023,"initialValue":{"arguments":[{"arguments":[{"id":2020,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2010,"src":"3078:4:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2019,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[1904,1987,2007],"referencedDeclaration":2007,"src":"3066:11:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_address_$returns$_t_string_memory_ptr_$","typeString":"function (address) pure returns (string memory)"}},"id":2021,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3066:17:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2018,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3060:5:14","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2017,"name":"bytes","nodeType":"ElementaryTypeName","src":"3060:5:14","typeDescriptions":{}}},"id":2022,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3060:24:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"3038:46:14"},{"assignments":[2025],"declarations":[{"constant":false,"id":2025,"mutability":"mutable","name":"hashValue","nameLocation":"3177:9:14","nodeType":"VariableDeclaration","scope":2071,"src":"3169:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2024,"name":"uint256","nodeType":"ElementaryTypeName","src":"3169:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2026,"nodeType":"VariableDeclarationStatement","src":"3169:17:14"},{"AST":{"nativeSrc":"3221:78:14","nodeType":"YulBlock","src":"3221:78:14","statements":[{"nativeSrc":"3235:54:14","nodeType":"YulAssignment","src":"3235:54:14","value":{"arguments":[{"kind":"number","nativeSrc":"3252:2:14","nodeType":"YulLiteral","src":"3252:2:14","type":"","value":"96"},{"arguments":[{"arguments":[{"name":"buffer","nativeSrc":"3270:6:14","nodeType":"YulIdentifier","src":"3270:6:14"},{"kind":"number","nativeSrc":"3278:4:14","nodeType":"YulLiteral","src":"3278:4:14","type":"","value":"0x22"}],"functionName":{"name":"add","nativeSrc":"3266:3:14","nodeType":"YulIdentifier","src":"3266:3:14"},"nativeSrc":"3266:17:14","nodeType":"YulFunctionCall","src":"3266:17:14"},{"kind":"number","nativeSrc":"3285:2:14","nodeType":"YulLiteral","src":"3285:2:14","type":"","value":"40"}],"functionName":{"name":"keccak256","nativeSrc":"3256:9:14","nodeType":"YulIdentifier","src":"3256:9:14"},"nativeSrc":"3256:32:14","nodeType":"YulFunctionCall","src":"3256:32:14"}],"functionName":{"name":"shr","nativeSrc":"3248:3:14","nodeType":"YulIdentifier","src":"3248:3:14"},"nativeSrc":"3248:41:14","nodeType":"YulFunctionCall","src":"3248:41:14"},"variableNames":[{"name":"hashValue","nativeSrc":"3235:9:14","nodeType":"YulIdentifier","src":"3235:9:14"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2016,"isOffset":false,"isSlot":false,"src":"3270:6:14","valueSize":1},{"declaration":2025,"isOffset":false,"isSlot":false,"src":"3235:9:14","valueSize":1}],"flags":["memory-safe"],"id":2027,"nodeType":"InlineAssembly","src":"3196:103:14"},{"body":{"id":2064,"nodeType":"Block","src":"3342:291:14","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2051,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2042,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2040,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2038,"name":"hashValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2025,"src":"3448:9:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307866","id":2039,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3460:3:14","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"0xf"},"src":"3448:15:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"37","id":2041,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3466:1:14","typeDescriptions":{"typeIdentifier":"t_rational_7_by_1","typeString":"int_const 7"},"value":"7"},"src":"3448:19:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":2050,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"baseExpression":{"id":2045,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2016,"src":"3477:6:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2047,"indexExpression":{"id":2046,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2029,"src":"3484:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3477:9:14","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":2044,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3471:5:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":2043,"name":"uint8","nodeType":"ElementaryTypeName","src":"3471:5:14","typeDescriptions":{}}},"id":2048,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3471:16:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3936","id":2049,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3490:2:14","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},"src":"3471:21:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3448:44:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2059,"nodeType":"IfStatement","src":"3444:150:14","trueBody":{"id":2058,"nodeType":"Block","src":"3494:100:14","statements":[{"expression":{"id":2056,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2052,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2016,"src":"3562:6:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2054,"indexExpression":{"id":2053,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2029,"src":"3569:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3562:9:14","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"^=","rightHandSide":{"hexValue":"30783230","id":2055,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3575:4:14","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"0x20"},"src":"3562:17:14","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2057,"nodeType":"ExpressionStatement","src":"3562:17:14"}]}},{"expression":{"id":2062,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2060,"name":"hashValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2025,"src":"3607:9:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":2061,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3621:1:14","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"3607:15:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2063,"nodeType":"ExpressionStatement","src":"3607:15:14"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2034,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2032,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2029,"src":"3330:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"31","id":2033,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3334:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3330:5:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2065,"initializationExpression":{"assignments":[2029],"declarations":[{"constant":false,"id":2029,"mutability":"mutable","name":"i","nameLocation":"3322:1:14","nodeType":"VariableDeclaration","scope":2065,"src":"3314:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2028,"name":"uint256","nodeType":"ElementaryTypeName","src":"3314:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2031,"initialValue":{"hexValue":"3431","id":2030,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3326:2:14","typeDescriptions":{"typeIdentifier":"t_rational_41_by_1","typeString":"int_const 41"},"value":"41"},"nodeType":"VariableDeclarationStatement","src":"3314:14:14"},"isSimpleCounterLoop":false,"loopExpression":{"expression":{"id":2036,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":true,"src":"3337:3:14","subExpression":{"id":2035,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2029,"src":"3339:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2037,"nodeType":"ExpressionStatement","src":"3337:3:14"},"nodeType":"ForStatement","src":"3309:324:14"},{"expression":{"arguments":[{"id":2068,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2016,"src":"3656:6:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2067,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3649:6:14","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":2066,"name":"string","nodeType":"ElementaryTypeName","src":"3649:6:14","typeDescriptions":{}}},"id":2069,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3649:14:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2014,"id":2070,"nodeType":"Return","src":"3642:21:14"}]},"documentation":{"id":2008,"nodeType":"StructuredDocumentation","src":"2777:165:14","text":" @dev Converts an `address` with fixed length of 20 bytes to its checksummed ASCII `string` hexadecimal\n representation, according to EIP-55."},"id":2072,"implemented":true,"kind":"function","modifiers":[],"name":"toChecksumHexString","nameLocation":"2956:19:14","nodeType":"FunctionDefinition","parameters":{"id":2011,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2010,"mutability":"mutable","name":"addr","nameLocation":"2984:4:14","nodeType":"VariableDeclaration","scope":2072,"src":"2976:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2009,"name":"address","nodeType":"ElementaryTypeName","src":"2976:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2975:14:14"},"returnParameters":{"id":2014,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2013,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2072,"src":"3013:13:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2012,"name":"string","nodeType":"ElementaryTypeName","src":"3013:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3012:15:14"},"scope":2110,"src":"2947:723:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2108,"nodeType":"Block","src":"3825:104:14","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2106,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2092,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":2084,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2075,"src":"3848:1:14","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2083,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3842:5:14","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2082,"name":"bytes","nodeType":"ElementaryTypeName","src":"3842:5:14","typeDescriptions":{}}},"id":2085,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3842:8:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2086,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3851:6:14","memberName":"length","nodeType":"MemberAccess","src":"3842:15:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":2089,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2077,"src":"3867:1:14","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2088,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3861:5:14","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2087,"name":"bytes","nodeType":"ElementaryTypeName","src":"3861:5:14","typeDescriptions":{}}},"id":2090,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3861:8:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2091,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3870:6:14","memberName":"length","nodeType":"MemberAccess","src":"3861:15:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3842:34:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":2105,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":2096,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2075,"src":"3896:1:14","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2095,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3890:5:14","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2094,"name":"bytes","nodeType":"ElementaryTypeName","src":"3890:5:14","typeDescriptions":{}}},"id":2097,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3890:8:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2093,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"3880:9:14","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2098,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3880:19:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"arguments":[{"id":2102,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2077,"src":"3919:1:14","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2101,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3913:5:14","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2100,"name":"bytes","nodeType":"ElementaryTypeName","src":"3913:5:14","typeDescriptions":{}}},"id":2103,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3913:8:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2099,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"3903:9:14","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2104,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3903:19:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3880:42:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3842:80:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2081,"id":2107,"nodeType":"Return","src":"3835:87:14"}]},"documentation":{"id":2073,"nodeType":"StructuredDocumentation","src":"3676:66:14","text":" @dev Returns true if the two strings are equal."},"id":2109,"implemented":true,"kind":"function","modifiers":[],"name":"equal","nameLocation":"3756:5:14","nodeType":"FunctionDefinition","parameters":{"id":2078,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2075,"mutability":"mutable","name":"a","nameLocation":"3776:1:14","nodeType":"VariableDeclaration","scope":2109,"src":"3762:15:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2074,"name":"string","nodeType":"ElementaryTypeName","src":"3762:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2077,"mutability":"mutable","name":"b","nameLocation":"3793:1:14","nodeType":"VariableDeclaration","scope":2109,"src":"3779:15:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2076,"name":"string","nodeType":"ElementaryTypeName","src":"3779:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3761:34:14"},"returnParameters":{"id":2081,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2080,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2109,"src":"3819:4:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2079,"name":"bool","nodeType":"ElementaryTypeName","src":"3819:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3818:6:14"},"scope":2110,"src":"3747:182:14","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":2111,"src":"251:3680:14","usedErrors":[1810],"usedEvents":[]}],"src":"101:3831:14"},"id":14},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/introspection/ERC165.sol","exportedSymbols":{"ERC165":[2134],"IERC165":[2146]},"id":2135,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2112,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"114:24:15"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"./IERC165.sol","id":2114,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2135,"sourceUnit":2147,"src":"140:38:15","symbolAliases":[{"foreign":{"id":2113,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2146,"src":"148:7:15","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":2116,"name":"IERC165","nameLocations":["688:7:15"],"nodeType":"IdentifierPath","referencedDeclaration":2146,"src":"688:7:15"},"id":2117,"nodeType":"InheritanceSpecifier","src":"688:7:15"}],"canonicalName":"ERC165","contractDependencies":[],"contractKind":"contract","documentation":{"id":2115,"nodeType":"StructuredDocumentation","src":"180:479:15","text":" @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```"},"fullyImplemented":true,"id":2134,"linearizedBaseContracts":[2134,2146],"name":"ERC165","nameLocation":"678:6:15","nodeType":"ContractDefinition","nodes":[{"baseFunctions":[2145],"body":{"id":2132,"nodeType":"Block","src":"845:64:15","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":2130,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2125,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2120,"src":"862:11:15","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":2127,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2146,"src":"882:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC165_$2146_$","typeString":"type(contract IERC165)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC165_$2146_$","typeString":"type(contract IERC165)"}],"id":2126,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"877:4:15","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2128,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"877:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC165_$2146","typeString":"type(contract IERC165)"}},"id":2129,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"891:11:15","memberName":"interfaceId","nodeType":"MemberAccess","src":"877:25:15","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"862:40:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2124,"id":2131,"nodeType":"Return","src":"855:47:15"}]},"documentation":{"id":2118,"nodeType":"StructuredDocumentation","src":"702:56:15","text":" @dev See {IERC165-supportsInterface}."},"functionSelector":"01ffc9a7","id":2133,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"772:17:15","nodeType":"FunctionDefinition","parameters":{"id":2121,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2120,"mutability":"mutable","name":"interfaceId","nameLocation":"797:11:15","nodeType":"VariableDeclaration","scope":2133,"src":"790:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":2119,"name":"bytes4","nodeType":"ElementaryTypeName","src":"790:6:15","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"789:20:15"},"returnParameters":{"id":2124,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2123,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2133,"src":"839:4:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2122,"name":"bool","nodeType":"ElementaryTypeName","src":"839:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"838:6:15"},"scope":2134,"src":"763:146:15","stateMutability":"view","virtual":true,"visibility":"public"}],"scope":2135,"src":"660:251:15","usedErrors":[],"usedEvents":[]}],"src":"114:798:15"},"id":15},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","exportedSymbols":{"IERC165":[2146]},"id":2147,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2136,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"115:24:16"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC165","contractDependencies":[],"contractKind":"interface","documentation":{"id":2137,"nodeType":"StructuredDocumentation","src":"141:280:16","text":" @dev Interface of the ERC-165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[ERC].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."},"fullyImplemented":false,"id":2146,"linearizedBaseContracts":[2146],"name":"IERC165","nameLocation":"432:7:16","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":2138,"nodeType":"StructuredDocumentation","src":"446:340:16","text":" @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."},"functionSelector":"01ffc9a7","id":2145,"implemented":false,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"800:17:16","nodeType":"FunctionDefinition","parameters":{"id":2141,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2140,"mutability":"mutable","name":"interfaceId","nameLocation":"825:11:16","nodeType":"VariableDeclaration","scope":2145,"src":"818:18:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":2139,"name":"bytes4","nodeType":"ElementaryTypeName","src":"818:6:16","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"817:20:16"},"returnParameters":{"id":2144,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2143,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2145,"src":"861:4:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2142,"name":"bool","nodeType":"ElementaryTypeName","src":"861:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"860:6:16"},"scope":2146,"src":"791:76:16","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":2147,"src":"422:447:16","usedErrors":[],"usedEvents":[]}],"src":"115:755:16"},"id":16},"@openzeppelin/contracts/utils/math/Math.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","exportedSymbols":{"Math":[3752],"Panic":[1721],"SafeCast":[5517]},"id":3753,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2148,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"103:24:17"},{"absolutePath":"@openzeppelin/contracts/utils/Panic.sol","file":"../Panic.sol","id":2150,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3753,"sourceUnit":1722,"src":"129:35:17","symbolAliases":[{"foreign":{"id":2149,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1721,"src":"137:5:17","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","file":"./SafeCast.sol","id":2152,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3753,"sourceUnit":5518,"src":"165:40:17","symbolAliases":[{"foreign":{"id":2151,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5517,"src":"173:8:17","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Math","contractDependencies":[],"contractKind":"library","documentation":{"id":2153,"nodeType":"StructuredDocumentation","src":"207:73:17","text":" @dev Standard math utilities missing in the Solidity language."},"fullyImplemented":true,"id":3752,"linearizedBaseContracts":[3752],"name":"Math","nameLocation":"289:4:17","nodeType":"ContractDefinition","nodes":[{"canonicalName":"Math.Rounding","id":2158,"members":[{"id":2154,"name":"Floor","nameLocation":"324:5:17","nodeType":"EnumValue","src":"324:5:17"},{"id":2155,"name":"Ceil","nameLocation":"367:4:17","nodeType":"EnumValue","src":"367:4:17"},{"id":2156,"name":"Trunc","nameLocation":"409:5:17","nodeType":"EnumValue","src":"409:5:17"},{"id":2157,"name":"Expand","nameLocation":"439:6:17","nodeType":"EnumValue","src":"439:6:17"}],"name":"Rounding","nameLocation":"305:8:17","nodeType":"EnumDefinition","src":"300:169:17"},{"body":{"id":2189,"nodeType":"Block","src":"677:140:17","statements":[{"id":2188,"nodeType":"UncheckedBlock","src":"687:124:17","statements":[{"assignments":[2171],"declarations":[{"constant":false,"id":2171,"mutability":"mutable","name":"c","nameLocation":"719:1:17","nodeType":"VariableDeclaration","scope":2188,"src":"711:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2170,"name":"uint256","nodeType":"ElementaryTypeName","src":"711:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2175,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2174,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2172,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2161,"src":"723:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":2173,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2163,"src":"727:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"723:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"711:17:17"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2178,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2176,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2171,"src":"746:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2177,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2161,"src":"750:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"746:5:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2183,"nodeType":"IfStatement","src":"742:28:17","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":2179,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"761:5:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":2180,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"768:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":2181,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"760:10:17","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":2169,"id":2182,"nodeType":"Return","src":"753:17:17"}},{"expression":{"components":[{"hexValue":"74727565","id":2184,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"792:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":2185,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2171,"src":"798:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2186,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"791:9:17","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":2169,"id":2187,"nodeType":"Return","src":"784:16:17"}]}]},"documentation":{"id":2159,"nodeType":"StructuredDocumentation","src":"475:106:17","text":" @dev Returns the addition of two unsigned integers, with an success flag (no overflow)."},"id":2190,"implemented":true,"kind":"function","modifiers":[],"name":"tryAdd","nameLocation":"595:6:17","nodeType":"FunctionDefinition","parameters":{"id":2164,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2161,"mutability":"mutable","name":"a","nameLocation":"610:1:17","nodeType":"VariableDeclaration","scope":2190,"src":"602:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2160,"name":"uint256","nodeType":"ElementaryTypeName","src":"602:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2163,"mutability":"mutable","name":"b","nameLocation":"621:1:17","nodeType":"VariableDeclaration","scope":2190,"src":"613:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2162,"name":"uint256","nodeType":"ElementaryTypeName","src":"613:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"601:22:17"},"returnParameters":{"id":2169,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2166,"mutability":"mutable","name":"success","nameLocation":"652:7:17","nodeType":"VariableDeclaration","scope":2190,"src":"647:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2165,"name":"bool","nodeType":"ElementaryTypeName","src":"647:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2168,"mutability":"mutable","name":"result","nameLocation":"669:6:17","nodeType":"VariableDeclaration","scope":2190,"src":"661:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2167,"name":"uint256","nodeType":"ElementaryTypeName","src":"661:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"646:30:17"},"scope":3752,"src":"586:231:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2217,"nodeType":"Block","src":"1028:113:17","statements":[{"id":2216,"nodeType":"UncheckedBlock","src":"1038:97:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2204,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2202,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2195,"src":"1066:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":2203,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2193,"src":"1070:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1066:5:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2209,"nodeType":"IfStatement","src":"1062:28:17","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":2205,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1081:5:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":2206,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1088:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":2207,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1080:10:17","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":2201,"id":2208,"nodeType":"Return","src":"1073:17:17"}},{"expression":{"components":[{"hexValue":"74727565","id":2210,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1112:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2213,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2211,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2193,"src":"1118:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":2212,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2195,"src":"1122:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1118:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2214,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1111:13:17","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":2201,"id":2215,"nodeType":"Return","src":"1104:20:17"}]}]},"documentation":{"id":2191,"nodeType":"StructuredDocumentation","src":"823:109:17","text":" @dev Returns the subtraction of two unsigned integers, with an success flag (no overflow)."},"id":2218,"implemented":true,"kind":"function","modifiers":[],"name":"trySub","nameLocation":"946:6:17","nodeType":"FunctionDefinition","parameters":{"id":2196,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2193,"mutability":"mutable","name":"a","nameLocation":"961:1:17","nodeType":"VariableDeclaration","scope":2218,"src":"953:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2192,"name":"uint256","nodeType":"ElementaryTypeName","src":"953:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2195,"mutability":"mutable","name":"b","nameLocation":"972:1:17","nodeType":"VariableDeclaration","scope":2218,"src":"964:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2194,"name":"uint256","nodeType":"ElementaryTypeName","src":"964:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"952:22:17"},"returnParameters":{"id":2201,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2198,"mutability":"mutable","name":"success","nameLocation":"1003:7:17","nodeType":"VariableDeclaration","scope":2218,"src":"998:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2197,"name":"bool","nodeType":"ElementaryTypeName","src":"998:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2200,"mutability":"mutable","name":"result","nameLocation":"1020:6:17","nodeType":"VariableDeclaration","scope":2218,"src":"1012:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2199,"name":"uint256","nodeType":"ElementaryTypeName","src":"1012:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"997:30:17"},"scope":3752,"src":"937:204:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2259,"nodeType":"Block","src":"1355:417:17","statements":[{"id":2258,"nodeType":"UncheckedBlock","src":"1365:401:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2232,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2230,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2221,"src":"1623:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2231,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1628:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1623:6:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2237,"nodeType":"IfStatement","src":"1619:28:17","trueBody":{"expression":{"components":[{"hexValue":"74727565","id":2233,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1639:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"hexValue":"30","id":2234,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1645:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":2235,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1638:9:17","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":2229,"id":2236,"nodeType":"Return","src":"1631:16:17"}},{"assignments":[2239],"declarations":[{"constant":false,"id":2239,"mutability":"mutable","name":"c","nameLocation":"1669:1:17","nodeType":"VariableDeclaration","scope":2258,"src":"1661:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2238,"name":"uint256","nodeType":"ElementaryTypeName","src":"1661:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2243,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2242,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2240,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2221,"src":"1673:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2241,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2223,"src":"1677:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1673:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1661:17:17"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2248,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2246,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2244,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2239,"src":"1696:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2245,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2221,"src":"1700:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1696:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":2247,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2223,"src":"1705:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1696:10:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2253,"nodeType":"IfStatement","src":"1692:33:17","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":2249,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1716:5:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":2250,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1723:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":2251,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1715:10:17","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":2229,"id":2252,"nodeType":"Return","src":"1708:17:17"}},{"expression":{"components":[{"hexValue":"74727565","id":2254,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1747:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":2255,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2239,"src":"1753:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2256,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1746:9:17","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":2229,"id":2257,"nodeType":"Return","src":"1739:16:17"}]}]},"documentation":{"id":2219,"nodeType":"StructuredDocumentation","src":"1147:112:17","text":" @dev Returns the multiplication of two unsigned integers, with an success flag (no overflow)."},"id":2260,"implemented":true,"kind":"function","modifiers":[],"name":"tryMul","nameLocation":"1273:6:17","nodeType":"FunctionDefinition","parameters":{"id":2224,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2221,"mutability":"mutable","name":"a","nameLocation":"1288:1:17","nodeType":"VariableDeclaration","scope":2260,"src":"1280:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2220,"name":"uint256","nodeType":"ElementaryTypeName","src":"1280:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2223,"mutability":"mutable","name":"b","nameLocation":"1299:1:17","nodeType":"VariableDeclaration","scope":2260,"src":"1291:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2222,"name":"uint256","nodeType":"ElementaryTypeName","src":"1291:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1279:22:17"},"returnParameters":{"id":2229,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2226,"mutability":"mutable","name":"success","nameLocation":"1330:7:17","nodeType":"VariableDeclaration","scope":2260,"src":"1325:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2225,"name":"bool","nodeType":"ElementaryTypeName","src":"1325:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2228,"mutability":"mutable","name":"result","nameLocation":"1347:6:17","nodeType":"VariableDeclaration","scope":2260,"src":"1339:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2227,"name":"uint256","nodeType":"ElementaryTypeName","src":"1339:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1324:30:17"},"scope":3752,"src":"1264:508:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2287,"nodeType":"Block","src":"1987:114:17","statements":[{"id":2286,"nodeType":"UncheckedBlock","src":"1997:98:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2274,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2272,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2265,"src":"2025:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2273,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2030:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2025:6:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2279,"nodeType":"IfStatement","src":"2021:29:17","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":2275,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2041:5:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":2276,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2048:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":2277,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"2040:10:17","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":2271,"id":2278,"nodeType":"Return","src":"2033:17:17"}},{"expression":{"components":[{"hexValue":"74727565","id":2280,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2072:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2283,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2281,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2263,"src":"2078:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2282,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2265,"src":"2082:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2078:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2284,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2071:13:17","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":2271,"id":2285,"nodeType":"Return","src":"2064:20:17"}]}]},"documentation":{"id":2261,"nodeType":"StructuredDocumentation","src":"1778:113:17","text":" @dev Returns the division of two unsigned integers, with a success flag (no division by zero)."},"id":2288,"implemented":true,"kind":"function","modifiers":[],"name":"tryDiv","nameLocation":"1905:6:17","nodeType":"FunctionDefinition","parameters":{"id":2266,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2263,"mutability":"mutable","name":"a","nameLocation":"1920:1:17","nodeType":"VariableDeclaration","scope":2288,"src":"1912:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2262,"name":"uint256","nodeType":"ElementaryTypeName","src":"1912:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2265,"mutability":"mutable","name":"b","nameLocation":"1931:1:17","nodeType":"VariableDeclaration","scope":2288,"src":"1923:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2264,"name":"uint256","nodeType":"ElementaryTypeName","src":"1923:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1911:22:17"},"returnParameters":{"id":2271,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2268,"mutability":"mutable","name":"success","nameLocation":"1962:7:17","nodeType":"VariableDeclaration","scope":2288,"src":"1957:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2267,"name":"bool","nodeType":"ElementaryTypeName","src":"1957:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2270,"mutability":"mutable","name":"result","nameLocation":"1979:6:17","nodeType":"VariableDeclaration","scope":2288,"src":"1971:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2269,"name":"uint256","nodeType":"ElementaryTypeName","src":"1971:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1956:30:17"},"scope":3752,"src":"1896:205:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2315,"nodeType":"Block","src":"2326:114:17","statements":[{"id":2314,"nodeType":"UncheckedBlock","src":"2336:98:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2302,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2300,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2293,"src":"2364:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2301,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2369:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2364:6:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2307,"nodeType":"IfStatement","src":"2360:29:17","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":2303,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2380:5:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":2304,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2387:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":2305,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"2379:10:17","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":2299,"id":2306,"nodeType":"Return","src":"2372:17:17"}},{"expression":{"components":[{"hexValue":"74727565","id":2308,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2411:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2311,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2309,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2291,"src":"2417:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"id":2310,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2293,"src":"2421:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2417:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2312,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2410:13:17","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":2299,"id":2313,"nodeType":"Return","src":"2403:20:17"}]}]},"documentation":{"id":2289,"nodeType":"StructuredDocumentation","src":"2107:123:17","text":" @dev Returns the remainder of dividing two unsigned integers, with a success flag (no division by zero)."},"id":2316,"implemented":true,"kind":"function","modifiers":[],"name":"tryMod","nameLocation":"2244:6:17","nodeType":"FunctionDefinition","parameters":{"id":2294,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2291,"mutability":"mutable","name":"a","nameLocation":"2259:1:17","nodeType":"VariableDeclaration","scope":2316,"src":"2251:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2290,"name":"uint256","nodeType":"ElementaryTypeName","src":"2251:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2293,"mutability":"mutable","name":"b","nameLocation":"2270:1:17","nodeType":"VariableDeclaration","scope":2316,"src":"2262:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2292,"name":"uint256","nodeType":"ElementaryTypeName","src":"2262:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2250:22:17"},"returnParameters":{"id":2299,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2296,"mutability":"mutable","name":"success","nameLocation":"2301:7:17","nodeType":"VariableDeclaration","scope":2316,"src":"2296:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2295,"name":"bool","nodeType":"ElementaryTypeName","src":"2296:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2298,"mutability":"mutable","name":"result","nameLocation":"2318:6:17","nodeType":"VariableDeclaration","scope":2316,"src":"2310:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2297,"name":"uint256","nodeType":"ElementaryTypeName","src":"2310:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2295:30:17"},"scope":3752,"src":"2235:205:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2342,"nodeType":"Block","src":"2912:207:17","statements":[{"id":2341,"nodeType":"UncheckedBlock","src":"2922:191:17","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2339,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2328,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2323,"src":"3060:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2337,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2331,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2329,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2321,"src":"3066:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":2330,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2323,"src":"3070:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3066:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2332,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3065:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":2335,"name":"condition","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2319,"src":"3091:9:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":2333,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5517,"src":"3075:8:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$5517_$","typeString":"type(library SafeCast)"}},"id":2334,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3084:6:17","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":5516,"src":"3075:15:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":2336,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3075:26:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3065:36:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2338,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3064:38:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3060:42:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2327,"id":2340,"nodeType":"Return","src":"3053:49:17"}]}]},"documentation":{"id":2317,"nodeType":"StructuredDocumentation","src":"2446:374:17","text":" @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n one branch when needed, making this function more expensive."},"id":2343,"implemented":true,"kind":"function","modifiers":[],"name":"ternary","nameLocation":"2834:7:17","nodeType":"FunctionDefinition","parameters":{"id":2324,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2319,"mutability":"mutable","name":"condition","nameLocation":"2847:9:17","nodeType":"VariableDeclaration","scope":2343,"src":"2842:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2318,"name":"bool","nodeType":"ElementaryTypeName","src":"2842:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2321,"mutability":"mutable","name":"a","nameLocation":"2866:1:17","nodeType":"VariableDeclaration","scope":2343,"src":"2858:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2320,"name":"uint256","nodeType":"ElementaryTypeName","src":"2858:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2323,"mutability":"mutable","name":"b","nameLocation":"2877:1:17","nodeType":"VariableDeclaration","scope":2343,"src":"2869:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2322,"name":"uint256","nodeType":"ElementaryTypeName","src":"2869:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2841:38:17"},"returnParameters":{"id":2327,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2326,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2343,"src":"2903:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2325,"name":"uint256","nodeType":"ElementaryTypeName","src":"2903:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2902:9:17"},"scope":3752,"src":"2825:294:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2361,"nodeType":"Block","src":"3256:44:17","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2356,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2354,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2346,"src":"3281:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":2355,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2348,"src":"3285:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3281:5:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":2357,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2346,"src":"3288:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2358,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2348,"src":"3291:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2353,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2343,"src":"3273:7:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":2359,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3273:20:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2352,"id":2360,"nodeType":"Return","src":"3266:27:17"}]},"documentation":{"id":2344,"nodeType":"StructuredDocumentation","src":"3125:59:17","text":" @dev Returns the largest of two numbers."},"id":2362,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"3198:3:17","nodeType":"FunctionDefinition","parameters":{"id":2349,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2346,"mutability":"mutable","name":"a","nameLocation":"3210:1:17","nodeType":"VariableDeclaration","scope":2362,"src":"3202:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2345,"name":"uint256","nodeType":"ElementaryTypeName","src":"3202:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2348,"mutability":"mutable","name":"b","nameLocation":"3221:1:17","nodeType":"VariableDeclaration","scope":2362,"src":"3213:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2347,"name":"uint256","nodeType":"ElementaryTypeName","src":"3213:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3201:22:17"},"returnParameters":{"id":2352,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2351,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2362,"src":"3247:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2350,"name":"uint256","nodeType":"ElementaryTypeName","src":"3247:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3246:9:17"},"scope":3752,"src":"3189:111:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2380,"nodeType":"Block","src":"3438:44:17","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2375,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2373,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2365,"src":"3463:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2374,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2367,"src":"3467:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3463:5:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":2376,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2365,"src":"3470:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2377,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2367,"src":"3473:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2372,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2343,"src":"3455:7:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":2378,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3455:20:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2371,"id":2379,"nodeType":"Return","src":"3448:27:17"}]},"documentation":{"id":2363,"nodeType":"StructuredDocumentation","src":"3306:60:17","text":" @dev Returns the smallest of two numbers."},"id":2381,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"3380:3:17","nodeType":"FunctionDefinition","parameters":{"id":2368,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2365,"mutability":"mutable","name":"a","nameLocation":"3392:1:17","nodeType":"VariableDeclaration","scope":2381,"src":"3384:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2364,"name":"uint256","nodeType":"ElementaryTypeName","src":"3384:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2367,"mutability":"mutable","name":"b","nameLocation":"3403:1:17","nodeType":"VariableDeclaration","scope":2381,"src":"3395:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2366,"name":"uint256","nodeType":"ElementaryTypeName","src":"3395:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3383:22:17"},"returnParameters":{"id":2371,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2370,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2381,"src":"3429:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2369,"name":"uint256","nodeType":"ElementaryTypeName","src":"3429:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3428:9:17"},"scope":3752,"src":"3371:111:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2403,"nodeType":"Block","src":"3666:82:17","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2401,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2393,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2391,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2384,"src":"3721:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":2392,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2386,"src":"3725:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3721:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2394,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3720:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2400,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2397,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2395,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2384,"src":"3731:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":2396,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2386,"src":"3735:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3731:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2398,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3730:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"32","id":2399,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3740:1:17","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"3730:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3720:21:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2390,"id":2402,"nodeType":"Return","src":"3713:28:17"}]},"documentation":{"id":2382,"nodeType":"StructuredDocumentation","src":"3488:102:17","text":" @dev Returns the average of two numbers. The result is rounded towards\n zero."},"id":2404,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"3604:7:17","nodeType":"FunctionDefinition","parameters":{"id":2387,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2384,"mutability":"mutable","name":"a","nameLocation":"3620:1:17","nodeType":"VariableDeclaration","scope":2404,"src":"3612:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2383,"name":"uint256","nodeType":"ElementaryTypeName","src":"3612:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2386,"mutability":"mutable","name":"b","nameLocation":"3631:1:17","nodeType":"VariableDeclaration","scope":2404,"src":"3623:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2385,"name":"uint256","nodeType":"ElementaryTypeName","src":"3623:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3611:22:17"},"returnParameters":{"id":2390,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2389,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2404,"src":"3657:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2388,"name":"uint256","nodeType":"ElementaryTypeName","src":"3657:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3656:9:17"},"scope":3752,"src":"3595:153:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2444,"nodeType":"Block","src":"4040:633:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2416,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2414,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2409,"src":"4054:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2415,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4059:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4054:6:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2425,"nodeType":"IfStatement","src":"4050:150:17","trueBody":{"id":2424,"nodeType":"Block","src":"4062:138:17","statements":[{"expression":{"arguments":[{"expression":{"id":2420,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1721,"src":"4166:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1721_$","typeString":"type(library Panic)"}},"id":2421,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4172:16:17","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":1688,"src":"4166:22:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2417,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1721,"src":"4154:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1721_$","typeString":"type(library Panic)"}},"id":2419,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4160:5:17","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":1720,"src":"4154:11:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":2422,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4154:35:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2423,"nodeType":"ExpressionStatement","src":"4154:35:17"}]}},{"id":2443,"nodeType":"UncheckedBlock","src":"4583:84:17","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2441,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2430,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2428,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2407,"src":"4630:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2429,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4634:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4630:5:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":2426,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5517,"src":"4614:8:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$5517_$","typeString":"type(library SafeCast)"}},"id":2427,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4623:6:17","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":5516,"src":"4614:15:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":2431,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4614:22:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2439,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2437,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2434,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2432,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2407,"src":"4641:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":2433,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4645:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"4641:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2435,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4640:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2436,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2409,"src":"4650:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4640:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2438,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4654:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"4640:15:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2440,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4639:17:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4614:42:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2413,"id":2442,"nodeType":"Return","src":"4607:49:17"}]}]},"documentation":{"id":2405,"nodeType":"StructuredDocumentation","src":"3754:210:17","text":" @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds towards infinity instead\n of rounding towards zero."},"id":2445,"implemented":true,"kind":"function","modifiers":[],"name":"ceilDiv","nameLocation":"3978:7:17","nodeType":"FunctionDefinition","parameters":{"id":2410,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2407,"mutability":"mutable","name":"a","nameLocation":"3994:1:17","nodeType":"VariableDeclaration","scope":2445,"src":"3986:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2406,"name":"uint256","nodeType":"ElementaryTypeName","src":"3986:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2409,"mutability":"mutable","name":"b","nameLocation":"4005:1:17","nodeType":"VariableDeclaration","scope":2445,"src":"3997:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2408,"name":"uint256","nodeType":"ElementaryTypeName","src":"3997:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3985:22:17"},"returnParameters":{"id":2413,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2412,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2445,"src":"4031:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2411,"name":"uint256","nodeType":"ElementaryTypeName","src":"4031:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4030:9:17"},"scope":3752,"src":"3969:704:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2581,"nodeType":"Block","src":"5094:4128:17","statements":[{"id":2580,"nodeType":"UncheckedBlock","src":"5104:4112:17","statements":[{"assignments":[2458],"declarations":[{"constant":false,"id":2458,"mutability":"mutable","name":"prod0","nameLocation":"5441:5:17","nodeType":"VariableDeclaration","scope":2580,"src":"5433:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2457,"name":"uint256","nodeType":"ElementaryTypeName","src":"5433:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2462,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2461,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2459,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2448,"src":"5449:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2460,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2450,"src":"5453:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5449:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5433:21:17"},{"assignments":[2464],"declarations":[{"constant":false,"id":2464,"mutability":"mutable","name":"prod1","nameLocation":"5521:5:17","nodeType":"VariableDeclaration","scope":2580,"src":"5513:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2463,"name":"uint256","nodeType":"ElementaryTypeName","src":"5513:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2465,"nodeType":"VariableDeclarationStatement","src":"5513:13:17"},{"AST":{"nativeSrc":"5593:122:17","nodeType":"YulBlock","src":"5593:122:17","statements":[{"nativeSrc":"5611:30:17","nodeType":"YulVariableDeclaration","src":"5611:30:17","value":{"arguments":[{"name":"x","nativeSrc":"5628:1:17","nodeType":"YulIdentifier","src":"5628:1:17"},{"name":"y","nativeSrc":"5631:1:17","nodeType":"YulIdentifier","src":"5631:1:17"},{"arguments":[{"kind":"number","nativeSrc":"5638:1:17","nodeType":"YulLiteral","src":"5638:1:17","type":"","value":"0"}],"functionName":{"name":"not","nativeSrc":"5634:3:17","nodeType":"YulIdentifier","src":"5634:3:17"},"nativeSrc":"5634:6:17","nodeType":"YulFunctionCall","src":"5634:6:17"}],"functionName":{"name":"mulmod","nativeSrc":"5621:6:17","nodeType":"YulIdentifier","src":"5621:6:17"},"nativeSrc":"5621:20:17","nodeType":"YulFunctionCall","src":"5621:20:17"},"variables":[{"name":"mm","nativeSrc":"5615:2:17","nodeType":"YulTypedName","src":"5615:2:17","type":""}]},{"nativeSrc":"5658:43:17","nodeType":"YulAssignment","src":"5658:43:17","value":{"arguments":[{"arguments":[{"name":"mm","nativeSrc":"5675:2:17","nodeType":"YulIdentifier","src":"5675:2:17"},{"name":"prod0","nativeSrc":"5679:5:17","nodeType":"YulIdentifier","src":"5679:5:17"}],"functionName":{"name":"sub","nativeSrc":"5671:3:17","nodeType":"YulIdentifier","src":"5671:3:17"},"nativeSrc":"5671:14:17","nodeType":"YulFunctionCall","src":"5671:14:17"},{"arguments":[{"name":"mm","nativeSrc":"5690:2:17","nodeType":"YulIdentifier","src":"5690:2:17"},{"name":"prod0","nativeSrc":"5694:5:17","nodeType":"YulIdentifier","src":"5694:5:17"}],"functionName":{"name":"lt","nativeSrc":"5687:2:17","nodeType":"YulIdentifier","src":"5687:2:17"},"nativeSrc":"5687:13:17","nodeType":"YulFunctionCall","src":"5687:13:17"}],"functionName":{"name":"sub","nativeSrc":"5667:3:17","nodeType":"YulIdentifier","src":"5667:3:17"},"nativeSrc":"5667:34:17","nodeType":"YulFunctionCall","src":"5667:34:17"},"variableNames":[{"name":"prod1","nativeSrc":"5658:5:17","nodeType":"YulIdentifier","src":"5658:5:17"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2458,"isOffset":false,"isSlot":false,"src":"5679:5:17","valueSize":1},{"declaration":2458,"isOffset":false,"isSlot":false,"src":"5694:5:17","valueSize":1},{"declaration":2464,"isOffset":false,"isSlot":false,"src":"5658:5:17","valueSize":1},{"declaration":2448,"isOffset":false,"isSlot":false,"src":"5628:1:17","valueSize":1},{"declaration":2450,"isOffset":false,"isSlot":false,"src":"5631:1:17","valueSize":1}],"id":2466,"nodeType":"InlineAssembly","src":"5584:131:17"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2469,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2467,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2464,"src":"5796:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2468,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5805:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5796:10:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2475,"nodeType":"IfStatement","src":"5792:368:17","trueBody":{"id":2474,"nodeType":"Block","src":"5808:352:17","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2472,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2470,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2458,"src":"6126:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2471,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2452,"src":"6134:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6126:19:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2456,"id":2473,"nodeType":"Return","src":"6119:26:17"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2478,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2476,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2452,"src":"6270:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":2477,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2464,"src":"6285:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6270:20:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2494,"nodeType":"IfStatement","src":"6266:143:17","trueBody":{"id":2493,"nodeType":"Block","src":"6292:117:17","statements":[{"expression":{"arguments":[{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2485,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2483,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2452,"src":"6330:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2484,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6345:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6330:16:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"expression":{"id":2486,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1721,"src":"6348:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1721_$","typeString":"type(library Panic)"}},"id":2487,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6354:16:17","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":1688,"src":"6348:22:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":2488,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1721,"src":"6372:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1721_$","typeString":"type(library Panic)"}},"id":2489,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6378:14:17","memberName":"UNDER_OVERFLOW","nodeType":"MemberAccess","referencedDeclaration":1684,"src":"6372:20:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2482,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2343,"src":"6322:7:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":2490,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6322:71:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2479,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1721,"src":"6310:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1721_$","typeString":"type(library Panic)"}},"id":2481,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6316:5:17","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":1720,"src":"6310:11:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":2491,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6310:84:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2492,"nodeType":"ExpressionStatement","src":"6310:84:17"}]}},{"assignments":[2496],"declarations":[{"constant":false,"id":2496,"mutability":"mutable","name":"remainder","nameLocation":"6672:9:17","nodeType":"VariableDeclaration","scope":2580,"src":"6664:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2495,"name":"uint256","nodeType":"ElementaryTypeName","src":"6664:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2497,"nodeType":"VariableDeclarationStatement","src":"6664:17:17"},{"AST":{"nativeSrc":"6704:291:17","nodeType":"YulBlock","src":"6704:291:17","statements":[{"nativeSrc":"6773:38:17","nodeType":"YulAssignment","src":"6773:38:17","value":{"arguments":[{"name":"x","nativeSrc":"6793:1:17","nodeType":"YulIdentifier","src":"6793:1:17"},{"name":"y","nativeSrc":"6796:1:17","nodeType":"YulIdentifier","src":"6796:1:17"},{"name":"denominator","nativeSrc":"6799:11:17","nodeType":"YulIdentifier","src":"6799:11:17"}],"functionName":{"name":"mulmod","nativeSrc":"6786:6:17","nodeType":"YulIdentifier","src":"6786:6:17"},"nativeSrc":"6786:25:17","nodeType":"YulFunctionCall","src":"6786:25:17"},"variableNames":[{"name":"remainder","nativeSrc":"6773:9:17","nodeType":"YulIdentifier","src":"6773:9:17"}]},{"nativeSrc":"6893:41:17","nodeType":"YulAssignment","src":"6893:41:17","value":{"arguments":[{"name":"prod1","nativeSrc":"6906:5:17","nodeType":"YulIdentifier","src":"6906:5:17"},{"arguments":[{"name":"remainder","nativeSrc":"6916:9:17","nodeType":"YulIdentifier","src":"6916:9:17"},{"name":"prod0","nativeSrc":"6927:5:17","nodeType":"YulIdentifier","src":"6927:5:17"}],"functionName":{"name":"gt","nativeSrc":"6913:2:17","nodeType":"YulIdentifier","src":"6913:2:17"},"nativeSrc":"6913:20:17","nodeType":"YulFunctionCall","src":"6913:20:17"}],"functionName":{"name":"sub","nativeSrc":"6902:3:17","nodeType":"YulIdentifier","src":"6902:3:17"},"nativeSrc":"6902:32:17","nodeType":"YulFunctionCall","src":"6902:32:17"},"variableNames":[{"name":"prod1","nativeSrc":"6893:5:17","nodeType":"YulIdentifier","src":"6893:5:17"}]},{"nativeSrc":"6951:30:17","nodeType":"YulAssignment","src":"6951:30:17","value":{"arguments":[{"name":"prod0","nativeSrc":"6964:5:17","nodeType":"YulIdentifier","src":"6964:5:17"},{"name":"remainder","nativeSrc":"6971:9:17","nodeType":"YulIdentifier","src":"6971:9:17"}],"functionName":{"name":"sub","nativeSrc":"6960:3:17","nodeType":"YulIdentifier","src":"6960:3:17"},"nativeSrc":"6960:21:17","nodeType":"YulFunctionCall","src":"6960:21:17"},"variableNames":[{"name":"prod0","nativeSrc":"6951:5:17","nodeType":"YulIdentifier","src":"6951:5:17"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2452,"isOffset":false,"isSlot":false,"src":"6799:11:17","valueSize":1},{"declaration":2458,"isOffset":false,"isSlot":false,"src":"6927:5:17","valueSize":1},{"declaration":2458,"isOffset":false,"isSlot":false,"src":"6951:5:17","valueSize":1},{"declaration":2458,"isOffset":false,"isSlot":false,"src":"6964:5:17","valueSize":1},{"declaration":2464,"isOffset":false,"isSlot":false,"src":"6893:5:17","valueSize":1},{"declaration":2464,"isOffset":false,"isSlot":false,"src":"6906:5:17","valueSize":1},{"declaration":2496,"isOffset":false,"isSlot":false,"src":"6773:9:17","valueSize":1},{"declaration":2496,"isOffset":false,"isSlot":false,"src":"6916:9:17","valueSize":1},{"declaration":2496,"isOffset":false,"isSlot":false,"src":"6971:9:17","valueSize":1},{"declaration":2448,"isOffset":false,"isSlot":false,"src":"6793:1:17","valueSize":1},{"declaration":2450,"isOffset":false,"isSlot":false,"src":"6796:1:17","valueSize":1}],"id":2498,"nodeType":"InlineAssembly","src":"6695:300:17"},{"assignments":[2500],"declarations":[{"constant":false,"id":2500,"mutability":"mutable","name":"twos","nameLocation":"7207:4:17","nodeType":"VariableDeclaration","scope":2580,"src":"7199:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2499,"name":"uint256","nodeType":"ElementaryTypeName","src":"7199:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2507,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2506,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2501,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2452,"src":"7214:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2504,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"30","id":2502,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7229:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":2503,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2452,"src":"7233:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7229:15:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2505,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7228:17:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7214:31:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7199:46:17"},{"AST":{"nativeSrc":"7268:366:17","nodeType":"YulBlock","src":"7268:366:17","statements":[{"nativeSrc":"7333:37:17","nodeType":"YulAssignment","src":"7333:37:17","value":{"arguments":[{"name":"denominator","nativeSrc":"7352:11:17","nodeType":"YulIdentifier","src":"7352:11:17"},{"name":"twos","nativeSrc":"7365:4:17","nodeType":"YulIdentifier","src":"7365:4:17"}],"functionName":{"name":"div","nativeSrc":"7348:3:17","nodeType":"YulIdentifier","src":"7348:3:17"},"nativeSrc":"7348:22:17","nodeType":"YulFunctionCall","src":"7348:22:17"},"variableNames":[{"name":"denominator","nativeSrc":"7333:11:17","nodeType":"YulIdentifier","src":"7333:11:17"}]},{"nativeSrc":"7437:25:17","nodeType":"YulAssignment","src":"7437:25:17","value":{"arguments":[{"name":"prod0","nativeSrc":"7450:5:17","nodeType":"YulIdentifier","src":"7450:5:17"},{"name":"twos","nativeSrc":"7457:4:17","nodeType":"YulIdentifier","src":"7457:4:17"}],"functionName":{"name":"div","nativeSrc":"7446:3:17","nodeType":"YulIdentifier","src":"7446:3:17"},"nativeSrc":"7446:16:17","nodeType":"YulFunctionCall","src":"7446:16:17"},"variableNames":[{"name":"prod0","nativeSrc":"7437:5:17","nodeType":"YulIdentifier","src":"7437:5:17"}]},{"nativeSrc":"7581:39:17","nodeType":"YulAssignment","src":"7581:39:17","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"7601:1:17","nodeType":"YulLiteral","src":"7601:1:17","type":"","value":"0"},{"name":"twos","nativeSrc":"7604:4:17","nodeType":"YulIdentifier","src":"7604:4:17"}],"functionName":{"name":"sub","nativeSrc":"7597:3:17","nodeType":"YulIdentifier","src":"7597:3:17"},"nativeSrc":"7597:12:17","nodeType":"YulFunctionCall","src":"7597:12:17"},{"name":"twos","nativeSrc":"7611:4:17","nodeType":"YulIdentifier","src":"7611:4:17"}],"functionName":{"name":"div","nativeSrc":"7593:3:17","nodeType":"YulIdentifier","src":"7593:3:17"},"nativeSrc":"7593:23:17","nodeType":"YulFunctionCall","src":"7593:23:17"},{"kind":"number","nativeSrc":"7618:1:17","nodeType":"YulLiteral","src":"7618:1:17","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"7589:3:17","nodeType":"YulIdentifier","src":"7589:3:17"},"nativeSrc":"7589:31:17","nodeType":"YulFunctionCall","src":"7589:31:17"},"variableNames":[{"name":"twos","nativeSrc":"7581:4:17","nodeType":"YulIdentifier","src":"7581:4:17"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2452,"isOffset":false,"isSlot":false,"src":"7333:11:17","valueSize":1},{"declaration":2452,"isOffset":false,"isSlot":false,"src":"7352:11:17","valueSize":1},{"declaration":2458,"isOffset":false,"isSlot":false,"src":"7437:5:17","valueSize":1},{"declaration":2458,"isOffset":false,"isSlot":false,"src":"7450:5:17","valueSize":1},{"declaration":2500,"isOffset":false,"isSlot":false,"src":"7365:4:17","valueSize":1},{"declaration":2500,"isOffset":false,"isSlot":false,"src":"7457:4:17","valueSize":1},{"declaration":2500,"isOffset":false,"isSlot":false,"src":"7581:4:17","valueSize":1},{"declaration":2500,"isOffset":false,"isSlot":false,"src":"7604:4:17","valueSize":1},{"declaration":2500,"isOffset":false,"isSlot":false,"src":"7611:4:17","valueSize":1}],"id":2508,"nodeType":"InlineAssembly","src":"7259:375:17"},{"expression":{"id":2513,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2509,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2458,"src":"7700:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2512,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2510,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2464,"src":"7709:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2511,"name":"twos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2500,"src":"7717:4:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7709:12:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7700:21:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2514,"nodeType":"ExpressionStatement","src":"7700:21:17"},{"assignments":[2516],"declarations":[{"constant":false,"id":2516,"mutability":"mutable","name":"inverse","nameLocation":"8064:7:17","nodeType":"VariableDeclaration","scope":2580,"src":"8056:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2515,"name":"uint256","nodeType":"ElementaryTypeName","src":"8056:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2523,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2522,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2519,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"33","id":2517,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8075:1:17","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2518,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2452,"src":"8079:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8075:15:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2520,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8074:17:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"hexValue":"32","id":2521,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8094:1:17","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"8074:21:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8056:39:17"},{"expression":{"id":2530,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2524,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2516,"src":"8312:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2529,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2525,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8323:1:17","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2528,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2526,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2452,"src":"8327:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2527,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2516,"src":"8341:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8327:21:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8323:25:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8312:36:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2531,"nodeType":"ExpressionStatement","src":"8312:36:17"},{"expression":{"id":2538,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2532,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2516,"src":"8382:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2537,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2533,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8393:1:17","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2536,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2534,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2452,"src":"8397:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2535,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2516,"src":"8411:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8397:21:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8393:25:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8382:36:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2539,"nodeType":"ExpressionStatement","src":"8382:36:17"},{"expression":{"id":2546,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2540,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2516,"src":"8454:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2545,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2541,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8465:1:17","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2544,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2542,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2452,"src":"8469:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2543,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2516,"src":"8483:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8469:21:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8465:25:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8454:36:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2547,"nodeType":"ExpressionStatement","src":"8454:36:17"},{"expression":{"id":2554,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2548,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2516,"src":"8525:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2553,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2549,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8536:1:17","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2552,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2550,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2452,"src":"8540:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2551,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2516,"src":"8554:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8540:21:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8536:25:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8525:36:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2555,"nodeType":"ExpressionStatement","src":"8525:36:17"},{"expression":{"id":2562,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2556,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2516,"src":"8598:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2561,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2557,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8609:1:17","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2560,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2558,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2452,"src":"8613:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2559,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2516,"src":"8627:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8613:21:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8609:25:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8598:36:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2563,"nodeType":"ExpressionStatement","src":"8598:36:17"},{"expression":{"id":2570,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2564,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2516,"src":"8672:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2569,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2565,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8683:1:17","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2568,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2566,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2452,"src":"8687:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2567,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2516,"src":"8701:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8687:21:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8683:25:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8672:36:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2571,"nodeType":"ExpressionStatement","src":"8672:36:17"},{"expression":{"id":2576,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2572,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2455,"src":"9154:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2575,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2573,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2458,"src":"9163:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2574,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2516,"src":"9171:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9163:15:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9154:24:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2577,"nodeType":"ExpressionStatement","src":"9154:24:17"},{"expression":{"id":2578,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2455,"src":"9199:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2456,"id":2579,"nodeType":"Return","src":"9192:13:17"}]}]},"documentation":{"id":2446,"nodeType":"StructuredDocumentation","src":"4679:312:17","text":" @dev Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n denominator == 0.\n Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n Uniswap Labs also under MIT license."},"id":2582,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"5005:6:17","nodeType":"FunctionDefinition","parameters":{"id":2453,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2448,"mutability":"mutable","name":"x","nameLocation":"5020:1:17","nodeType":"VariableDeclaration","scope":2582,"src":"5012:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2447,"name":"uint256","nodeType":"ElementaryTypeName","src":"5012:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2450,"mutability":"mutable","name":"y","nameLocation":"5031:1:17","nodeType":"VariableDeclaration","scope":2582,"src":"5023:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2449,"name":"uint256","nodeType":"ElementaryTypeName","src":"5023:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2452,"mutability":"mutable","name":"denominator","nameLocation":"5042:11:17","nodeType":"VariableDeclaration","scope":2582,"src":"5034:19:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2451,"name":"uint256","nodeType":"ElementaryTypeName","src":"5034:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5011:43:17"},"returnParameters":{"id":2456,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2455,"mutability":"mutable","name":"result","nameLocation":"5086:6:17","nodeType":"VariableDeclaration","scope":2582,"src":"5078:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2454,"name":"uint256","nodeType":"ElementaryTypeName","src":"5078:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5077:16:17"},"scope":3752,"src":"4996:4226:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2618,"nodeType":"Block","src":"9461:128:17","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2616,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2598,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2585,"src":"9485:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2599,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2587,"src":"9488:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2600,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2589,"src":"9491:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2597,"name":"mulDiv","nodeType":"Identifier","overloadedDeclarations":[2582,2619],"referencedDeclaration":2582,"src":"9478:6:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":2601,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9478:25:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2614,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2605,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2592,"src":"9539:8:17","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2158","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$2158","typeString":"enum Math.Rounding"}],"id":2604,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3751,"src":"9522:16:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$2158_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":2606,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9522:26:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2613,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2608,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2585,"src":"9559:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2609,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2587,"src":"9562:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2610,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2589,"src":"9565:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2607,"name":"mulmod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-16,"src":"9552:6:17","typeDescriptions":{"typeIdentifier":"t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":2611,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9552:25:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2612,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9580:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9552:29:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9522:59:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":2602,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5517,"src":"9506:8:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$5517_$","typeString":"type(library SafeCast)"}},"id":2603,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9515:6:17","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":5516,"src":"9506:15:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":2615,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9506:76:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9478:104:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2596,"id":2617,"nodeType":"Return","src":"9471:111:17"}]},"documentation":{"id":2583,"nodeType":"StructuredDocumentation","src":"9228:118:17","text":" @dev Calculates x * y / denominator with full precision, following the selected rounding direction."},"id":2619,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"9360:6:17","nodeType":"FunctionDefinition","parameters":{"id":2593,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2585,"mutability":"mutable","name":"x","nameLocation":"9375:1:17","nodeType":"VariableDeclaration","scope":2619,"src":"9367:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2584,"name":"uint256","nodeType":"ElementaryTypeName","src":"9367:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2587,"mutability":"mutable","name":"y","nameLocation":"9386:1:17","nodeType":"VariableDeclaration","scope":2619,"src":"9378:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2586,"name":"uint256","nodeType":"ElementaryTypeName","src":"9378:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2589,"mutability":"mutable","name":"denominator","nameLocation":"9397:11:17","nodeType":"VariableDeclaration","scope":2619,"src":"9389:19:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2588,"name":"uint256","nodeType":"ElementaryTypeName","src":"9389:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2592,"mutability":"mutable","name":"rounding","nameLocation":"9419:8:17","nodeType":"VariableDeclaration","scope":2619,"src":"9410:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2158","typeString":"enum Math.Rounding"},"typeName":{"id":2591,"nodeType":"UserDefinedTypeName","pathNode":{"id":2590,"name":"Rounding","nameLocations":["9410:8:17"],"nodeType":"IdentifierPath","referencedDeclaration":2158,"src":"9410:8:17"},"referencedDeclaration":2158,"src":"9410:8:17","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2158","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"9366:62:17"},"returnParameters":{"id":2596,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2595,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2619,"src":"9452:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2594,"name":"uint256","nodeType":"ElementaryTypeName","src":"9452:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9451:9:17"},"scope":3752,"src":"9351:238:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2715,"nodeType":"Block","src":"10223:1849:17","statements":[{"id":2714,"nodeType":"UncheckedBlock","src":"10233:1833:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2631,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2629,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2624,"src":"10261:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2630,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10266:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10261:6:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2634,"nodeType":"IfStatement","src":"10257:20:17","trueBody":{"expression":{"hexValue":"30","id":2632,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10276:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":2628,"id":2633,"nodeType":"Return","src":"10269:8:17"}},{"assignments":[2636],"declarations":[{"constant":false,"id":2636,"mutability":"mutable","name":"remainder","nameLocation":"10756:9:17","nodeType":"VariableDeclaration","scope":2714,"src":"10748:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2635,"name":"uint256","nodeType":"ElementaryTypeName","src":"10748:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2640,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2639,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2637,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2622,"src":"10768:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"id":2638,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2624,"src":"10772:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10768:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10748:25:17"},{"assignments":[2642],"declarations":[{"constant":false,"id":2642,"mutability":"mutable","name":"gcd","nameLocation":"10795:3:17","nodeType":"VariableDeclaration","scope":2714,"src":"10787:11:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2641,"name":"uint256","nodeType":"ElementaryTypeName","src":"10787:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2644,"initialValue":{"id":2643,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2624,"src":"10801:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10787:15:17"},{"assignments":[2646],"declarations":[{"constant":false,"id":2646,"mutability":"mutable","name":"x","nameLocation":"10945:1:17","nodeType":"VariableDeclaration","scope":2714,"src":"10938:8:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2645,"name":"int256","nodeType":"ElementaryTypeName","src":"10938:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":2648,"initialValue":{"hexValue":"30","id":2647,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10949:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"10938:12:17"},{"assignments":[2650],"declarations":[{"constant":false,"id":2650,"mutability":"mutable","name":"y","nameLocation":"10971:1:17","nodeType":"VariableDeclaration","scope":2714,"src":"10964:8:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2649,"name":"int256","nodeType":"ElementaryTypeName","src":"10964:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":2652,"initialValue":{"hexValue":"31","id":2651,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10975:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"VariableDeclarationStatement","src":"10964:12:17"},{"body":{"id":2689,"nodeType":"Block","src":"11014:882:17","statements":[{"assignments":[2657],"declarations":[{"constant":false,"id":2657,"mutability":"mutable","name":"quotient","nameLocation":"11040:8:17","nodeType":"VariableDeclaration","scope":2689,"src":"11032:16:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2656,"name":"uint256","nodeType":"ElementaryTypeName","src":"11032:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2661,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2660,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2658,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2642,"src":"11051:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2659,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2636,"src":"11057:9:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11051:15:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"11032:34:17"},{"expression":{"id":2672,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"id":2662,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2642,"src":"11086:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2663,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2636,"src":"11091:9:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2664,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"11085:16:17","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"components":[{"id":2665,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2636,"src":"11191:9:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2670,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2666,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2642,"src":"11436:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2669,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2667,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2636,"src":"11442:9:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2668,"name":"quotient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2657,"src":"11454:8:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11442:20:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11436:26:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2671,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11104:376:17","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"src":"11085:395:17","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2673,"nodeType":"ExpressionStatement","src":"11085:395:17"},{"expression":{"id":2687,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"id":2674,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2646,"src":"11500:1:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"id":2675,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2650,"src":"11503:1:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":2676,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"11499:6:17","typeDescriptions":{"typeIdentifier":"t_tuple$_t_int256_$_t_int256_$","typeString":"tuple(int256,int256)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"components":[{"id":2677,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2650,"src":"11585:1:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2685,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2678,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2646,"src":"11839:1:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2684,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2679,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2650,"src":"11843:1:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":2682,"name":"quotient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2657,"src":"11854:8:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2681,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11847:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":2680,"name":"int256","nodeType":"ElementaryTypeName","src":"11847:6:17","typeDescriptions":{}}},"id":2683,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11847:16:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"11843:20:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"11839:24:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":2686,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11508:373:17","typeDescriptions":{"typeIdentifier":"t_tuple$_t_int256_$_t_int256_$","typeString":"tuple(int256,int256)"}},"src":"11499:382:17","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2688,"nodeType":"ExpressionStatement","src":"11499:382:17"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2655,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2653,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2636,"src":"10998:9:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":2654,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11011:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10998:14:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2690,"nodeType":"WhileStatement","src":"10991:905:17"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2693,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2691,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2642,"src":"11914:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"31","id":2692,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11921:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"11914:8:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2696,"nodeType":"IfStatement","src":"11910:22:17","trueBody":{"expression":{"hexValue":"30","id":2694,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11931:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":2628,"id":2695,"nodeType":"Return","src":"11924:8:17"}},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2700,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2698,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2646,"src":"11983:1:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":2699,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11987:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11983:5:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2707,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2701,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2624,"src":"11990:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"arguments":[{"id":2705,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"-","prefix":true,"src":"12002:2:17","subExpression":{"id":2704,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2646,"src":"12003:1:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":2703,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11994:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2702,"name":"uint256","nodeType":"ElementaryTypeName","src":"11994:7:17","typeDescriptions":{}}},"id":2706,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11994:11:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11990:15:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":2710,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2646,"src":"12015:1:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":2709,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12007:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2708,"name":"uint256","nodeType":"ElementaryTypeName","src":"12007:7:17","typeDescriptions":{}}},"id":2711,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12007:10:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2697,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2343,"src":"11975:7:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":2712,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11975:43:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2628,"id":2713,"nodeType":"Return","src":"11968:50:17"}]}]},"documentation":{"id":2620,"nodeType":"StructuredDocumentation","src":"9595:553:17","text":" @dev Calculate the modular multiplicative inverse of a number in Z/nZ.\n If n is a prime, then Z/nZ is a field. In that case all elements are inversible, except 0.\n If n is not a prime, then Z/nZ is not a field, and some elements might not be inversible.\n If the input value is not inversible, 0 is returned.\n NOTE: If you know for sure that n is (big) a prime, it may be cheaper to use Fermat's little theorem and get the\n inverse using `Math.modExp(a, n - 2, n)`. See {invModPrime}."},"id":2716,"implemented":true,"kind":"function","modifiers":[],"name":"invMod","nameLocation":"10162:6:17","nodeType":"FunctionDefinition","parameters":{"id":2625,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2622,"mutability":"mutable","name":"a","nameLocation":"10177:1:17","nodeType":"VariableDeclaration","scope":2716,"src":"10169:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2621,"name":"uint256","nodeType":"ElementaryTypeName","src":"10169:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2624,"mutability":"mutable","name":"n","nameLocation":"10188:1:17","nodeType":"VariableDeclaration","scope":2716,"src":"10180:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2623,"name":"uint256","nodeType":"ElementaryTypeName","src":"10180:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10168:22:17"},"returnParameters":{"id":2628,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2627,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2716,"src":"10214:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2626,"name":"uint256","nodeType":"ElementaryTypeName","src":"10214:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10213:9:17"},"scope":3752,"src":"10153:1919:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2736,"nodeType":"Block","src":"12672:82:17","statements":[{"id":2735,"nodeType":"UncheckedBlock","src":"12682:66:17","statements":[{"expression":{"arguments":[{"id":2728,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2719,"src":"12725:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2731,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2729,"name":"p","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2721,"src":"12728:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"32","id":2730,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12732:1:17","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"12728:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2732,"name":"p","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2721,"src":"12735:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2726,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3752,"src":"12713:4:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$3752_$","typeString":"type(library Math)"}},"id":2727,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12718:6:17","memberName":"modExp","nodeType":"MemberAccess","referencedDeclaration":2773,"src":"12713:11:17","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) view returns (uint256)"}},"id":2733,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12713:24:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2725,"id":2734,"nodeType":"Return","src":"12706:31:17"}]}]},"documentation":{"id":2717,"nodeType":"StructuredDocumentation","src":"12078:514:17","text":" @dev Variant of {invMod}. More efficient, but only works if `p` is known to be a prime greater than `2`.\n From https://en.wikipedia.org/wiki/Fermat%27s_little_theorem[Fermat's little theorem], we know that if p is\n prime, then `a**(p-1) ≡ 1 mod p`. As a consequence, we have `a * a**(p-2) ≡ 1 mod p`, which means that\n `a**(p-2)` is the modular multiplicative inverse of a in Fp.\n NOTE: this function does NOT check that `p` is a prime greater than `2`."},"id":2737,"implemented":true,"kind":"function","modifiers":[],"name":"invModPrime","nameLocation":"12606:11:17","nodeType":"FunctionDefinition","parameters":{"id":2722,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2719,"mutability":"mutable","name":"a","nameLocation":"12626:1:17","nodeType":"VariableDeclaration","scope":2737,"src":"12618:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2718,"name":"uint256","nodeType":"ElementaryTypeName","src":"12618:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2721,"mutability":"mutable","name":"p","nameLocation":"12637:1:17","nodeType":"VariableDeclaration","scope":2737,"src":"12629:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2720,"name":"uint256","nodeType":"ElementaryTypeName","src":"12629:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12617:22:17"},"returnParameters":{"id":2725,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2724,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2737,"src":"12663:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2723,"name":"uint256","nodeType":"ElementaryTypeName","src":"12663:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12662:9:17"},"scope":3752,"src":"12597:157:17","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2772,"nodeType":"Block","src":"13524:174:17","statements":[{"assignments":[2750,2752],"declarations":[{"constant":false,"id":2750,"mutability":"mutable","name":"success","nameLocation":"13540:7:17","nodeType":"VariableDeclaration","scope":2772,"src":"13535:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2749,"name":"bool","nodeType":"ElementaryTypeName","src":"13535:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2752,"mutability":"mutable","name":"result","nameLocation":"13557:6:17","nodeType":"VariableDeclaration","scope":2772,"src":"13549:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2751,"name":"uint256","nodeType":"ElementaryTypeName","src":"13549:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2758,"initialValue":{"arguments":[{"id":2754,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2740,"src":"13577:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2755,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2742,"src":"13580:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2756,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2744,"src":"13583:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2753,"name":"tryModExp","nodeType":"Identifier","overloadedDeclarations":[2797,2879],"referencedDeclaration":2797,"src":"13567:9:17","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (uint256,uint256,uint256) view returns (bool,uint256)"}},"id":2757,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13567:18:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"13534:51:17"},{"condition":{"id":2760,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"13599:8:17","subExpression":{"id":2759,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2750,"src":"13600:7:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2769,"nodeType":"IfStatement","src":"13595:74:17","trueBody":{"id":2768,"nodeType":"Block","src":"13609:60:17","statements":[{"expression":{"arguments":[{"expression":{"id":2764,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1721,"src":"13635:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1721_$","typeString":"type(library Panic)"}},"id":2765,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"13641:16:17","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":1688,"src":"13635:22:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2761,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1721,"src":"13623:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1721_$","typeString":"type(library Panic)"}},"id":2763,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13629:5:17","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":1720,"src":"13623:11:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":2766,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13623:35:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2767,"nodeType":"ExpressionStatement","src":"13623:35:17"}]}},{"expression":{"id":2770,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2752,"src":"13685:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2748,"id":2771,"nodeType":"Return","src":"13678:13:17"}]},"documentation":{"id":2738,"nodeType":"StructuredDocumentation","src":"12760:678:17","text":" @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m)\n Requirements:\n - modulus can't be zero\n - underlying staticcall to precompile must succeed\n IMPORTANT: The result is only valid if the underlying call succeeds. When using this function, make\n sure the chain you're using it on supports the precompiled contract for modular exponentiation\n at address 0x05 as specified in https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise,\n the underlying function will succeed given the lack of a revert, but the result may be incorrectly\n interpreted as 0."},"id":2773,"implemented":true,"kind":"function","modifiers":[],"name":"modExp","nameLocation":"13452:6:17","nodeType":"FunctionDefinition","parameters":{"id":2745,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2740,"mutability":"mutable","name":"b","nameLocation":"13467:1:17","nodeType":"VariableDeclaration","scope":2773,"src":"13459:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2739,"name":"uint256","nodeType":"ElementaryTypeName","src":"13459:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2742,"mutability":"mutable","name":"e","nameLocation":"13478:1:17","nodeType":"VariableDeclaration","scope":2773,"src":"13470:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2741,"name":"uint256","nodeType":"ElementaryTypeName","src":"13470:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2744,"mutability":"mutable","name":"m","nameLocation":"13489:1:17","nodeType":"VariableDeclaration","scope":2773,"src":"13481:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2743,"name":"uint256","nodeType":"ElementaryTypeName","src":"13481:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13458:33:17"},"returnParameters":{"id":2748,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2747,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2773,"src":"13515:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2746,"name":"uint256","nodeType":"ElementaryTypeName","src":"13515:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13514:9:17"},"scope":3752,"src":"13443:255:17","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2796,"nodeType":"Block","src":"14552:1493:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2789,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2787,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2780,"src":"14566:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2788,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14571:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14566:6:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2794,"nodeType":"IfStatement","src":"14562:29:17","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":2790,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"14582:5:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":2791,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14589:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":2792,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"14581:10:17","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":2786,"id":2793,"nodeType":"Return","src":"14574:17:17"}},{"AST":{"nativeSrc":"14626:1413:17","nodeType":"YulBlock","src":"14626:1413:17","statements":[{"nativeSrc":"14640:22:17","nodeType":"YulVariableDeclaration","src":"14640:22:17","value":{"arguments":[{"kind":"number","nativeSrc":"14657:4:17","nodeType":"YulLiteral","src":"14657:4:17","type":"","value":"0x40"}],"functionName":{"name":"mload","nativeSrc":"14651:5:17","nodeType":"YulIdentifier","src":"14651:5:17"},"nativeSrc":"14651:11:17","nodeType":"YulFunctionCall","src":"14651:11:17"},"variables":[{"name":"ptr","nativeSrc":"14644:3:17","nodeType":"YulTypedName","src":"14644:3:17","type":""}]},{"expression":{"arguments":[{"name":"ptr","nativeSrc":"15570:3:17","nodeType":"YulIdentifier","src":"15570:3:17"},{"kind":"number","nativeSrc":"15575:4:17","nodeType":"YulLiteral","src":"15575:4:17","type":"","value":"0x20"}],"functionName":{"name":"mstore","nativeSrc":"15563:6:17","nodeType":"YulIdentifier","src":"15563:6:17"},"nativeSrc":"15563:17:17","nodeType":"YulFunctionCall","src":"15563:17:17"},"nativeSrc":"15563:17:17","nodeType":"YulExpressionStatement","src":"15563:17:17"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"15604:3:17","nodeType":"YulIdentifier","src":"15604:3:17"},{"kind":"number","nativeSrc":"15609:4:17","nodeType":"YulLiteral","src":"15609:4:17","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"15600:3:17","nodeType":"YulIdentifier","src":"15600:3:17"},"nativeSrc":"15600:14:17","nodeType":"YulFunctionCall","src":"15600:14:17"},{"kind":"number","nativeSrc":"15616:4:17","nodeType":"YulLiteral","src":"15616:4:17","type":"","value":"0x20"}],"functionName":{"name":"mstore","nativeSrc":"15593:6:17","nodeType":"YulIdentifier","src":"15593:6:17"},"nativeSrc":"15593:28:17","nodeType":"YulFunctionCall","src":"15593:28:17"},"nativeSrc":"15593:28:17","nodeType":"YulExpressionStatement","src":"15593:28:17"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"15645:3:17","nodeType":"YulIdentifier","src":"15645:3:17"},{"kind":"number","nativeSrc":"15650:4:17","nodeType":"YulLiteral","src":"15650:4:17","type":"","value":"0x40"}],"functionName":{"name":"add","nativeSrc":"15641:3:17","nodeType":"YulIdentifier","src":"15641:3:17"},"nativeSrc":"15641:14:17","nodeType":"YulFunctionCall","src":"15641:14:17"},{"kind":"number","nativeSrc":"15657:4:17","nodeType":"YulLiteral","src":"15657:4:17","type":"","value":"0x20"}],"functionName":{"name":"mstore","nativeSrc":"15634:6:17","nodeType":"YulIdentifier","src":"15634:6:17"},"nativeSrc":"15634:28:17","nodeType":"YulFunctionCall","src":"15634:28:17"},"nativeSrc":"15634:28:17","nodeType":"YulExpressionStatement","src":"15634:28:17"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"15686:3:17","nodeType":"YulIdentifier","src":"15686:3:17"},{"kind":"number","nativeSrc":"15691:4:17","nodeType":"YulLiteral","src":"15691:4:17","type":"","value":"0x60"}],"functionName":{"name":"add","nativeSrc":"15682:3:17","nodeType":"YulIdentifier","src":"15682:3:17"},"nativeSrc":"15682:14:17","nodeType":"YulFunctionCall","src":"15682:14:17"},{"name":"b","nativeSrc":"15698:1:17","nodeType":"YulIdentifier","src":"15698:1:17"}],"functionName":{"name":"mstore","nativeSrc":"15675:6:17","nodeType":"YulIdentifier","src":"15675:6:17"},"nativeSrc":"15675:25:17","nodeType":"YulFunctionCall","src":"15675:25:17"},"nativeSrc":"15675:25:17","nodeType":"YulExpressionStatement","src":"15675:25:17"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"15724:3:17","nodeType":"YulIdentifier","src":"15724:3:17"},{"kind":"number","nativeSrc":"15729:4:17","nodeType":"YulLiteral","src":"15729:4:17","type":"","value":"0x80"}],"functionName":{"name":"add","nativeSrc":"15720:3:17","nodeType":"YulIdentifier","src":"15720:3:17"},"nativeSrc":"15720:14:17","nodeType":"YulFunctionCall","src":"15720:14:17"},{"name":"e","nativeSrc":"15736:1:17","nodeType":"YulIdentifier","src":"15736:1:17"}],"functionName":{"name":"mstore","nativeSrc":"15713:6:17","nodeType":"YulIdentifier","src":"15713:6:17"},"nativeSrc":"15713:25:17","nodeType":"YulFunctionCall","src":"15713:25:17"},"nativeSrc":"15713:25:17","nodeType":"YulExpressionStatement","src":"15713:25:17"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"15762:3:17","nodeType":"YulIdentifier","src":"15762:3:17"},{"kind":"number","nativeSrc":"15767:4:17","nodeType":"YulLiteral","src":"15767:4:17","type":"","value":"0xa0"}],"functionName":{"name":"add","nativeSrc":"15758:3:17","nodeType":"YulIdentifier","src":"15758:3:17"},"nativeSrc":"15758:14:17","nodeType":"YulFunctionCall","src":"15758:14:17"},{"name":"m","nativeSrc":"15774:1:17","nodeType":"YulIdentifier","src":"15774:1:17"}],"functionName":{"name":"mstore","nativeSrc":"15751:6:17","nodeType":"YulIdentifier","src":"15751:6:17"},"nativeSrc":"15751:25:17","nodeType":"YulFunctionCall","src":"15751:25:17"},"nativeSrc":"15751:25:17","nodeType":"YulExpressionStatement","src":"15751:25:17"},{"nativeSrc":"15938:57:17","nodeType":"YulAssignment","src":"15938:57:17","value":{"arguments":[{"arguments":[],"functionName":{"name":"gas","nativeSrc":"15960:3:17","nodeType":"YulIdentifier","src":"15960:3:17"},"nativeSrc":"15960:5:17","nodeType":"YulFunctionCall","src":"15960:5:17"},{"kind":"number","nativeSrc":"15967:4:17","nodeType":"YulLiteral","src":"15967:4:17","type":"","value":"0x05"},{"name":"ptr","nativeSrc":"15973:3:17","nodeType":"YulIdentifier","src":"15973:3:17"},{"kind":"number","nativeSrc":"15978:4:17","nodeType":"YulLiteral","src":"15978:4:17","type":"","value":"0xc0"},{"kind":"number","nativeSrc":"15984:4:17","nodeType":"YulLiteral","src":"15984:4:17","type":"","value":"0x00"},{"kind":"number","nativeSrc":"15990:4:17","nodeType":"YulLiteral","src":"15990:4:17","type":"","value":"0x20"}],"functionName":{"name":"staticcall","nativeSrc":"15949:10:17","nodeType":"YulIdentifier","src":"15949:10:17"},"nativeSrc":"15949:46:17","nodeType":"YulFunctionCall","src":"15949:46:17"},"variableNames":[{"name":"success","nativeSrc":"15938:7:17","nodeType":"YulIdentifier","src":"15938:7:17"}]},{"nativeSrc":"16008:21:17","nodeType":"YulAssignment","src":"16008:21:17","value":{"arguments":[{"kind":"number","nativeSrc":"16024:4:17","nodeType":"YulLiteral","src":"16024:4:17","type":"","value":"0x00"}],"functionName":{"name":"mload","nativeSrc":"16018:5:17","nodeType":"YulIdentifier","src":"16018:5:17"},"nativeSrc":"16018:11:17","nodeType":"YulFunctionCall","src":"16018:11:17"},"variableNames":[{"name":"result","nativeSrc":"16008:6:17","nodeType":"YulIdentifier","src":"16008:6:17"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2776,"isOffset":false,"isSlot":false,"src":"15698:1:17","valueSize":1},{"declaration":2778,"isOffset":false,"isSlot":false,"src":"15736:1:17","valueSize":1},{"declaration":2780,"isOffset":false,"isSlot":false,"src":"15774:1:17","valueSize":1},{"declaration":2785,"isOffset":false,"isSlot":false,"src":"16008:6:17","valueSize":1},{"declaration":2783,"isOffset":false,"isSlot":false,"src":"15938:7:17","valueSize":1}],"flags":["memory-safe"],"id":2795,"nodeType":"InlineAssembly","src":"14601:1438:17"}]},"documentation":{"id":2774,"nodeType":"StructuredDocumentation","src":"13704:738:17","text":" @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m).\n It includes a success flag indicating if the operation succeeded. Operation will be marked as failed if trying\n to operate modulo 0 or if the underlying precompile reverted.\n IMPORTANT: The result is only valid if the success flag is true. When using this function, make sure the chain\n you're using it on supports the precompiled contract for modular exponentiation at address 0x05 as specified in\n https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise, the underlying function will succeed given the lack\n of a revert, but the result may be incorrectly interpreted as 0."},"id":2797,"implemented":true,"kind":"function","modifiers":[],"name":"tryModExp","nameLocation":"14456:9:17","nodeType":"FunctionDefinition","parameters":{"id":2781,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2776,"mutability":"mutable","name":"b","nameLocation":"14474:1:17","nodeType":"VariableDeclaration","scope":2797,"src":"14466:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2775,"name":"uint256","nodeType":"ElementaryTypeName","src":"14466:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2778,"mutability":"mutable","name":"e","nameLocation":"14485:1:17","nodeType":"VariableDeclaration","scope":2797,"src":"14477:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2777,"name":"uint256","nodeType":"ElementaryTypeName","src":"14477:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2780,"mutability":"mutable","name":"m","nameLocation":"14496:1:17","nodeType":"VariableDeclaration","scope":2797,"src":"14488:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2779,"name":"uint256","nodeType":"ElementaryTypeName","src":"14488:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14465:33:17"},"returnParameters":{"id":2786,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2783,"mutability":"mutable","name":"success","nameLocation":"14527:7:17","nodeType":"VariableDeclaration","scope":2797,"src":"14522:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2782,"name":"bool","nodeType":"ElementaryTypeName","src":"14522:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2785,"mutability":"mutable","name":"result","nameLocation":"14544:6:17","nodeType":"VariableDeclaration","scope":2797,"src":"14536:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2784,"name":"uint256","nodeType":"ElementaryTypeName","src":"14536:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14521:30:17"},"scope":3752,"src":"14447:1598:17","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2832,"nodeType":"Block","src":"16242:179:17","statements":[{"assignments":[2810,2812],"declarations":[{"constant":false,"id":2810,"mutability":"mutable","name":"success","nameLocation":"16258:7:17","nodeType":"VariableDeclaration","scope":2832,"src":"16253:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2809,"name":"bool","nodeType":"ElementaryTypeName","src":"16253:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2812,"mutability":"mutable","name":"result","nameLocation":"16280:6:17","nodeType":"VariableDeclaration","scope":2832,"src":"16267:19:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2811,"name":"bytes","nodeType":"ElementaryTypeName","src":"16267:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2818,"initialValue":{"arguments":[{"id":2814,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2800,"src":"16300:1:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2815,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2802,"src":"16303:1:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2816,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2804,"src":"16306:1:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2813,"name":"tryModExp","nodeType":"Identifier","overloadedDeclarations":[2797,2879],"referencedDeclaration":2879,"src":"16290:9:17","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory,bytes memory,bytes memory) view returns (bool,bytes memory)"}},"id":2817,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16290:18:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"16252:56:17"},{"condition":{"id":2820,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"16322:8:17","subExpression":{"id":2819,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2810,"src":"16323:7:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2829,"nodeType":"IfStatement","src":"16318:74:17","trueBody":{"id":2828,"nodeType":"Block","src":"16332:60:17","statements":[{"expression":{"arguments":[{"expression":{"id":2824,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1721,"src":"16358:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1721_$","typeString":"type(library Panic)"}},"id":2825,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16364:16:17","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":1688,"src":"16358:22:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2821,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1721,"src":"16346:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1721_$","typeString":"type(library Panic)"}},"id":2823,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16352:5:17","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":1720,"src":"16346:11:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":2826,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16346:35:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2827,"nodeType":"ExpressionStatement","src":"16346:35:17"}]}},{"expression":{"id":2830,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2812,"src":"16408:6:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2808,"id":2831,"nodeType":"Return","src":"16401:13:17"}]},"documentation":{"id":2798,"nodeType":"StructuredDocumentation","src":"16051:85:17","text":" @dev Variant of {modExp} that supports inputs of arbitrary length."},"id":2833,"implemented":true,"kind":"function","modifiers":[],"name":"modExp","nameLocation":"16150:6:17","nodeType":"FunctionDefinition","parameters":{"id":2805,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2800,"mutability":"mutable","name":"b","nameLocation":"16170:1:17","nodeType":"VariableDeclaration","scope":2833,"src":"16157:14:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2799,"name":"bytes","nodeType":"ElementaryTypeName","src":"16157:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":2802,"mutability":"mutable","name":"e","nameLocation":"16186:1:17","nodeType":"VariableDeclaration","scope":2833,"src":"16173:14:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2801,"name":"bytes","nodeType":"ElementaryTypeName","src":"16173:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":2804,"mutability":"mutable","name":"m","nameLocation":"16202:1:17","nodeType":"VariableDeclaration","scope":2833,"src":"16189:14:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2803,"name":"bytes","nodeType":"ElementaryTypeName","src":"16189:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"16156:48:17"},"returnParameters":{"id":2808,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2807,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2833,"src":"16228:12:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2806,"name":"bytes","nodeType":"ElementaryTypeName","src":"16228:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"16227:14:17"},"scope":3752,"src":"16141:280:17","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2878,"nodeType":"Block","src":"16675:771:17","statements":[{"condition":{"arguments":[{"id":2848,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2840,"src":"16700:1:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2847,"name":"_zeroBytes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2912,"src":"16689:10:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (bytes memory) pure returns (bool)"}},"id":2849,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16689:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2857,"nodeType":"IfStatement","src":"16685:47:17","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":2850,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"16712:5:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"arguments":[{"hexValue":"30","id":2853,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16729:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2852,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"16719:9:17","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":2851,"name":"bytes","nodeType":"ElementaryTypeName","src":"16723:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":2854,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16719:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"id":2855,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"16711:21:17","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"functionReturnParameters":2846,"id":2856,"nodeType":"Return","src":"16704:28:17"}},{"assignments":[2859],"declarations":[{"constant":false,"id":2859,"mutability":"mutable","name":"mLen","nameLocation":"16751:4:17","nodeType":"VariableDeclaration","scope":2878,"src":"16743:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2858,"name":"uint256","nodeType":"ElementaryTypeName","src":"16743:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2862,"initialValue":{"expression":{"id":2860,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2840,"src":"16758:1:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2861,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16760:6:17","memberName":"length","nodeType":"MemberAccess","src":"16758:8:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"16743:23:17"},{"expression":{"id":2875,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2863,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2845,"src":"16848:6:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"expression":{"id":2866,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2836,"src":"16874:1:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2867,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16876:6:17","memberName":"length","nodeType":"MemberAccess","src":"16874:8:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":2868,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2838,"src":"16884:1:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2869,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16886:6:17","memberName":"length","nodeType":"MemberAccess","src":"16884:8:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2870,"name":"mLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2859,"src":"16894:4:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2871,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2836,"src":"16900:1:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2872,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2838,"src":"16903:1:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2873,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2840,"src":"16906:1:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":2864,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"16857:3:17","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":2865,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16861:12:17","memberName":"encodePacked","nodeType":"MemberAccess","src":"16857:16:17","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":2874,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16857:51:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"src":"16848:60:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2876,"nodeType":"ExpressionStatement","src":"16848:60:17"},{"AST":{"nativeSrc":"16944:496:17","nodeType":"YulBlock","src":"16944:496:17","statements":[{"nativeSrc":"16958:32:17","nodeType":"YulVariableDeclaration","src":"16958:32:17","value":{"arguments":[{"name":"result","nativeSrc":"16977:6:17","nodeType":"YulIdentifier","src":"16977:6:17"},{"kind":"number","nativeSrc":"16985:4:17","nodeType":"YulLiteral","src":"16985:4:17","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"16973:3:17","nodeType":"YulIdentifier","src":"16973:3:17"},"nativeSrc":"16973:17:17","nodeType":"YulFunctionCall","src":"16973:17:17"},"variables":[{"name":"dataPtr","nativeSrc":"16962:7:17","nodeType":"YulTypedName","src":"16962:7:17","type":""}]},{"nativeSrc":"17080:73:17","nodeType":"YulAssignment","src":"17080:73:17","value":{"arguments":[{"arguments":[],"functionName":{"name":"gas","nativeSrc":"17102:3:17","nodeType":"YulIdentifier","src":"17102:3:17"},"nativeSrc":"17102:5:17","nodeType":"YulFunctionCall","src":"17102:5:17"},{"kind":"number","nativeSrc":"17109:4:17","nodeType":"YulLiteral","src":"17109:4:17","type":"","value":"0x05"},{"name":"dataPtr","nativeSrc":"17115:7:17","nodeType":"YulIdentifier","src":"17115:7:17"},{"arguments":[{"name":"result","nativeSrc":"17130:6:17","nodeType":"YulIdentifier","src":"17130:6:17"}],"functionName":{"name":"mload","nativeSrc":"17124:5:17","nodeType":"YulIdentifier","src":"17124:5:17"},"nativeSrc":"17124:13:17","nodeType":"YulFunctionCall","src":"17124:13:17"},{"name":"dataPtr","nativeSrc":"17139:7:17","nodeType":"YulIdentifier","src":"17139:7:17"},{"name":"mLen","nativeSrc":"17148:4:17","nodeType":"YulIdentifier","src":"17148:4:17"}],"functionName":{"name":"staticcall","nativeSrc":"17091:10:17","nodeType":"YulIdentifier","src":"17091:10:17"},"nativeSrc":"17091:62:17","nodeType":"YulFunctionCall","src":"17091:62:17"},"variableNames":[{"name":"success","nativeSrc":"17080:7:17","nodeType":"YulIdentifier","src":"17080:7:17"}]},{"expression":{"arguments":[{"name":"result","nativeSrc":"17309:6:17","nodeType":"YulIdentifier","src":"17309:6:17"},{"name":"mLen","nativeSrc":"17317:4:17","nodeType":"YulIdentifier","src":"17317:4:17"}],"functionName":{"name":"mstore","nativeSrc":"17302:6:17","nodeType":"YulIdentifier","src":"17302:6:17"},"nativeSrc":"17302:20:17","nodeType":"YulFunctionCall","src":"17302:20:17"},"nativeSrc":"17302:20:17","nodeType":"YulExpressionStatement","src":"17302:20:17"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"17405:4:17","nodeType":"YulLiteral","src":"17405:4:17","type":"","value":"0x40"},{"arguments":[{"name":"dataPtr","nativeSrc":"17415:7:17","nodeType":"YulIdentifier","src":"17415:7:17"},{"name":"mLen","nativeSrc":"17424:4:17","nodeType":"YulIdentifier","src":"17424:4:17"}],"functionName":{"name":"add","nativeSrc":"17411:3:17","nodeType":"YulIdentifier","src":"17411:3:17"},"nativeSrc":"17411:18:17","nodeType":"YulFunctionCall","src":"17411:18:17"}],"functionName":{"name":"mstore","nativeSrc":"17398:6:17","nodeType":"YulIdentifier","src":"17398:6:17"},"nativeSrc":"17398:32:17","nodeType":"YulFunctionCall","src":"17398:32:17"},"nativeSrc":"17398:32:17","nodeType":"YulExpressionStatement","src":"17398:32:17"}]},"evmVersion":"paris","externalReferences":[{"declaration":2859,"isOffset":false,"isSlot":false,"src":"17148:4:17","valueSize":1},{"declaration":2859,"isOffset":false,"isSlot":false,"src":"17317:4:17","valueSize":1},{"declaration":2859,"isOffset":false,"isSlot":false,"src":"17424:4:17","valueSize":1},{"declaration":2845,"isOffset":false,"isSlot":false,"src":"16977:6:17","valueSize":1},{"declaration":2845,"isOffset":false,"isSlot":false,"src":"17130:6:17","valueSize":1},{"declaration":2845,"isOffset":false,"isSlot":false,"src":"17309:6:17","valueSize":1},{"declaration":2843,"isOffset":false,"isSlot":false,"src":"17080:7:17","valueSize":1}],"flags":["memory-safe"],"id":2877,"nodeType":"InlineAssembly","src":"16919:521:17"}]},"documentation":{"id":2834,"nodeType":"StructuredDocumentation","src":"16427:88:17","text":" @dev Variant of {tryModExp} that supports inputs of arbitrary length."},"id":2879,"implemented":true,"kind":"function","modifiers":[],"name":"tryModExp","nameLocation":"16529:9:17","nodeType":"FunctionDefinition","parameters":{"id":2841,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2836,"mutability":"mutable","name":"b","nameLocation":"16561:1:17","nodeType":"VariableDeclaration","scope":2879,"src":"16548:14:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2835,"name":"bytes","nodeType":"ElementaryTypeName","src":"16548:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":2838,"mutability":"mutable","name":"e","nameLocation":"16585:1:17","nodeType":"VariableDeclaration","scope":2879,"src":"16572:14:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2837,"name":"bytes","nodeType":"ElementaryTypeName","src":"16572:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":2840,"mutability":"mutable","name":"m","nameLocation":"16609:1:17","nodeType":"VariableDeclaration","scope":2879,"src":"16596:14:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2839,"name":"bytes","nodeType":"ElementaryTypeName","src":"16596:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"16538:78:17"},"returnParameters":{"id":2846,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2843,"mutability":"mutable","name":"success","nameLocation":"16645:7:17","nodeType":"VariableDeclaration","scope":2879,"src":"16640:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2842,"name":"bool","nodeType":"ElementaryTypeName","src":"16640:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2845,"mutability":"mutable","name":"result","nameLocation":"16667:6:17","nodeType":"VariableDeclaration","scope":2879,"src":"16654:19:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2844,"name":"bytes","nodeType":"ElementaryTypeName","src":"16654:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"16639:35:17"},"scope":3752,"src":"16520:926:17","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2911,"nodeType":"Block","src":"17601:176:17","statements":[{"body":{"id":2907,"nodeType":"Block","src":"17658:92:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":2902,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":2898,"name":"byteArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2882,"src":"17676:9:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2900,"indexExpression":{"id":2899,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2888,"src":"17686:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"17676:12:17","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":2901,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17692:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"17676:17:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2906,"nodeType":"IfStatement","src":"17672:68:17","trueBody":{"id":2905,"nodeType":"Block","src":"17695:45:17","statements":[{"expression":{"hexValue":"66616c7365","id":2903,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"17720:5:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":2886,"id":2904,"nodeType":"Return","src":"17713:12:17"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2894,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2891,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2888,"src":"17631:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":2892,"name":"byteArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2882,"src":"17635:9:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2893,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"17645:6:17","memberName":"length","nodeType":"MemberAccess","src":"17635:16:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17631:20:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2908,"initializationExpression":{"assignments":[2888],"declarations":[{"constant":false,"id":2888,"mutability":"mutable","name":"i","nameLocation":"17624:1:17","nodeType":"VariableDeclaration","scope":2908,"src":"17616:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2887,"name":"uint256","nodeType":"ElementaryTypeName","src":"17616:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2890,"initialValue":{"hexValue":"30","id":2889,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17628:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"17616:13:17"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":2896,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"17653:3:17","subExpression":{"id":2895,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2888,"src":"17655:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2897,"nodeType":"ExpressionStatement","src":"17653:3:17"},"nodeType":"ForStatement","src":"17611:139:17"},{"expression":{"hexValue":"74727565","id":2909,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"17766:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":2886,"id":2910,"nodeType":"Return","src":"17759:11:17"}]},"documentation":{"id":2880,"nodeType":"StructuredDocumentation","src":"17452:72:17","text":" @dev Returns whether the provided byte array is zero."},"id":2912,"implemented":true,"kind":"function","modifiers":[],"name":"_zeroBytes","nameLocation":"17538:10:17","nodeType":"FunctionDefinition","parameters":{"id":2883,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2882,"mutability":"mutable","name":"byteArray","nameLocation":"17562:9:17","nodeType":"VariableDeclaration","scope":2912,"src":"17549:22:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2881,"name":"bytes","nodeType":"ElementaryTypeName","src":"17549:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"17548:24:17"},"returnParameters":{"id":2886,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2885,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2912,"src":"17595:4:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2884,"name":"bool","nodeType":"ElementaryTypeName","src":"17595:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"17594:6:17"},"scope":3752,"src":"17529:248:17","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":3130,"nodeType":"Block","src":"18137:5124:17","statements":[{"id":3129,"nodeType":"UncheckedBlock","src":"18147:5108:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2922,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2920,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2915,"src":"18241:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"hexValue":"31","id":2921,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18246:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"18241:6:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2926,"nodeType":"IfStatement","src":"18237:53:17","trueBody":{"id":2925,"nodeType":"Block","src":"18249:41:17","statements":[{"expression":{"id":2923,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2915,"src":"18274:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2919,"id":2924,"nodeType":"Return","src":"18267:8:17"}]}},{"assignments":[2928],"declarations":[{"constant":false,"id":2928,"mutability":"mutable","name":"aa","nameLocation":"19225:2:17","nodeType":"VariableDeclaration","scope":3129,"src":"19217:10:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2927,"name":"uint256","nodeType":"ElementaryTypeName","src":"19217:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2930,"initialValue":{"id":2929,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2915,"src":"19230:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"19217:14:17"},{"assignments":[2932],"declarations":[{"constant":false,"id":2932,"mutability":"mutable","name":"xn","nameLocation":"19253:2:17","nodeType":"VariableDeclaration","scope":3129,"src":"19245:10:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2931,"name":"uint256","nodeType":"ElementaryTypeName","src":"19245:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2934,"initialValue":{"hexValue":"31","id":2933,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19258:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"VariableDeclarationStatement","src":"19245:14:17"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2940,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2935,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2928,"src":"19278:2:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"},"id":2938,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":2936,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19285:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"313238","id":2937,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19290:3:17","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"19285:8:17","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}}],"id":2939,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"19284:10:17","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}},"src":"19278:16:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2950,"nodeType":"IfStatement","src":"19274:92:17","trueBody":{"id":2949,"nodeType":"Block","src":"19296:70:17","statements":[{"expression":{"id":2943,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2941,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2928,"src":"19314:2:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"313238","id":2942,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19321:3:17","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"19314:10:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2944,"nodeType":"ExpressionStatement","src":"19314:10:17"},{"expression":{"id":2947,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2945,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2932,"src":"19342:2:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"3634","id":2946,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19349:2:17","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"19342:9:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2948,"nodeType":"ExpressionStatement","src":"19342:9:17"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2956,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2951,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2928,"src":"19383:2:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"},"id":2954,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":2952,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19390:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3634","id":2953,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19395:2:17","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"19390:7:17","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}}],"id":2955,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"19389:9:17","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}},"src":"19383:15:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2966,"nodeType":"IfStatement","src":"19379:90:17","trueBody":{"id":2965,"nodeType":"Block","src":"19400:69:17","statements":[{"expression":{"id":2959,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2957,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2928,"src":"19418:2:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3634","id":2958,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19425:2:17","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"19418:9:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2960,"nodeType":"ExpressionStatement","src":"19418:9:17"},{"expression":{"id":2963,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2961,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2932,"src":"19445:2:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"3332","id":2962,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19452:2:17","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"19445:9:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2964,"nodeType":"ExpressionStatement","src":"19445:9:17"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2972,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2967,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2928,"src":"19486:2:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"},"id":2970,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":2968,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19493:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3332","id":2969,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19498:2:17","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"19493:7:17","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}}],"id":2971,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"19492:9:17","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}},"src":"19486:15:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2982,"nodeType":"IfStatement","src":"19482:90:17","trueBody":{"id":2981,"nodeType":"Block","src":"19503:69:17","statements":[{"expression":{"id":2975,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2973,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2928,"src":"19521:2:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3332","id":2974,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19528:2:17","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"19521:9:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2976,"nodeType":"ExpressionStatement","src":"19521:9:17"},{"expression":{"id":2979,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2977,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2932,"src":"19548:2:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"3136","id":2978,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19555:2:17","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"19548:9:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2980,"nodeType":"ExpressionStatement","src":"19548:9:17"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2988,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2983,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2928,"src":"19589:2:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"},"id":2986,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":2984,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19596:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3136","id":2985,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19601:2:17","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"19596:7:17","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}}],"id":2987,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"19595:9:17","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}},"src":"19589:15:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2998,"nodeType":"IfStatement","src":"19585:89:17","trueBody":{"id":2997,"nodeType":"Block","src":"19606:68:17","statements":[{"expression":{"id":2991,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2989,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2928,"src":"19624:2:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3136","id":2990,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19631:2:17","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"19624:9:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2992,"nodeType":"ExpressionStatement","src":"19624:9:17"},{"expression":{"id":2995,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2993,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2932,"src":"19651:2:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"38","id":2994,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19658:1:17","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"19651:8:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2996,"nodeType":"ExpressionStatement","src":"19651:8:17"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3004,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2999,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2928,"src":"19691:2:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"id":3002,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3000,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19698:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"38","id":3001,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19703:1:17","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"19698:6:17","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}}],"id":3003,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"19697:8:17","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}},"src":"19691:14:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3014,"nodeType":"IfStatement","src":"19687:87:17","trueBody":{"id":3013,"nodeType":"Block","src":"19707:67:17","statements":[{"expression":{"id":3007,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3005,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2928,"src":"19725:2:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"38","id":3006,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19732:1:17","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"19725:8:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3008,"nodeType":"ExpressionStatement","src":"19725:8:17"},{"expression":{"id":3011,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3009,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2932,"src":"19751:2:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"34","id":3010,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19758:1:17","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"19751:8:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3012,"nodeType":"ExpressionStatement","src":"19751:8:17"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3020,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3015,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2928,"src":"19791:2:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"id":3018,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3016,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19798:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"34","id":3017,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19803:1:17","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"19798:6:17","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"}}],"id":3019,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"19797:8:17","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"}},"src":"19791:14:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3030,"nodeType":"IfStatement","src":"19787:87:17","trueBody":{"id":3029,"nodeType":"Block","src":"19807:67:17","statements":[{"expression":{"id":3023,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3021,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2928,"src":"19825:2:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":3022,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19832:1:17","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"19825:8:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3024,"nodeType":"ExpressionStatement","src":"19825:8:17"},{"expression":{"id":3027,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3025,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2932,"src":"19851:2:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"32","id":3026,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19858:1:17","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"19851:8:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3028,"nodeType":"ExpressionStatement","src":"19851:8:17"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3036,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3031,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2928,"src":"19891:2:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"id":3034,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3032,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19898:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"32","id":3033,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19903:1:17","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"19898:6:17","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"}}],"id":3035,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"19897:8:17","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"}},"src":"19891:14:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3042,"nodeType":"IfStatement","src":"19887:61:17","trueBody":{"id":3041,"nodeType":"Block","src":"19907:41:17","statements":[{"expression":{"id":3039,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3037,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2932,"src":"19925:2:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"31","id":3038,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19932:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"19925:8:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3040,"nodeType":"ExpressionStatement","src":"19925:8:17"}]}},{"expression":{"id":3050,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3043,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2932,"src":"20368:2:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3049,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3046,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"33","id":3044,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20374:1:17","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3045,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2932,"src":"20378:2:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"20374:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3047,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"20373:8:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3048,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20385:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"20373:13:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"20368:18:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3051,"nodeType":"ExpressionStatement","src":"20368:18:17"},{"expression":{"id":3061,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3052,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2932,"src":"22273:2:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3060,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3057,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3053,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2932,"src":"22279:2:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3056,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3054,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2915,"src":"22284:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3055,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2932,"src":"22288:2:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22284:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22279:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3058,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"22278:13:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3059,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22295:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22278:18:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22273:23:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3062,"nodeType":"ExpressionStatement","src":"22273:23:17"},{"expression":{"id":3072,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3063,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2932,"src":"22382:2:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3071,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3068,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3064,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2932,"src":"22388:2:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3067,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3065,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2915,"src":"22393:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3066,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2932,"src":"22397:2:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22393:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22388:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3069,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"22387:13:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3070,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22404:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22387:18:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22382:23:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3073,"nodeType":"ExpressionStatement","src":"22382:23:17"},{"expression":{"id":3083,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3074,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2932,"src":"22493:2:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3082,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3079,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3075,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2932,"src":"22499:2:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3078,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3076,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2915,"src":"22504:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3077,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2932,"src":"22508:2:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22504:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22499:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3080,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"22498:13:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3081,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22515:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22498:18:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22493:23:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3084,"nodeType":"ExpressionStatement","src":"22493:23:17"},{"expression":{"id":3094,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3085,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2932,"src":"22602:2:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3093,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3090,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3086,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2932,"src":"22608:2:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3089,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3087,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2915,"src":"22613:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3088,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2932,"src":"22617:2:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22613:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22608:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3091,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"22607:13:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3092,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22624:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22607:18:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22602:23:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3095,"nodeType":"ExpressionStatement","src":"22602:23:17"},{"expression":{"id":3105,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3096,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2932,"src":"22712:2:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3104,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3101,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3097,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2932,"src":"22718:2:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3100,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3098,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2915,"src":"22723:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3099,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2932,"src":"22727:2:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22723:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22718:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3102,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"22717:13:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3103,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22734:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22717:18:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22712:23:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3106,"nodeType":"ExpressionStatement","src":"22712:23:17"},{"expression":{"id":3116,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3107,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2932,"src":"22822:2:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3115,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3112,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3108,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2932,"src":"22828:2:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3111,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3109,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2915,"src":"22833:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3110,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2932,"src":"22837:2:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22833:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22828:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3113,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"22827:13:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3114,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22844:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22827:18:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22822:23:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3117,"nodeType":"ExpressionStatement","src":"22822:23:17"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3127,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3118,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2932,"src":"23211:2:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3125,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3121,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2932,"src":"23232:2:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3124,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3122,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2915,"src":"23237:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3123,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2932,"src":"23241:2:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23237:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23232:11:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":3119,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5517,"src":"23216:8:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$5517_$","typeString":"type(library SafeCast)"}},"id":3120,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"23225:6:17","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":5516,"src":"23216:15:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":3126,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23216:28:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23211:33:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2919,"id":3128,"nodeType":"Return","src":"23204:40:17"}]}]},"documentation":{"id":2913,"nodeType":"StructuredDocumentation","src":"17783:292:17","text":" @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n towards zero.\n This method is based on Newton's method for computing square roots; the algorithm is restricted to only\n using integer operations."},"id":3131,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"18089:4:17","nodeType":"FunctionDefinition","parameters":{"id":2916,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2915,"mutability":"mutable","name":"a","nameLocation":"18102:1:17","nodeType":"VariableDeclaration","scope":3131,"src":"18094:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2914,"name":"uint256","nodeType":"ElementaryTypeName","src":"18094:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"18093:11:17"},"returnParameters":{"id":2919,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2918,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3131,"src":"18128:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2917,"name":"uint256","nodeType":"ElementaryTypeName","src":"18128:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"18127:9:17"},"scope":3752,"src":"18080:5181:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3164,"nodeType":"Block","src":"23434:171:17","statements":[{"id":3163,"nodeType":"UncheckedBlock","src":"23444:155:17","statements":[{"assignments":[3143],"declarations":[{"constant":false,"id":3143,"mutability":"mutable","name":"result","nameLocation":"23476:6:17","nodeType":"VariableDeclaration","scope":3163,"src":"23468:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3142,"name":"uint256","nodeType":"ElementaryTypeName","src":"23468:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3147,"initialValue":{"arguments":[{"id":3145,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3134,"src":"23490:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3144,"name":"sqrt","nodeType":"Identifier","overloadedDeclarations":[3131,3165],"referencedDeclaration":3131,"src":"23485:4:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":3146,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23485:7:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"23468:24:17"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3161,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3148,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3143,"src":"23513:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3159,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3152,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3137,"src":"23555:8:17","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2158","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$2158","typeString":"enum Math.Rounding"}],"id":3151,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3751,"src":"23538:16:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$2158_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":3153,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23538:26:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3158,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3156,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3154,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3143,"src":"23568:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3155,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3143,"src":"23577:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23568:15:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3157,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3134,"src":"23586:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23568:19:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"23538:49:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":3149,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5517,"src":"23522:8:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$5517_$","typeString":"type(library SafeCast)"}},"id":3150,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"23531:6:17","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":5516,"src":"23522:15:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":3160,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23522:66:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23513:75:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3141,"id":3162,"nodeType":"Return","src":"23506:82:17"}]}]},"documentation":{"id":3132,"nodeType":"StructuredDocumentation","src":"23267:86:17","text":" @dev Calculates sqrt(a), following the selected rounding direction."},"id":3165,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"23367:4:17","nodeType":"FunctionDefinition","parameters":{"id":3138,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3134,"mutability":"mutable","name":"a","nameLocation":"23380:1:17","nodeType":"VariableDeclaration","scope":3165,"src":"23372:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3133,"name":"uint256","nodeType":"ElementaryTypeName","src":"23372:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3137,"mutability":"mutable","name":"rounding","nameLocation":"23392:8:17","nodeType":"VariableDeclaration","scope":3165,"src":"23383:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2158","typeString":"enum Math.Rounding"},"typeName":{"id":3136,"nodeType":"UserDefinedTypeName","pathNode":{"id":3135,"name":"Rounding","nameLocations":["23383:8:17"],"nodeType":"IdentifierPath","referencedDeclaration":2158,"src":"23383:8:17"},"referencedDeclaration":2158,"src":"23383:8:17","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2158","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"23371:30:17"},"returnParameters":{"id":3141,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3140,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3165,"src":"23425:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3139,"name":"uint256","nodeType":"ElementaryTypeName","src":"23425:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"23424:9:17"},"scope":3752,"src":"23358:247:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3360,"nodeType":"Block","src":"23796:981:17","statements":[{"assignments":[3174],"declarations":[{"constant":false,"id":3174,"mutability":"mutable","name":"result","nameLocation":"23814:6:17","nodeType":"VariableDeclaration","scope":3360,"src":"23806:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3173,"name":"uint256","nodeType":"ElementaryTypeName","src":"23806:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3176,"initialValue":{"hexValue":"30","id":3175,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23823:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"23806:18:17"},{"assignments":[3178],"declarations":[{"constant":false,"id":3178,"mutability":"mutable","name":"exp","nameLocation":"23842:3:17","nodeType":"VariableDeclaration","scope":3360,"src":"23834:11:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3177,"name":"uint256","nodeType":"ElementaryTypeName","src":"23834:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3179,"nodeType":"VariableDeclarationStatement","src":"23834:11:17"},{"id":3357,"nodeType":"UncheckedBlock","src":"23855:893:17","statements":[{"expression":{"id":3194,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3180,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3178,"src":"23879:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3193,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"313238","id":3181,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23885:3:17","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3191,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3184,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3168,"src":"23907:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_340282366920938463463374607431768211455_by_1","typeString":"int_const 3402...(31 digits omitted)...1455"},"id":3190,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"},"id":3187,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3185,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23916:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"313238","id":3186,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23921:3:17","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"23916:8:17","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}}],"id":3188,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"23915:10:17","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":3189,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23928:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"23915:14:17","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211455_by_1","typeString":"int_const 3402...(31 digits omitted)...1455"}},"src":"23907:22:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":3182,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5517,"src":"23891:8:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$5517_$","typeString":"type(library SafeCast)"}},"id":3183,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"23900:6:17","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":5516,"src":"23891:15:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":3192,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23891:39:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23885:45:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23879:51:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3195,"nodeType":"ExpressionStatement","src":"23879:51:17"},{"expression":{"id":3198,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3196,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3168,"src":"23944:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"id":3197,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3178,"src":"23954:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23944:13:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3199,"nodeType":"ExpressionStatement","src":"23944:13:17"},{"expression":{"id":3202,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3200,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3174,"src":"23971:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":3201,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3178,"src":"23981:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23971:13:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3203,"nodeType":"ExpressionStatement","src":"23971:13:17"},{"expression":{"id":3218,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3204,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3178,"src":"23999:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3217,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3634","id":3205,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24005:2:17","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3215,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3208,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3168,"src":"24026:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_18446744073709551615_by_1","typeString":"int_const 18446744073709551615"},"id":3214,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"},"id":3211,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3209,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24035:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3634","id":3210,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24040:2:17","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"24035:7:17","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}}],"id":3212,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"24034:9:17","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":3213,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24046:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24034:13:17","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551615_by_1","typeString":"int_const 18446744073709551615"}},"src":"24026:21:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":3206,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5517,"src":"24010:8:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$5517_$","typeString":"type(library SafeCast)"}},"id":3207,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"24019:6:17","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":5516,"src":"24010:15:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":3216,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24010:38:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24005:43:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23999:49:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3219,"nodeType":"ExpressionStatement","src":"23999:49:17"},{"expression":{"id":3222,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3220,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3168,"src":"24062:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"id":3221,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3178,"src":"24072:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24062:13:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3223,"nodeType":"ExpressionStatement","src":"24062:13:17"},{"expression":{"id":3226,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3224,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3174,"src":"24089:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":3225,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3178,"src":"24099:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24089:13:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3227,"nodeType":"ExpressionStatement","src":"24089:13:17"},{"expression":{"id":3242,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3228,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3178,"src":"24117:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3241,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3332","id":3229,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24123:2:17","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3239,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3232,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3168,"src":"24144:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_4294967295_by_1","typeString":"int_const 4294967295"},"id":3238,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"},"id":3235,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3233,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24153:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3332","id":3234,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24158:2:17","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"24153:7:17","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}}],"id":3236,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"24152:9:17","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":3237,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24164:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24152:13:17","typeDescriptions":{"typeIdentifier":"t_rational_4294967295_by_1","typeString":"int_const 4294967295"}},"src":"24144:21:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":3230,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5517,"src":"24128:8:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$5517_$","typeString":"type(library SafeCast)"}},"id":3231,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"24137:6:17","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":5516,"src":"24128:15:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":3240,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24128:38:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24123:43:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24117:49:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3243,"nodeType":"ExpressionStatement","src":"24117:49:17"},{"expression":{"id":3246,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3244,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3168,"src":"24180:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"id":3245,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3178,"src":"24190:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24180:13:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3247,"nodeType":"ExpressionStatement","src":"24180:13:17"},{"expression":{"id":3250,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3248,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3174,"src":"24207:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":3249,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3178,"src":"24217:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24207:13:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3251,"nodeType":"ExpressionStatement","src":"24207:13:17"},{"expression":{"id":3266,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3252,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3178,"src":"24235:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3265,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3136","id":3253,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24241:2:17","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3263,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3256,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3168,"src":"24262:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_65535_by_1","typeString":"int_const 65535"},"id":3262,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"},"id":3259,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3257,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24271:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3136","id":3258,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24276:2:17","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"24271:7:17","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}}],"id":3260,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"24270:9:17","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":3261,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24282:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24270:13:17","typeDescriptions":{"typeIdentifier":"t_rational_65535_by_1","typeString":"int_const 65535"}},"src":"24262:21:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":3254,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5517,"src":"24246:8:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$5517_$","typeString":"type(library SafeCast)"}},"id":3255,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"24255:6:17","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":5516,"src":"24246:15:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":3264,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24246:38:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24241:43:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24235:49:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3267,"nodeType":"ExpressionStatement","src":"24235:49:17"},{"expression":{"id":3270,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3268,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3168,"src":"24298:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"id":3269,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3178,"src":"24308:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24298:13:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3271,"nodeType":"ExpressionStatement","src":"24298:13:17"},{"expression":{"id":3274,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3272,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3174,"src":"24325:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":3273,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3178,"src":"24335:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24325:13:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3275,"nodeType":"ExpressionStatement","src":"24325:13:17"},{"expression":{"id":3290,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3276,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3178,"src":"24353:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3289,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"38","id":3277,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24359:1:17","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3287,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3280,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3168,"src":"24379:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"id":3286,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"id":3283,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3281,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24388:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"38","id":3282,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24393:1:17","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"24388:6:17","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}}],"id":3284,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"24387:8:17","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":3285,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24398:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24387:12:17","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"}},"src":"24379:20:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":3278,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5517,"src":"24363:8:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$5517_$","typeString":"type(library SafeCast)"}},"id":3279,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"24372:6:17","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":5516,"src":"24363:15:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":3288,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24363:37:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24359:41:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24353:47:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3291,"nodeType":"ExpressionStatement","src":"24353:47:17"},{"expression":{"id":3294,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3292,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3168,"src":"24414:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"id":3293,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3178,"src":"24424:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24414:13:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3295,"nodeType":"ExpressionStatement","src":"24414:13:17"},{"expression":{"id":3298,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3296,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3174,"src":"24441:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":3297,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3178,"src":"24451:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24441:13:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3299,"nodeType":"ExpressionStatement","src":"24441:13:17"},{"expression":{"id":3314,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3300,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3178,"src":"24469:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3313,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"34","id":3301,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24475:1:17","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3311,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3304,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3168,"src":"24495:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"id":3310,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"id":3307,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3305,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24504:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"34","id":3306,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24509:1:17","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"24504:6:17","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"}}],"id":3308,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"24503:8:17","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":3309,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24514:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24503:12:17","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"}},"src":"24495:20:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":3302,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5517,"src":"24479:8:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$5517_$","typeString":"type(library SafeCast)"}},"id":3303,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"24488:6:17","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":5516,"src":"24479:15:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":3312,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24479:37:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24475:41:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24469:47:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3315,"nodeType":"ExpressionStatement","src":"24469:47:17"},{"expression":{"id":3318,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3316,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3168,"src":"24530:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"id":3317,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3178,"src":"24540:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24530:13:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3319,"nodeType":"ExpressionStatement","src":"24530:13:17"},{"expression":{"id":3322,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3320,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3174,"src":"24557:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":3321,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3178,"src":"24567:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24557:13:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3323,"nodeType":"ExpressionStatement","src":"24557:13:17"},{"expression":{"id":3338,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3324,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3178,"src":"24585:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3337,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3325,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24591:1:17","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3335,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3328,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3168,"src":"24611:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"id":3334,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"id":3331,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3329,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24620:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"32","id":3330,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24625:1:17","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"24620:6:17","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"}}],"id":3332,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"24619:8:17","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":3333,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24630:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24619:12:17","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"}},"src":"24611:20:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":3326,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5517,"src":"24595:8:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$5517_$","typeString":"type(library SafeCast)"}},"id":3327,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"24604:6:17","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":5516,"src":"24595:15:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":3336,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24595:37:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24591:41:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24585:47:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3339,"nodeType":"ExpressionStatement","src":"24585:47:17"},{"expression":{"id":3342,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3340,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3168,"src":"24646:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"id":3341,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3178,"src":"24656:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24646:13:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3343,"nodeType":"ExpressionStatement","src":"24646:13:17"},{"expression":{"id":3346,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3344,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3174,"src":"24673:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":3345,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3178,"src":"24683:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24673:13:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3347,"nodeType":"ExpressionStatement","src":"24673:13:17"},{"expression":{"id":3355,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3348,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3174,"src":"24701:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3353,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3351,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3168,"src":"24727:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"31","id":3352,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24735:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24727:9:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":3349,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5517,"src":"24711:8:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$5517_$","typeString":"type(library SafeCast)"}},"id":3350,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"24720:6:17","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":5516,"src":"24711:15:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":3354,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24711:26:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24701:36:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3356,"nodeType":"ExpressionStatement","src":"24701:36:17"}]},{"expression":{"id":3358,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3174,"src":"24764:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3172,"id":3359,"nodeType":"Return","src":"24757:13:17"}]},"documentation":{"id":3166,"nodeType":"StructuredDocumentation","src":"23611:119:17","text":" @dev Return the log in base 2 of a positive value rounded towards zero.\n Returns 0 if given 0."},"id":3361,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"23744:4:17","nodeType":"FunctionDefinition","parameters":{"id":3169,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3168,"mutability":"mutable","name":"value","nameLocation":"23757:5:17","nodeType":"VariableDeclaration","scope":3361,"src":"23749:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3167,"name":"uint256","nodeType":"ElementaryTypeName","src":"23749:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"23748:15:17"},"returnParameters":{"id":3172,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3171,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3361,"src":"23787:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3170,"name":"uint256","nodeType":"ElementaryTypeName","src":"23787:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"23786:9:17"},"scope":3752,"src":"23735:1042:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3394,"nodeType":"Block","src":"25010:175:17","statements":[{"id":3393,"nodeType":"UncheckedBlock","src":"25020:159:17","statements":[{"assignments":[3373],"declarations":[{"constant":false,"id":3373,"mutability":"mutable","name":"result","nameLocation":"25052:6:17","nodeType":"VariableDeclaration","scope":3393,"src":"25044:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3372,"name":"uint256","nodeType":"ElementaryTypeName","src":"25044:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3377,"initialValue":{"arguments":[{"id":3375,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3364,"src":"25066:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3374,"name":"log2","nodeType":"Identifier","overloadedDeclarations":[3361,3395],"referencedDeclaration":3361,"src":"25061:4:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":3376,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25061:11:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"25044:28:17"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3391,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3378,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3373,"src":"25093:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3389,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3382,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3367,"src":"25135:8:17","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2158","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$2158","typeString":"enum Math.Rounding"}],"id":3381,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3751,"src":"25118:16:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$2158_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":3383,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25118:26:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3388,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3386,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3384,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25148:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":3385,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3373,"src":"25153:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25148:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3387,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3364,"src":"25162:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25148:19:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"25118:49:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":3379,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5517,"src":"25102:8:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$5517_$","typeString":"type(library SafeCast)"}},"id":3380,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"25111:6:17","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":5516,"src":"25102:15:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":3390,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25102:66:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25093:75:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3371,"id":3392,"nodeType":"Return","src":"25086:82:17"}]}]},"documentation":{"id":3362,"nodeType":"StructuredDocumentation","src":"24783:142:17","text":" @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":3395,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"24939:4:17","nodeType":"FunctionDefinition","parameters":{"id":3368,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3364,"mutability":"mutable","name":"value","nameLocation":"24952:5:17","nodeType":"VariableDeclaration","scope":3395,"src":"24944:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3363,"name":"uint256","nodeType":"ElementaryTypeName","src":"24944:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3367,"mutability":"mutable","name":"rounding","nameLocation":"24968:8:17","nodeType":"VariableDeclaration","scope":3395,"src":"24959:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2158","typeString":"enum Math.Rounding"},"typeName":{"id":3366,"nodeType":"UserDefinedTypeName","pathNode":{"id":3365,"name":"Rounding","nameLocations":["24959:8:17"],"nodeType":"IdentifierPath","referencedDeclaration":2158,"src":"24959:8:17"},"referencedDeclaration":2158,"src":"24959:8:17","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2158","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"24943:34:17"},"returnParameters":{"id":3371,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3370,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3395,"src":"25001:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3369,"name":"uint256","nodeType":"ElementaryTypeName","src":"25001:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"25000:9:17"},"scope":3752,"src":"24930:255:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3523,"nodeType":"Block","src":"25378:854:17","statements":[{"assignments":[3404],"declarations":[{"constant":false,"id":3404,"mutability":"mutable","name":"result","nameLocation":"25396:6:17","nodeType":"VariableDeclaration","scope":3523,"src":"25388:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3403,"name":"uint256","nodeType":"ElementaryTypeName","src":"25388:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3406,"initialValue":{"hexValue":"30","id":3405,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25405:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"25388:18:17"},{"id":3520,"nodeType":"UncheckedBlock","src":"25416:787:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3411,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3407,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3398,"src":"25444:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":3410,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3408,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25453:2:17","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":3409,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25459:2:17","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"25453:8:17","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"25444:17:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3423,"nodeType":"IfStatement","src":"25440:103:17","trueBody":{"id":3422,"nodeType":"Block","src":"25463:80:17","statements":[{"expression":{"id":3416,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3412,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3398,"src":"25481:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":3415,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3413,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25490:2:17","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":3414,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25496:2:17","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"25490:8:17","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"25481:17:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3417,"nodeType":"ExpressionStatement","src":"25481:17:17"},{"expression":{"id":3420,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3418,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3404,"src":"25516:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3634","id":3419,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25526:2:17","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"25516:12:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3421,"nodeType":"ExpressionStatement","src":"25516:12:17"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3428,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3424,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3398,"src":"25560:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":3427,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3425,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25569:2:17","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":3426,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25575:2:17","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"25569:8:17","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"25560:17:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3440,"nodeType":"IfStatement","src":"25556:103:17","trueBody":{"id":3439,"nodeType":"Block","src":"25579:80:17","statements":[{"expression":{"id":3433,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3429,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3398,"src":"25597:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":3432,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3430,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25606:2:17","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":3431,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25612:2:17","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"25606:8:17","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"25597:17:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3434,"nodeType":"ExpressionStatement","src":"25597:17:17"},{"expression":{"id":3437,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3435,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3404,"src":"25632:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3332","id":3436,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25642:2:17","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"25632:12:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3438,"nodeType":"ExpressionStatement","src":"25632:12:17"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3445,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3441,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3398,"src":"25676:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":3444,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3442,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25685:2:17","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":3443,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25691:2:17","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"25685:8:17","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"25676:17:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3457,"nodeType":"IfStatement","src":"25672:103:17","trueBody":{"id":3456,"nodeType":"Block","src":"25695:80:17","statements":[{"expression":{"id":3450,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3446,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3398,"src":"25713:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":3449,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3447,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25722:2:17","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":3448,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25728:2:17","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"25722:8:17","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"25713:17:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3451,"nodeType":"ExpressionStatement","src":"25713:17:17"},{"expression":{"id":3454,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3452,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3404,"src":"25748:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":3453,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25758:2:17","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"25748:12:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3455,"nodeType":"ExpressionStatement","src":"25748:12:17"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3462,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3458,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3398,"src":"25792:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":3461,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3459,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25801:2:17","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":3460,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25807:1:17","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"25801:7:17","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"25792:16:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3474,"nodeType":"IfStatement","src":"25788:100:17","trueBody":{"id":3473,"nodeType":"Block","src":"25810:78:17","statements":[{"expression":{"id":3467,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3463,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3398,"src":"25828:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":3466,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3464,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25837:2:17","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":3465,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25843:1:17","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"25837:7:17","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"25828:16:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3468,"nodeType":"ExpressionStatement","src":"25828:16:17"},{"expression":{"id":3471,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3469,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3404,"src":"25862:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":3470,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25872:1:17","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"25862:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3472,"nodeType":"ExpressionStatement","src":"25862:11:17"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3479,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3475,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3398,"src":"25905:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":3478,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3476,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25914:2:17","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":3477,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25920:1:17","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"25914:7:17","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"25905:16:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3491,"nodeType":"IfStatement","src":"25901:100:17","trueBody":{"id":3490,"nodeType":"Block","src":"25923:78:17","statements":[{"expression":{"id":3484,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3480,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3398,"src":"25941:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":3483,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3481,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25950:2:17","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":3482,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25956:1:17","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"25950:7:17","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"25941:16:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3485,"nodeType":"ExpressionStatement","src":"25941:16:17"},{"expression":{"id":3488,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3486,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3404,"src":"25975:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":3487,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25985:1:17","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"25975:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3489,"nodeType":"ExpressionStatement","src":"25975:11:17"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3496,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3492,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3398,"src":"26018:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":3495,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3493,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26027:2:17","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":3494,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26033:1:17","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"26027:7:17","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"26018:16:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3508,"nodeType":"IfStatement","src":"26014:100:17","trueBody":{"id":3507,"nodeType":"Block","src":"26036:78:17","statements":[{"expression":{"id":3501,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3497,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3398,"src":"26054:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":3500,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3498,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26063:2:17","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":3499,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26069:1:17","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"26063:7:17","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"26054:16:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3502,"nodeType":"ExpressionStatement","src":"26054:16:17"},{"expression":{"id":3505,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3503,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3404,"src":"26088:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":3504,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26098:1:17","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"26088:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3506,"nodeType":"ExpressionStatement","src":"26088:11:17"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3513,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3509,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3398,"src":"26131:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"id":3512,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3510,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26140:2:17","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"31","id":3511,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26146:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"26140:7:17","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"}},"src":"26131:16:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3519,"nodeType":"IfStatement","src":"26127:66:17","trueBody":{"id":3518,"nodeType":"Block","src":"26149:44:17","statements":[{"expression":{"id":3516,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3514,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3404,"src":"26167:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":3515,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26177:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"26167:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3517,"nodeType":"ExpressionStatement","src":"26167:11:17"}]}}]},{"expression":{"id":3521,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3404,"src":"26219:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3402,"id":3522,"nodeType":"Return","src":"26212:13:17"}]},"documentation":{"id":3396,"nodeType":"StructuredDocumentation","src":"25191:120:17","text":" @dev Return the log in base 10 of a positive value rounded towards zero.\n Returns 0 if given 0."},"id":3524,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"25325:5:17","nodeType":"FunctionDefinition","parameters":{"id":3399,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3398,"mutability":"mutable","name":"value","nameLocation":"25339:5:17","nodeType":"VariableDeclaration","scope":3524,"src":"25331:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3397,"name":"uint256","nodeType":"ElementaryTypeName","src":"25331:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"25330:15:17"},"returnParameters":{"id":3402,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3401,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3524,"src":"25369:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3400,"name":"uint256","nodeType":"ElementaryTypeName","src":"25369:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"25368:9:17"},"scope":3752,"src":"25316:916:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3557,"nodeType":"Block","src":"26467:177:17","statements":[{"id":3556,"nodeType":"UncheckedBlock","src":"26477:161:17","statements":[{"assignments":[3536],"declarations":[{"constant":false,"id":3536,"mutability":"mutable","name":"result","nameLocation":"26509:6:17","nodeType":"VariableDeclaration","scope":3556,"src":"26501:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3535,"name":"uint256","nodeType":"ElementaryTypeName","src":"26501:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3540,"initialValue":{"arguments":[{"id":3538,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3527,"src":"26524:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3537,"name":"log10","nodeType":"Identifier","overloadedDeclarations":[3524,3558],"referencedDeclaration":3524,"src":"26518:5:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":3539,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26518:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"26501:29:17"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3554,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3541,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3536,"src":"26551:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3552,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3545,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3530,"src":"26593:8:17","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2158","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$2158","typeString":"enum Math.Rounding"}],"id":3544,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3751,"src":"26576:16:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$2158_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":3546,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26576:26:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3551,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3549,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3547,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26606:2:17","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"id":3548,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3536,"src":"26612:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26606:12:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3550,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3527,"src":"26621:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26606:20:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"26576:50:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":3542,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5517,"src":"26560:8:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$5517_$","typeString":"type(library SafeCast)"}},"id":3543,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26569:6:17","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":5516,"src":"26560:15:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":3553,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26560:67:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26551:76:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3534,"id":3555,"nodeType":"Return","src":"26544:83:17"}]}]},"documentation":{"id":3525,"nodeType":"StructuredDocumentation","src":"26238:143:17","text":" @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":3558,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"26395:5:17","nodeType":"FunctionDefinition","parameters":{"id":3531,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3527,"mutability":"mutable","name":"value","nameLocation":"26409:5:17","nodeType":"VariableDeclaration","scope":3558,"src":"26401:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3526,"name":"uint256","nodeType":"ElementaryTypeName","src":"26401:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3530,"mutability":"mutable","name":"rounding","nameLocation":"26425:8:17","nodeType":"VariableDeclaration","scope":3558,"src":"26416:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2158","typeString":"enum Math.Rounding"},"typeName":{"id":3529,"nodeType":"UserDefinedTypeName","pathNode":{"id":3528,"name":"Rounding","nameLocations":["26416:8:17"],"nodeType":"IdentifierPath","referencedDeclaration":2158,"src":"26416:8:17"},"referencedDeclaration":2158,"src":"26416:8:17","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2158","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"26400:34:17"},"returnParameters":{"id":3534,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3533,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3558,"src":"26458:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3532,"name":"uint256","nodeType":"ElementaryTypeName","src":"26458:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"26457:9:17"},"scope":3752,"src":"26386:258:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3694,"nodeType":"Block","src":"26964:674:17","statements":[{"assignments":[3567],"declarations":[{"constant":false,"id":3567,"mutability":"mutable","name":"result","nameLocation":"26982:6:17","nodeType":"VariableDeclaration","scope":3694,"src":"26974:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3566,"name":"uint256","nodeType":"ElementaryTypeName","src":"26974:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3569,"initialValue":{"hexValue":"30","id":3568,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26991:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"26974:18:17"},{"assignments":[3571],"declarations":[{"constant":false,"id":3571,"mutability":"mutable","name":"isGt","nameLocation":"27010:4:17","nodeType":"VariableDeclaration","scope":3694,"src":"27002:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3570,"name":"uint256","nodeType":"ElementaryTypeName","src":"27002:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3572,"nodeType":"VariableDeclarationStatement","src":"27002:12:17"},{"id":3691,"nodeType":"UncheckedBlock","src":"27024:585:17","statements":[{"expression":{"id":3585,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3573,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3571,"src":"27048:4:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3583,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3576,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3561,"src":"27071:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_340282366920938463463374607431768211455_by_1","typeString":"int_const 3402...(31 digits omitted)...1455"},"id":3582,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"},"id":3579,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3577,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27080:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"313238","id":3578,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27085:3:17","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"27080:8:17","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}}],"id":3580,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"27079:10:17","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":3581,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27092:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"27079:14:17","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211455_by_1","typeString":"int_const 3402...(31 digits omitted)...1455"}},"src":"27071:22:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":3574,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5517,"src":"27055:8:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$5517_$","typeString":"type(library SafeCast)"}},"id":3575,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27064:6:17","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":5516,"src":"27055:15:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":3584,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27055:39:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27048:46:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3586,"nodeType":"ExpressionStatement","src":"27048:46:17"},{"expression":{"id":3591,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3587,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3561,"src":"27108:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3590,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3588,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3571,"src":"27118:4:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"313238","id":3589,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27125:3:17","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"27118:10:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27108:20:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3592,"nodeType":"ExpressionStatement","src":"27108:20:17"},{"expression":{"id":3597,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3593,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3567,"src":"27142:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3596,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3594,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3571,"src":"27152:4:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"3136","id":3595,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27159:2:17","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"27152:9:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27142:19:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3598,"nodeType":"ExpressionStatement","src":"27142:19:17"},{"expression":{"id":3611,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3599,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3571,"src":"27176:4:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3609,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3602,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3561,"src":"27199:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_18446744073709551615_by_1","typeString":"int_const 18446744073709551615"},"id":3608,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"},"id":3605,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3603,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27208:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3634","id":3604,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27213:2:17","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"27208:7:17","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}}],"id":3606,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"27207:9:17","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":3607,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27219:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"27207:13:17","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551615_by_1","typeString":"int_const 18446744073709551615"}},"src":"27199:21:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":3600,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5517,"src":"27183:8:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$5517_$","typeString":"type(library SafeCast)"}},"id":3601,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27192:6:17","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":5516,"src":"27183:15:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":3610,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27183:38:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27176:45:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3612,"nodeType":"ExpressionStatement","src":"27176:45:17"},{"expression":{"id":3617,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3613,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3561,"src":"27235:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3616,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3614,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3571,"src":"27245:4:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"3634","id":3615,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27252:2:17","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"27245:9:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27235:19:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3618,"nodeType":"ExpressionStatement","src":"27235:19:17"},{"expression":{"id":3623,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3619,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3567,"src":"27268:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3622,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3620,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3571,"src":"27278:4:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"38","id":3621,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27285:1:17","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"27278:8:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27268:18:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3624,"nodeType":"ExpressionStatement","src":"27268:18:17"},{"expression":{"id":3637,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3625,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3571,"src":"27301:4:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3635,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3628,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3561,"src":"27324:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_4294967295_by_1","typeString":"int_const 4294967295"},"id":3634,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"},"id":3631,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3629,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27333:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3332","id":3630,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27338:2:17","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"27333:7:17","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}}],"id":3632,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"27332:9:17","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":3633,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27344:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"27332:13:17","typeDescriptions":{"typeIdentifier":"t_rational_4294967295_by_1","typeString":"int_const 4294967295"}},"src":"27324:21:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":3626,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5517,"src":"27308:8:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$5517_$","typeString":"type(library SafeCast)"}},"id":3627,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27317:6:17","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":5516,"src":"27308:15:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":3636,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27308:38:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27301:45:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3638,"nodeType":"ExpressionStatement","src":"27301:45:17"},{"expression":{"id":3643,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3639,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3561,"src":"27360:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3642,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3640,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3571,"src":"27370:4:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"3332","id":3641,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27377:2:17","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"27370:9:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27360:19:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3644,"nodeType":"ExpressionStatement","src":"27360:19:17"},{"expression":{"id":3649,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3645,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3567,"src":"27393:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3648,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3646,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3571,"src":"27403:4:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"34","id":3647,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27410:1:17","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"27403:8:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27393:18:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3650,"nodeType":"ExpressionStatement","src":"27393:18:17"},{"expression":{"id":3663,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3651,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3571,"src":"27426:4:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3661,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3654,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3561,"src":"27449:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_65535_by_1","typeString":"int_const 65535"},"id":3660,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"},"id":3657,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3655,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27458:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3136","id":3656,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27463:2:17","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"27458:7:17","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}}],"id":3658,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"27457:9:17","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":3659,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27469:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"27457:13:17","typeDescriptions":{"typeIdentifier":"t_rational_65535_by_1","typeString":"int_const 65535"}},"src":"27449:21:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":3652,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5517,"src":"27433:8:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$5517_$","typeString":"type(library SafeCast)"}},"id":3653,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27442:6:17","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":5516,"src":"27433:15:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":3662,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27433:38:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27426:45:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3664,"nodeType":"ExpressionStatement","src":"27426:45:17"},{"expression":{"id":3669,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3665,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3561,"src":"27485:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3668,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3666,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3571,"src":"27495:4:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"3136","id":3667,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27502:2:17","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"27495:9:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27485:19:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3670,"nodeType":"ExpressionStatement","src":"27485:19:17"},{"expression":{"id":3675,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3671,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3567,"src":"27518:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3674,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3672,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3571,"src":"27528:4:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"32","id":3673,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27535:1:17","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"27528:8:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27518:18:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3676,"nodeType":"ExpressionStatement","src":"27518:18:17"},{"expression":{"id":3689,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3677,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3567,"src":"27551:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3687,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3680,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3561,"src":"27577:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"id":3686,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"id":3683,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3681,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27586:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"38","id":3682,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27591:1:17","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"27586:6:17","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}}],"id":3684,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"27585:8:17","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":3685,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27596:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"27585:12:17","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"}},"src":"27577:20:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":3678,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5517,"src":"27561:8:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$5517_$","typeString":"type(library SafeCast)"}},"id":3679,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27570:6:17","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":5516,"src":"27561:15:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":3688,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27561:37:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27551:47:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3690,"nodeType":"ExpressionStatement","src":"27551:47:17"}]},{"expression":{"id":3692,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3567,"src":"27625:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3565,"id":3693,"nodeType":"Return","src":"27618:13:17"}]},"documentation":{"id":3559,"nodeType":"StructuredDocumentation","src":"26650:246:17","text":" @dev Return the log in base 256 of a positive value rounded towards zero.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."},"id":3695,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"26910:6:17","nodeType":"FunctionDefinition","parameters":{"id":3562,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3561,"mutability":"mutable","name":"value","nameLocation":"26925:5:17","nodeType":"VariableDeclaration","scope":3695,"src":"26917:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3560,"name":"uint256","nodeType":"ElementaryTypeName","src":"26917:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"26916:15:17"},"returnParameters":{"id":3565,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3564,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3695,"src":"26955:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3563,"name":"uint256","nodeType":"ElementaryTypeName","src":"26955:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"26954:9:17"},"scope":3752,"src":"26901:737:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3731,"nodeType":"Block","src":"27875:184:17","statements":[{"id":3730,"nodeType":"UncheckedBlock","src":"27885:168:17","statements":[{"assignments":[3707],"declarations":[{"constant":false,"id":3707,"mutability":"mutable","name":"result","nameLocation":"27917:6:17","nodeType":"VariableDeclaration","scope":3730,"src":"27909:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3706,"name":"uint256","nodeType":"ElementaryTypeName","src":"27909:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3711,"initialValue":{"arguments":[{"id":3709,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3698,"src":"27933:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3708,"name":"log256","nodeType":"Identifier","overloadedDeclarations":[3695,3732],"referencedDeclaration":3695,"src":"27926:6:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":3710,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27926:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"27909:30:17"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3728,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3712,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3707,"src":"27960:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3726,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3716,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3701,"src":"28002:8:17","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2158","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$2158","typeString":"enum Math.Rounding"}],"id":3715,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3751,"src":"27985:16:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$2158_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":3717,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27985:26:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3725,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3723,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3718,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28015:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3721,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3719,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3707,"src":"28021:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"33","id":3720,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28031:1:17","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"28021:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3722,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"28020:13:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"28015:18:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3724,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3698,"src":"28036:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"28015:26:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"27985:56:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":3713,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5517,"src":"27969:8:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$5517_$","typeString":"type(library SafeCast)"}},"id":3714,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27978:6:17","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":5516,"src":"27969:15:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":3727,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27969:73:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27960:82:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3705,"id":3729,"nodeType":"Return","src":"27953:89:17"}]}]},"documentation":{"id":3696,"nodeType":"StructuredDocumentation","src":"27644:144:17","text":" @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":3732,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"27802:6:17","nodeType":"FunctionDefinition","parameters":{"id":3702,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3698,"mutability":"mutable","name":"value","nameLocation":"27817:5:17","nodeType":"VariableDeclaration","scope":3732,"src":"27809:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3697,"name":"uint256","nodeType":"ElementaryTypeName","src":"27809:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3701,"mutability":"mutable","name":"rounding","nameLocation":"27833:8:17","nodeType":"VariableDeclaration","scope":3732,"src":"27824:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2158","typeString":"enum Math.Rounding"},"typeName":{"id":3700,"nodeType":"UserDefinedTypeName","pathNode":{"id":3699,"name":"Rounding","nameLocations":["27824:8:17"],"nodeType":"IdentifierPath","referencedDeclaration":2158,"src":"27824:8:17"},"referencedDeclaration":2158,"src":"27824:8:17","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2158","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"27808:34:17"},"returnParameters":{"id":3705,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3704,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3732,"src":"27866:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3703,"name":"uint256","nodeType":"ElementaryTypeName","src":"27866:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"27865:9:17"},"scope":3752,"src":"27793:266:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3750,"nodeType":"Block","src":"28257:48:17","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":3748,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":3746,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3743,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3736,"src":"28280:8:17","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2158","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$2158","typeString":"enum Math.Rounding"}],"id":3742,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"28274:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":3741,"name":"uint8","nodeType":"ElementaryTypeName","src":"28274:5:17","typeDescriptions":{}}},"id":3744,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28274:15:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"hexValue":"32","id":3745,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28292:1:17","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"28274:19:17","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":3747,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28297:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"28274:24:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":3740,"id":3749,"nodeType":"Return","src":"28267:31:17"}]},"documentation":{"id":3733,"nodeType":"StructuredDocumentation","src":"28065:113:17","text":" @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers."},"id":3751,"implemented":true,"kind":"function","modifiers":[],"name":"unsignedRoundsUp","nameLocation":"28192:16:17","nodeType":"FunctionDefinition","parameters":{"id":3737,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3736,"mutability":"mutable","name":"rounding","nameLocation":"28218:8:17","nodeType":"VariableDeclaration","scope":3751,"src":"28209:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2158","typeString":"enum Math.Rounding"},"typeName":{"id":3735,"nodeType":"UserDefinedTypeName","pathNode":{"id":3734,"name":"Rounding","nameLocations":["28209:8:17"],"nodeType":"IdentifierPath","referencedDeclaration":2158,"src":"28209:8:17"},"referencedDeclaration":2158,"src":"28209:8:17","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2158","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"28208:19:17"},"returnParameters":{"id":3740,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3739,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3751,"src":"28251:4:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3738,"name":"bool","nodeType":"ElementaryTypeName","src":"28251:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"28250:6:17"},"scope":3752,"src":"28183:122:17","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":3753,"src":"281:28026:17","usedErrors":[],"usedEvents":[]}],"src":"103:28205:17"},"id":17},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","exportedSymbols":{"SafeCast":[5517]},"id":5518,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3754,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"192:24:18"},{"abstract":false,"baseContracts":[],"canonicalName":"SafeCast","contractDependencies":[],"contractKind":"library","documentation":{"id":3755,"nodeType":"StructuredDocumentation","src":"218:550:18","text":" @dev Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow\n checks.\n Downcasting from uint256/int256 in Solidity does not revert on overflow. This can\n easily result in undesired exploitation or bugs, since developers usually\n assume that overflows raise errors. `SafeCast` restores this intuition by\n reverting the transaction when such an operation overflows.\n Using this library instead of the unchecked operations eliminates an entire\n class of bugs, so it's recommended to use it always."},"fullyImplemented":true,"id":5517,"linearizedBaseContracts":[5517],"name":"SafeCast","nameLocation":"777:8:18","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":3756,"nodeType":"StructuredDocumentation","src":"792:68:18","text":" @dev Value doesn't fit in an uint of `bits` size."},"errorSelector":"6dfcc650","id":3762,"name":"SafeCastOverflowedUintDowncast","nameLocation":"871:30:18","nodeType":"ErrorDefinition","parameters":{"id":3761,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3758,"mutability":"mutable","name":"bits","nameLocation":"908:4:18","nodeType":"VariableDeclaration","scope":3762,"src":"902:10:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3757,"name":"uint8","nodeType":"ElementaryTypeName","src":"902:5:18","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":3760,"mutability":"mutable","name":"value","nameLocation":"922:5:18","nodeType":"VariableDeclaration","scope":3762,"src":"914:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3759,"name":"uint256","nodeType":"ElementaryTypeName","src":"914:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"901:27:18"},"src":"865:64:18"},{"documentation":{"id":3763,"nodeType":"StructuredDocumentation","src":"935:75:18","text":" @dev An int value doesn't fit in an uint of `bits` size."},"errorSelector":"a8ce4432","id":3767,"name":"SafeCastOverflowedIntToUint","nameLocation":"1021:27:18","nodeType":"ErrorDefinition","parameters":{"id":3766,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3765,"mutability":"mutable","name":"value","nameLocation":"1056:5:18","nodeType":"VariableDeclaration","scope":3767,"src":"1049:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3764,"name":"int256","nodeType":"ElementaryTypeName","src":"1049:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1048:14:18"},"src":"1015:48:18"},{"documentation":{"id":3768,"nodeType":"StructuredDocumentation","src":"1069:67:18","text":" @dev Value doesn't fit in an int of `bits` size."},"errorSelector":"327269a7","id":3774,"name":"SafeCastOverflowedIntDowncast","nameLocation":"1147:29:18","nodeType":"ErrorDefinition","parameters":{"id":3773,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3770,"mutability":"mutable","name":"bits","nameLocation":"1183:4:18","nodeType":"VariableDeclaration","scope":3774,"src":"1177:10:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3769,"name":"uint8","nodeType":"ElementaryTypeName","src":"1177:5:18","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":3772,"mutability":"mutable","name":"value","nameLocation":"1196:5:18","nodeType":"VariableDeclaration","scope":3774,"src":"1189:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3771,"name":"int256","nodeType":"ElementaryTypeName","src":"1189:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1176:26:18"},"src":"1141:62:18"},{"documentation":{"id":3775,"nodeType":"StructuredDocumentation","src":"1209:75:18","text":" @dev An uint value doesn't fit in an int of `bits` size."},"errorSelector":"24775e06","id":3779,"name":"SafeCastOverflowedUintToInt","nameLocation":"1295:27:18","nodeType":"ErrorDefinition","parameters":{"id":3778,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3777,"mutability":"mutable","name":"value","nameLocation":"1331:5:18","nodeType":"VariableDeclaration","scope":3779,"src":"1323:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3776,"name":"uint256","nodeType":"ElementaryTypeName","src":"1323:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1322:15:18"},"src":"1289:49:18"},{"body":{"id":3806,"nodeType":"Block","src":"1695:152:18","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3793,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3787,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3782,"src":"1709:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":3790,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1722:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"},"typeName":{"id":3789,"name":"uint248","nodeType":"ElementaryTypeName","src":"1722:7:18","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"}],"id":3788,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1717:4:18","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3791,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1717:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint248","typeString":"type(uint248)"}},"id":3792,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1731:3:18","memberName":"max","nodeType":"MemberAccess","src":"1717:17:18","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"src":"1709:25:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3800,"nodeType":"IfStatement","src":"1705:105:18","trueBody":{"id":3799,"nodeType":"Block","src":"1736:74:18","statements":[{"errorCall":{"arguments":[{"hexValue":"323438","id":3795,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1788:3:18","typeDescriptions":{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},"value":"248"},{"id":3796,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3782,"src":"1793:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3794,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3762,"src":"1757:30:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":3797,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1757:42:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":3798,"nodeType":"RevertStatement","src":"1750:49:18"}]}},{"expression":{"arguments":[{"id":3803,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3782,"src":"1834:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3802,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1826:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"},"typeName":{"id":3801,"name":"uint248","nodeType":"ElementaryTypeName","src":"1826:7:18","typeDescriptions":{}}},"id":3804,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1826:14:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"functionReturnParameters":3786,"id":3805,"nodeType":"Return","src":"1819:21:18"}]},"documentation":{"id":3780,"nodeType":"StructuredDocumentation","src":"1344:280:18","text":" @dev Returns the downcasted uint248 from uint256, reverting on\n overflow (when the input is greater than largest uint248).\n Counterpart to Solidity's `uint248` operator.\n Requirements:\n - input must fit into 248 bits"},"id":3807,"implemented":true,"kind":"function","modifiers":[],"name":"toUint248","nameLocation":"1638:9:18","nodeType":"FunctionDefinition","parameters":{"id":3783,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3782,"mutability":"mutable","name":"value","nameLocation":"1656:5:18","nodeType":"VariableDeclaration","scope":3807,"src":"1648:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3781,"name":"uint256","nodeType":"ElementaryTypeName","src":"1648:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1647:15:18"},"returnParameters":{"id":3786,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3785,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3807,"src":"1686:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"},"typeName":{"id":3784,"name":"uint248","nodeType":"ElementaryTypeName","src":"1686:7:18","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"visibility":"internal"}],"src":"1685:9:18"},"scope":5517,"src":"1629:218:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3834,"nodeType":"Block","src":"2204:152:18","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3821,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3815,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3810,"src":"2218:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":3818,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2231:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"},"typeName":{"id":3817,"name":"uint240","nodeType":"ElementaryTypeName","src":"2231:7:18","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"}],"id":3816,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2226:4:18","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3819,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2226:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint240","typeString":"type(uint240)"}},"id":3820,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2240:3:18","memberName":"max","nodeType":"MemberAccess","src":"2226:17:18","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"src":"2218:25:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3828,"nodeType":"IfStatement","src":"2214:105:18","trueBody":{"id":3827,"nodeType":"Block","src":"2245:74:18","statements":[{"errorCall":{"arguments":[{"hexValue":"323430","id":3823,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2297:3:18","typeDescriptions":{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},"value":"240"},{"id":3824,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3810,"src":"2302:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3822,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3762,"src":"2266:30:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":3825,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2266:42:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":3826,"nodeType":"RevertStatement","src":"2259:49:18"}]}},{"expression":{"arguments":[{"id":3831,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3810,"src":"2343:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3830,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2335:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"},"typeName":{"id":3829,"name":"uint240","nodeType":"ElementaryTypeName","src":"2335:7:18","typeDescriptions":{}}},"id":3832,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2335:14:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"functionReturnParameters":3814,"id":3833,"nodeType":"Return","src":"2328:21:18"}]},"documentation":{"id":3808,"nodeType":"StructuredDocumentation","src":"1853:280:18","text":" @dev Returns the downcasted uint240 from uint256, reverting on\n overflow (when the input is greater than largest uint240).\n Counterpart to Solidity's `uint240` operator.\n Requirements:\n - input must fit into 240 bits"},"id":3835,"implemented":true,"kind":"function","modifiers":[],"name":"toUint240","nameLocation":"2147:9:18","nodeType":"FunctionDefinition","parameters":{"id":3811,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3810,"mutability":"mutable","name":"value","nameLocation":"2165:5:18","nodeType":"VariableDeclaration","scope":3835,"src":"2157:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3809,"name":"uint256","nodeType":"ElementaryTypeName","src":"2157:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2156:15:18"},"returnParameters":{"id":3814,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3813,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3835,"src":"2195:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"},"typeName":{"id":3812,"name":"uint240","nodeType":"ElementaryTypeName","src":"2195:7:18","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"visibility":"internal"}],"src":"2194:9:18"},"scope":5517,"src":"2138:218:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3862,"nodeType":"Block","src":"2713:152:18","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3849,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3843,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3838,"src":"2727:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":3846,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2740:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"},"typeName":{"id":3845,"name":"uint232","nodeType":"ElementaryTypeName","src":"2740:7:18","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"}],"id":3844,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2735:4:18","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3847,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2735:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint232","typeString":"type(uint232)"}},"id":3848,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2749:3:18","memberName":"max","nodeType":"MemberAccess","src":"2735:17:18","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"src":"2727:25:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3856,"nodeType":"IfStatement","src":"2723:105:18","trueBody":{"id":3855,"nodeType":"Block","src":"2754:74:18","statements":[{"errorCall":{"arguments":[{"hexValue":"323332","id":3851,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2806:3:18","typeDescriptions":{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},"value":"232"},{"id":3852,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3838,"src":"2811:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3850,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3762,"src":"2775:30:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":3853,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2775:42:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":3854,"nodeType":"RevertStatement","src":"2768:49:18"}]}},{"expression":{"arguments":[{"id":3859,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3838,"src":"2852:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3858,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2844:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"},"typeName":{"id":3857,"name":"uint232","nodeType":"ElementaryTypeName","src":"2844:7:18","typeDescriptions":{}}},"id":3860,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2844:14:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"functionReturnParameters":3842,"id":3861,"nodeType":"Return","src":"2837:21:18"}]},"documentation":{"id":3836,"nodeType":"StructuredDocumentation","src":"2362:280:18","text":" @dev Returns the downcasted uint232 from uint256, reverting on\n overflow (when the input is greater than largest uint232).\n Counterpart to Solidity's `uint232` operator.\n Requirements:\n - input must fit into 232 bits"},"id":3863,"implemented":true,"kind":"function","modifiers":[],"name":"toUint232","nameLocation":"2656:9:18","nodeType":"FunctionDefinition","parameters":{"id":3839,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3838,"mutability":"mutable","name":"value","nameLocation":"2674:5:18","nodeType":"VariableDeclaration","scope":3863,"src":"2666:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3837,"name":"uint256","nodeType":"ElementaryTypeName","src":"2666:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2665:15:18"},"returnParameters":{"id":3842,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3841,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3863,"src":"2704:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"},"typeName":{"id":3840,"name":"uint232","nodeType":"ElementaryTypeName","src":"2704:7:18","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"visibility":"internal"}],"src":"2703:9:18"},"scope":5517,"src":"2647:218:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3890,"nodeType":"Block","src":"3222:152:18","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3877,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3871,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3866,"src":"3236:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":3874,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3249:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"},"typeName":{"id":3873,"name":"uint224","nodeType":"ElementaryTypeName","src":"3249:7:18","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"}],"id":3872,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"3244:4:18","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3875,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3244:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint224","typeString":"type(uint224)"}},"id":3876,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3258:3:18","memberName":"max","nodeType":"MemberAccess","src":"3244:17:18","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"src":"3236:25:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3884,"nodeType":"IfStatement","src":"3232:105:18","trueBody":{"id":3883,"nodeType":"Block","src":"3263:74:18","statements":[{"errorCall":{"arguments":[{"hexValue":"323234","id":3879,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3315:3:18","typeDescriptions":{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},"value":"224"},{"id":3880,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3866,"src":"3320:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3878,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3762,"src":"3284:30:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":3881,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3284:42:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":3882,"nodeType":"RevertStatement","src":"3277:49:18"}]}},{"expression":{"arguments":[{"id":3887,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3866,"src":"3361:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3886,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3353:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"},"typeName":{"id":3885,"name":"uint224","nodeType":"ElementaryTypeName","src":"3353:7:18","typeDescriptions":{}}},"id":3888,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3353:14:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"functionReturnParameters":3870,"id":3889,"nodeType":"Return","src":"3346:21:18"}]},"documentation":{"id":3864,"nodeType":"StructuredDocumentation","src":"2871:280:18","text":" @dev Returns the downcasted uint224 from uint256, reverting on\n overflow (when the input is greater than largest uint224).\n Counterpart to Solidity's `uint224` operator.\n Requirements:\n - input must fit into 224 bits"},"id":3891,"implemented":true,"kind":"function","modifiers":[],"name":"toUint224","nameLocation":"3165:9:18","nodeType":"FunctionDefinition","parameters":{"id":3867,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3866,"mutability":"mutable","name":"value","nameLocation":"3183:5:18","nodeType":"VariableDeclaration","scope":3891,"src":"3175:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3865,"name":"uint256","nodeType":"ElementaryTypeName","src":"3175:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3174:15:18"},"returnParameters":{"id":3870,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3869,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3891,"src":"3213:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"},"typeName":{"id":3868,"name":"uint224","nodeType":"ElementaryTypeName","src":"3213:7:18","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"visibility":"internal"}],"src":"3212:9:18"},"scope":5517,"src":"3156:218:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3918,"nodeType":"Block","src":"3731:152:18","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3905,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3899,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3894,"src":"3745:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":3902,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3758:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"},"typeName":{"id":3901,"name":"uint216","nodeType":"ElementaryTypeName","src":"3758:7:18","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"}],"id":3900,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"3753:4:18","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3903,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3753:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint216","typeString":"type(uint216)"}},"id":3904,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3767:3:18","memberName":"max","nodeType":"MemberAccess","src":"3753:17:18","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"src":"3745:25:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3912,"nodeType":"IfStatement","src":"3741:105:18","trueBody":{"id":3911,"nodeType":"Block","src":"3772:74:18","statements":[{"errorCall":{"arguments":[{"hexValue":"323136","id":3907,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3824:3:18","typeDescriptions":{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},"value":"216"},{"id":3908,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3894,"src":"3829:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3906,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3762,"src":"3793:30:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":3909,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3793:42:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":3910,"nodeType":"RevertStatement","src":"3786:49:18"}]}},{"expression":{"arguments":[{"id":3915,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3894,"src":"3870:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3914,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3862:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"},"typeName":{"id":3913,"name":"uint216","nodeType":"ElementaryTypeName","src":"3862:7:18","typeDescriptions":{}}},"id":3916,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3862:14:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"functionReturnParameters":3898,"id":3917,"nodeType":"Return","src":"3855:21:18"}]},"documentation":{"id":3892,"nodeType":"StructuredDocumentation","src":"3380:280:18","text":" @dev Returns the downcasted uint216 from uint256, reverting on\n overflow (when the input is greater than largest uint216).\n Counterpart to Solidity's `uint216` operator.\n Requirements:\n - input must fit into 216 bits"},"id":3919,"implemented":true,"kind":"function","modifiers":[],"name":"toUint216","nameLocation":"3674:9:18","nodeType":"FunctionDefinition","parameters":{"id":3895,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3894,"mutability":"mutable","name":"value","nameLocation":"3692:5:18","nodeType":"VariableDeclaration","scope":3919,"src":"3684:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3893,"name":"uint256","nodeType":"ElementaryTypeName","src":"3684:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3683:15:18"},"returnParameters":{"id":3898,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3897,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3919,"src":"3722:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"},"typeName":{"id":3896,"name":"uint216","nodeType":"ElementaryTypeName","src":"3722:7:18","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"visibility":"internal"}],"src":"3721:9:18"},"scope":5517,"src":"3665:218:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3946,"nodeType":"Block","src":"4240:152:18","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3933,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3927,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3922,"src":"4254:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":3930,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4267:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"},"typeName":{"id":3929,"name":"uint208","nodeType":"ElementaryTypeName","src":"4267:7:18","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"}],"id":3928,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4262:4:18","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3931,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4262:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint208","typeString":"type(uint208)"}},"id":3932,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4276:3:18","memberName":"max","nodeType":"MemberAccess","src":"4262:17:18","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"src":"4254:25:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3940,"nodeType":"IfStatement","src":"4250:105:18","trueBody":{"id":3939,"nodeType":"Block","src":"4281:74:18","statements":[{"errorCall":{"arguments":[{"hexValue":"323038","id":3935,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4333:3:18","typeDescriptions":{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},"value":"208"},{"id":3936,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3922,"src":"4338:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3934,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3762,"src":"4302:30:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":3937,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4302:42:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":3938,"nodeType":"RevertStatement","src":"4295:49:18"}]}},{"expression":{"arguments":[{"id":3943,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3922,"src":"4379:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3942,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4371:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"},"typeName":{"id":3941,"name":"uint208","nodeType":"ElementaryTypeName","src":"4371:7:18","typeDescriptions":{}}},"id":3944,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4371:14:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"functionReturnParameters":3926,"id":3945,"nodeType":"Return","src":"4364:21:18"}]},"documentation":{"id":3920,"nodeType":"StructuredDocumentation","src":"3889:280:18","text":" @dev Returns the downcasted uint208 from uint256, reverting on\n overflow (when the input is greater than largest uint208).\n Counterpart to Solidity's `uint208` operator.\n Requirements:\n - input must fit into 208 bits"},"id":3947,"implemented":true,"kind":"function","modifiers":[],"name":"toUint208","nameLocation":"4183:9:18","nodeType":"FunctionDefinition","parameters":{"id":3923,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3922,"mutability":"mutable","name":"value","nameLocation":"4201:5:18","nodeType":"VariableDeclaration","scope":3947,"src":"4193:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3921,"name":"uint256","nodeType":"ElementaryTypeName","src":"4193:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4192:15:18"},"returnParameters":{"id":3926,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3925,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3947,"src":"4231:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"},"typeName":{"id":3924,"name":"uint208","nodeType":"ElementaryTypeName","src":"4231:7:18","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"visibility":"internal"}],"src":"4230:9:18"},"scope":5517,"src":"4174:218:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3974,"nodeType":"Block","src":"4749:152:18","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3961,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3955,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3950,"src":"4763:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":3958,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4776:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"},"typeName":{"id":3957,"name":"uint200","nodeType":"ElementaryTypeName","src":"4776:7:18","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"}],"id":3956,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4771:4:18","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3959,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4771:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint200","typeString":"type(uint200)"}},"id":3960,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4785:3:18","memberName":"max","nodeType":"MemberAccess","src":"4771:17:18","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"src":"4763:25:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3968,"nodeType":"IfStatement","src":"4759:105:18","trueBody":{"id":3967,"nodeType":"Block","src":"4790:74:18","statements":[{"errorCall":{"arguments":[{"hexValue":"323030","id":3963,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4842:3:18","typeDescriptions":{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},"value":"200"},{"id":3964,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3950,"src":"4847:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3962,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3762,"src":"4811:30:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":3965,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4811:42:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":3966,"nodeType":"RevertStatement","src":"4804:49:18"}]}},{"expression":{"arguments":[{"id":3971,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3950,"src":"4888:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3970,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4880:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"},"typeName":{"id":3969,"name":"uint200","nodeType":"ElementaryTypeName","src":"4880:7:18","typeDescriptions":{}}},"id":3972,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4880:14:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"functionReturnParameters":3954,"id":3973,"nodeType":"Return","src":"4873:21:18"}]},"documentation":{"id":3948,"nodeType":"StructuredDocumentation","src":"4398:280:18","text":" @dev Returns the downcasted uint200 from uint256, reverting on\n overflow (when the input is greater than largest uint200).\n Counterpart to Solidity's `uint200` operator.\n Requirements:\n - input must fit into 200 bits"},"id":3975,"implemented":true,"kind":"function","modifiers":[],"name":"toUint200","nameLocation":"4692:9:18","nodeType":"FunctionDefinition","parameters":{"id":3951,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3950,"mutability":"mutable","name":"value","nameLocation":"4710:5:18","nodeType":"VariableDeclaration","scope":3975,"src":"4702:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3949,"name":"uint256","nodeType":"ElementaryTypeName","src":"4702:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4701:15:18"},"returnParameters":{"id":3954,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3953,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3975,"src":"4740:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"},"typeName":{"id":3952,"name":"uint200","nodeType":"ElementaryTypeName","src":"4740:7:18","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"visibility":"internal"}],"src":"4739:9:18"},"scope":5517,"src":"4683:218:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4002,"nodeType":"Block","src":"5258:152:18","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3989,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3983,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3978,"src":"5272:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":3986,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5285:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"},"typeName":{"id":3985,"name":"uint192","nodeType":"ElementaryTypeName","src":"5285:7:18","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"}],"id":3984,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"5280:4:18","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3987,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5280:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint192","typeString":"type(uint192)"}},"id":3988,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5294:3:18","memberName":"max","nodeType":"MemberAccess","src":"5280:17:18","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"src":"5272:25:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3996,"nodeType":"IfStatement","src":"5268:105:18","trueBody":{"id":3995,"nodeType":"Block","src":"5299:74:18","statements":[{"errorCall":{"arguments":[{"hexValue":"313932","id":3991,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5351:3:18","typeDescriptions":{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},"value":"192"},{"id":3992,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3978,"src":"5356:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3990,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3762,"src":"5320:30:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":3993,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5320:42:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":3994,"nodeType":"RevertStatement","src":"5313:49:18"}]}},{"expression":{"arguments":[{"id":3999,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3978,"src":"5397:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3998,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5389:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"},"typeName":{"id":3997,"name":"uint192","nodeType":"ElementaryTypeName","src":"5389:7:18","typeDescriptions":{}}},"id":4000,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5389:14:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"functionReturnParameters":3982,"id":4001,"nodeType":"Return","src":"5382:21:18"}]},"documentation":{"id":3976,"nodeType":"StructuredDocumentation","src":"4907:280:18","text":" @dev Returns the downcasted uint192 from uint256, reverting on\n overflow (when the input is greater than largest uint192).\n Counterpart to Solidity's `uint192` operator.\n Requirements:\n - input must fit into 192 bits"},"id":4003,"implemented":true,"kind":"function","modifiers":[],"name":"toUint192","nameLocation":"5201:9:18","nodeType":"FunctionDefinition","parameters":{"id":3979,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3978,"mutability":"mutable","name":"value","nameLocation":"5219:5:18","nodeType":"VariableDeclaration","scope":4003,"src":"5211:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3977,"name":"uint256","nodeType":"ElementaryTypeName","src":"5211:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5210:15:18"},"returnParameters":{"id":3982,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3981,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4003,"src":"5249:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"},"typeName":{"id":3980,"name":"uint192","nodeType":"ElementaryTypeName","src":"5249:7:18","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"visibility":"internal"}],"src":"5248:9:18"},"scope":5517,"src":"5192:218:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4030,"nodeType":"Block","src":"5767:152:18","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4017,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4011,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4006,"src":"5781:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4014,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5794:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"},"typeName":{"id":4013,"name":"uint184","nodeType":"ElementaryTypeName","src":"5794:7:18","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"}],"id":4012,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"5789:4:18","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4015,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5789:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint184","typeString":"type(uint184)"}},"id":4016,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5803:3:18","memberName":"max","nodeType":"MemberAccess","src":"5789:17:18","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"src":"5781:25:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4024,"nodeType":"IfStatement","src":"5777:105:18","trueBody":{"id":4023,"nodeType":"Block","src":"5808:74:18","statements":[{"errorCall":{"arguments":[{"hexValue":"313834","id":4019,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5860:3:18","typeDescriptions":{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},"value":"184"},{"id":4020,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4006,"src":"5865:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4018,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3762,"src":"5829:30:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":4021,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5829:42:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":4022,"nodeType":"RevertStatement","src":"5822:49:18"}]}},{"expression":{"arguments":[{"id":4027,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4006,"src":"5906:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4026,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5898:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"},"typeName":{"id":4025,"name":"uint184","nodeType":"ElementaryTypeName","src":"5898:7:18","typeDescriptions":{}}},"id":4028,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5898:14:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"functionReturnParameters":4010,"id":4029,"nodeType":"Return","src":"5891:21:18"}]},"documentation":{"id":4004,"nodeType":"StructuredDocumentation","src":"5416:280:18","text":" @dev Returns the downcasted uint184 from uint256, reverting on\n overflow (when the input is greater than largest uint184).\n Counterpart to Solidity's `uint184` operator.\n Requirements:\n - input must fit into 184 bits"},"id":4031,"implemented":true,"kind":"function","modifiers":[],"name":"toUint184","nameLocation":"5710:9:18","nodeType":"FunctionDefinition","parameters":{"id":4007,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4006,"mutability":"mutable","name":"value","nameLocation":"5728:5:18","nodeType":"VariableDeclaration","scope":4031,"src":"5720:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4005,"name":"uint256","nodeType":"ElementaryTypeName","src":"5720:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5719:15:18"},"returnParameters":{"id":4010,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4009,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4031,"src":"5758:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"},"typeName":{"id":4008,"name":"uint184","nodeType":"ElementaryTypeName","src":"5758:7:18","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"visibility":"internal"}],"src":"5757:9:18"},"scope":5517,"src":"5701:218:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4058,"nodeType":"Block","src":"6276:152:18","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4045,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4039,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4034,"src":"6290:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4042,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6303:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"},"typeName":{"id":4041,"name":"uint176","nodeType":"ElementaryTypeName","src":"6303:7:18","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"}],"id":4040,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6298:4:18","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4043,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6298:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint176","typeString":"type(uint176)"}},"id":4044,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6312:3:18","memberName":"max","nodeType":"MemberAccess","src":"6298:17:18","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"src":"6290:25:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4052,"nodeType":"IfStatement","src":"6286:105:18","trueBody":{"id":4051,"nodeType":"Block","src":"6317:74:18","statements":[{"errorCall":{"arguments":[{"hexValue":"313736","id":4047,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6369:3:18","typeDescriptions":{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},"value":"176"},{"id":4048,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4034,"src":"6374:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4046,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3762,"src":"6338:30:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":4049,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6338:42:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":4050,"nodeType":"RevertStatement","src":"6331:49:18"}]}},{"expression":{"arguments":[{"id":4055,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4034,"src":"6415:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4054,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6407:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"},"typeName":{"id":4053,"name":"uint176","nodeType":"ElementaryTypeName","src":"6407:7:18","typeDescriptions":{}}},"id":4056,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6407:14:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"functionReturnParameters":4038,"id":4057,"nodeType":"Return","src":"6400:21:18"}]},"documentation":{"id":4032,"nodeType":"StructuredDocumentation","src":"5925:280:18","text":" @dev Returns the downcasted uint176 from uint256, reverting on\n overflow (when the input is greater than largest uint176).\n Counterpart to Solidity's `uint176` operator.\n Requirements:\n - input must fit into 176 bits"},"id":4059,"implemented":true,"kind":"function","modifiers":[],"name":"toUint176","nameLocation":"6219:9:18","nodeType":"FunctionDefinition","parameters":{"id":4035,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4034,"mutability":"mutable","name":"value","nameLocation":"6237:5:18","nodeType":"VariableDeclaration","scope":4059,"src":"6229:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4033,"name":"uint256","nodeType":"ElementaryTypeName","src":"6229:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6228:15:18"},"returnParameters":{"id":4038,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4037,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4059,"src":"6267:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"},"typeName":{"id":4036,"name":"uint176","nodeType":"ElementaryTypeName","src":"6267:7:18","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"visibility":"internal"}],"src":"6266:9:18"},"scope":5517,"src":"6210:218:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4086,"nodeType":"Block","src":"6785:152:18","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4073,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4067,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4062,"src":"6799:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4070,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6812:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"},"typeName":{"id":4069,"name":"uint168","nodeType":"ElementaryTypeName","src":"6812:7:18","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"}],"id":4068,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6807:4:18","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4071,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6807:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint168","typeString":"type(uint168)"}},"id":4072,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6821:3:18","memberName":"max","nodeType":"MemberAccess","src":"6807:17:18","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"src":"6799:25:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4080,"nodeType":"IfStatement","src":"6795:105:18","trueBody":{"id":4079,"nodeType":"Block","src":"6826:74:18","statements":[{"errorCall":{"arguments":[{"hexValue":"313638","id":4075,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6878:3:18","typeDescriptions":{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},"value":"168"},{"id":4076,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4062,"src":"6883:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4074,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3762,"src":"6847:30:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":4077,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6847:42:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":4078,"nodeType":"RevertStatement","src":"6840:49:18"}]}},{"expression":{"arguments":[{"id":4083,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4062,"src":"6924:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4082,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6916:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"},"typeName":{"id":4081,"name":"uint168","nodeType":"ElementaryTypeName","src":"6916:7:18","typeDescriptions":{}}},"id":4084,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6916:14:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"functionReturnParameters":4066,"id":4085,"nodeType":"Return","src":"6909:21:18"}]},"documentation":{"id":4060,"nodeType":"StructuredDocumentation","src":"6434:280:18","text":" @dev Returns the downcasted uint168 from uint256, reverting on\n overflow (when the input is greater than largest uint168).\n Counterpart to Solidity's `uint168` operator.\n Requirements:\n - input must fit into 168 bits"},"id":4087,"implemented":true,"kind":"function","modifiers":[],"name":"toUint168","nameLocation":"6728:9:18","nodeType":"FunctionDefinition","parameters":{"id":4063,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4062,"mutability":"mutable","name":"value","nameLocation":"6746:5:18","nodeType":"VariableDeclaration","scope":4087,"src":"6738:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4061,"name":"uint256","nodeType":"ElementaryTypeName","src":"6738:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6737:15:18"},"returnParameters":{"id":4066,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4065,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4087,"src":"6776:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"},"typeName":{"id":4064,"name":"uint168","nodeType":"ElementaryTypeName","src":"6776:7:18","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"visibility":"internal"}],"src":"6775:9:18"},"scope":5517,"src":"6719:218:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4114,"nodeType":"Block","src":"7294:152:18","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4101,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4095,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4090,"src":"7308:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4098,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7321:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":4097,"name":"uint160","nodeType":"ElementaryTypeName","src":"7321:7:18","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"}],"id":4096,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"7316:4:18","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4099,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7316:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint160","typeString":"type(uint160)"}},"id":4100,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7330:3:18","memberName":"max","nodeType":"MemberAccess","src":"7316:17:18","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"src":"7308:25:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4108,"nodeType":"IfStatement","src":"7304:105:18","trueBody":{"id":4107,"nodeType":"Block","src":"7335:74:18","statements":[{"errorCall":{"arguments":[{"hexValue":"313630","id":4103,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7387:3:18","typeDescriptions":{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},"value":"160"},{"id":4104,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4090,"src":"7392:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4102,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3762,"src":"7356:30:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":4105,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7356:42:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":4106,"nodeType":"RevertStatement","src":"7349:49:18"}]}},{"expression":{"arguments":[{"id":4111,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4090,"src":"7433:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4110,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7425:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":4109,"name":"uint160","nodeType":"ElementaryTypeName","src":"7425:7:18","typeDescriptions":{}}},"id":4112,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7425:14:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"functionReturnParameters":4094,"id":4113,"nodeType":"Return","src":"7418:21:18"}]},"documentation":{"id":4088,"nodeType":"StructuredDocumentation","src":"6943:280:18","text":" @dev Returns the downcasted uint160 from uint256, reverting on\n overflow (when the input is greater than largest uint160).\n Counterpart to Solidity's `uint160` operator.\n Requirements:\n - input must fit into 160 bits"},"id":4115,"implemented":true,"kind":"function","modifiers":[],"name":"toUint160","nameLocation":"7237:9:18","nodeType":"FunctionDefinition","parameters":{"id":4091,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4090,"mutability":"mutable","name":"value","nameLocation":"7255:5:18","nodeType":"VariableDeclaration","scope":4115,"src":"7247:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4089,"name":"uint256","nodeType":"ElementaryTypeName","src":"7247:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7246:15:18"},"returnParameters":{"id":4094,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4093,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4115,"src":"7285:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":4092,"name":"uint160","nodeType":"ElementaryTypeName","src":"7285:7:18","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"}],"src":"7284:9:18"},"scope":5517,"src":"7228:218:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4142,"nodeType":"Block","src":"7803:152:18","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4129,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4123,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4118,"src":"7817:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4126,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7830:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"},"typeName":{"id":4125,"name":"uint152","nodeType":"ElementaryTypeName","src":"7830:7:18","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"}],"id":4124,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"7825:4:18","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4127,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7825:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint152","typeString":"type(uint152)"}},"id":4128,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7839:3:18","memberName":"max","nodeType":"MemberAccess","src":"7825:17:18","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"src":"7817:25:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4136,"nodeType":"IfStatement","src":"7813:105:18","trueBody":{"id":4135,"nodeType":"Block","src":"7844:74:18","statements":[{"errorCall":{"arguments":[{"hexValue":"313532","id":4131,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7896:3:18","typeDescriptions":{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},"value":"152"},{"id":4132,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4118,"src":"7901:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4130,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3762,"src":"7865:30:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":4133,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7865:42:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":4134,"nodeType":"RevertStatement","src":"7858:49:18"}]}},{"expression":{"arguments":[{"id":4139,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4118,"src":"7942:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4138,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7934:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"},"typeName":{"id":4137,"name":"uint152","nodeType":"ElementaryTypeName","src":"7934:7:18","typeDescriptions":{}}},"id":4140,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7934:14:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"functionReturnParameters":4122,"id":4141,"nodeType":"Return","src":"7927:21:18"}]},"documentation":{"id":4116,"nodeType":"StructuredDocumentation","src":"7452:280:18","text":" @dev Returns the downcasted uint152 from uint256, reverting on\n overflow (when the input is greater than largest uint152).\n Counterpart to Solidity's `uint152` operator.\n Requirements:\n - input must fit into 152 bits"},"id":4143,"implemented":true,"kind":"function","modifiers":[],"name":"toUint152","nameLocation":"7746:9:18","nodeType":"FunctionDefinition","parameters":{"id":4119,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4118,"mutability":"mutable","name":"value","nameLocation":"7764:5:18","nodeType":"VariableDeclaration","scope":4143,"src":"7756:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4117,"name":"uint256","nodeType":"ElementaryTypeName","src":"7756:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7755:15:18"},"returnParameters":{"id":4122,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4121,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4143,"src":"7794:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"},"typeName":{"id":4120,"name":"uint152","nodeType":"ElementaryTypeName","src":"7794:7:18","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"visibility":"internal"}],"src":"7793:9:18"},"scope":5517,"src":"7737:218:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4170,"nodeType":"Block","src":"8312:152:18","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4157,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4151,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4146,"src":"8326:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4154,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8339:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"},"typeName":{"id":4153,"name":"uint144","nodeType":"ElementaryTypeName","src":"8339:7:18","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"}],"id":4152,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8334:4:18","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4155,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8334:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint144","typeString":"type(uint144)"}},"id":4156,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8348:3:18","memberName":"max","nodeType":"MemberAccess","src":"8334:17:18","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"src":"8326:25:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4164,"nodeType":"IfStatement","src":"8322:105:18","trueBody":{"id":4163,"nodeType":"Block","src":"8353:74:18","statements":[{"errorCall":{"arguments":[{"hexValue":"313434","id":4159,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8405:3:18","typeDescriptions":{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},"value":"144"},{"id":4160,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4146,"src":"8410:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4158,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3762,"src":"8374:30:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":4161,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8374:42:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":4162,"nodeType":"RevertStatement","src":"8367:49:18"}]}},{"expression":{"arguments":[{"id":4167,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4146,"src":"8451:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4166,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8443:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"},"typeName":{"id":4165,"name":"uint144","nodeType":"ElementaryTypeName","src":"8443:7:18","typeDescriptions":{}}},"id":4168,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8443:14:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"functionReturnParameters":4150,"id":4169,"nodeType":"Return","src":"8436:21:18"}]},"documentation":{"id":4144,"nodeType":"StructuredDocumentation","src":"7961:280:18","text":" @dev Returns the downcasted uint144 from uint256, reverting on\n overflow (when the input is greater than largest uint144).\n Counterpart to Solidity's `uint144` operator.\n Requirements:\n - input must fit into 144 bits"},"id":4171,"implemented":true,"kind":"function","modifiers":[],"name":"toUint144","nameLocation":"8255:9:18","nodeType":"FunctionDefinition","parameters":{"id":4147,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4146,"mutability":"mutable","name":"value","nameLocation":"8273:5:18","nodeType":"VariableDeclaration","scope":4171,"src":"8265:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4145,"name":"uint256","nodeType":"ElementaryTypeName","src":"8265:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8264:15:18"},"returnParameters":{"id":4150,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4149,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4171,"src":"8303:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"},"typeName":{"id":4148,"name":"uint144","nodeType":"ElementaryTypeName","src":"8303:7:18","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"visibility":"internal"}],"src":"8302:9:18"},"scope":5517,"src":"8246:218:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4198,"nodeType":"Block","src":"8821:152:18","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4185,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4179,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4174,"src":"8835:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4182,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8848:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"},"typeName":{"id":4181,"name":"uint136","nodeType":"ElementaryTypeName","src":"8848:7:18","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"}],"id":4180,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8843:4:18","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4183,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8843:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint136","typeString":"type(uint136)"}},"id":4184,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8857:3:18","memberName":"max","nodeType":"MemberAccess","src":"8843:17:18","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"src":"8835:25:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4192,"nodeType":"IfStatement","src":"8831:105:18","trueBody":{"id":4191,"nodeType":"Block","src":"8862:74:18","statements":[{"errorCall":{"arguments":[{"hexValue":"313336","id":4187,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8914:3:18","typeDescriptions":{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},"value":"136"},{"id":4188,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4174,"src":"8919:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4186,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3762,"src":"8883:30:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":4189,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8883:42:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":4190,"nodeType":"RevertStatement","src":"8876:49:18"}]}},{"expression":{"arguments":[{"id":4195,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4174,"src":"8960:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4194,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8952:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"},"typeName":{"id":4193,"name":"uint136","nodeType":"ElementaryTypeName","src":"8952:7:18","typeDescriptions":{}}},"id":4196,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8952:14:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"functionReturnParameters":4178,"id":4197,"nodeType":"Return","src":"8945:21:18"}]},"documentation":{"id":4172,"nodeType":"StructuredDocumentation","src":"8470:280:18","text":" @dev Returns the downcasted uint136 from uint256, reverting on\n overflow (when the input is greater than largest uint136).\n Counterpart to Solidity's `uint136` operator.\n Requirements:\n - input must fit into 136 bits"},"id":4199,"implemented":true,"kind":"function","modifiers":[],"name":"toUint136","nameLocation":"8764:9:18","nodeType":"FunctionDefinition","parameters":{"id":4175,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4174,"mutability":"mutable","name":"value","nameLocation":"8782:5:18","nodeType":"VariableDeclaration","scope":4199,"src":"8774:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4173,"name":"uint256","nodeType":"ElementaryTypeName","src":"8774:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8773:15:18"},"returnParameters":{"id":4178,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4177,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4199,"src":"8812:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"},"typeName":{"id":4176,"name":"uint136","nodeType":"ElementaryTypeName","src":"8812:7:18","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"visibility":"internal"}],"src":"8811:9:18"},"scope":5517,"src":"8755:218:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4226,"nodeType":"Block","src":"9330:152:18","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4213,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4207,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4202,"src":"9344:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4210,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9357:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"},"typeName":{"id":4209,"name":"uint128","nodeType":"ElementaryTypeName","src":"9357:7:18","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"}],"id":4208,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"9352:4:18","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4211,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9352:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint128","typeString":"type(uint128)"}},"id":4212,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9366:3:18","memberName":"max","nodeType":"MemberAccess","src":"9352:17:18","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"src":"9344:25:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4220,"nodeType":"IfStatement","src":"9340:105:18","trueBody":{"id":4219,"nodeType":"Block","src":"9371:74:18","statements":[{"errorCall":{"arguments":[{"hexValue":"313238","id":4215,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9423:3:18","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},{"id":4216,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4202,"src":"9428:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4214,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3762,"src":"9392:30:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":4217,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9392:42:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":4218,"nodeType":"RevertStatement","src":"9385:49:18"}]}},{"expression":{"arguments":[{"id":4223,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4202,"src":"9469:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4222,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9461:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"},"typeName":{"id":4221,"name":"uint128","nodeType":"ElementaryTypeName","src":"9461:7:18","typeDescriptions":{}}},"id":4224,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9461:14:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"functionReturnParameters":4206,"id":4225,"nodeType":"Return","src":"9454:21:18"}]},"documentation":{"id":4200,"nodeType":"StructuredDocumentation","src":"8979:280:18","text":" @dev Returns the downcasted uint128 from uint256, reverting on\n overflow (when the input is greater than largest uint128).\n Counterpart to Solidity's `uint128` operator.\n Requirements:\n - input must fit into 128 bits"},"id":4227,"implemented":true,"kind":"function","modifiers":[],"name":"toUint128","nameLocation":"9273:9:18","nodeType":"FunctionDefinition","parameters":{"id":4203,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4202,"mutability":"mutable","name":"value","nameLocation":"9291:5:18","nodeType":"VariableDeclaration","scope":4227,"src":"9283:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4201,"name":"uint256","nodeType":"ElementaryTypeName","src":"9283:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9282:15:18"},"returnParameters":{"id":4206,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4205,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4227,"src":"9321:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":4204,"name":"uint128","nodeType":"ElementaryTypeName","src":"9321:7:18","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"}],"src":"9320:9:18"},"scope":5517,"src":"9264:218:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4254,"nodeType":"Block","src":"9839:152:18","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4241,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4235,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4230,"src":"9853:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4238,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9866:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"},"typeName":{"id":4237,"name":"uint120","nodeType":"ElementaryTypeName","src":"9866:7:18","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"}],"id":4236,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"9861:4:18","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4239,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9861:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint120","typeString":"type(uint120)"}},"id":4240,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9875:3:18","memberName":"max","nodeType":"MemberAccess","src":"9861:17:18","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"src":"9853:25:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4248,"nodeType":"IfStatement","src":"9849:105:18","trueBody":{"id":4247,"nodeType":"Block","src":"9880:74:18","statements":[{"errorCall":{"arguments":[{"hexValue":"313230","id":4243,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9932:3:18","typeDescriptions":{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},"value":"120"},{"id":4244,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4230,"src":"9937:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4242,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3762,"src":"9901:30:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":4245,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9901:42:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":4246,"nodeType":"RevertStatement","src":"9894:49:18"}]}},{"expression":{"arguments":[{"id":4251,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4230,"src":"9978:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4250,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9970:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"},"typeName":{"id":4249,"name":"uint120","nodeType":"ElementaryTypeName","src":"9970:7:18","typeDescriptions":{}}},"id":4252,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9970:14:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"functionReturnParameters":4234,"id":4253,"nodeType":"Return","src":"9963:21:18"}]},"documentation":{"id":4228,"nodeType":"StructuredDocumentation","src":"9488:280:18","text":" @dev Returns the downcasted uint120 from uint256, reverting on\n overflow (when the input is greater than largest uint120).\n Counterpart to Solidity's `uint120` operator.\n Requirements:\n - input must fit into 120 bits"},"id":4255,"implemented":true,"kind":"function","modifiers":[],"name":"toUint120","nameLocation":"9782:9:18","nodeType":"FunctionDefinition","parameters":{"id":4231,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4230,"mutability":"mutable","name":"value","nameLocation":"9800:5:18","nodeType":"VariableDeclaration","scope":4255,"src":"9792:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4229,"name":"uint256","nodeType":"ElementaryTypeName","src":"9792:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9791:15:18"},"returnParameters":{"id":4234,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4233,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4255,"src":"9830:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"},"typeName":{"id":4232,"name":"uint120","nodeType":"ElementaryTypeName","src":"9830:7:18","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"visibility":"internal"}],"src":"9829:9:18"},"scope":5517,"src":"9773:218:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4282,"nodeType":"Block","src":"10348:152:18","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4269,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4263,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4258,"src":"10362:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4266,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10375:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"},"typeName":{"id":4265,"name":"uint112","nodeType":"ElementaryTypeName","src":"10375:7:18","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"}],"id":4264,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10370:4:18","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4267,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10370:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint112","typeString":"type(uint112)"}},"id":4268,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10384:3:18","memberName":"max","nodeType":"MemberAccess","src":"10370:17:18","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"src":"10362:25:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4276,"nodeType":"IfStatement","src":"10358:105:18","trueBody":{"id":4275,"nodeType":"Block","src":"10389:74:18","statements":[{"errorCall":{"arguments":[{"hexValue":"313132","id":4271,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10441:3:18","typeDescriptions":{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},"value":"112"},{"id":4272,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4258,"src":"10446:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4270,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3762,"src":"10410:30:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":4273,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10410:42:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":4274,"nodeType":"RevertStatement","src":"10403:49:18"}]}},{"expression":{"arguments":[{"id":4279,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4258,"src":"10487:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4278,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10479:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"},"typeName":{"id":4277,"name":"uint112","nodeType":"ElementaryTypeName","src":"10479:7:18","typeDescriptions":{}}},"id":4280,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10479:14:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"functionReturnParameters":4262,"id":4281,"nodeType":"Return","src":"10472:21:18"}]},"documentation":{"id":4256,"nodeType":"StructuredDocumentation","src":"9997:280:18","text":" @dev Returns the downcasted uint112 from uint256, reverting on\n overflow (when the input is greater than largest uint112).\n Counterpart to Solidity's `uint112` operator.\n Requirements:\n - input must fit into 112 bits"},"id":4283,"implemented":true,"kind":"function","modifiers":[],"name":"toUint112","nameLocation":"10291:9:18","nodeType":"FunctionDefinition","parameters":{"id":4259,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4258,"mutability":"mutable","name":"value","nameLocation":"10309:5:18","nodeType":"VariableDeclaration","scope":4283,"src":"10301:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4257,"name":"uint256","nodeType":"ElementaryTypeName","src":"10301:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10300:15:18"},"returnParameters":{"id":4262,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4261,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4283,"src":"10339:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"},"typeName":{"id":4260,"name":"uint112","nodeType":"ElementaryTypeName","src":"10339:7:18","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"visibility":"internal"}],"src":"10338:9:18"},"scope":5517,"src":"10282:218:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4310,"nodeType":"Block","src":"10857:152:18","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4297,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4291,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4286,"src":"10871:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4294,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10884:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"},"typeName":{"id":4293,"name":"uint104","nodeType":"ElementaryTypeName","src":"10884:7:18","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"}],"id":4292,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10879:4:18","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4295,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10879:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint104","typeString":"type(uint104)"}},"id":4296,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10893:3:18","memberName":"max","nodeType":"MemberAccess","src":"10879:17:18","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"src":"10871:25:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4304,"nodeType":"IfStatement","src":"10867:105:18","trueBody":{"id":4303,"nodeType":"Block","src":"10898:74:18","statements":[{"errorCall":{"arguments":[{"hexValue":"313034","id":4299,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10950:3:18","typeDescriptions":{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},"value":"104"},{"id":4300,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4286,"src":"10955:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4298,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3762,"src":"10919:30:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":4301,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10919:42:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":4302,"nodeType":"RevertStatement","src":"10912:49:18"}]}},{"expression":{"arguments":[{"id":4307,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4286,"src":"10996:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4306,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10988:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"},"typeName":{"id":4305,"name":"uint104","nodeType":"ElementaryTypeName","src":"10988:7:18","typeDescriptions":{}}},"id":4308,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10988:14:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"functionReturnParameters":4290,"id":4309,"nodeType":"Return","src":"10981:21:18"}]},"documentation":{"id":4284,"nodeType":"StructuredDocumentation","src":"10506:280:18","text":" @dev Returns the downcasted uint104 from uint256, reverting on\n overflow (when the input is greater than largest uint104).\n Counterpart to Solidity's `uint104` operator.\n Requirements:\n - input must fit into 104 bits"},"id":4311,"implemented":true,"kind":"function","modifiers":[],"name":"toUint104","nameLocation":"10800:9:18","nodeType":"FunctionDefinition","parameters":{"id":4287,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4286,"mutability":"mutable","name":"value","nameLocation":"10818:5:18","nodeType":"VariableDeclaration","scope":4311,"src":"10810:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4285,"name":"uint256","nodeType":"ElementaryTypeName","src":"10810:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10809:15:18"},"returnParameters":{"id":4290,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4289,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4311,"src":"10848:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"},"typeName":{"id":4288,"name":"uint104","nodeType":"ElementaryTypeName","src":"10848:7:18","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"visibility":"internal"}],"src":"10847:9:18"},"scope":5517,"src":"10791:218:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4338,"nodeType":"Block","src":"11360:149:18","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4325,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4319,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4314,"src":"11374:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4322,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11387:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"},"typeName":{"id":4321,"name":"uint96","nodeType":"ElementaryTypeName","src":"11387:6:18","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"}],"id":4320,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"11382:4:18","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4323,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11382:12:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint96","typeString":"type(uint96)"}},"id":4324,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11395:3:18","memberName":"max","nodeType":"MemberAccess","src":"11382:16:18","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"src":"11374:24:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4332,"nodeType":"IfStatement","src":"11370:103:18","trueBody":{"id":4331,"nodeType":"Block","src":"11400:73:18","statements":[{"errorCall":{"arguments":[{"hexValue":"3936","id":4327,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11452:2:18","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},{"id":4328,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4314,"src":"11456:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4326,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3762,"src":"11421:30:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":4329,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11421:41:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":4330,"nodeType":"RevertStatement","src":"11414:48:18"}]}},{"expression":{"arguments":[{"id":4335,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4314,"src":"11496:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4334,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11489:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"},"typeName":{"id":4333,"name":"uint96","nodeType":"ElementaryTypeName","src":"11489:6:18","typeDescriptions":{}}},"id":4336,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11489:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"functionReturnParameters":4318,"id":4337,"nodeType":"Return","src":"11482:20:18"}]},"documentation":{"id":4312,"nodeType":"StructuredDocumentation","src":"11015:276:18","text":" @dev Returns the downcasted uint96 from uint256, reverting on\n overflow (when the input is greater than largest uint96).\n Counterpart to Solidity's `uint96` operator.\n Requirements:\n - input must fit into 96 bits"},"id":4339,"implemented":true,"kind":"function","modifiers":[],"name":"toUint96","nameLocation":"11305:8:18","nodeType":"FunctionDefinition","parameters":{"id":4315,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4314,"mutability":"mutable","name":"value","nameLocation":"11322:5:18","nodeType":"VariableDeclaration","scope":4339,"src":"11314:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4313,"name":"uint256","nodeType":"ElementaryTypeName","src":"11314:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11313:15:18"},"returnParameters":{"id":4318,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4317,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4339,"src":"11352:6:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":4316,"name":"uint96","nodeType":"ElementaryTypeName","src":"11352:6:18","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"}],"src":"11351:8:18"},"scope":5517,"src":"11296:213:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4366,"nodeType":"Block","src":"11860:149:18","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4353,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4347,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4342,"src":"11874:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4350,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11887:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"},"typeName":{"id":4349,"name":"uint88","nodeType":"ElementaryTypeName","src":"11887:6:18","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"}],"id":4348,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"11882:4:18","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4351,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11882:12:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint88","typeString":"type(uint88)"}},"id":4352,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11895:3:18","memberName":"max","nodeType":"MemberAccess","src":"11882:16:18","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"src":"11874:24:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4360,"nodeType":"IfStatement","src":"11870:103:18","trueBody":{"id":4359,"nodeType":"Block","src":"11900:73:18","statements":[{"errorCall":{"arguments":[{"hexValue":"3838","id":4355,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11952:2:18","typeDescriptions":{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},"value":"88"},{"id":4356,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4342,"src":"11956:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4354,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3762,"src":"11921:30:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":4357,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11921:41:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":4358,"nodeType":"RevertStatement","src":"11914:48:18"}]}},{"expression":{"arguments":[{"id":4363,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4342,"src":"11996:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4362,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11989:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"},"typeName":{"id":4361,"name":"uint88","nodeType":"ElementaryTypeName","src":"11989:6:18","typeDescriptions":{}}},"id":4364,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11989:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"functionReturnParameters":4346,"id":4365,"nodeType":"Return","src":"11982:20:18"}]},"documentation":{"id":4340,"nodeType":"StructuredDocumentation","src":"11515:276:18","text":" @dev Returns the downcasted uint88 from uint256, reverting on\n overflow (when the input is greater than largest uint88).\n Counterpart to Solidity's `uint88` operator.\n Requirements:\n - input must fit into 88 bits"},"id":4367,"implemented":true,"kind":"function","modifiers":[],"name":"toUint88","nameLocation":"11805:8:18","nodeType":"FunctionDefinition","parameters":{"id":4343,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4342,"mutability":"mutable","name":"value","nameLocation":"11822:5:18","nodeType":"VariableDeclaration","scope":4367,"src":"11814:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4341,"name":"uint256","nodeType":"ElementaryTypeName","src":"11814:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11813:15:18"},"returnParameters":{"id":4346,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4345,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4367,"src":"11852:6:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"},"typeName":{"id":4344,"name":"uint88","nodeType":"ElementaryTypeName","src":"11852:6:18","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"visibility":"internal"}],"src":"11851:8:18"},"scope":5517,"src":"11796:213:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4394,"nodeType":"Block","src":"12360:149:18","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4381,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4375,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4370,"src":"12374:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4378,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12387:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"},"typeName":{"id":4377,"name":"uint80","nodeType":"ElementaryTypeName","src":"12387:6:18","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"}],"id":4376,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"12382:4:18","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4379,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12382:12:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint80","typeString":"type(uint80)"}},"id":4380,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"12395:3:18","memberName":"max","nodeType":"MemberAccess","src":"12382:16:18","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"src":"12374:24:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4388,"nodeType":"IfStatement","src":"12370:103:18","trueBody":{"id":4387,"nodeType":"Block","src":"12400:73:18","statements":[{"errorCall":{"arguments":[{"hexValue":"3830","id":4383,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12452:2:18","typeDescriptions":{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},"value":"80"},{"id":4384,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4370,"src":"12456:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4382,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3762,"src":"12421:30:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":4385,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12421:41:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":4386,"nodeType":"RevertStatement","src":"12414:48:18"}]}},{"expression":{"arguments":[{"id":4391,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4370,"src":"12496:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4390,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12489:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"},"typeName":{"id":4389,"name":"uint80","nodeType":"ElementaryTypeName","src":"12489:6:18","typeDescriptions":{}}},"id":4392,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12489:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"functionReturnParameters":4374,"id":4393,"nodeType":"Return","src":"12482:20:18"}]},"documentation":{"id":4368,"nodeType":"StructuredDocumentation","src":"12015:276:18","text":" @dev Returns the downcasted uint80 from uint256, reverting on\n overflow (when the input is greater than largest uint80).\n Counterpart to Solidity's `uint80` operator.\n Requirements:\n - input must fit into 80 bits"},"id":4395,"implemented":true,"kind":"function","modifiers":[],"name":"toUint80","nameLocation":"12305:8:18","nodeType":"FunctionDefinition","parameters":{"id":4371,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4370,"mutability":"mutable","name":"value","nameLocation":"12322:5:18","nodeType":"VariableDeclaration","scope":4395,"src":"12314:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4369,"name":"uint256","nodeType":"ElementaryTypeName","src":"12314:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12313:15:18"},"returnParameters":{"id":4374,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4373,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4395,"src":"12352:6:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"},"typeName":{"id":4372,"name":"uint80","nodeType":"ElementaryTypeName","src":"12352:6:18","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"visibility":"internal"}],"src":"12351:8:18"},"scope":5517,"src":"12296:213:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4422,"nodeType":"Block","src":"12860:149:18","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4409,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4403,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4398,"src":"12874:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4406,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12887:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"},"typeName":{"id":4405,"name":"uint72","nodeType":"ElementaryTypeName","src":"12887:6:18","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"}],"id":4404,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"12882:4:18","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4407,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12882:12:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint72","typeString":"type(uint72)"}},"id":4408,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"12895:3:18","memberName":"max","nodeType":"MemberAccess","src":"12882:16:18","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"src":"12874:24:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4416,"nodeType":"IfStatement","src":"12870:103:18","trueBody":{"id":4415,"nodeType":"Block","src":"12900:73:18","statements":[{"errorCall":{"arguments":[{"hexValue":"3732","id":4411,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12952:2:18","typeDescriptions":{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},"value":"72"},{"id":4412,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4398,"src":"12956:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4410,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3762,"src":"12921:30:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":4413,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12921:41:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":4414,"nodeType":"RevertStatement","src":"12914:48:18"}]}},{"expression":{"arguments":[{"id":4419,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4398,"src":"12996:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4418,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12989:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"},"typeName":{"id":4417,"name":"uint72","nodeType":"ElementaryTypeName","src":"12989:6:18","typeDescriptions":{}}},"id":4420,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12989:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"functionReturnParameters":4402,"id":4421,"nodeType":"Return","src":"12982:20:18"}]},"documentation":{"id":4396,"nodeType":"StructuredDocumentation","src":"12515:276:18","text":" @dev Returns the downcasted uint72 from uint256, reverting on\n overflow (when the input is greater than largest uint72).\n Counterpart to Solidity's `uint72` operator.\n Requirements:\n - input must fit into 72 bits"},"id":4423,"implemented":true,"kind":"function","modifiers":[],"name":"toUint72","nameLocation":"12805:8:18","nodeType":"FunctionDefinition","parameters":{"id":4399,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4398,"mutability":"mutable","name":"value","nameLocation":"12822:5:18","nodeType":"VariableDeclaration","scope":4423,"src":"12814:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4397,"name":"uint256","nodeType":"ElementaryTypeName","src":"12814:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12813:15:18"},"returnParameters":{"id":4402,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4401,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4423,"src":"12852:6:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"},"typeName":{"id":4400,"name":"uint72","nodeType":"ElementaryTypeName","src":"12852:6:18","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"visibility":"internal"}],"src":"12851:8:18"},"scope":5517,"src":"12796:213:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4450,"nodeType":"Block","src":"13360:149:18","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4437,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4431,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4426,"src":"13374:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4434,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13387:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":4433,"name":"uint64","nodeType":"ElementaryTypeName","src":"13387:6:18","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"}],"id":4432,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"13382:4:18","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4435,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13382:12:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint64","typeString":"type(uint64)"}},"id":4436,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"13395:3:18","memberName":"max","nodeType":"MemberAccess","src":"13382:16:18","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"13374:24:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4444,"nodeType":"IfStatement","src":"13370:103:18","trueBody":{"id":4443,"nodeType":"Block","src":"13400:73:18","statements":[{"errorCall":{"arguments":[{"hexValue":"3634","id":4439,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13452:2:18","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},{"id":4440,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4426,"src":"13456:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4438,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3762,"src":"13421:30:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":4441,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13421:41:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":4442,"nodeType":"RevertStatement","src":"13414:48:18"}]}},{"expression":{"arguments":[{"id":4447,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4426,"src":"13496:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4446,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13489:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":4445,"name":"uint64","nodeType":"ElementaryTypeName","src":"13489:6:18","typeDescriptions":{}}},"id":4448,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13489:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"functionReturnParameters":4430,"id":4449,"nodeType":"Return","src":"13482:20:18"}]},"documentation":{"id":4424,"nodeType":"StructuredDocumentation","src":"13015:276:18","text":" @dev Returns the downcasted uint64 from uint256, reverting on\n overflow (when the input is greater than largest uint64).\n Counterpart to Solidity's `uint64` operator.\n Requirements:\n - input must fit into 64 bits"},"id":4451,"implemented":true,"kind":"function","modifiers":[],"name":"toUint64","nameLocation":"13305:8:18","nodeType":"FunctionDefinition","parameters":{"id":4427,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4426,"mutability":"mutable","name":"value","nameLocation":"13322:5:18","nodeType":"VariableDeclaration","scope":4451,"src":"13314:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4425,"name":"uint256","nodeType":"ElementaryTypeName","src":"13314:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13313:15:18"},"returnParameters":{"id":4430,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4429,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4451,"src":"13352:6:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":4428,"name":"uint64","nodeType":"ElementaryTypeName","src":"13352:6:18","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"13351:8:18"},"scope":5517,"src":"13296:213:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4478,"nodeType":"Block","src":"13860:149:18","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4465,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4459,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4454,"src":"13874:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4462,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13887:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"},"typeName":{"id":4461,"name":"uint56","nodeType":"ElementaryTypeName","src":"13887:6:18","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"}],"id":4460,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"13882:4:18","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4463,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13882:12:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint56","typeString":"type(uint56)"}},"id":4464,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"13895:3:18","memberName":"max","nodeType":"MemberAccess","src":"13882:16:18","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"src":"13874:24:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4472,"nodeType":"IfStatement","src":"13870:103:18","trueBody":{"id":4471,"nodeType":"Block","src":"13900:73:18","statements":[{"errorCall":{"arguments":[{"hexValue":"3536","id":4467,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13952:2:18","typeDescriptions":{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},"value":"56"},{"id":4468,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4454,"src":"13956:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4466,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3762,"src":"13921:30:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":4469,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13921:41:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":4470,"nodeType":"RevertStatement","src":"13914:48:18"}]}},{"expression":{"arguments":[{"id":4475,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4454,"src":"13996:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4474,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13989:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"},"typeName":{"id":4473,"name":"uint56","nodeType":"ElementaryTypeName","src":"13989:6:18","typeDescriptions":{}}},"id":4476,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13989:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"functionReturnParameters":4458,"id":4477,"nodeType":"Return","src":"13982:20:18"}]},"documentation":{"id":4452,"nodeType":"StructuredDocumentation","src":"13515:276:18","text":" @dev Returns the downcasted uint56 from uint256, reverting on\n overflow (when the input is greater than largest uint56).\n Counterpart to Solidity's `uint56` operator.\n Requirements:\n - input must fit into 56 bits"},"id":4479,"implemented":true,"kind":"function","modifiers":[],"name":"toUint56","nameLocation":"13805:8:18","nodeType":"FunctionDefinition","parameters":{"id":4455,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4454,"mutability":"mutable","name":"value","nameLocation":"13822:5:18","nodeType":"VariableDeclaration","scope":4479,"src":"13814:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4453,"name":"uint256","nodeType":"ElementaryTypeName","src":"13814:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13813:15:18"},"returnParameters":{"id":4458,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4457,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4479,"src":"13852:6:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"},"typeName":{"id":4456,"name":"uint56","nodeType":"ElementaryTypeName","src":"13852:6:18","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"visibility":"internal"}],"src":"13851:8:18"},"scope":5517,"src":"13796:213:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4506,"nodeType":"Block","src":"14360:149:18","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4493,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4487,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4482,"src":"14374:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4490,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14387:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"},"typeName":{"id":4489,"name":"uint48","nodeType":"ElementaryTypeName","src":"14387:6:18","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"}],"id":4488,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"14382:4:18","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4491,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14382:12:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint48","typeString":"type(uint48)"}},"id":4492,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"14395:3:18","memberName":"max","nodeType":"MemberAccess","src":"14382:16:18","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"src":"14374:24:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4500,"nodeType":"IfStatement","src":"14370:103:18","trueBody":{"id":4499,"nodeType":"Block","src":"14400:73:18","statements":[{"errorCall":{"arguments":[{"hexValue":"3438","id":4495,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14452:2:18","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},{"id":4496,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4482,"src":"14456:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4494,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3762,"src":"14421:30:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":4497,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14421:41:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":4498,"nodeType":"RevertStatement","src":"14414:48:18"}]}},{"expression":{"arguments":[{"id":4503,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4482,"src":"14496:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4502,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14489:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"},"typeName":{"id":4501,"name":"uint48","nodeType":"ElementaryTypeName","src":"14489:6:18","typeDescriptions":{}}},"id":4504,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14489:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"functionReturnParameters":4486,"id":4505,"nodeType":"Return","src":"14482:20:18"}]},"documentation":{"id":4480,"nodeType":"StructuredDocumentation","src":"14015:276:18","text":" @dev Returns the downcasted uint48 from uint256, reverting on\n overflow (when the input is greater than largest uint48).\n Counterpart to Solidity's `uint48` operator.\n Requirements:\n - input must fit into 48 bits"},"id":4507,"implemented":true,"kind":"function","modifiers":[],"name":"toUint48","nameLocation":"14305:8:18","nodeType":"FunctionDefinition","parameters":{"id":4483,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4482,"mutability":"mutable","name":"value","nameLocation":"14322:5:18","nodeType":"VariableDeclaration","scope":4507,"src":"14314:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4481,"name":"uint256","nodeType":"ElementaryTypeName","src":"14314:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14313:15:18"},"returnParameters":{"id":4486,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4485,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4507,"src":"14352:6:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":4484,"name":"uint48","nodeType":"ElementaryTypeName","src":"14352:6:18","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"src":"14351:8:18"},"scope":5517,"src":"14296:213:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4534,"nodeType":"Block","src":"14860:149:18","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4521,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4515,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4510,"src":"14874:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4518,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14887:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"},"typeName":{"id":4517,"name":"uint40","nodeType":"ElementaryTypeName","src":"14887:6:18","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"}],"id":4516,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"14882:4:18","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4519,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14882:12:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint40","typeString":"type(uint40)"}},"id":4520,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"14895:3:18","memberName":"max","nodeType":"MemberAccess","src":"14882:16:18","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"src":"14874:24:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4528,"nodeType":"IfStatement","src":"14870:103:18","trueBody":{"id":4527,"nodeType":"Block","src":"14900:73:18","statements":[{"errorCall":{"arguments":[{"hexValue":"3430","id":4523,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14952:2:18","typeDescriptions":{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},"value":"40"},{"id":4524,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4510,"src":"14956:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4522,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3762,"src":"14921:30:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":4525,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14921:41:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":4526,"nodeType":"RevertStatement","src":"14914:48:18"}]}},{"expression":{"arguments":[{"id":4531,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4510,"src":"14996:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4530,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14989:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"},"typeName":{"id":4529,"name":"uint40","nodeType":"ElementaryTypeName","src":"14989:6:18","typeDescriptions":{}}},"id":4532,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14989:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"functionReturnParameters":4514,"id":4533,"nodeType":"Return","src":"14982:20:18"}]},"documentation":{"id":4508,"nodeType":"StructuredDocumentation","src":"14515:276:18","text":" @dev Returns the downcasted uint40 from uint256, reverting on\n overflow (when the input is greater than largest uint40).\n Counterpart to Solidity's `uint40` operator.\n Requirements:\n - input must fit into 40 bits"},"id":4535,"implemented":true,"kind":"function","modifiers":[],"name":"toUint40","nameLocation":"14805:8:18","nodeType":"FunctionDefinition","parameters":{"id":4511,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4510,"mutability":"mutable","name":"value","nameLocation":"14822:5:18","nodeType":"VariableDeclaration","scope":4535,"src":"14814:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4509,"name":"uint256","nodeType":"ElementaryTypeName","src":"14814:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14813:15:18"},"returnParameters":{"id":4514,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4513,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4535,"src":"14852:6:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"},"typeName":{"id":4512,"name":"uint40","nodeType":"ElementaryTypeName","src":"14852:6:18","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"visibility":"internal"}],"src":"14851:8:18"},"scope":5517,"src":"14796:213:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4562,"nodeType":"Block","src":"15360:149:18","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4549,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4543,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4538,"src":"15374:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4546,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15387:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"},"typeName":{"id":4545,"name":"uint32","nodeType":"ElementaryTypeName","src":"15387:6:18","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"}],"id":4544,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"15382:4:18","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4547,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15382:12:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint32","typeString":"type(uint32)"}},"id":4548,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"15395:3:18","memberName":"max","nodeType":"MemberAccess","src":"15382:16:18","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"15374:24:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4556,"nodeType":"IfStatement","src":"15370:103:18","trueBody":{"id":4555,"nodeType":"Block","src":"15400:73:18","statements":[{"errorCall":{"arguments":[{"hexValue":"3332","id":4551,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15452:2:18","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},{"id":4552,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4538,"src":"15456:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4550,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3762,"src":"15421:30:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":4553,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15421:41:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":4554,"nodeType":"RevertStatement","src":"15414:48:18"}]}},{"expression":{"arguments":[{"id":4559,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4538,"src":"15496:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4558,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15489:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"},"typeName":{"id":4557,"name":"uint32","nodeType":"ElementaryTypeName","src":"15489:6:18","typeDescriptions":{}}},"id":4560,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15489:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"functionReturnParameters":4542,"id":4561,"nodeType":"Return","src":"15482:20:18"}]},"documentation":{"id":4536,"nodeType":"StructuredDocumentation","src":"15015:276:18","text":" @dev Returns the downcasted uint32 from uint256, reverting on\n overflow (when the input is greater than largest uint32).\n Counterpart to Solidity's `uint32` operator.\n Requirements:\n - input must fit into 32 bits"},"id":4563,"implemented":true,"kind":"function","modifiers":[],"name":"toUint32","nameLocation":"15305:8:18","nodeType":"FunctionDefinition","parameters":{"id":4539,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4538,"mutability":"mutable","name":"value","nameLocation":"15322:5:18","nodeType":"VariableDeclaration","scope":4563,"src":"15314:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4537,"name":"uint256","nodeType":"ElementaryTypeName","src":"15314:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15313:15:18"},"returnParameters":{"id":4542,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4541,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4563,"src":"15352:6:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":4540,"name":"uint32","nodeType":"ElementaryTypeName","src":"15352:6:18","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"15351:8:18"},"scope":5517,"src":"15296:213:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4590,"nodeType":"Block","src":"15860:149:18","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4577,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4571,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4566,"src":"15874:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4574,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15887:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"},"typeName":{"id":4573,"name":"uint24","nodeType":"ElementaryTypeName","src":"15887:6:18","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"}],"id":4572,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"15882:4:18","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4575,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15882:12:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint24","typeString":"type(uint24)"}},"id":4576,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"15895:3:18","memberName":"max","nodeType":"MemberAccess","src":"15882:16:18","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"src":"15874:24:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4584,"nodeType":"IfStatement","src":"15870:103:18","trueBody":{"id":4583,"nodeType":"Block","src":"15900:73:18","statements":[{"errorCall":{"arguments":[{"hexValue":"3234","id":4579,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15952:2:18","typeDescriptions":{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},"value":"24"},{"id":4580,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4566,"src":"15956:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4578,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3762,"src":"15921:30:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":4581,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15921:41:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":4582,"nodeType":"RevertStatement","src":"15914:48:18"}]}},{"expression":{"arguments":[{"id":4587,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4566,"src":"15996:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4586,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15989:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"},"typeName":{"id":4585,"name":"uint24","nodeType":"ElementaryTypeName","src":"15989:6:18","typeDescriptions":{}}},"id":4588,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15989:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"functionReturnParameters":4570,"id":4589,"nodeType":"Return","src":"15982:20:18"}]},"documentation":{"id":4564,"nodeType":"StructuredDocumentation","src":"15515:276:18","text":" @dev Returns the downcasted uint24 from uint256, reverting on\n overflow (when the input is greater than largest uint24).\n Counterpart to Solidity's `uint24` operator.\n Requirements:\n - input must fit into 24 bits"},"id":4591,"implemented":true,"kind":"function","modifiers":[],"name":"toUint24","nameLocation":"15805:8:18","nodeType":"FunctionDefinition","parameters":{"id":4567,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4566,"mutability":"mutable","name":"value","nameLocation":"15822:5:18","nodeType":"VariableDeclaration","scope":4591,"src":"15814:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4565,"name":"uint256","nodeType":"ElementaryTypeName","src":"15814:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15813:15:18"},"returnParameters":{"id":4570,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4569,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4591,"src":"15852:6:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":4568,"name":"uint24","nodeType":"ElementaryTypeName","src":"15852:6:18","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"visibility":"internal"}],"src":"15851:8:18"},"scope":5517,"src":"15796:213:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4618,"nodeType":"Block","src":"16360:149:18","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4605,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4599,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4594,"src":"16374:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4602,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16387:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"},"typeName":{"id":4601,"name":"uint16","nodeType":"ElementaryTypeName","src":"16387:6:18","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"}],"id":4600,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"16382:4:18","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4603,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16382:12:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint16","typeString":"type(uint16)"}},"id":4604,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16395:3:18","memberName":"max","nodeType":"MemberAccess","src":"16382:16:18","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"src":"16374:24:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4612,"nodeType":"IfStatement","src":"16370:103:18","trueBody":{"id":4611,"nodeType":"Block","src":"16400:73:18","statements":[{"errorCall":{"arguments":[{"hexValue":"3136","id":4607,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16452:2:18","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},{"id":4608,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4594,"src":"16456:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4606,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3762,"src":"16421:30:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":4609,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16421:41:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":4610,"nodeType":"RevertStatement","src":"16414:48:18"}]}},{"expression":{"arguments":[{"id":4615,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4594,"src":"16496:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4614,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16489:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"},"typeName":{"id":4613,"name":"uint16","nodeType":"ElementaryTypeName","src":"16489:6:18","typeDescriptions":{}}},"id":4616,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16489:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"functionReturnParameters":4598,"id":4617,"nodeType":"Return","src":"16482:20:18"}]},"documentation":{"id":4592,"nodeType":"StructuredDocumentation","src":"16015:276:18","text":" @dev Returns the downcasted uint16 from uint256, reverting on\n overflow (when the input is greater than largest uint16).\n Counterpart to Solidity's `uint16` operator.\n Requirements:\n - input must fit into 16 bits"},"id":4619,"implemented":true,"kind":"function","modifiers":[],"name":"toUint16","nameLocation":"16305:8:18","nodeType":"FunctionDefinition","parameters":{"id":4595,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4594,"mutability":"mutable","name":"value","nameLocation":"16322:5:18","nodeType":"VariableDeclaration","scope":4619,"src":"16314:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4593,"name":"uint256","nodeType":"ElementaryTypeName","src":"16314:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16313:15:18"},"returnParameters":{"id":4598,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4597,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4619,"src":"16352:6:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":4596,"name":"uint16","nodeType":"ElementaryTypeName","src":"16352:6:18","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"src":"16351:8:18"},"scope":5517,"src":"16296:213:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4646,"nodeType":"Block","src":"16854:146:18","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4633,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4627,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4622,"src":"16868:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4630,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16881:5:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":4629,"name":"uint8","nodeType":"ElementaryTypeName","src":"16881:5:18","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"}],"id":4628,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"16876:4:18","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4631,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16876:11:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint8","typeString":"type(uint8)"}},"id":4632,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16888:3:18","memberName":"max","nodeType":"MemberAccess","src":"16876:15:18","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"16868:23:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4640,"nodeType":"IfStatement","src":"16864:101:18","trueBody":{"id":4639,"nodeType":"Block","src":"16893:72:18","statements":[{"errorCall":{"arguments":[{"hexValue":"38","id":4635,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16945:1:18","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},{"id":4636,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4622,"src":"16948:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4634,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3762,"src":"16914:30:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":4637,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16914:40:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":4638,"nodeType":"RevertStatement","src":"16907:47:18"}]}},{"expression":{"arguments":[{"id":4643,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4622,"src":"16987:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4642,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16981:5:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":4641,"name":"uint8","nodeType":"ElementaryTypeName","src":"16981:5:18","typeDescriptions":{}}},"id":4644,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16981:12:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"functionReturnParameters":4626,"id":4645,"nodeType":"Return","src":"16974:19:18"}]},"documentation":{"id":4620,"nodeType":"StructuredDocumentation","src":"16515:272:18","text":" @dev Returns the downcasted uint8 from uint256, reverting on\n overflow (when the input is greater than largest uint8).\n Counterpart to Solidity's `uint8` operator.\n Requirements:\n - input must fit into 8 bits"},"id":4647,"implemented":true,"kind":"function","modifiers":[],"name":"toUint8","nameLocation":"16801:7:18","nodeType":"FunctionDefinition","parameters":{"id":4623,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4622,"mutability":"mutable","name":"value","nameLocation":"16817:5:18","nodeType":"VariableDeclaration","scope":4647,"src":"16809:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4621,"name":"uint256","nodeType":"ElementaryTypeName","src":"16809:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16808:15:18"},"returnParameters":{"id":4626,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4625,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4647,"src":"16847:5:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":4624,"name":"uint8","nodeType":"ElementaryTypeName","src":"16847:5:18","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"16846:7:18"},"scope":5517,"src":"16792:208:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4669,"nodeType":"Block","src":"17236:128:18","statements":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4657,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4655,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4650,"src":"17250:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":4656,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17258:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"17250:9:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4663,"nodeType":"IfStatement","src":"17246:81:18","trueBody":{"id":4662,"nodeType":"Block","src":"17261:66:18","statements":[{"errorCall":{"arguments":[{"id":4659,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4650,"src":"17310:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4658,"name":"SafeCastOverflowedIntToUint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3767,"src":"17282:27:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_int256_$returns$_t_error_$","typeString":"function (int256) pure returns (error)"}},"id":4660,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17282:34:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":4661,"nodeType":"RevertStatement","src":"17275:41:18"}]}},{"expression":{"arguments":[{"id":4666,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4650,"src":"17351:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4665,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17343:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":4664,"name":"uint256","nodeType":"ElementaryTypeName","src":"17343:7:18","typeDescriptions":{}}},"id":4667,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17343:14:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4654,"id":4668,"nodeType":"Return","src":"17336:21:18"}]},"documentation":{"id":4648,"nodeType":"StructuredDocumentation","src":"17006:160:18","text":" @dev Converts a signed int256 into an unsigned uint256.\n Requirements:\n - input must be greater than or equal to 0."},"id":4670,"implemented":true,"kind":"function","modifiers":[],"name":"toUint256","nameLocation":"17180:9:18","nodeType":"FunctionDefinition","parameters":{"id":4651,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4650,"mutability":"mutable","name":"value","nameLocation":"17197:5:18","nodeType":"VariableDeclaration","scope":4670,"src":"17190:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4649,"name":"int256","nodeType":"ElementaryTypeName","src":"17190:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"17189:14:18"},"returnParameters":{"id":4654,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4653,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4670,"src":"17227:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4652,"name":"uint256","nodeType":"ElementaryTypeName","src":"17227:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17226:9:18"},"scope":5517,"src":"17171:193:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4695,"nodeType":"Block","src":"17761:150:18","statements":[{"expression":{"id":4683,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4678,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4676,"src":"17771:10:18","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4681,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4673,"src":"17791:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4680,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17784:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_int248_$","typeString":"type(int248)"},"typeName":{"id":4679,"name":"int248","nodeType":"ElementaryTypeName","src":"17784:6:18","typeDescriptions":{}}},"id":4682,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17784:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"src":"17771:26:18","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"id":4684,"nodeType":"ExpressionStatement","src":"17771:26:18"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4687,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4685,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4676,"src":"17811:10:18","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":4686,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4673,"src":"17825:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"17811:19:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4694,"nodeType":"IfStatement","src":"17807:98:18","trueBody":{"id":4693,"nodeType":"Block","src":"17832:73:18","statements":[{"errorCall":{"arguments":[{"hexValue":"323438","id":4689,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17883:3:18","typeDescriptions":{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},"value":"248"},{"id":4690,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4673,"src":"17888:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4688,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3774,"src":"17853:29:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":4691,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17853:41:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":4692,"nodeType":"RevertStatement","src":"17846:48:18"}]}}]},"documentation":{"id":4671,"nodeType":"StructuredDocumentation","src":"17370:312:18","text":" @dev Returns the downcasted int248 from int256, reverting on\n overflow (when the input is less than smallest int248 or\n greater than largest int248).\n Counterpart to Solidity's `int248` operator.\n Requirements:\n - input must fit into 248 bits"},"id":4696,"implemented":true,"kind":"function","modifiers":[],"name":"toInt248","nameLocation":"17696:8:18","nodeType":"FunctionDefinition","parameters":{"id":4674,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4673,"mutability":"mutable","name":"value","nameLocation":"17712:5:18","nodeType":"VariableDeclaration","scope":4696,"src":"17705:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4672,"name":"int256","nodeType":"ElementaryTypeName","src":"17705:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"17704:14:18"},"returnParameters":{"id":4677,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4676,"mutability":"mutable","name":"downcasted","nameLocation":"17749:10:18","nodeType":"VariableDeclaration","scope":4696,"src":"17742:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"},"typeName":{"id":4675,"name":"int248","nodeType":"ElementaryTypeName","src":"17742:6:18","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"visibility":"internal"}],"src":"17741:19:18"},"scope":5517,"src":"17687:224:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4721,"nodeType":"Block","src":"18308:150:18","statements":[{"expression":{"id":4709,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4704,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4702,"src":"18318:10:18","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4707,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4699,"src":"18338:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4706,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18331:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_int240_$","typeString":"type(int240)"},"typeName":{"id":4705,"name":"int240","nodeType":"ElementaryTypeName","src":"18331:6:18","typeDescriptions":{}}},"id":4708,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18331:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"src":"18318:26:18","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"id":4710,"nodeType":"ExpressionStatement","src":"18318:26:18"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4713,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4711,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4702,"src":"18358:10:18","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":4712,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4699,"src":"18372:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"18358:19:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4720,"nodeType":"IfStatement","src":"18354:98:18","trueBody":{"id":4719,"nodeType":"Block","src":"18379:73:18","statements":[{"errorCall":{"arguments":[{"hexValue":"323430","id":4715,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18430:3:18","typeDescriptions":{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},"value":"240"},{"id":4716,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4699,"src":"18435:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4714,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3774,"src":"18400:29:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":4717,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18400:41:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":4718,"nodeType":"RevertStatement","src":"18393:48:18"}]}}]},"documentation":{"id":4697,"nodeType":"StructuredDocumentation","src":"17917:312:18","text":" @dev Returns the downcasted int240 from int256, reverting on\n overflow (when the input is less than smallest int240 or\n greater than largest int240).\n Counterpart to Solidity's `int240` operator.\n Requirements:\n - input must fit into 240 bits"},"id":4722,"implemented":true,"kind":"function","modifiers":[],"name":"toInt240","nameLocation":"18243:8:18","nodeType":"FunctionDefinition","parameters":{"id":4700,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4699,"mutability":"mutable","name":"value","nameLocation":"18259:5:18","nodeType":"VariableDeclaration","scope":4722,"src":"18252:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4698,"name":"int256","nodeType":"ElementaryTypeName","src":"18252:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"18251:14:18"},"returnParameters":{"id":4703,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4702,"mutability":"mutable","name":"downcasted","nameLocation":"18296:10:18","nodeType":"VariableDeclaration","scope":4722,"src":"18289:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"},"typeName":{"id":4701,"name":"int240","nodeType":"ElementaryTypeName","src":"18289:6:18","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"visibility":"internal"}],"src":"18288:19:18"},"scope":5517,"src":"18234:224:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4747,"nodeType":"Block","src":"18855:150:18","statements":[{"expression":{"id":4735,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4730,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4728,"src":"18865:10:18","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4733,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4725,"src":"18885:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4732,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18878:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_int232_$","typeString":"type(int232)"},"typeName":{"id":4731,"name":"int232","nodeType":"ElementaryTypeName","src":"18878:6:18","typeDescriptions":{}}},"id":4734,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18878:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"src":"18865:26:18","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"id":4736,"nodeType":"ExpressionStatement","src":"18865:26:18"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4739,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4737,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4728,"src":"18905:10:18","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":4738,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4725,"src":"18919:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"18905:19:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4746,"nodeType":"IfStatement","src":"18901:98:18","trueBody":{"id":4745,"nodeType":"Block","src":"18926:73:18","statements":[{"errorCall":{"arguments":[{"hexValue":"323332","id":4741,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18977:3:18","typeDescriptions":{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},"value":"232"},{"id":4742,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4725,"src":"18982:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4740,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3774,"src":"18947:29:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":4743,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18947:41:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":4744,"nodeType":"RevertStatement","src":"18940:48:18"}]}}]},"documentation":{"id":4723,"nodeType":"StructuredDocumentation","src":"18464:312:18","text":" @dev Returns the downcasted int232 from int256, reverting on\n overflow (when the input is less than smallest int232 or\n greater than largest int232).\n Counterpart to Solidity's `int232` operator.\n Requirements:\n - input must fit into 232 bits"},"id":4748,"implemented":true,"kind":"function","modifiers":[],"name":"toInt232","nameLocation":"18790:8:18","nodeType":"FunctionDefinition","parameters":{"id":4726,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4725,"mutability":"mutable","name":"value","nameLocation":"18806:5:18","nodeType":"VariableDeclaration","scope":4748,"src":"18799:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4724,"name":"int256","nodeType":"ElementaryTypeName","src":"18799:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"18798:14:18"},"returnParameters":{"id":4729,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4728,"mutability":"mutable","name":"downcasted","nameLocation":"18843:10:18","nodeType":"VariableDeclaration","scope":4748,"src":"18836:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"},"typeName":{"id":4727,"name":"int232","nodeType":"ElementaryTypeName","src":"18836:6:18","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"visibility":"internal"}],"src":"18835:19:18"},"scope":5517,"src":"18781:224:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4773,"nodeType":"Block","src":"19402:150:18","statements":[{"expression":{"id":4761,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4756,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4754,"src":"19412:10:18","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4759,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4751,"src":"19432:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4758,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"19425:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_int224_$","typeString":"type(int224)"},"typeName":{"id":4757,"name":"int224","nodeType":"ElementaryTypeName","src":"19425:6:18","typeDescriptions":{}}},"id":4760,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19425:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"src":"19412:26:18","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"id":4762,"nodeType":"ExpressionStatement","src":"19412:26:18"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4765,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4763,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4754,"src":"19452:10:18","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":4764,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4751,"src":"19466:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"19452:19:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4772,"nodeType":"IfStatement","src":"19448:98:18","trueBody":{"id":4771,"nodeType":"Block","src":"19473:73:18","statements":[{"errorCall":{"arguments":[{"hexValue":"323234","id":4767,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19524:3:18","typeDescriptions":{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},"value":"224"},{"id":4768,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4751,"src":"19529:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4766,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3774,"src":"19494:29:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":4769,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19494:41:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":4770,"nodeType":"RevertStatement","src":"19487:48:18"}]}}]},"documentation":{"id":4749,"nodeType":"StructuredDocumentation","src":"19011:312:18","text":" @dev Returns the downcasted int224 from int256, reverting on\n overflow (when the input is less than smallest int224 or\n greater than largest int224).\n Counterpart to Solidity's `int224` operator.\n Requirements:\n - input must fit into 224 bits"},"id":4774,"implemented":true,"kind":"function","modifiers":[],"name":"toInt224","nameLocation":"19337:8:18","nodeType":"FunctionDefinition","parameters":{"id":4752,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4751,"mutability":"mutable","name":"value","nameLocation":"19353:5:18","nodeType":"VariableDeclaration","scope":4774,"src":"19346:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4750,"name":"int256","nodeType":"ElementaryTypeName","src":"19346:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"19345:14:18"},"returnParameters":{"id":4755,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4754,"mutability":"mutable","name":"downcasted","nameLocation":"19390:10:18","nodeType":"VariableDeclaration","scope":4774,"src":"19383:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"},"typeName":{"id":4753,"name":"int224","nodeType":"ElementaryTypeName","src":"19383:6:18","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"visibility":"internal"}],"src":"19382:19:18"},"scope":5517,"src":"19328:224:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4799,"nodeType":"Block","src":"19949:150:18","statements":[{"expression":{"id":4787,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4782,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4780,"src":"19959:10:18","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4785,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4777,"src":"19979:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4784,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"19972:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_int216_$","typeString":"type(int216)"},"typeName":{"id":4783,"name":"int216","nodeType":"ElementaryTypeName","src":"19972:6:18","typeDescriptions":{}}},"id":4786,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19972:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"src":"19959:26:18","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"id":4788,"nodeType":"ExpressionStatement","src":"19959:26:18"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4791,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4789,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4780,"src":"19999:10:18","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":4790,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4777,"src":"20013:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"19999:19:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4798,"nodeType":"IfStatement","src":"19995:98:18","trueBody":{"id":4797,"nodeType":"Block","src":"20020:73:18","statements":[{"errorCall":{"arguments":[{"hexValue":"323136","id":4793,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20071:3:18","typeDescriptions":{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},"value":"216"},{"id":4794,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4777,"src":"20076:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4792,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3774,"src":"20041:29:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":4795,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20041:41:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":4796,"nodeType":"RevertStatement","src":"20034:48:18"}]}}]},"documentation":{"id":4775,"nodeType":"StructuredDocumentation","src":"19558:312:18","text":" @dev Returns the downcasted int216 from int256, reverting on\n overflow (when the input is less than smallest int216 or\n greater than largest int216).\n Counterpart to Solidity's `int216` operator.\n Requirements:\n - input must fit into 216 bits"},"id":4800,"implemented":true,"kind":"function","modifiers":[],"name":"toInt216","nameLocation":"19884:8:18","nodeType":"FunctionDefinition","parameters":{"id":4778,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4777,"mutability":"mutable","name":"value","nameLocation":"19900:5:18","nodeType":"VariableDeclaration","scope":4800,"src":"19893:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4776,"name":"int256","nodeType":"ElementaryTypeName","src":"19893:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"19892:14:18"},"returnParameters":{"id":4781,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4780,"mutability":"mutable","name":"downcasted","nameLocation":"19937:10:18","nodeType":"VariableDeclaration","scope":4800,"src":"19930:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"},"typeName":{"id":4779,"name":"int216","nodeType":"ElementaryTypeName","src":"19930:6:18","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"visibility":"internal"}],"src":"19929:19:18"},"scope":5517,"src":"19875:224:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4825,"nodeType":"Block","src":"20496:150:18","statements":[{"expression":{"id":4813,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4808,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4806,"src":"20506:10:18","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4811,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4803,"src":"20526:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4810,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"20519:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_int208_$","typeString":"type(int208)"},"typeName":{"id":4809,"name":"int208","nodeType":"ElementaryTypeName","src":"20519:6:18","typeDescriptions":{}}},"id":4812,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20519:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"src":"20506:26:18","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"id":4814,"nodeType":"ExpressionStatement","src":"20506:26:18"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4817,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4815,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4806,"src":"20546:10:18","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":4816,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4803,"src":"20560:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"20546:19:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4824,"nodeType":"IfStatement","src":"20542:98:18","trueBody":{"id":4823,"nodeType":"Block","src":"20567:73:18","statements":[{"errorCall":{"arguments":[{"hexValue":"323038","id":4819,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20618:3:18","typeDescriptions":{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},"value":"208"},{"id":4820,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4803,"src":"20623:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4818,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3774,"src":"20588:29:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":4821,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20588:41:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":4822,"nodeType":"RevertStatement","src":"20581:48:18"}]}}]},"documentation":{"id":4801,"nodeType":"StructuredDocumentation","src":"20105:312:18","text":" @dev Returns the downcasted int208 from int256, reverting on\n overflow (when the input is less than smallest int208 or\n greater than largest int208).\n Counterpart to Solidity's `int208` operator.\n Requirements:\n - input must fit into 208 bits"},"id":4826,"implemented":true,"kind":"function","modifiers":[],"name":"toInt208","nameLocation":"20431:8:18","nodeType":"FunctionDefinition","parameters":{"id":4804,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4803,"mutability":"mutable","name":"value","nameLocation":"20447:5:18","nodeType":"VariableDeclaration","scope":4826,"src":"20440:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4802,"name":"int256","nodeType":"ElementaryTypeName","src":"20440:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"20439:14:18"},"returnParameters":{"id":4807,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4806,"mutability":"mutable","name":"downcasted","nameLocation":"20484:10:18","nodeType":"VariableDeclaration","scope":4826,"src":"20477:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"},"typeName":{"id":4805,"name":"int208","nodeType":"ElementaryTypeName","src":"20477:6:18","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"visibility":"internal"}],"src":"20476:19:18"},"scope":5517,"src":"20422:224:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4851,"nodeType":"Block","src":"21043:150:18","statements":[{"expression":{"id":4839,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4834,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4832,"src":"21053:10:18","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4837,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4829,"src":"21073:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4836,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"21066:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_int200_$","typeString":"type(int200)"},"typeName":{"id":4835,"name":"int200","nodeType":"ElementaryTypeName","src":"21066:6:18","typeDescriptions":{}}},"id":4838,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21066:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"src":"21053:26:18","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"id":4840,"nodeType":"ExpressionStatement","src":"21053:26:18"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4843,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4841,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4832,"src":"21093:10:18","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":4842,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4829,"src":"21107:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"21093:19:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4850,"nodeType":"IfStatement","src":"21089:98:18","trueBody":{"id":4849,"nodeType":"Block","src":"21114:73:18","statements":[{"errorCall":{"arguments":[{"hexValue":"323030","id":4845,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21165:3:18","typeDescriptions":{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},"value":"200"},{"id":4846,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4829,"src":"21170:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4844,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3774,"src":"21135:29:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":4847,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21135:41:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":4848,"nodeType":"RevertStatement","src":"21128:48:18"}]}}]},"documentation":{"id":4827,"nodeType":"StructuredDocumentation","src":"20652:312:18","text":" @dev Returns the downcasted int200 from int256, reverting on\n overflow (when the input is less than smallest int200 or\n greater than largest int200).\n Counterpart to Solidity's `int200` operator.\n Requirements:\n - input must fit into 200 bits"},"id":4852,"implemented":true,"kind":"function","modifiers":[],"name":"toInt200","nameLocation":"20978:8:18","nodeType":"FunctionDefinition","parameters":{"id":4830,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4829,"mutability":"mutable","name":"value","nameLocation":"20994:5:18","nodeType":"VariableDeclaration","scope":4852,"src":"20987:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4828,"name":"int256","nodeType":"ElementaryTypeName","src":"20987:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"20986:14:18"},"returnParameters":{"id":4833,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4832,"mutability":"mutable","name":"downcasted","nameLocation":"21031:10:18","nodeType":"VariableDeclaration","scope":4852,"src":"21024:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"},"typeName":{"id":4831,"name":"int200","nodeType":"ElementaryTypeName","src":"21024:6:18","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"visibility":"internal"}],"src":"21023:19:18"},"scope":5517,"src":"20969:224:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4877,"nodeType":"Block","src":"21590:150:18","statements":[{"expression":{"id":4865,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4860,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4858,"src":"21600:10:18","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4863,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4855,"src":"21620:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4862,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"21613:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_int192_$","typeString":"type(int192)"},"typeName":{"id":4861,"name":"int192","nodeType":"ElementaryTypeName","src":"21613:6:18","typeDescriptions":{}}},"id":4864,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21613:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"src":"21600:26:18","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"id":4866,"nodeType":"ExpressionStatement","src":"21600:26:18"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4869,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4867,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4858,"src":"21640:10:18","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":4868,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4855,"src":"21654:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"21640:19:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4876,"nodeType":"IfStatement","src":"21636:98:18","trueBody":{"id":4875,"nodeType":"Block","src":"21661:73:18","statements":[{"errorCall":{"arguments":[{"hexValue":"313932","id":4871,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21712:3:18","typeDescriptions":{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},"value":"192"},{"id":4872,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4855,"src":"21717:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4870,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3774,"src":"21682:29:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":4873,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21682:41:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":4874,"nodeType":"RevertStatement","src":"21675:48:18"}]}}]},"documentation":{"id":4853,"nodeType":"StructuredDocumentation","src":"21199:312:18","text":" @dev Returns the downcasted int192 from int256, reverting on\n overflow (when the input is less than smallest int192 or\n greater than largest int192).\n Counterpart to Solidity's `int192` operator.\n Requirements:\n - input must fit into 192 bits"},"id":4878,"implemented":true,"kind":"function","modifiers":[],"name":"toInt192","nameLocation":"21525:8:18","nodeType":"FunctionDefinition","parameters":{"id":4856,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4855,"mutability":"mutable","name":"value","nameLocation":"21541:5:18","nodeType":"VariableDeclaration","scope":4878,"src":"21534:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4854,"name":"int256","nodeType":"ElementaryTypeName","src":"21534:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"21533:14:18"},"returnParameters":{"id":4859,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4858,"mutability":"mutable","name":"downcasted","nameLocation":"21578:10:18","nodeType":"VariableDeclaration","scope":4878,"src":"21571:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"},"typeName":{"id":4857,"name":"int192","nodeType":"ElementaryTypeName","src":"21571:6:18","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"visibility":"internal"}],"src":"21570:19:18"},"scope":5517,"src":"21516:224:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4903,"nodeType":"Block","src":"22137:150:18","statements":[{"expression":{"id":4891,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4886,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4884,"src":"22147:10:18","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4889,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4881,"src":"22167:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4888,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"22160:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_int184_$","typeString":"type(int184)"},"typeName":{"id":4887,"name":"int184","nodeType":"ElementaryTypeName","src":"22160:6:18","typeDescriptions":{}}},"id":4890,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22160:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"src":"22147:26:18","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"id":4892,"nodeType":"ExpressionStatement","src":"22147:26:18"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4895,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4893,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4884,"src":"22187:10:18","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":4894,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4881,"src":"22201:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"22187:19:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4902,"nodeType":"IfStatement","src":"22183:98:18","trueBody":{"id":4901,"nodeType":"Block","src":"22208:73:18","statements":[{"errorCall":{"arguments":[{"hexValue":"313834","id":4897,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22259:3:18","typeDescriptions":{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},"value":"184"},{"id":4898,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4881,"src":"22264:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4896,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3774,"src":"22229:29:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":4899,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22229:41:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":4900,"nodeType":"RevertStatement","src":"22222:48:18"}]}}]},"documentation":{"id":4879,"nodeType":"StructuredDocumentation","src":"21746:312:18","text":" @dev Returns the downcasted int184 from int256, reverting on\n overflow (when the input is less than smallest int184 or\n greater than largest int184).\n Counterpart to Solidity's `int184` operator.\n Requirements:\n - input must fit into 184 bits"},"id":4904,"implemented":true,"kind":"function","modifiers":[],"name":"toInt184","nameLocation":"22072:8:18","nodeType":"FunctionDefinition","parameters":{"id":4882,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4881,"mutability":"mutable","name":"value","nameLocation":"22088:5:18","nodeType":"VariableDeclaration","scope":4904,"src":"22081:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4880,"name":"int256","nodeType":"ElementaryTypeName","src":"22081:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"22080:14:18"},"returnParameters":{"id":4885,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4884,"mutability":"mutable","name":"downcasted","nameLocation":"22125:10:18","nodeType":"VariableDeclaration","scope":4904,"src":"22118:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"},"typeName":{"id":4883,"name":"int184","nodeType":"ElementaryTypeName","src":"22118:6:18","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"visibility":"internal"}],"src":"22117:19:18"},"scope":5517,"src":"22063:224:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4929,"nodeType":"Block","src":"22684:150:18","statements":[{"expression":{"id":4917,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4912,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4910,"src":"22694:10:18","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4915,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4907,"src":"22714:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4914,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"22707:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_int176_$","typeString":"type(int176)"},"typeName":{"id":4913,"name":"int176","nodeType":"ElementaryTypeName","src":"22707:6:18","typeDescriptions":{}}},"id":4916,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22707:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"src":"22694:26:18","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"id":4918,"nodeType":"ExpressionStatement","src":"22694:26:18"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4921,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4919,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4910,"src":"22734:10:18","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":4920,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4907,"src":"22748:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"22734:19:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4928,"nodeType":"IfStatement","src":"22730:98:18","trueBody":{"id":4927,"nodeType":"Block","src":"22755:73:18","statements":[{"errorCall":{"arguments":[{"hexValue":"313736","id":4923,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22806:3:18","typeDescriptions":{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},"value":"176"},{"id":4924,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4907,"src":"22811:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4922,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3774,"src":"22776:29:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":4925,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22776:41:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":4926,"nodeType":"RevertStatement","src":"22769:48:18"}]}}]},"documentation":{"id":4905,"nodeType":"StructuredDocumentation","src":"22293:312:18","text":" @dev Returns the downcasted int176 from int256, reverting on\n overflow (when the input is less than smallest int176 or\n greater than largest int176).\n Counterpart to Solidity's `int176` operator.\n Requirements:\n - input must fit into 176 bits"},"id":4930,"implemented":true,"kind":"function","modifiers":[],"name":"toInt176","nameLocation":"22619:8:18","nodeType":"FunctionDefinition","parameters":{"id":4908,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4907,"mutability":"mutable","name":"value","nameLocation":"22635:5:18","nodeType":"VariableDeclaration","scope":4930,"src":"22628:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4906,"name":"int256","nodeType":"ElementaryTypeName","src":"22628:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"22627:14:18"},"returnParameters":{"id":4911,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4910,"mutability":"mutable","name":"downcasted","nameLocation":"22672:10:18","nodeType":"VariableDeclaration","scope":4930,"src":"22665:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"},"typeName":{"id":4909,"name":"int176","nodeType":"ElementaryTypeName","src":"22665:6:18","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"visibility":"internal"}],"src":"22664:19:18"},"scope":5517,"src":"22610:224:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4955,"nodeType":"Block","src":"23231:150:18","statements":[{"expression":{"id":4943,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4938,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4936,"src":"23241:10:18","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4941,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4933,"src":"23261:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4940,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"23254:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_int168_$","typeString":"type(int168)"},"typeName":{"id":4939,"name":"int168","nodeType":"ElementaryTypeName","src":"23254:6:18","typeDescriptions":{}}},"id":4942,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23254:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"src":"23241:26:18","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"id":4944,"nodeType":"ExpressionStatement","src":"23241:26:18"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4947,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4945,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4936,"src":"23281:10:18","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":4946,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4933,"src":"23295:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"23281:19:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4954,"nodeType":"IfStatement","src":"23277:98:18","trueBody":{"id":4953,"nodeType":"Block","src":"23302:73:18","statements":[{"errorCall":{"arguments":[{"hexValue":"313638","id":4949,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23353:3:18","typeDescriptions":{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},"value":"168"},{"id":4950,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4933,"src":"23358:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4948,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3774,"src":"23323:29:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":4951,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23323:41:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":4952,"nodeType":"RevertStatement","src":"23316:48:18"}]}}]},"documentation":{"id":4931,"nodeType":"StructuredDocumentation","src":"22840:312:18","text":" @dev Returns the downcasted int168 from int256, reverting on\n overflow (when the input is less than smallest int168 or\n greater than largest int168).\n Counterpart to Solidity's `int168` operator.\n Requirements:\n - input must fit into 168 bits"},"id":4956,"implemented":true,"kind":"function","modifiers":[],"name":"toInt168","nameLocation":"23166:8:18","nodeType":"FunctionDefinition","parameters":{"id":4934,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4933,"mutability":"mutable","name":"value","nameLocation":"23182:5:18","nodeType":"VariableDeclaration","scope":4956,"src":"23175:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4932,"name":"int256","nodeType":"ElementaryTypeName","src":"23175:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"23174:14:18"},"returnParameters":{"id":4937,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4936,"mutability":"mutable","name":"downcasted","nameLocation":"23219:10:18","nodeType":"VariableDeclaration","scope":4956,"src":"23212:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"},"typeName":{"id":4935,"name":"int168","nodeType":"ElementaryTypeName","src":"23212:6:18","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"visibility":"internal"}],"src":"23211:19:18"},"scope":5517,"src":"23157:224:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4981,"nodeType":"Block","src":"23778:150:18","statements":[{"expression":{"id":4969,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4964,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4962,"src":"23788:10:18","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4967,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4959,"src":"23808:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4966,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"23801:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_int160_$","typeString":"type(int160)"},"typeName":{"id":4965,"name":"int160","nodeType":"ElementaryTypeName","src":"23801:6:18","typeDescriptions":{}}},"id":4968,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23801:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"src":"23788:26:18","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"id":4970,"nodeType":"ExpressionStatement","src":"23788:26:18"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4973,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4971,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4962,"src":"23828:10:18","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":4972,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4959,"src":"23842:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"23828:19:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4980,"nodeType":"IfStatement","src":"23824:98:18","trueBody":{"id":4979,"nodeType":"Block","src":"23849:73:18","statements":[{"errorCall":{"arguments":[{"hexValue":"313630","id":4975,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23900:3:18","typeDescriptions":{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},"value":"160"},{"id":4976,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4959,"src":"23905:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4974,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3774,"src":"23870:29:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":4977,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23870:41:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":4978,"nodeType":"RevertStatement","src":"23863:48:18"}]}}]},"documentation":{"id":4957,"nodeType":"StructuredDocumentation","src":"23387:312:18","text":" @dev Returns the downcasted int160 from int256, reverting on\n overflow (when the input is less than smallest int160 or\n greater than largest int160).\n Counterpart to Solidity's `int160` operator.\n Requirements:\n - input must fit into 160 bits"},"id":4982,"implemented":true,"kind":"function","modifiers":[],"name":"toInt160","nameLocation":"23713:8:18","nodeType":"FunctionDefinition","parameters":{"id":4960,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4959,"mutability":"mutable","name":"value","nameLocation":"23729:5:18","nodeType":"VariableDeclaration","scope":4982,"src":"23722:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4958,"name":"int256","nodeType":"ElementaryTypeName","src":"23722:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"23721:14:18"},"returnParameters":{"id":4963,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4962,"mutability":"mutable","name":"downcasted","nameLocation":"23766:10:18","nodeType":"VariableDeclaration","scope":4982,"src":"23759:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"},"typeName":{"id":4961,"name":"int160","nodeType":"ElementaryTypeName","src":"23759:6:18","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"visibility":"internal"}],"src":"23758:19:18"},"scope":5517,"src":"23704:224:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5007,"nodeType":"Block","src":"24325:150:18","statements":[{"expression":{"id":4995,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4990,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4988,"src":"24335:10:18","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4993,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4985,"src":"24355:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4992,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"24348:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_int152_$","typeString":"type(int152)"},"typeName":{"id":4991,"name":"int152","nodeType":"ElementaryTypeName","src":"24348:6:18","typeDescriptions":{}}},"id":4994,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24348:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"src":"24335:26:18","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"id":4996,"nodeType":"ExpressionStatement","src":"24335:26:18"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4999,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4997,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4988,"src":"24375:10:18","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":4998,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4985,"src":"24389:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"24375:19:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5006,"nodeType":"IfStatement","src":"24371:98:18","trueBody":{"id":5005,"nodeType":"Block","src":"24396:73:18","statements":[{"errorCall":{"arguments":[{"hexValue":"313532","id":5001,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24447:3:18","typeDescriptions":{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},"value":"152"},{"id":5002,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4985,"src":"24452:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5000,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3774,"src":"24417:29:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":5003,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24417:41:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5004,"nodeType":"RevertStatement","src":"24410:48:18"}]}}]},"documentation":{"id":4983,"nodeType":"StructuredDocumentation","src":"23934:312:18","text":" @dev Returns the downcasted int152 from int256, reverting on\n overflow (when the input is less than smallest int152 or\n greater than largest int152).\n Counterpart to Solidity's `int152` operator.\n Requirements:\n - input must fit into 152 bits"},"id":5008,"implemented":true,"kind":"function","modifiers":[],"name":"toInt152","nameLocation":"24260:8:18","nodeType":"FunctionDefinition","parameters":{"id":4986,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4985,"mutability":"mutable","name":"value","nameLocation":"24276:5:18","nodeType":"VariableDeclaration","scope":5008,"src":"24269:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4984,"name":"int256","nodeType":"ElementaryTypeName","src":"24269:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"24268:14:18"},"returnParameters":{"id":4989,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4988,"mutability":"mutable","name":"downcasted","nameLocation":"24313:10:18","nodeType":"VariableDeclaration","scope":5008,"src":"24306:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"},"typeName":{"id":4987,"name":"int152","nodeType":"ElementaryTypeName","src":"24306:6:18","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"visibility":"internal"}],"src":"24305:19:18"},"scope":5517,"src":"24251:224:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5033,"nodeType":"Block","src":"24872:150:18","statements":[{"expression":{"id":5021,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5016,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5014,"src":"24882:10:18","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5019,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5011,"src":"24902:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5018,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"24895:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_int144_$","typeString":"type(int144)"},"typeName":{"id":5017,"name":"int144","nodeType":"ElementaryTypeName","src":"24895:6:18","typeDescriptions":{}}},"id":5020,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24895:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"src":"24882:26:18","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"id":5022,"nodeType":"ExpressionStatement","src":"24882:26:18"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5025,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5023,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5014,"src":"24922:10:18","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5024,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5011,"src":"24936:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"24922:19:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5032,"nodeType":"IfStatement","src":"24918:98:18","trueBody":{"id":5031,"nodeType":"Block","src":"24943:73:18","statements":[{"errorCall":{"arguments":[{"hexValue":"313434","id":5027,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24994:3:18","typeDescriptions":{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},"value":"144"},{"id":5028,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5011,"src":"24999:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5026,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3774,"src":"24964:29:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":5029,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24964:41:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5030,"nodeType":"RevertStatement","src":"24957:48:18"}]}}]},"documentation":{"id":5009,"nodeType":"StructuredDocumentation","src":"24481:312:18","text":" @dev Returns the downcasted int144 from int256, reverting on\n overflow (when the input is less than smallest int144 or\n greater than largest int144).\n Counterpart to Solidity's `int144` operator.\n Requirements:\n - input must fit into 144 bits"},"id":5034,"implemented":true,"kind":"function","modifiers":[],"name":"toInt144","nameLocation":"24807:8:18","nodeType":"FunctionDefinition","parameters":{"id":5012,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5011,"mutability":"mutable","name":"value","nameLocation":"24823:5:18","nodeType":"VariableDeclaration","scope":5034,"src":"24816:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5010,"name":"int256","nodeType":"ElementaryTypeName","src":"24816:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"24815:14:18"},"returnParameters":{"id":5015,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5014,"mutability":"mutable","name":"downcasted","nameLocation":"24860:10:18","nodeType":"VariableDeclaration","scope":5034,"src":"24853:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"},"typeName":{"id":5013,"name":"int144","nodeType":"ElementaryTypeName","src":"24853:6:18","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"visibility":"internal"}],"src":"24852:19:18"},"scope":5517,"src":"24798:224:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5059,"nodeType":"Block","src":"25419:150:18","statements":[{"expression":{"id":5047,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5042,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5040,"src":"25429:10:18","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5045,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5037,"src":"25449:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5044,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"25442:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_int136_$","typeString":"type(int136)"},"typeName":{"id":5043,"name":"int136","nodeType":"ElementaryTypeName","src":"25442:6:18","typeDescriptions":{}}},"id":5046,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25442:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"src":"25429:26:18","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"id":5048,"nodeType":"ExpressionStatement","src":"25429:26:18"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5051,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5049,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5040,"src":"25469:10:18","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5050,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5037,"src":"25483:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"25469:19:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5058,"nodeType":"IfStatement","src":"25465:98:18","trueBody":{"id":5057,"nodeType":"Block","src":"25490:73:18","statements":[{"errorCall":{"arguments":[{"hexValue":"313336","id":5053,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25541:3:18","typeDescriptions":{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},"value":"136"},{"id":5054,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5037,"src":"25546:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5052,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3774,"src":"25511:29:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":5055,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25511:41:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5056,"nodeType":"RevertStatement","src":"25504:48:18"}]}}]},"documentation":{"id":5035,"nodeType":"StructuredDocumentation","src":"25028:312:18","text":" @dev Returns the downcasted int136 from int256, reverting on\n overflow (when the input is less than smallest int136 or\n greater than largest int136).\n Counterpart to Solidity's `int136` operator.\n Requirements:\n - input must fit into 136 bits"},"id":5060,"implemented":true,"kind":"function","modifiers":[],"name":"toInt136","nameLocation":"25354:8:18","nodeType":"FunctionDefinition","parameters":{"id":5038,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5037,"mutability":"mutable","name":"value","nameLocation":"25370:5:18","nodeType":"VariableDeclaration","scope":5060,"src":"25363:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5036,"name":"int256","nodeType":"ElementaryTypeName","src":"25363:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"25362:14:18"},"returnParameters":{"id":5041,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5040,"mutability":"mutable","name":"downcasted","nameLocation":"25407:10:18","nodeType":"VariableDeclaration","scope":5060,"src":"25400:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"},"typeName":{"id":5039,"name":"int136","nodeType":"ElementaryTypeName","src":"25400:6:18","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"visibility":"internal"}],"src":"25399:19:18"},"scope":5517,"src":"25345:224:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5085,"nodeType":"Block","src":"25966:150:18","statements":[{"expression":{"id":5073,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5068,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5066,"src":"25976:10:18","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5071,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5063,"src":"25996:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5070,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"25989:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_int128_$","typeString":"type(int128)"},"typeName":{"id":5069,"name":"int128","nodeType":"ElementaryTypeName","src":"25989:6:18","typeDescriptions":{}}},"id":5072,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25989:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"src":"25976:26:18","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"id":5074,"nodeType":"ExpressionStatement","src":"25976:26:18"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5077,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5075,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5066,"src":"26016:10:18","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5076,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5063,"src":"26030:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"26016:19:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5084,"nodeType":"IfStatement","src":"26012:98:18","trueBody":{"id":5083,"nodeType":"Block","src":"26037:73:18","statements":[{"errorCall":{"arguments":[{"hexValue":"313238","id":5079,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26088:3:18","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},{"id":5080,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5063,"src":"26093:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5078,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3774,"src":"26058:29:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":5081,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26058:41:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5082,"nodeType":"RevertStatement","src":"26051:48:18"}]}}]},"documentation":{"id":5061,"nodeType":"StructuredDocumentation","src":"25575:312:18","text":" @dev Returns the downcasted int128 from int256, reverting on\n overflow (when the input is less than smallest int128 or\n greater than largest int128).\n Counterpart to Solidity's `int128` operator.\n Requirements:\n - input must fit into 128 bits"},"id":5086,"implemented":true,"kind":"function","modifiers":[],"name":"toInt128","nameLocation":"25901:8:18","nodeType":"FunctionDefinition","parameters":{"id":5064,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5063,"mutability":"mutable","name":"value","nameLocation":"25917:5:18","nodeType":"VariableDeclaration","scope":5086,"src":"25910:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5062,"name":"int256","nodeType":"ElementaryTypeName","src":"25910:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"25909:14:18"},"returnParameters":{"id":5067,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5066,"mutability":"mutable","name":"downcasted","nameLocation":"25954:10:18","nodeType":"VariableDeclaration","scope":5086,"src":"25947:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"},"typeName":{"id":5065,"name":"int128","nodeType":"ElementaryTypeName","src":"25947:6:18","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"visibility":"internal"}],"src":"25946:19:18"},"scope":5517,"src":"25892:224:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5111,"nodeType":"Block","src":"26513:150:18","statements":[{"expression":{"id":5099,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5094,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5092,"src":"26523:10:18","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5097,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5089,"src":"26543:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5096,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"26536:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_int120_$","typeString":"type(int120)"},"typeName":{"id":5095,"name":"int120","nodeType":"ElementaryTypeName","src":"26536:6:18","typeDescriptions":{}}},"id":5098,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26536:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"src":"26523:26:18","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"id":5100,"nodeType":"ExpressionStatement","src":"26523:26:18"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5103,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5101,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5092,"src":"26563:10:18","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5102,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5089,"src":"26577:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"26563:19:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5110,"nodeType":"IfStatement","src":"26559:98:18","trueBody":{"id":5109,"nodeType":"Block","src":"26584:73:18","statements":[{"errorCall":{"arguments":[{"hexValue":"313230","id":5105,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26635:3:18","typeDescriptions":{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},"value":"120"},{"id":5106,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5089,"src":"26640:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5104,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3774,"src":"26605:29:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":5107,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26605:41:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5108,"nodeType":"RevertStatement","src":"26598:48:18"}]}}]},"documentation":{"id":5087,"nodeType":"StructuredDocumentation","src":"26122:312:18","text":" @dev Returns the downcasted int120 from int256, reverting on\n overflow (when the input is less than smallest int120 or\n greater than largest int120).\n Counterpart to Solidity's `int120` operator.\n Requirements:\n - input must fit into 120 bits"},"id":5112,"implemented":true,"kind":"function","modifiers":[],"name":"toInt120","nameLocation":"26448:8:18","nodeType":"FunctionDefinition","parameters":{"id":5090,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5089,"mutability":"mutable","name":"value","nameLocation":"26464:5:18","nodeType":"VariableDeclaration","scope":5112,"src":"26457:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5088,"name":"int256","nodeType":"ElementaryTypeName","src":"26457:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"26456:14:18"},"returnParameters":{"id":5093,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5092,"mutability":"mutable","name":"downcasted","nameLocation":"26501:10:18","nodeType":"VariableDeclaration","scope":5112,"src":"26494:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"},"typeName":{"id":5091,"name":"int120","nodeType":"ElementaryTypeName","src":"26494:6:18","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"visibility":"internal"}],"src":"26493:19:18"},"scope":5517,"src":"26439:224:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5137,"nodeType":"Block","src":"27060:150:18","statements":[{"expression":{"id":5125,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5120,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5118,"src":"27070:10:18","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5123,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5115,"src":"27090:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5122,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"27083:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_int112_$","typeString":"type(int112)"},"typeName":{"id":5121,"name":"int112","nodeType":"ElementaryTypeName","src":"27083:6:18","typeDescriptions":{}}},"id":5124,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27083:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"src":"27070:26:18","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"id":5126,"nodeType":"ExpressionStatement","src":"27070:26:18"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5129,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5127,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5118,"src":"27110:10:18","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5128,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5115,"src":"27124:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"27110:19:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5136,"nodeType":"IfStatement","src":"27106:98:18","trueBody":{"id":5135,"nodeType":"Block","src":"27131:73:18","statements":[{"errorCall":{"arguments":[{"hexValue":"313132","id":5131,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27182:3:18","typeDescriptions":{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},"value":"112"},{"id":5132,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5115,"src":"27187:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5130,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3774,"src":"27152:29:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":5133,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27152:41:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5134,"nodeType":"RevertStatement","src":"27145:48:18"}]}}]},"documentation":{"id":5113,"nodeType":"StructuredDocumentation","src":"26669:312:18","text":" @dev Returns the downcasted int112 from int256, reverting on\n overflow (when the input is less than smallest int112 or\n greater than largest int112).\n Counterpart to Solidity's `int112` operator.\n Requirements:\n - input must fit into 112 bits"},"id":5138,"implemented":true,"kind":"function","modifiers":[],"name":"toInt112","nameLocation":"26995:8:18","nodeType":"FunctionDefinition","parameters":{"id":5116,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5115,"mutability":"mutable","name":"value","nameLocation":"27011:5:18","nodeType":"VariableDeclaration","scope":5138,"src":"27004:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5114,"name":"int256","nodeType":"ElementaryTypeName","src":"27004:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"27003:14:18"},"returnParameters":{"id":5119,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5118,"mutability":"mutable","name":"downcasted","nameLocation":"27048:10:18","nodeType":"VariableDeclaration","scope":5138,"src":"27041:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"},"typeName":{"id":5117,"name":"int112","nodeType":"ElementaryTypeName","src":"27041:6:18","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"visibility":"internal"}],"src":"27040:19:18"},"scope":5517,"src":"26986:224:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5163,"nodeType":"Block","src":"27607:150:18","statements":[{"expression":{"id":5151,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5146,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5144,"src":"27617:10:18","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5149,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5141,"src":"27637:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5148,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"27630:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_int104_$","typeString":"type(int104)"},"typeName":{"id":5147,"name":"int104","nodeType":"ElementaryTypeName","src":"27630:6:18","typeDescriptions":{}}},"id":5150,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27630:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"src":"27617:26:18","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"id":5152,"nodeType":"ExpressionStatement","src":"27617:26:18"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5155,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5153,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5144,"src":"27657:10:18","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5154,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5141,"src":"27671:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"27657:19:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5162,"nodeType":"IfStatement","src":"27653:98:18","trueBody":{"id":5161,"nodeType":"Block","src":"27678:73:18","statements":[{"errorCall":{"arguments":[{"hexValue":"313034","id":5157,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27729:3:18","typeDescriptions":{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},"value":"104"},{"id":5158,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5141,"src":"27734:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5156,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3774,"src":"27699:29:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":5159,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27699:41:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5160,"nodeType":"RevertStatement","src":"27692:48:18"}]}}]},"documentation":{"id":5139,"nodeType":"StructuredDocumentation","src":"27216:312:18","text":" @dev Returns the downcasted int104 from int256, reverting on\n overflow (when the input is less than smallest int104 or\n greater than largest int104).\n Counterpart to Solidity's `int104` operator.\n Requirements:\n - input must fit into 104 bits"},"id":5164,"implemented":true,"kind":"function","modifiers":[],"name":"toInt104","nameLocation":"27542:8:18","nodeType":"FunctionDefinition","parameters":{"id":5142,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5141,"mutability":"mutable","name":"value","nameLocation":"27558:5:18","nodeType":"VariableDeclaration","scope":5164,"src":"27551:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5140,"name":"int256","nodeType":"ElementaryTypeName","src":"27551:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"27550:14:18"},"returnParameters":{"id":5145,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5144,"mutability":"mutable","name":"downcasted","nameLocation":"27595:10:18","nodeType":"VariableDeclaration","scope":5164,"src":"27588:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"},"typeName":{"id":5143,"name":"int104","nodeType":"ElementaryTypeName","src":"27588:6:18","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"visibility":"internal"}],"src":"27587:19:18"},"scope":5517,"src":"27533:224:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5189,"nodeType":"Block","src":"28147:148:18","statements":[{"expression":{"id":5177,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5172,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5170,"src":"28157:10:18","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5175,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5167,"src":"28176:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5174,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"28170:5:18","typeDescriptions":{"typeIdentifier":"t_type$_t_int96_$","typeString":"type(int96)"},"typeName":{"id":5173,"name":"int96","nodeType":"ElementaryTypeName","src":"28170:5:18","typeDescriptions":{}}},"id":5176,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28170:12:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"src":"28157:25:18","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"id":5178,"nodeType":"ExpressionStatement","src":"28157:25:18"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5181,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5179,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5170,"src":"28196:10:18","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5180,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5167,"src":"28210:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"28196:19:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5188,"nodeType":"IfStatement","src":"28192:97:18","trueBody":{"id":5187,"nodeType":"Block","src":"28217:72:18","statements":[{"errorCall":{"arguments":[{"hexValue":"3936","id":5183,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28268:2:18","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},{"id":5184,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5167,"src":"28272:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5182,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3774,"src":"28238:29:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":5185,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28238:40:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5186,"nodeType":"RevertStatement","src":"28231:47:18"}]}}]},"documentation":{"id":5165,"nodeType":"StructuredDocumentation","src":"27763:307:18","text":" @dev Returns the downcasted int96 from int256, reverting on\n overflow (when the input is less than smallest int96 or\n greater than largest int96).\n Counterpart to Solidity's `int96` operator.\n Requirements:\n - input must fit into 96 bits"},"id":5190,"implemented":true,"kind":"function","modifiers":[],"name":"toInt96","nameLocation":"28084:7:18","nodeType":"FunctionDefinition","parameters":{"id":5168,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5167,"mutability":"mutable","name":"value","nameLocation":"28099:5:18","nodeType":"VariableDeclaration","scope":5190,"src":"28092:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5166,"name":"int256","nodeType":"ElementaryTypeName","src":"28092:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"28091:14:18"},"returnParameters":{"id":5171,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5170,"mutability":"mutable","name":"downcasted","nameLocation":"28135:10:18","nodeType":"VariableDeclaration","scope":5190,"src":"28129:16:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"},"typeName":{"id":5169,"name":"int96","nodeType":"ElementaryTypeName","src":"28129:5:18","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"visibility":"internal"}],"src":"28128:18:18"},"scope":5517,"src":"28075:220:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5215,"nodeType":"Block","src":"28685:148:18","statements":[{"expression":{"id":5203,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5198,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5196,"src":"28695:10:18","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5201,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5193,"src":"28714:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5200,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"28708:5:18","typeDescriptions":{"typeIdentifier":"t_type$_t_int88_$","typeString":"type(int88)"},"typeName":{"id":5199,"name":"int88","nodeType":"ElementaryTypeName","src":"28708:5:18","typeDescriptions":{}}},"id":5202,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28708:12:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"src":"28695:25:18","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"id":5204,"nodeType":"ExpressionStatement","src":"28695:25:18"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5207,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5205,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5196,"src":"28734:10:18","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5206,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5193,"src":"28748:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"28734:19:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5214,"nodeType":"IfStatement","src":"28730:97:18","trueBody":{"id":5213,"nodeType":"Block","src":"28755:72:18","statements":[{"errorCall":{"arguments":[{"hexValue":"3838","id":5209,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28806:2:18","typeDescriptions":{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},"value":"88"},{"id":5210,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5193,"src":"28810:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5208,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3774,"src":"28776:29:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":5211,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28776:40:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5212,"nodeType":"RevertStatement","src":"28769:47:18"}]}}]},"documentation":{"id":5191,"nodeType":"StructuredDocumentation","src":"28301:307:18","text":" @dev Returns the downcasted int88 from int256, reverting on\n overflow (when the input is less than smallest int88 or\n greater than largest int88).\n Counterpart to Solidity's `int88` operator.\n Requirements:\n - input must fit into 88 bits"},"id":5216,"implemented":true,"kind":"function","modifiers":[],"name":"toInt88","nameLocation":"28622:7:18","nodeType":"FunctionDefinition","parameters":{"id":5194,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5193,"mutability":"mutable","name":"value","nameLocation":"28637:5:18","nodeType":"VariableDeclaration","scope":5216,"src":"28630:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5192,"name":"int256","nodeType":"ElementaryTypeName","src":"28630:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"28629:14:18"},"returnParameters":{"id":5197,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5196,"mutability":"mutable","name":"downcasted","nameLocation":"28673:10:18","nodeType":"VariableDeclaration","scope":5216,"src":"28667:16:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"},"typeName":{"id":5195,"name":"int88","nodeType":"ElementaryTypeName","src":"28667:5:18","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"visibility":"internal"}],"src":"28666:18:18"},"scope":5517,"src":"28613:220:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5241,"nodeType":"Block","src":"29223:148:18","statements":[{"expression":{"id":5229,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5224,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5222,"src":"29233:10:18","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5227,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5219,"src":"29252:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5226,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"29246:5:18","typeDescriptions":{"typeIdentifier":"t_type$_t_int80_$","typeString":"type(int80)"},"typeName":{"id":5225,"name":"int80","nodeType":"ElementaryTypeName","src":"29246:5:18","typeDescriptions":{}}},"id":5228,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29246:12:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"src":"29233:25:18","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"id":5230,"nodeType":"ExpressionStatement","src":"29233:25:18"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5233,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5231,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5222,"src":"29272:10:18","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5232,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5219,"src":"29286:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"29272:19:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5240,"nodeType":"IfStatement","src":"29268:97:18","trueBody":{"id":5239,"nodeType":"Block","src":"29293:72:18","statements":[{"errorCall":{"arguments":[{"hexValue":"3830","id":5235,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29344:2:18","typeDescriptions":{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},"value":"80"},{"id":5236,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5219,"src":"29348:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5234,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3774,"src":"29314:29:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":5237,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29314:40:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5238,"nodeType":"RevertStatement","src":"29307:47:18"}]}}]},"documentation":{"id":5217,"nodeType":"StructuredDocumentation","src":"28839:307:18","text":" @dev Returns the downcasted int80 from int256, reverting on\n overflow (when the input is less than smallest int80 or\n greater than largest int80).\n Counterpart to Solidity's `int80` operator.\n Requirements:\n - input must fit into 80 bits"},"id":5242,"implemented":true,"kind":"function","modifiers":[],"name":"toInt80","nameLocation":"29160:7:18","nodeType":"FunctionDefinition","parameters":{"id":5220,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5219,"mutability":"mutable","name":"value","nameLocation":"29175:5:18","nodeType":"VariableDeclaration","scope":5242,"src":"29168:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5218,"name":"int256","nodeType":"ElementaryTypeName","src":"29168:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"29167:14:18"},"returnParameters":{"id":5223,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5222,"mutability":"mutable","name":"downcasted","nameLocation":"29211:10:18","nodeType":"VariableDeclaration","scope":5242,"src":"29205:16:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"},"typeName":{"id":5221,"name":"int80","nodeType":"ElementaryTypeName","src":"29205:5:18","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"visibility":"internal"}],"src":"29204:18:18"},"scope":5517,"src":"29151:220:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5267,"nodeType":"Block","src":"29761:148:18","statements":[{"expression":{"id":5255,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5250,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5248,"src":"29771:10:18","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5253,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5245,"src":"29790:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5252,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"29784:5:18","typeDescriptions":{"typeIdentifier":"t_type$_t_int72_$","typeString":"type(int72)"},"typeName":{"id":5251,"name":"int72","nodeType":"ElementaryTypeName","src":"29784:5:18","typeDescriptions":{}}},"id":5254,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29784:12:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"src":"29771:25:18","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"id":5256,"nodeType":"ExpressionStatement","src":"29771:25:18"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5259,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5257,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5248,"src":"29810:10:18","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5258,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5245,"src":"29824:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"29810:19:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5266,"nodeType":"IfStatement","src":"29806:97:18","trueBody":{"id":5265,"nodeType":"Block","src":"29831:72:18","statements":[{"errorCall":{"arguments":[{"hexValue":"3732","id":5261,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29882:2:18","typeDescriptions":{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},"value":"72"},{"id":5262,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5245,"src":"29886:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5260,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3774,"src":"29852:29:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":5263,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29852:40:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5264,"nodeType":"RevertStatement","src":"29845:47:18"}]}}]},"documentation":{"id":5243,"nodeType":"StructuredDocumentation","src":"29377:307:18","text":" @dev Returns the downcasted int72 from int256, reverting on\n overflow (when the input is less than smallest int72 or\n greater than largest int72).\n Counterpart to Solidity's `int72` operator.\n Requirements:\n - input must fit into 72 bits"},"id":5268,"implemented":true,"kind":"function","modifiers":[],"name":"toInt72","nameLocation":"29698:7:18","nodeType":"FunctionDefinition","parameters":{"id":5246,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5245,"mutability":"mutable","name":"value","nameLocation":"29713:5:18","nodeType":"VariableDeclaration","scope":5268,"src":"29706:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5244,"name":"int256","nodeType":"ElementaryTypeName","src":"29706:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"29705:14:18"},"returnParameters":{"id":5249,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5248,"mutability":"mutable","name":"downcasted","nameLocation":"29749:10:18","nodeType":"VariableDeclaration","scope":5268,"src":"29743:16:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"},"typeName":{"id":5247,"name":"int72","nodeType":"ElementaryTypeName","src":"29743:5:18","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"visibility":"internal"}],"src":"29742:18:18"},"scope":5517,"src":"29689:220:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5293,"nodeType":"Block","src":"30299:148:18","statements":[{"expression":{"id":5281,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5276,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5274,"src":"30309:10:18","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5279,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5271,"src":"30328:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5278,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"30322:5:18","typeDescriptions":{"typeIdentifier":"t_type$_t_int64_$","typeString":"type(int64)"},"typeName":{"id":5277,"name":"int64","nodeType":"ElementaryTypeName","src":"30322:5:18","typeDescriptions":{}}},"id":5280,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30322:12:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"src":"30309:25:18","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"id":5282,"nodeType":"ExpressionStatement","src":"30309:25:18"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5285,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5283,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5274,"src":"30348:10:18","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5284,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5271,"src":"30362:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"30348:19:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5292,"nodeType":"IfStatement","src":"30344:97:18","trueBody":{"id":5291,"nodeType":"Block","src":"30369:72:18","statements":[{"errorCall":{"arguments":[{"hexValue":"3634","id":5287,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30420:2:18","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},{"id":5288,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5271,"src":"30424:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5286,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3774,"src":"30390:29:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":5289,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30390:40:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5290,"nodeType":"RevertStatement","src":"30383:47:18"}]}}]},"documentation":{"id":5269,"nodeType":"StructuredDocumentation","src":"29915:307:18","text":" @dev Returns the downcasted int64 from int256, reverting on\n overflow (when the input is less than smallest int64 or\n greater than largest int64).\n Counterpart to Solidity's `int64` operator.\n Requirements:\n - input must fit into 64 bits"},"id":5294,"implemented":true,"kind":"function","modifiers":[],"name":"toInt64","nameLocation":"30236:7:18","nodeType":"FunctionDefinition","parameters":{"id":5272,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5271,"mutability":"mutable","name":"value","nameLocation":"30251:5:18","nodeType":"VariableDeclaration","scope":5294,"src":"30244:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5270,"name":"int256","nodeType":"ElementaryTypeName","src":"30244:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"30243:14:18"},"returnParameters":{"id":5275,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5274,"mutability":"mutable","name":"downcasted","nameLocation":"30287:10:18","nodeType":"VariableDeclaration","scope":5294,"src":"30281:16:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"},"typeName":{"id":5273,"name":"int64","nodeType":"ElementaryTypeName","src":"30281:5:18","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"visibility":"internal"}],"src":"30280:18:18"},"scope":5517,"src":"30227:220:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5319,"nodeType":"Block","src":"30837:148:18","statements":[{"expression":{"id":5307,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5302,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5300,"src":"30847:10:18","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5305,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5297,"src":"30866:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5304,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"30860:5:18","typeDescriptions":{"typeIdentifier":"t_type$_t_int56_$","typeString":"type(int56)"},"typeName":{"id":5303,"name":"int56","nodeType":"ElementaryTypeName","src":"30860:5:18","typeDescriptions":{}}},"id":5306,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30860:12:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"src":"30847:25:18","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"id":5308,"nodeType":"ExpressionStatement","src":"30847:25:18"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5311,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5309,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5300,"src":"30886:10:18","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5310,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5297,"src":"30900:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"30886:19:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5318,"nodeType":"IfStatement","src":"30882:97:18","trueBody":{"id":5317,"nodeType":"Block","src":"30907:72:18","statements":[{"errorCall":{"arguments":[{"hexValue":"3536","id":5313,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30958:2:18","typeDescriptions":{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},"value":"56"},{"id":5314,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5297,"src":"30962:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5312,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3774,"src":"30928:29:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":5315,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30928:40:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5316,"nodeType":"RevertStatement","src":"30921:47:18"}]}}]},"documentation":{"id":5295,"nodeType":"StructuredDocumentation","src":"30453:307:18","text":" @dev Returns the downcasted int56 from int256, reverting on\n overflow (when the input is less than smallest int56 or\n greater than largest int56).\n Counterpart to Solidity's `int56` operator.\n Requirements:\n - input must fit into 56 bits"},"id":5320,"implemented":true,"kind":"function","modifiers":[],"name":"toInt56","nameLocation":"30774:7:18","nodeType":"FunctionDefinition","parameters":{"id":5298,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5297,"mutability":"mutable","name":"value","nameLocation":"30789:5:18","nodeType":"VariableDeclaration","scope":5320,"src":"30782:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5296,"name":"int256","nodeType":"ElementaryTypeName","src":"30782:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"30781:14:18"},"returnParameters":{"id":5301,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5300,"mutability":"mutable","name":"downcasted","nameLocation":"30825:10:18","nodeType":"VariableDeclaration","scope":5320,"src":"30819:16:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"},"typeName":{"id":5299,"name":"int56","nodeType":"ElementaryTypeName","src":"30819:5:18","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"visibility":"internal"}],"src":"30818:18:18"},"scope":5517,"src":"30765:220:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5345,"nodeType":"Block","src":"31375:148:18","statements":[{"expression":{"id":5333,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5328,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5326,"src":"31385:10:18","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5331,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5323,"src":"31404:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5330,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"31398:5:18","typeDescriptions":{"typeIdentifier":"t_type$_t_int48_$","typeString":"type(int48)"},"typeName":{"id":5329,"name":"int48","nodeType":"ElementaryTypeName","src":"31398:5:18","typeDescriptions":{}}},"id":5332,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31398:12:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"src":"31385:25:18","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"id":5334,"nodeType":"ExpressionStatement","src":"31385:25:18"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5337,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5335,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5326,"src":"31424:10:18","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5336,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5323,"src":"31438:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"31424:19:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5344,"nodeType":"IfStatement","src":"31420:97:18","trueBody":{"id":5343,"nodeType":"Block","src":"31445:72:18","statements":[{"errorCall":{"arguments":[{"hexValue":"3438","id":5339,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31496:2:18","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},{"id":5340,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5323,"src":"31500:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5338,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3774,"src":"31466:29:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":5341,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31466:40:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5342,"nodeType":"RevertStatement","src":"31459:47:18"}]}}]},"documentation":{"id":5321,"nodeType":"StructuredDocumentation","src":"30991:307:18","text":" @dev Returns the downcasted int48 from int256, reverting on\n overflow (when the input is less than smallest int48 or\n greater than largest int48).\n Counterpart to Solidity's `int48` operator.\n Requirements:\n - input must fit into 48 bits"},"id":5346,"implemented":true,"kind":"function","modifiers":[],"name":"toInt48","nameLocation":"31312:7:18","nodeType":"FunctionDefinition","parameters":{"id":5324,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5323,"mutability":"mutable","name":"value","nameLocation":"31327:5:18","nodeType":"VariableDeclaration","scope":5346,"src":"31320:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5322,"name":"int256","nodeType":"ElementaryTypeName","src":"31320:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"31319:14:18"},"returnParameters":{"id":5327,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5326,"mutability":"mutable","name":"downcasted","nameLocation":"31363:10:18","nodeType":"VariableDeclaration","scope":5346,"src":"31357:16:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"},"typeName":{"id":5325,"name":"int48","nodeType":"ElementaryTypeName","src":"31357:5:18","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"visibility":"internal"}],"src":"31356:18:18"},"scope":5517,"src":"31303:220:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5371,"nodeType":"Block","src":"31913:148:18","statements":[{"expression":{"id":5359,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5354,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5352,"src":"31923:10:18","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5357,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5349,"src":"31942:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5356,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"31936:5:18","typeDescriptions":{"typeIdentifier":"t_type$_t_int40_$","typeString":"type(int40)"},"typeName":{"id":5355,"name":"int40","nodeType":"ElementaryTypeName","src":"31936:5:18","typeDescriptions":{}}},"id":5358,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31936:12:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"src":"31923:25:18","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"id":5360,"nodeType":"ExpressionStatement","src":"31923:25:18"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5363,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5361,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5352,"src":"31962:10:18","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5362,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5349,"src":"31976:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"31962:19:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5370,"nodeType":"IfStatement","src":"31958:97:18","trueBody":{"id":5369,"nodeType":"Block","src":"31983:72:18","statements":[{"errorCall":{"arguments":[{"hexValue":"3430","id":5365,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32034:2:18","typeDescriptions":{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},"value":"40"},{"id":5366,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5349,"src":"32038:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5364,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3774,"src":"32004:29:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":5367,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32004:40:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5368,"nodeType":"RevertStatement","src":"31997:47:18"}]}}]},"documentation":{"id":5347,"nodeType":"StructuredDocumentation","src":"31529:307:18","text":" @dev Returns the downcasted int40 from int256, reverting on\n overflow (when the input is less than smallest int40 or\n greater than largest int40).\n Counterpart to Solidity's `int40` operator.\n Requirements:\n - input must fit into 40 bits"},"id":5372,"implemented":true,"kind":"function","modifiers":[],"name":"toInt40","nameLocation":"31850:7:18","nodeType":"FunctionDefinition","parameters":{"id":5350,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5349,"mutability":"mutable","name":"value","nameLocation":"31865:5:18","nodeType":"VariableDeclaration","scope":5372,"src":"31858:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5348,"name":"int256","nodeType":"ElementaryTypeName","src":"31858:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"31857:14:18"},"returnParameters":{"id":5353,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5352,"mutability":"mutable","name":"downcasted","nameLocation":"31901:10:18","nodeType":"VariableDeclaration","scope":5372,"src":"31895:16:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"},"typeName":{"id":5351,"name":"int40","nodeType":"ElementaryTypeName","src":"31895:5:18","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"visibility":"internal"}],"src":"31894:18:18"},"scope":5517,"src":"31841:220:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5397,"nodeType":"Block","src":"32451:148:18","statements":[{"expression":{"id":5385,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5380,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5378,"src":"32461:10:18","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5383,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5375,"src":"32480:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5382,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"32474:5:18","typeDescriptions":{"typeIdentifier":"t_type$_t_int32_$","typeString":"type(int32)"},"typeName":{"id":5381,"name":"int32","nodeType":"ElementaryTypeName","src":"32474:5:18","typeDescriptions":{}}},"id":5384,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32474:12:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"src":"32461:25:18","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"id":5386,"nodeType":"ExpressionStatement","src":"32461:25:18"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5389,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5387,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5378,"src":"32500:10:18","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5388,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5375,"src":"32514:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"32500:19:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5396,"nodeType":"IfStatement","src":"32496:97:18","trueBody":{"id":5395,"nodeType":"Block","src":"32521:72:18","statements":[{"errorCall":{"arguments":[{"hexValue":"3332","id":5391,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32572:2:18","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},{"id":5392,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5375,"src":"32576:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5390,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3774,"src":"32542:29:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":5393,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32542:40:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5394,"nodeType":"RevertStatement","src":"32535:47:18"}]}}]},"documentation":{"id":5373,"nodeType":"StructuredDocumentation","src":"32067:307:18","text":" @dev Returns the downcasted int32 from int256, reverting on\n overflow (when the input is less than smallest int32 or\n greater than largest int32).\n Counterpart to Solidity's `int32` operator.\n Requirements:\n - input must fit into 32 bits"},"id":5398,"implemented":true,"kind":"function","modifiers":[],"name":"toInt32","nameLocation":"32388:7:18","nodeType":"FunctionDefinition","parameters":{"id":5376,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5375,"mutability":"mutable","name":"value","nameLocation":"32403:5:18","nodeType":"VariableDeclaration","scope":5398,"src":"32396:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5374,"name":"int256","nodeType":"ElementaryTypeName","src":"32396:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"32395:14:18"},"returnParameters":{"id":5379,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5378,"mutability":"mutable","name":"downcasted","nameLocation":"32439:10:18","nodeType":"VariableDeclaration","scope":5398,"src":"32433:16:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":5377,"name":"int32","nodeType":"ElementaryTypeName","src":"32433:5:18","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"visibility":"internal"}],"src":"32432:18:18"},"scope":5517,"src":"32379:220:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5423,"nodeType":"Block","src":"32989:148:18","statements":[{"expression":{"id":5411,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5406,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5404,"src":"32999:10:18","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5409,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5401,"src":"33018:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5408,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"33012:5:18","typeDescriptions":{"typeIdentifier":"t_type$_t_int24_$","typeString":"type(int24)"},"typeName":{"id":5407,"name":"int24","nodeType":"ElementaryTypeName","src":"33012:5:18","typeDescriptions":{}}},"id":5410,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33012:12:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"src":"32999:25:18","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"id":5412,"nodeType":"ExpressionStatement","src":"32999:25:18"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5415,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5413,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5404,"src":"33038:10:18","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5414,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5401,"src":"33052:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"33038:19:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5422,"nodeType":"IfStatement","src":"33034:97:18","trueBody":{"id":5421,"nodeType":"Block","src":"33059:72:18","statements":[{"errorCall":{"arguments":[{"hexValue":"3234","id":5417,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"33110:2:18","typeDescriptions":{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},"value":"24"},{"id":5418,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5401,"src":"33114:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5416,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3774,"src":"33080:29:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":5419,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33080:40:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5420,"nodeType":"RevertStatement","src":"33073:47:18"}]}}]},"documentation":{"id":5399,"nodeType":"StructuredDocumentation","src":"32605:307:18","text":" @dev Returns the downcasted int24 from int256, reverting on\n overflow (when the input is less than smallest int24 or\n greater than largest int24).\n Counterpart to Solidity's `int24` operator.\n Requirements:\n - input must fit into 24 bits"},"id":5424,"implemented":true,"kind":"function","modifiers":[],"name":"toInt24","nameLocation":"32926:7:18","nodeType":"FunctionDefinition","parameters":{"id":5402,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5401,"mutability":"mutable","name":"value","nameLocation":"32941:5:18","nodeType":"VariableDeclaration","scope":5424,"src":"32934:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5400,"name":"int256","nodeType":"ElementaryTypeName","src":"32934:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"32933:14:18"},"returnParameters":{"id":5405,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5404,"mutability":"mutable","name":"downcasted","nameLocation":"32977:10:18","nodeType":"VariableDeclaration","scope":5424,"src":"32971:16:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":5403,"name":"int24","nodeType":"ElementaryTypeName","src":"32971:5:18","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"}],"src":"32970:18:18"},"scope":5517,"src":"32917:220:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5449,"nodeType":"Block","src":"33527:148:18","statements":[{"expression":{"id":5437,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5432,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5430,"src":"33537:10:18","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5435,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5427,"src":"33556:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5434,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"33550:5:18","typeDescriptions":{"typeIdentifier":"t_type$_t_int16_$","typeString":"type(int16)"},"typeName":{"id":5433,"name":"int16","nodeType":"ElementaryTypeName","src":"33550:5:18","typeDescriptions":{}}},"id":5436,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33550:12:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"src":"33537:25:18","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"id":5438,"nodeType":"ExpressionStatement","src":"33537:25:18"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5441,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5439,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5430,"src":"33576:10:18","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5440,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5427,"src":"33590:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"33576:19:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5448,"nodeType":"IfStatement","src":"33572:97:18","trueBody":{"id":5447,"nodeType":"Block","src":"33597:72:18","statements":[{"errorCall":{"arguments":[{"hexValue":"3136","id":5443,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"33648:2:18","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},{"id":5444,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5427,"src":"33652:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5442,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3774,"src":"33618:29:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":5445,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33618:40:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5446,"nodeType":"RevertStatement","src":"33611:47:18"}]}}]},"documentation":{"id":5425,"nodeType":"StructuredDocumentation","src":"33143:307:18","text":" @dev Returns the downcasted int16 from int256, reverting on\n overflow (when the input is less than smallest int16 or\n greater than largest int16).\n Counterpart to Solidity's `int16` operator.\n Requirements:\n - input must fit into 16 bits"},"id":5450,"implemented":true,"kind":"function","modifiers":[],"name":"toInt16","nameLocation":"33464:7:18","nodeType":"FunctionDefinition","parameters":{"id":5428,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5427,"mutability":"mutable","name":"value","nameLocation":"33479:5:18","nodeType":"VariableDeclaration","scope":5450,"src":"33472:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5426,"name":"int256","nodeType":"ElementaryTypeName","src":"33472:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"33471:14:18"},"returnParameters":{"id":5431,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5430,"mutability":"mutable","name":"downcasted","nameLocation":"33515:10:18","nodeType":"VariableDeclaration","scope":5450,"src":"33509:16:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"},"typeName":{"id":5429,"name":"int16","nodeType":"ElementaryTypeName","src":"33509:5:18","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"visibility":"internal"}],"src":"33508:18:18"},"scope":5517,"src":"33455:220:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5475,"nodeType":"Block","src":"34058:146:18","statements":[{"expression":{"id":5463,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5458,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5456,"src":"34068:10:18","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5461,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5453,"src":"34086:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5460,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34081:4:18","typeDescriptions":{"typeIdentifier":"t_type$_t_int8_$","typeString":"type(int8)"},"typeName":{"id":5459,"name":"int8","nodeType":"ElementaryTypeName","src":"34081:4:18","typeDescriptions":{}}},"id":5462,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34081:11:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"src":"34068:24:18","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"id":5464,"nodeType":"ExpressionStatement","src":"34068:24:18"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5467,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5465,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5456,"src":"34106:10:18","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5466,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5453,"src":"34120:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"34106:19:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5474,"nodeType":"IfStatement","src":"34102:96:18","trueBody":{"id":5473,"nodeType":"Block","src":"34127:71:18","statements":[{"errorCall":{"arguments":[{"hexValue":"38","id":5469,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"34178:1:18","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},{"id":5470,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5453,"src":"34181:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5468,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3774,"src":"34148:29:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":5471,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34148:39:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5472,"nodeType":"RevertStatement","src":"34141:46:18"}]}}]},"documentation":{"id":5451,"nodeType":"StructuredDocumentation","src":"33681:302:18","text":" @dev Returns the downcasted int8 from int256, reverting on\n overflow (when the input is less than smallest int8 or\n greater than largest int8).\n Counterpart to Solidity's `int8` operator.\n Requirements:\n - input must fit into 8 bits"},"id":5476,"implemented":true,"kind":"function","modifiers":[],"name":"toInt8","nameLocation":"33997:6:18","nodeType":"FunctionDefinition","parameters":{"id":5454,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5453,"mutability":"mutable","name":"value","nameLocation":"34011:5:18","nodeType":"VariableDeclaration","scope":5476,"src":"34004:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5452,"name":"int256","nodeType":"ElementaryTypeName","src":"34004:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"34003:14:18"},"returnParameters":{"id":5457,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5456,"mutability":"mutable","name":"downcasted","nameLocation":"34046:10:18","nodeType":"VariableDeclaration","scope":5476,"src":"34041:15:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"},"typeName":{"id":5455,"name":"int8","nodeType":"ElementaryTypeName","src":"34041:4:18","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"visibility":"internal"}],"src":"34040:17:18"},"scope":5517,"src":"33988:216:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5505,"nodeType":"Block","src":"34444:250:18","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5493,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5484,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5479,"src":"34557:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"arguments":[{"expression":{"arguments":[{"id":5489,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34578:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":5488,"name":"int256","nodeType":"ElementaryTypeName","src":"34578:6:18","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"}],"id":5487,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"34573:4:18","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5490,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34573:12:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int256","typeString":"type(int256)"}},"id":5491,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"34586:3:18","memberName":"max","nodeType":"MemberAccess","src":"34573:16:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5486,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34565:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":5485,"name":"uint256","nodeType":"ElementaryTypeName","src":"34565:7:18","typeDescriptions":{}}},"id":5492,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34565:25:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"34557:33:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5499,"nodeType":"IfStatement","src":"34553:105:18","trueBody":{"id":5498,"nodeType":"Block","src":"34592:66:18","statements":[{"errorCall":{"arguments":[{"id":5495,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5479,"src":"34641:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5494,"name":"SafeCastOverflowedUintToInt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3779,"src":"34613:27:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$_t_error_$","typeString":"function (uint256) pure returns (error)"}},"id":5496,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34613:34:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5497,"nodeType":"RevertStatement","src":"34606:41:18"}]}},{"expression":{"arguments":[{"id":5502,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5479,"src":"34681:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5501,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34674:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":5500,"name":"int256","nodeType":"ElementaryTypeName","src":"34674:6:18","typeDescriptions":{}}},"id":5503,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34674:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":5483,"id":5504,"nodeType":"Return","src":"34667:20:18"}]},"documentation":{"id":5477,"nodeType":"StructuredDocumentation","src":"34210:165:18","text":" @dev Converts an unsigned uint256 into a signed int256.\n Requirements:\n - input must be less than or equal to maxInt256."},"id":5506,"implemented":true,"kind":"function","modifiers":[],"name":"toInt256","nameLocation":"34389:8:18","nodeType":"FunctionDefinition","parameters":{"id":5480,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5479,"mutability":"mutable","name":"value","nameLocation":"34406:5:18","nodeType":"VariableDeclaration","scope":5506,"src":"34398:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5478,"name":"uint256","nodeType":"ElementaryTypeName","src":"34398:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"34397:15:18"},"returnParameters":{"id":5483,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5482,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5506,"src":"34436:6:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5481,"name":"int256","nodeType":"ElementaryTypeName","src":"34436:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"34435:8:18"},"scope":5517,"src":"34380:314:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5515,"nodeType":"Block","src":"34853:87:18","statements":[{"AST":{"nativeSrc":"34888:46:18","nodeType":"YulBlock","src":"34888:46:18","statements":[{"nativeSrc":"34902:22:18","nodeType":"YulAssignment","src":"34902:22:18","value":{"arguments":[{"arguments":[{"name":"b","nativeSrc":"34921:1:18","nodeType":"YulIdentifier","src":"34921:1:18"}],"functionName":{"name":"iszero","nativeSrc":"34914:6:18","nodeType":"YulIdentifier","src":"34914:6:18"},"nativeSrc":"34914:9:18","nodeType":"YulFunctionCall","src":"34914:9:18"}],"functionName":{"name":"iszero","nativeSrc":"34907:6:18","nodeType":"YulIdentifier","src":"34907:6:18"},"nativeSrc":"34907:17:18","nodeType":"YulFunctionCall","src":"34907:17:18"},"variableNames":[{"name":"u","nativeSrc":"34902:1:18","nodeType":"YulIdentifier","src":"34902:1:18"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":5509,"isOffset":false,"isSlot":false,"src":"34921:1:18","valueSize":1},{"declaration":5512,"isOffset":false,"isSlot":false,"src":"34902:1:18","valueSize":1}],"flags":["memory-safe"],"id":5514,"nodeType":"InlineAssembly","src":"34863:71:18"}]},"documentation":{"id":5507,"nodeType":"StructuredDocumentation","src":"34700:90:18","text":" @dev Cast a boolean (false or true) to a uint256 (0 or 1) with no jump."},"id":5516,"implemented":true,"kind":"function","modifiers":[],"name":"toUint","nameLocation":"34804:6:18","nodeType":"FunctionDefinition","parameters":{"id":5510,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5509,"mutability":"mutable","name":"b","nameLocation":"34816:1:18","nodeType":"VariableDeclaration","scope":5516,"src":"34811:6:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5508,"name":"bool","nodeType":"ElementaryTypeName","src":"34811:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"34810:8:18"},"returnParameters":{"id":5513,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5512,"mutability":"mutable","name":"u","nameLocation":"34850:1:18","nodeType":"VariableDeclaration","scope":5516,"src":"34842:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5511,"name":"uint256","nodeType":"ElementaryTypeName","src":"34842:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"34841:11:18"},"scope":5517,"src":"34795:145:18","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":5518,"src":"769:34173:18","usedErrors":[3762,3767,3774,3779],"usedEvents":[]}],"src":"192:34751:18"},"id":18},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/SignedMath.sol","exportedSymbols":{"SafeCast":[5517],"SignedMath":[5661]},"id":5662,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":5519,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"109:24:19"},{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","file":"./SafeCast.sol","id":5521,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5662,"sourceUnit":5518,"src":"135:40:19","symbolAliases":[{"foreign":{"id":5520,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5517,"src":"143:8:19","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"SignedMath","contractDependencies":[],"contractKind":"library","documentation":{"id":5522,"nodeType":"StructuredDocumentation","src":"177:80:19","text":" @dev Standard signed math utilities missing in the Solidity language."},"fullyImplemented":true,"id":5661,"linearizedBaseContracts":[5661],"name":"SignedMath","nameLocation":"266:10:19","nodeType":"ContractDefinition","nodes":[{"body":{"id":5551,"nodeType":"Block","src":"746:215:19","statements":[{"id":5550,"nodeType":"UncheckedBlock","src":"756:199:19","statements":[{"expression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5548,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5534,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5529,"src":"894:1:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5546,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5537,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5535,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5527,"src":"900:1:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":5536,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5529,"src":"904:1:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"900:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":5538,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"899:7:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"arguments":[{"id":5543,"name":"condition","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5525,"src":"932:9:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5541,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5517,"src":"916:8:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$5517_$","typeString":"type(library SafeCast)"}},"id":5542,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"925:6:19","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":5516,"src":"916:15:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5544,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"916:26:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5540,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"909:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":5539,"name":"int256","nodeType":"ElementaryTypeName","src":"909:6:19","typeDescriptions":{}}},"id":5545,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"909:34:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"899:44:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":5547,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"898:46:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"894:50:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":5533,"id":5549,"nodeType":"Return","src":"887:57:19"}]}]},"documentation":{"id":5523,"nodeType":"StructuredDocumentation","src":"283:374:19","text":" @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n one branch when needed, making this function more expensive."},"id":5552,"implemented":true,"kind":"function","modifiers":[],"name":"ternary","nameLocation":"671:7:19","nodeType":"FunctionDefinition","parameters":{"id":5530,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5525,"mutability":"mutable","name":"condition","nameLocation":"684:9:19","nodeType":"VariableDeclaration","scope":5552,"src":"679:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5524,"name":"bool","nodeType":"ElementaryTypeName","src":"679:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":5527,"mutability":"mutable","name":"a","nameLocation":"702:1:19","nodeType":"VariableDeclaration","scope":5552,"src":"695:8:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5526,"name":"int256","nodeType":"ElementaryTypeName","src":"695:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":5529,"mutability":"mutable","name":"b","nameLocation":"712:1:19","nodeType":"VariableDeclaration","scope":5552,"src":"705:8:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5528,"name":"int256","nodeType":"ElementaryTypeName","src":"705:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"678:36:19"},"returnParameters":{"id":5533,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5532,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5552,"src":"738:6:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5531,"name":"int256","nodeType":"ElementaryTypeName","src":"738:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"737:8:19"},"scope":5661,"src":"662:299:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5570,"nodeType":"Block","src":"1102:44:19","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5565,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5563,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5555,"src":"1127:1:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":5564,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5557,"src":"1131:1:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1127:5:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":5566,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5555,"src":"1134:1:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"id":5567,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5557,"src":"1137:1:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_int256","typeString":"int256"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5562,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5552,"src":"1119:7:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_int256_$_t_int256_$returns$_t_int256_$","typeString":"function (bool,int256,int256) pure returns (int256)"}},"id":5568,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1119:20:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":5561,"id":5569,"nodeType":"Return","src":"1112:27:19"}]},"documentation":{"id":5553,"nodeType":"StructuredDocumentation","src":"967:66:19","text":" @dev Returns the largest of two signed numbers."},"id":5571,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"1047:3:19","nodeType":"FunctionDefinition","parameters":{"id":5558,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5555,"mutability":"mutable","name":"a","nameLocation":"1058:1:19","nodeType":"VariableDeclaration","scope":5571,"src":"1051:8:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5554,"name":"int256","nodeType":"ElementaryTypeName","src":"1051:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":5557,"mutability":"mutable","name":"b","nameLocation":"1068:1:19","nodeType":"VariableDeclaration","scope":5571,"src":"1061:8:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5556,"name":"int256","nodeType":"ElementaryTypeName","src":"1061:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1050:20:19"},"returnParameters":{"id":5561,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5560,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5571,"src":"1094:6:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5559,"name":"int256","nodeType":"ElementaryTypeName","src":"1094:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1093:8:19"},"scope":5661,"src":"1038:108:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5589,"nodeType":"Block","src":"1288:44:19","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5584,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5582,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5574,"src":"1313:1:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":5583,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5576,"src":"1317:1:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1313:5:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":5585,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5574,"src":"1320:1:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"id":5586,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5576,"src":"1323:1:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_int256","typeString":"int256"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5581,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5552,"src":"1305:7:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_int256_$_t_int256_$returns$_t_int256_$","typeString":"function (bool,int256,int256) pure returns (int256)"}},"id":5587,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1305:20:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":5580,"id":5588,"nodeType":"Return","src":"1298:27:19"}]},"documentation":{"id":5572,"nodeType":"StructuredDocumentation","src":"1152:67:19","text":" @dev Returns the smallest of two signed numbers."},"id":5590,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"1233:3:19","nodeType":"FunctionDefinition","parameters":{"id":5577,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5574,"mutability":"mutable","name":"a","nameLocation":"1244:1:19","nodeType":"VariableDeclaration","scope":5590,"src":"1237:8:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5573,"name":"int256","nodeType":"ElementaryTypeName","src":"1237:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":5576,"mutability":"mutable","name":"b","nameLocation":"1254:1:19","nodeType":"VariableDeclaration","scope":5590,"src":"1247:8:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5575,"name":"int256","nodeType":"ElementaryTypeName","src":"1247:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1236:20:19"},"returnParameters":{"id":5580,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5579,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5590,"src":"1280:6:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5578,"name":"int256","nodeType":"ElementaryTypeName","src":"1280:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1279:8:19"},"scope":5661,"src":"1224:108:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5633,"nodeType":"Block","src":"1537:162:19","statements":[{"assignments":[5601],"declarations":[{"constant":false,"id":5601,"mutability":"mutable","name":"x","nameLocation":"1606:1:19","nodeType":"VariableDeclaration","scope":5633,"src":"1599:8:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5600,"name":"int256","nodeType":"ElementaryTypeName","src":"1599:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":5614,"initialValue":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5613,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5604,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5602,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5593,"src":"1611:1:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":5603,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5595,"src":"1615:1:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1611:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":5605,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1610:7:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5611,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5608,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5606,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5593,"src":"1622:1:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":5607,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5595,"src":"1626:1:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1622:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":5609,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1621:7:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":5610,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1632:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1621:12:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":5612,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1620:14:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1610:24:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"VariableDeclarationStatement","src":"1599:35:19"},{"expression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5631,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5615,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5601,"src":"1651:1:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5629,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5623,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":5620,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5601,"src":"1671:1:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5619,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1663:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":5618,"name":"uint256","nodeType":"ElementaryTypeName","src":"1663:7:19","typeDescriptions":{}}},"id":5621,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1663:10:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"323535","id":5622,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1677:3:19","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"1663:17:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5617,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1656:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":5616,"name":"int256","nodeType":"ElementaryTypeName","src":"1656:6:19","typeDescriptions":{}}},"id":5624,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1656:25:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5627,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5625,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5593,"src":"1685:1:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":5626,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5595,"src":"1689:1:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1685:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":5628,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1684:7:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1656:35:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":5630,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1655:37:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1651:41:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":5599,"id":5632,"nodeType":"Return","src":"1644:48:19"}]},"documentation":{"id":5591,"nodeType":"StructuredDocumentation","src":"1338:126:19","text":" @dev Returns the average of two signed numbers without overflow.\n The result is rounded towards zero."},"id":5634,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"1478:7:19","nodeType":"FunctionDefinition","parameters":{"id":5596,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5593,"mutability":"mutable","name":"a","nameLocation":"1493:1:19","nodeType":"VariableDeclaration","scope":5634,"src":"1486:8:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5592,"name":"int256","nodeType":"ElementaryTypeName","src":"1486:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":5595,"mutability":"mutable","name":"b","nameLocation":"1503:1:19","nodeType":"VariableDeclaration","scope":5634,"src":"1496:8:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5594,"name":"int256","nodeType":"ElementaryTypeName","src":"1496:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1485:20:19"},"returnParameters":{"id":5599,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5598,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5634,"src":"1529:6:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5597,"name":"int256","nodeType":"ElementaryTypeName","src":"1529:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1528:8:19"},"scope":5661,"src":"1469:230:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5659,"nodeType":"Block","src":"1843:767:19","statements":[{"id":5658,"nodeType":"UncheckedBlock","src":"1853:751:19","statements":[{"assignments":[5643],"declarations":[{"constant":false,"id":5643,"mutability":"mutable","name":"mask","nameLocation":"2424:4:19","nodeType":"VariableDeclaration","scope":5658,"src":"2417:11:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5642,"name":"int256","nodeType":"ElementaryTypeName","src":"2417:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":5647,"initialValue":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5646,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5644,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5637,"src":"2431:1:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"323535","id":5645,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2436:3:19","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"2431:8:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"VariableDeclarationStatement","src":"2417:22:19"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5655,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5652,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5650,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5637,"src":"2576:1:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":5651,"name":"mask","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5643,"src":"2580:4:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"2576:8:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":5653,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2575:10:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":5654,"name":"mask","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5643,"src":"2588:4:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"2575:17:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5649,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2567:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":5648,"name":"uint256","nodeType":"ElementaryTypeName","src":"2567:7:19","typeDescriptions":{}}},"id":5656,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2567:26:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5641,"id":5657,"nodeType":"Return","src":"2560:33:19"}]}]},"documentation":{"id":5635,"nodeType":"StructuredDocumentation","src":"1705:78:19","text":" @dev Returns the absolute unsigned value of a signed value."},"id":5660,"implemented":true,"kind":"function","modifiers":[],"name":"abs","nameLocation":"1797:3:19","nodeType":"FunctionDefinition","parameters":{"id":5638,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5637,"mutability":"mutable","name":"n","nameLocation":"1808:1:19","nodeType":"VariableDeclaration","scope":5660,"src":"1801:8:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5636,"name":"int256","nodeType":"ElementaryTypeName","src":"1801:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1800:10:19"},"returnParameters":{"id":5641,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5640,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5660,"src":"1834:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5639,"name":"uint256","nodeType":"ElementaryTypeName","src":"1834:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1833:9:19"},"scope":5661,"src":"1788:822:19","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":5662,"src":"258:2354:19","usedErrors":[],"usedEvents":[]}],"src":"109:2504:19"},"id":19},"contracts/NextRound.sol":{"ast":{"absolutePath":"contracts/NextRound.sol","exportedSymbols":{},"id":5663,"license":"UNLICENSED","nodeType":"SourceUnit","nodes":[],"src":"5733:0:20"},"id":20},"contracts/NextRoundNFT.sol":{"ast":{"absolutePath":"contracts/NextRoundNFT.sol","exportedSymbols":{"Context":[1669],"ERC165":[2134],"ERC721":[1273],"ERC721URIStorage":[1534],"ERC721Utils":[1639],"IERC165":[2146],"IERC4906":[175],"IERC721":[1390],"IERC721Errors":[269],"IERC721Metadata":[1562],"INRCoin":[5690],"NextRoundNFT":[6109],"Ownable":[147],"ReentrancyGuard":[1790],"Strings":[2110]},"id":6110,"license":"UNLICENSED","nodeType":"SourceUnit","nodes":[{"id":5664,"literals":["solidity","^","0.8",".27"],"nodeType":"PragmaDirective","src":"40:24:21"},{"absolutePath":"@openzeppelin/contracts/token/ERC721/ERC721.sol","file":"@openzeppelin/contracts/token/ERC721/ERC721.sol","id":5665,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6110,"sourceUnit":1274,"src":"68:57:21","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol","file":"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol","id":5666,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6110,"sourceUnit":1535,"src":"127:78:21","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","file":"@openzeppelin/contracts/access/Ownable.sol","id":5667,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6110,"sourceUnit":148,"src":"207:52:21","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/ReentrancyGuard.sol","file":"@openzeppelin/contracts/utils/ReentrancyGuard.sol","id":5668,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6110,"sourceUnit":1791,"src":"261:59:21","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"INRCoin","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":5690,"linearizedBaseContracts":[5690],"name":"INRCoin","nameLocation":"334:7:21","nodeType":"ContractDefinition","nodes":[{"functionSelector":"0103c92b","id":5675,"implemented":false,"kind":"function","modifiers":[],"name":"userBalance","nameLocation":"358:11:21","nodeType":"FunctionDefinition","parameters":{"id":5671,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5670,"mutability":"mutable","name":"user","nameLocation":"378:4:21","nodeType":"VariableDeclaration","scope":5675,"src":"370:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5669,"name":"address","nodeType":"ElementaryTypeName","src":"370:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"369:14:21"},"returnParameters":{"id":5674,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5673,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5675,"src":"407:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5672,"name":"uint256","nodeType":"ElementaryTypeName","src":"407:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"406:9:21"},"scope":5690,"src":"349:67:21","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"e4e103dc","id":5682,"implemented":false,"kind":"function","modifiers":[],"name":"rewardUser","nameLocation":"431:10:21","nodeType":"FunctionDefinition","parameters":{"id":5680,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5677,"mutability":"mutable","name":"_user","nameLocation":"450:5:21","nodeType":"VariableDeclaration","scope":5682,"src":"442:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5676,"name":"address","nodeType":"ElementaryTypeName","src":"442:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5679,"mutability":"mutable","name":"_amount","nameLocation":"465:7:21","nodeType":"VariableDeclaration","scope":5682,"src":"457:15:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5678,"name":"uint256","nodeType":"ElementaryTypeName","src":"457:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"441:32:21"},"returnParameters":{"id":5681,"nodeType":"ParameterList","parameters":[],"src":"482:0:21"},"scope":5690,"src":"422:61:21","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"44086669","id":5689,"implemented":false,"kind":"function","modifiers":[],"name":"chargeUser","nameLocation":"498:10:21","nodeType":"FunctionDefinition","parameters":{"id":5687,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5684,"mutability":"mutable","name":"_user","nameLocation":"517:5:21","nodeType":"VariableDeclaration","scope":5689,"src":"509:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5683,"name":"address","nodeType":"ElementaryTypeName","src":"509:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5686,"mutability":"mutable","name":"_amount","nameLocation":"532:7:21","nodeType":"VariableDeclaration","scope":5689,"src":"524:15:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5685,"name":"uint256","nodeType":"ElementaryTypeName","src":"524:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"508:32:21"},"returnParameters":{"id":5688,"nodeType":"ParameterList","parameters":[],"src":"549:0:21"},"scope":5690,"src":"489:61:21","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":6110,"src":"324:229:21","usedErrors":[],"usedEvents":[]},{"abstract":false,"baseContracts":[{"baseName":{"id":5691,"name":"ERC721","nameLocations":["582:6:21"],"nodeType":"IdentifierPath","referencedDeclaration":1273,"src":"582:6:21"},"id":5692,"nodeType":"InheritanceSpecifier","src":"582:6:21"},{"baseName":{"id":5693,"name":"ERC721URIStorage","nameLocations":["590:16:21"],"nodeType":"IdentifierPath","referencedDeclaration":1534,"src":"590:16:21"},"id":5694,"nodeType":"InheritanceSpecifier","src":"590:16:21"},{"baseName":{"id":5695,"name":"ReentrancyGuard","nameLocations":["608:15:21"],"nodeType":"IdentifierPath","referencedDeclaration":1790,"src":"608:15:21"},"id":5696,"nodeType":"InheritanceSpecifier","src":"608:15:21"},{"arguments":[{"expression":{"id":5698,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"633:3:21","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":5699,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"637:6:21","memberName":"sender","nodeType":"MemberAccess","src":"633:10:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"baseName":{"id":5697,"name":"Ownable","nameLocations":["625:7:21"],"nodeType":"IdentifierPath","referencedDeclaration":147,"src":"625:7:21"},"id":5700,"nodeType":"InheritanceSpecifier","src":"625:19:21"}],"canonicalName":"NextRoundNFT","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":6109,"linearizedBaseContracts":[6109,147,1790,1534,1273,269,1562,175,1390,2134,2146,1669],"name":"NextRoundNFT","nameLocation":"566:12:21","nodeType":"ContractDefinition","nodes":[{"constant":false,"functionSelector":"6e0690a2","id":5703,"mutability":"mutable","name":"NRCoin","nameLocation":"699:6:21","nodeType":"VariableDeclaration","scope":6109,"src":"684:21:21","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_INRCoin_$5690","typeString":"contract INRCoin"},"typeName":{"id":5702,"nodeType":"UserDefinedTypeName","pathNode":{"id":5701,"name":"INRCoin","nameLocations":["684:7:21"],"nodeType":"IdentifierPath","referencedDeclaration":5690,"src":"684:7:21"},"referencedDeclaration":5690,"src":"684:7:21","typeDescriptions":{"typeIdentifier":"t_contract$_INRCoin_$5690","typeString":"contract INRCoin"}},"visibility":"public"},{"constant":true,"functionSelector":"5dc2e20d","id":5706,"mutability":"constant","name":"DailyScanLimit","nameLocation":"760:14:21","nodeType":"VariableDeclaration","scope":6109,"src":"736:42:21","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5704,"name":"uint256","nodeType":"ElementaryTypeName","src":"736:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"35","id":5705,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"777:1:21","typeDescriptions":{"typeIdentifier":"t_rational_5_by_1","typeString":"int_const 5"},"value":"5"},"visibility":"public"},{"constant":true,"functionSelector":"9af52a91","id":5709,"mutability":"constant","name":"NRCPricePerNicknaming","nameLocation":"836:21:21","nodeType":"VariableDeclaration","scope":6109,"src":"812:49:21","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5707,"name":"uint256","nodeType":"ElementaryTypeName","src":"812:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"31","id":5708,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"860:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"visibility":"public"},{"constant":true,"functionSelector":"41e36364","id":5712,"mutability":"constant","name":"NRCReward","nameLocation":"964:9:21","nodeType":"VariableDeclaration","scope":6109,"src":"940:37:21","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5710,"name":"uint256","nodeType":"ElementaryTypeName","src":"940:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"31","id":5711,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"976:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"visibility":"public"},{"constant":true,"functionSelector":"30c293de","id":5715,"mutability":"constant","name":"NRCPricePerMint","nameLocation":"1092:15:21","nodeType":"VariableDeclaration","scope":6109,"src":"1068:43:21","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5713,"name":"uint256","nodeType":"ElementaryTypeName","src":"1068:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"35","id":5714,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1110:1:21","typeDescriptions":{"typeIdentifier":"t_rational_5_by_1","typeString":"int_const 5"},"value":"5"},"visibility":"public"},{"constant":false,"id":5718,"mutability":"mutable","name":"_nftIdCounter","nameLocation":"1219:13:21","nodeType":"VariableDeclaration","scope":6109,"src":"1203:33:21","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5716,"name":"uint256","nodeType":"ElementaryTypeName","src":"1203:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30","id":5717,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1235:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"visibility":"private"},{"canonicalName":"NextRoundNFT.Coaster","id":5736,"members":[{"constant":false,"id":5720,"mutability":"mutable","name":"id","nameLocation":"1312:2:21","nodeType":"VariableDeclaration","scope":5736,"src":"1305:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":5719,"name":"string","nodeType":"ElementaryTypeName","src":"1305:6:21","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":5722,"mutability":"mutable","name":"name","nameLocation":"1332:4:21","nodeType":"VariableDeclaration","scope":5736,"src":"1325:11:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":5721,"name":"string","nodeType":"ElementaryTypeName","src":"1325:6:21","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":5724,"mutability":"mutable","name":"description","nameLocation":"1354:11:21","nodeType":"VariableDeclaration","scope":5736,"src":"1347:18:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":5723,"name":"string","nodeType":"ElementaryTypeName","src":"1347:6:21","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":5726,"mutability":"mutable","name":"assetURI","nameLocation":"1383:8:21","nodeType":"VariableDeclaration","scope":5736,"src":"1376:15:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":5725,"name":"string","nodeType":"ElementaryTypeName","src":"1376:6:21","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":5728,"mutability":"mutable","name":"owner","nameLocation":"1410:5:21","nodeType":"VariableDeclaration","scope":5736,"src":"1402:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5727,"name":"address","nodeType":"ElementaryTypeName","src":"1402:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5730,"mutability":"mutable","name":"nickname","nameLocation":"1433:8:21","nodeType":"VariableDeclaration","scope":5736,"src":"1426:15:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":5729,"name":"string","nodeType":"ElementaryTypeName","src":"1426:6:21","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":5732,"mutability":"mutable","name":"namerAccount","nameLocation":"1460:12:21","nodeType":"VariableDeclaration","scope":5736,"src":"1452:20:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5731,"name":"address","nodeType":"ElementaryTypeName","src":"1452:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5735,"mutability":"mutable","name":"scannersAccount","nameLocation":"1493:15:21","nodeType":"VariableDeclaration","scope":5736,"src":"1483:25:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":5733,"name":"address","nodeType":"ElementaryTypeName","src":"1483:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":5734,"nodeType":"ArrayTypeName","src":"1483:9:21","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"name":"Coaster","nameLocation":"1286:7:21","nodeType":"StructDefinition","scope":6109,"src":"1279:237:21","visibility":"public"},{"constant":false,"functionSelector":"2365dce2","id":5739,"mutability":"mutable","name":"registeredUserAddresses","nameLocation":"1541:23:21","nodeType":"VariableDeclaration","scope":6109,"src":"1524:40:21","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[]"},"typeName":{"baseType":{"id":5737,"name":"address","nodeType":"ElementaryTypeName","src":"1524:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":5738,"nodeType":"ArrayTypeName","src":"1524:9:21","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"public"},{"constant":false,"id":5744,"mutability":"mutable","name":"coasters","nameLocation":"1643:8:21","nodeType":"VariableDeclaration","scope":6109,"src":"1608:43:21","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_struct$_Coaster_$5736_storage_$","typeString":"mapping(string => struct NextRoundNFT.Coaster)"},"typeName":{"id":5743,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":5740,"name":"string","nodeType":"ElementaryTypeName","src":"1616:6:21","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"nodeType":"Mapping","src":"1608:26:21","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_struct$_Coaster_$5736_storage_$","typeString":"mapping(string => struct NextRoundNFT.Coaster)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":5742,"nodeType":"UserDefinedTypeName","pathNode":{"id":5741,"name":"Coaster","nameLocations":["1626:7:21"],"nodeType":"IdentifierPath","referencedDeclaration":5736,"src":"1626:7:21"},"referencedDeclaration":5736,"src":"1626:7:21","typeDescriptions":{"typeIdentifier":"t_struct$_Coaster_$5736_storage_ptr","typeString":"struct NextRoundNFT.Coaster"}}},"visibility":"private"},{"constant":false,"functionSelector":"ea52a156","id":5750,"mutability":"mutable","name":"ownedCoasters","nameLocation":"1774:13:21","nodeType":"VariableDeclaration","scope":6109,"src":"1723:64:21","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_string_memory_ptr_$_t_bool_$_$","typeString":"mapping(address => mapping(string => bool))"},"typeName":{"id":5749,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":5745,"name":"address","nodeType":"ElementaryTypeName","src":"1731:7:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1723:43:21","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_string_memory_ptr_$_t_bool_$_$","typeString":"mapping(address => mapping(string => bool))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":5748,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":5746,"name":"string","nodeType":"ElementaryTypeName","src":"1750:6:21","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"nodeType":"Mapping","src":"1742:23:21","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_bool_$","typeString":"mapping(string => bool)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":5747,"name":"bool","nodeType":"ElementaryTypeName","src":"1760:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}}},"visibility":"public"},{"constant":false,"functionSelector":"bd228bbd","id":5756,"mutability":"mutable","name":"scannedCoasters","nameLocation":"1845:15:21","nodeType":"VariableDeclaration","scope":6109,"src":"1794:66:21","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_string_memory_ptr_$_t_bool_$_$","typeString":"mapping(address => mapping(string => bool))"},"typeName":{"id":5755,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":5751,"name":"address","nodeType":"ElementaryTypeName","src":"1802:7:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1794:43:21","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_string_memory_ptr_$_t_bool_$_$","typeString":"mapping(address => mapping(string => bool))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":5754,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":5752,"name":"string","nodeType":"ElementaryTypeName","src":"1821:6:21","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"nodeType":"Mapping","src":"1813:23:21","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_bool_$","typeString":"mapping(string => bool)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":5753,"name":"bool","nodeType":"ElementaryTypeName","src":"1831:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}}},"visibility":"public"},{"anonymous":false,"eventSelector":"54db7a5cb4735e1aac1f53db512d3390390bb6637bd30ad4bf9fc98667d9b9b9","id":5760,"name":"UserRegistered","nameLocation":"1890:14:21","nodeType":"EventDefinition","parameters":{"id":5759,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5758,"indexed":true,"mutability":"mutable","name":"_user","nameLocation":"1921:5:21","nodeType":"VariableDeclaration","scope":5760,"src":"1905:21:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5757,"name":"address","nodeType":"ElementaryTypeName","src":"1905:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1904:23:21"},"src":"1884:44:21"},{"anonymous":false,"eventSelector":"371f376692dd846fa34380a8fd44c6a140dc5cd442cd8ae5657963685f17ebed","id":5766,"name":"NFTMinted","nameLocation":"1940:9:21","nodeType":"EventDefinition","parameters":{"id":5765,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5762,"indexed":true,"mutability":"mutable","name":"_user","nameLocation":"1966:5:21","nodeType":"VariableDeclaration","scope":5766,"src":"1950:21:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5761,"name":"address","nodeType":"ElementaryTypeName","src":"1950:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5764,"indexed":false,"mutability":"mutable","name":"_assetId","nameLocation":"1980:8:21","nodeType":"VariableDeclaration","scope":5766,"src":"1973:15:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":5763,"name":"string","nodeType":"ElementaryTypeName","src":"1973:6:21","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1949:40:21"},"src":"1934:56:21"},{"anonymous":false,"eventSelector":"a102e7cfa1a123ee2b7875a4863e2da990b4480be2b4c43ced07d863be7c5926","id":5772,"name":"CoasterScanned","nameLocation":"2002:14:21","nodeType":"EventDefinition","parameters":{"id":5771,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5768,"indexed":true,"mutability":"mutable","name":"_user","nameLocation":"2033:5:21","nodeType":"VariableDeclaration","scope":5772,"src":"2017:21:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5767,"name":"address","nodeType":"ElementaryTypeName","src":"2017:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5770,"indexed":false,"mutability":"mutable","name":"_coasterId","nameLocation":"2047:10:21","nodeType":"VariableDeclaration","scope":5772,"src":"2040:17:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":5769,"name":"string","nodeType":"ElementaryTypeName","src":"2040:6:21","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2016:42:21"},"src":"1996:63:21"},{"anonymous":false,"eventSelector":"8ddc804fe891e93143e1ff64637459a983d0c09831f8c83fa2264ddf2e46932e","id":5780,"name":"CoasterNamed","nameLocation":"2071:12:21","nodeType":"EventDefinition","parameters":{"id":5779,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5774,"indexed":true,"mutability":"mutable","name":"_namerAccount","nameLocation":"2100:13:21","nodeType":"VariableDeclaration","scope":5780,"src":"2084:29:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5773,"name":"address","nodeType":"ElementaryTypeName","src":"2084:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5776,"indexed":false,"mutability":"mutable","name":"_assetId","nameLocation":"2122:8:21","nodeType":"VariableDeclaration","scope":5780,"src":"2115:15:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":5775,"name":"string","nodeType":"ElementaryTypeName","src":"2115:6:21","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":5778,"indexed":false,"mutability":"mutable","name":"_nickname","nameLocation":"2139:9:21","nodeType":"VariableDeclaration","scope":5780,"src":"2132:16:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":5777,"name":"string","nodeType":"ElementaryTypeName","src":"2132:6:21","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2083:66:21"},"src":"2065:85:21"},{"body":{"id":5796,"nodeType":"Block","src":"2373:77:21","statements":[{"expression":{"id":5794,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5790,"name":"NRCoin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5703,"src":"2417:6:21","typeDescriptions":{"typeIdentifier":"t_contract$_INRCoin_$5690","typeString":"contract INRCoin"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5792,"name":"_NRCoin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5783,"src":"2434:7:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":5791,"name":"INRCoin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5690,"src":"2426:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_INRCoin_$5690_$","typeString":"type(contract INRCoin)"}},"id":5793,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2426:16:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_INRCoin_$5690","typeString":"contract INRCoin"}},"src":"2417:25:21","typeDescriptions":{"typeIdentifier":"t_contract$_INRCoin_$5690","typeString":"contract INRCoin"}},"id":5795,"nodeType":"ExpressionStatement","src":"2417:25:21"}]},"documentation":{"id":5781,"nodeType":"StructuredDocumentation","src":"2158:147:21","text":" Constructor for the NextRound NFT Smart Contract\n @param _NRCoin The contract address for the NR Platform (Coin) contract"},"id":5797,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"hexValue":"4e657874526f756e64204e4654","id":5786,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2347:15:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_0ebfa9745b435d245546236f2523389e609baf355f6e03823c0f294f80c37b28","typeString":"literal_string \"NextRound NFT\""},"value":"NextRound NFT"},{"hexValue":"4e524e4654","id":5787,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2364:7:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_a0f53a9bc1cbe6da3d172935621bf4aa5ca482fae5e08ff03e45c91993777b28","typeString":"literal_string \"NRNFT\""},"value":"NRNFT"}],"id":5788,"kind":"baseConstructorSpecifier","modifierName":{"id":5785,"name":"ERC721","nameLocations":["2340:6:21"],"nodeType":"IdentifierPath","referencedDeclaration":1273,"src":"2340:6:21"},"nodeType":"ModifierInvocation","src":"2340:32:21"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":5784,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5783,"mutability":"mutable","name":"_NRCoin","nameLocation":"2331:7:21","nodeType":"VariableDeclaration","scope":5797,"src":"2323:15:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5782,"name":"address","nodeType":"ElementaryTypeName","src":"2323:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2322:17:21"},"returnParameters":{"id":5789,"nodeType":"ParameterList","parameters":[],"src":"2373:0:21"},"scope":6109,"src":"2311:139:21","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[417,1457],"body":{"id":5812,"nodeType":"Block","src":"2874:62:21","statements":[{"expression":{"arguments":[{"id":5809,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5799,"src":"2916:11:21","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"id":5807,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"2892:5:21","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_NextRoundNFT_$6109_$","typeString":"type(contract super NextRoundNFT)"}},"id":5808,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2898:17:21","memberName":"supportsInterface","nodeType":"MemberAccess","referencedDeclaration":1457,"src":"2892:23:21","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes4_$returns$_t_bool_$","typeString":"function (bytes4) view returns (bool)"}},"id":5810,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2892:36:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":5806,"id":5811,"nodeType":"Return","src":"2885:43:21"}]},"functionSelector":"01ffc9a7","id":5813,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"2766:17:21","nodeType":"FunctionDefinition","overrides":{"id":5803,"nodeType":"OverrideSpecifier","overrides":[{"id":5801,"name":"ERC721","nameLocations":["2833:6:21"],"nodeType":"IdentifierPath","referencedDeclaration":1273,"src":"2833:6:21"},{"id":5802,"name":"ERC721URIStorage","nameLocations":["2841:16:21"],"nodeType":"IdentifierPath","referencedDeclaration":1534,"src":"2841:16:21"}],"src":"2824:34:21"},"parameters":{"id":5800,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5799,"mutability":"mutable","name":"interfaceId","nameLocation":"2791:11:21","nodeType":"VariableDeclaration","scope":5813,"src":"2784:18:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":5798,"name":"bytes4","nodeType":"ElementaryTypeName","src":"2784:6:21","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"2783:20:21"},"returnParameters":{"id":5806,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5805,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5813,"src":"2868:4:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5804,"name":"bool","nodeType":"ElementaryTypeName","src":"2868:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2867:6:21"},"scope":6109,"src":"2757:179:21","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[512,1514],"body":{"id":5828,"nodeType":"Block","src":"3058:49:21","statements":[{"expression":{"arguments":[{"id":5825,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5815,"src":"3091:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":5823,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"3076:5:21","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_NextRoundNFT_$6109_$","typeString":"type(contract super NextRoundNFT)"}},"id":5824,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3082:8:21","memberName":"tokenURI","nodeType":"MemberAccess","referencedDeclaration":1514,"src":"3076:14:21","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) view returns (string memory)"}},"id":5826,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3076:23:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":5822,"id":5827,"nodeType":"Return","src":"3069:30:21"}]},"functionSelector":"c87b56dd","id":5829,"implemented":true,"kind":"function","modifiers":[],"name":"tokenURI","nameLocation":"2953:8:21","nodeType":"FunctionDefinition","overrides":{"id":5819,"nodeType":"OverrideSpecifier","overrides":[{"id":5817,"name":"ERC721","nameLocations":["3008:6:21"],"nodeType":"IdentifierPath","referencedDeclaration":1273,"src":"3008:6:21"},{"id":5818,"name":"ERC721URIStorage","nameLocations":["3016:16:21"],"nodeType":"IdentifierPath","referencedDeclaration":1534,"src":"3016:16:21"}],"src":"2999:34:21"},"parameters":{"id":5816,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5815,"mutability":"mutable","name":"tokenId","nameLocation":"2970:7:21","nodeType":"VariableDeclaration","scope":5829,"src":"2962:15:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5814,"name":"uint256","nodeType":"ElementaryTypeName","src":"2962:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2961:17:21"},"returnParameters":{"id":5822,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5821,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5829,"src":"3043:13:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":5820,"name":"string","nodeType":"ElementaryTypeName","src":"3043:6:21","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3042:15:21"},"scope":6109,"src":"2944:163:21","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":5923,"nodeType":"Block","src":"3759:962:21","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5857,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"expression":{"baseExpression":{"id":5850,"name":"coasters","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5744,"src":"3784:8:21","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_struct$_Coaster_$5736_storage_$","typeString":"mapping(string memory => struct NextRoundNFT.Coaster storage ref)"}},"id":5852,"indexExpression":{"id":5851,"name":"_assetId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5840,"src":"3793:8:21","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3784:18:21","typeDescriptions":{"typeIdentifier":"t_struct$_Coaster_$5736_storage","typeString":"struct NextRoundNFT.Coaster storage ref"}},"id":5853,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3803:2:21","memberName":"id","nodeType":"MemberAccess","referencedDeclaration":5720,"src":"3784:21:21","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"id":5849,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3778:5:21","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":5848,"name":"bytes","nodeType":"ElementaryTypeName","src":"3778:5:21","typeDescriptions":{}}},"id":5854,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3778:28:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes storage pointer"}},"id":5855,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3807:6:21","memberName":"length","nodeType":"MemberAccess","src":"3778:35:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":5856,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3817:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3778:40:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"436f617374657220616c72656164792065786973742e","id":5858,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3820:24:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_374180e2178bd46e20d3ad5ffa47410137636792d207c61c23c6b429c903bad4","typeString":"literal_string \"Coaster already exist.\""},"value":"Coaster already exist."}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_374180e2178bd46e20d3ad5ffa47410137636792d207c61c23c6b429c903bad4","typeString":"literal_string \"Coaster already exist.\""}],"id":5847,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"3770:7:21","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5859,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3770:75:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5860,"nodeType":"ExpressionStatement","src":"3770:75:21"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5867,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":5864,"name":"_user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5832,"src":"3883:5:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":5862,"name":"NRCoin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5703,"src":"3864:6:21","typeDescriptions":{"typeIdentifier":"t_contract$_INRCoin_$5690","typeString":"contract INRCoin"}},"id":5863,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3871:11:21","memberName":"userBalance","nodeType":"MemberAccess","referencedDeclaration":5675,"src":"3864:18:21","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":5865,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3864:25:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":5866,"name":"NRCPricePerMint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5715,"src":"3893:15:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3864:44:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e73756666696369656e742062616c616e63652e","id":5868,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3910:23:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_7572e40391d07d4b91d51e72cb8caa5f33f56b2b616c219ac11e2b95b18edce9","typeString":"literal_string \"Insufficient balance.\""},"value":"Insufficient balance."}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_7572e40391d07d4b91d51e72cb8caa5f33f56b2b616c219ac11e2b95b18edce9","typeString":"literal_string \"Insufficient balance.\""}],"id":5861,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"3856:7:21","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5869,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3856:78:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5870,"nodeType":"ExpressionStatement","src":"3856:78:21"},{"expression":{"id":5872,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"3947:15:21","subExpression":{"id":5871,"name":"_nftIdCounter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5718,"src":"3947:13:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5873,"nodeType":"ExpressionStatement","src":"3947:15:21"},{"assignments":[5875],"declarations":[{"constant":false,"id":5875,"mutability":"mutable","name":"nftId","nameLocation":"4029:5:21","nodeType":"VariableDeclaration","scope":5923,"src":"4021:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5874,"name":"uint256","nodeType":"ElementaryTypeName","src":"4021:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5877,"initialValue":{"id":5876,"name":"_nftIdCounter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5718,"src":"4037:13:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4021:29:21"},{"expression":{"arguments":[{"id":5879,"name":"_user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5832,"src":"4071:5:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5880,"name":"nftId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5875,"src":"4078:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5878,"name":"_safeMint","nodeType":"Identifier","overloadedDeclarations":[951,981],"referencedDeclaration":951,"src":"4061:9:21","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":5881,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4061:23:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5882,"nodeType":"ExpressionStatement","src":"4061:23:21"},{"expression":{"arguments":[{"id":5884,"name":"nftId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5875,"src":"4108:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5885,"name":"_assetURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5838,"src":"4115:9:21","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}],"id":5883,"name":"_setTokenURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1533,"src":"4095:12:21","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$_t_string_memory_ptr_$returns$__$","typeString":"function (uint256,string memory)"}},"id":5886,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4095:30:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5887,"nodeType":"ExpressionStatement","src":"4095:30:21"},{"expression":{"id":5908,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":5888,"name":"coasters","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5744,"src":"4208:8:21","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_struct$_Coaster_$5736_storage_$","typeString":"mapping(string memory => struct NextRoundNFT.Coaster storage ref)"}},"id":5890,"indexExpression":{"id":5889,"name":"_assetId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5840,"src":"4217:8:21","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4208:18:21","typeDescriptions":{"typeIdentifier":"t_struct$_Coaster_$5736_storage","typeString":"struct NextRoundNFT.Coaster storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5892,"name":"_assetId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5840,"src":"4256:8:21","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}},{"id":5893,"name":"_user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5832,"src":"4286:5:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5894,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5834,"src":"4312:5:21","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}},{"id":5895,"name":"_assetURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5838,"src":"4342:9:21","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}},{"id":5896,"name":"_description","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5836,"src":"4379:12:21","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}},{"hexValue":"","id":5897,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4416:2:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},{"arguments":[{"hexValue":"30","id":5900,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4455:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":5899,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4447:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":5898,"name":"address","nodeType":"ElementaryTypeName","src":"4447:7:21","typeDescriptions":{}}},"id":5901,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4447:10:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":5905,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4503:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":5904,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"4489:13:21","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (address[] memory)"},"typeName":{"baseType":{"id":5902,"name":"address","nodeType":"ElementaryTypeName","src":"4493:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":5903,"nodeType":"ArrayTypeName","src":"4493:9:21","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}}},"id":5906,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4489:16:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"},{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"},{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}],"id":5891,"name":"Coaster","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5736,"src":"4229:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Coaster_$5736_storage_ptr_$","typeString":"type(struct NextRoundNFT.Coaster storage pointer)"}},"id":5907,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["4252:2:21","4279:5:21","4306:4:21","4332:8:21","4366:11:21","4406:8:21","4433:12:21","4472:15:21"],"names":["id","owner","name","assetURI","description","nickname","namerAccount","scannersAccount"],"nodeType":"FunctionCall","src":"4229:289:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Coaster_$5736_memory_ptr","typeString":"struct NextRoundNFT.Coaster memory"}},"src":"4208:310:21","typeDescriptions":{"typeIdentifier":"t_struct$_Coaster_$5736_storage","typeString":"struct NextRoundNFT.Coaster storage ref"}},"id":5909,"nodeType":"ExpressionStatement","src":"4208:310:21"},{"expression":{"id":5916,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":5910,"name":"ownedCoasters","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5750,"src":"4632:13:21","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_string_memory_ptr_$_t_bool_$_$","typeString":"mapping(address => mapping(string memory => bool))"}},"id":5913,"indexExpression":{"id":5911,"name":"_user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5832,"src":"4646:5:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4632:20:21","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_bool_$","typeString":"mapping(string memory => bool)"}},"id":5914,"indexExpression":{"id":5912,"name":"_assetId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5840,"src":"4653:8:21","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4632:30:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":5915,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4665:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"4632:37:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5917,"nodeType":"ExpressionStatement","src":"4632:37:21"},{"eventCall":{"arguments":[{"id":5919,"name":"_user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5832,"src":"4697:5:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5920,"name":"_assetId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5840,"src":"4704:8:21","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}],"id":5918,"name":"NFTMinted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5766,"src":"4687:9:21","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_string_memory_ptr_$returns$__$","typeString":"function (address,string memory)"}},"id":5921,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4687:26:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5922,"nodeType":"EmitStatement","src":"4682:31:21"}]},"documentation":{"id":5830,"nodeType":"StructuredDocumentation","src":"3198:329:21","text":" @dev Mint an NFT asset\n @param _user wallet address of user who is scanning\n @param _assetId ID of the asset to mint\n @param _name Name of the asset to mint\n @param _description Description of the asset to mint\n @param _assetURI Location resource (image url) of the asset to mint"},"functionSelector":"cee28be1","id":5924,"implemented":true,"kind":"function","modifiers":[{"id":5843,"kind":"modifierInvocation","modifierName":{"id":5842,"name":"onlyOwner","nameLocations":["3736:9:21"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"3736:9:21"},"nodeType":"ModifierInvocation","src":"3736:9:21"},{"id":5845,"kind":"modifierInvocation","modifierName":{"id":5844,"name":"nonReentrant","nameLocations":["3746:12:21"],"nodeType":"IdentifierPath","referencedDeclaration":1754,"src":"3746:12:21"},"nodeType":"ModifierInvocation","src":"3746:12:21"}],"name":"mintNFT","nameLocation":"3542:7:21","nodeType":"FunctionDefinition","parameters":{"id":5841,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5832,"mutability":"mutable","name":"_user","nameLocation":"3568:5:21","nodeType":"VariableDeclaration","scope":5924,"src":"3560:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5831,"name":"address","nodeType":"ElementaryTypeName","src":"3560:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5834,"mutability":"mutable","name":"_name","nameLocation":"3601:5:21","nodeType":"VariableDeclaration","scope":5924,"src":"3585:21:21","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":5833,"name":"string","nodeType":"ElementaryTypeName","src":"3585:6:21","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":5836,"mutability":"mutable","name":"_description","nameLocation":"3634:12:21","nodeType":"VariableDeclaration","scope":5924,"src":"3618:28:21","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":5835,"name":"string","nodeType":"ElementaryTypeName","src":"3618:6:21","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":5838,"mutability":"mutable","name":"_assetURI","nameLocation":"3674:9:21","nodeType":"VariableDeclaration","scope":5924,"src":"3658:25:21","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":5837,"name":"string","nodeType":"ElementaryTypeName","src":"3658:6:21","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":5840,"mutability":"mutable","name":"_assetId","nameLocation":"3711:8:21","nodeType":"VariableDeclaration","scope":5924,"src":"3695:24:21","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":5839,"name":"string","nodeType":"ElementaryTypeName","src":"3695:6:21","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3549:177:21"},"returnParameters":{"id":5846,"nodeType":"ParameterList","parameters":[],"src":"3759:0:21"},"scope":6109,"src":"3533:1188:21","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":5996,"nodeType":"Block","src":"5088:624:21","statements":[{"expression":{"arguments":[{"id":5944,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"5107:35:21","subExpression":{"baseExpression":{"baseExpression":{"id":5939,"name":"scannedCoasters","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5756,"src":"5108:15:21","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_string_memory_ptr_$_t_bool_$_$","typeString":"mapping(address => mapping(string memory => bool))"}},"id":5941,"indexExpression":{"id":5940,"name":"_user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5927,"src":"5124:5:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5108:22:21","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_bool_$","typeString":"mapping(string memory => bool)"}},"id":5943,"indexExpression":{"id":5942,"name":"_coasterId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5931,"src":"5131:10:21","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5108:34:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"436f617374657220616c7265616479207363616e6e65642e","id":5945,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5144:26:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_6397d8391ec10cb4049b569dd407a6acb94a7aa795742ed7e668b1eed10eab04","typeString":"literal_string \"Coaster already scanned.\""},"value":"Coaster already scanned."}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_6397d8391ec10cb4049b569dd407a6acb94a7aa795742ed7e668b1eed10eab04","typeString":"literal_string \"Coaster already scanned.\""}],"id":5938,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"5099:7:21","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5946,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5099:72:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5947,"nodeType":"ExpressionStatement","src":"5099:72:21"},{"expression":{"arguments":[{"id":5954,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"5190:33:21","subExpression":{"baseExpression":{"baseExpression":{"id":5949,"name":"ownedCoasters","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5750,"src":"5191:13:21","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_string_memory_ptr_$_t_bool_$_$","typeString":"mapping(address => mapping(string memory => bool))"}},"id":5951,"indexExpression":{"id":5950,"name":"_user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5927,"src":"5205:5:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5191:20:21","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_bool_$","typeString":"mapping(string memory => bool)"}},"id":5953,"indexExpression":{"id":5952,"name":"_coasterId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5931,"src":"5212:10:21","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5191:32:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"596f752063616e206e6f74207363616e20796f7572206f776e20436f61737465722e","id":5955,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5225:36:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_a60f8625a5ac2a62e25d3594e822288b44825183565533b1d915245d8c386ead","typeString":"literal_string \"You can not scan your own Coaster.\""},"value":"You can not scan your own Coaster."}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_a60f8625a5ac2a62e25d3594e822288b44825183565533b1d915245d8c386ead","typeString":"literal_string \"You can not scan your own Coaster.\""}],"id":5948,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"5182:7:21","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5956,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5182:80:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5957,"nodeType":"ExpressionStatement","src":"5182:80:21"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5964,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":5961,"name":"_user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5927,"src":"5300:5:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":5959,"name":"NRCoin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5703,"src":"5281:6:21","typeDescriptions":{"typeIdentifier":"t_contract$_INRCoin_$5690","typeString":"contract INRCoin"}},"id":5960,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5288:11:21","memberName":"userBalance","nodeType":"MemberAccess","referencedDeclaration":5675,"src":"5281:18:21","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":5962,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5281:25:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"hexValue":"30","id":5963,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5310:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5281:30:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c69642075736572206163636f756e742e","id":5965,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5313:23:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_38b84b28ce7f687a4159aa3c3ed79b1bf1faf0b83ba6e19eed8306e5b73a5699","typeString":"literal_string \"Invalid user account.\""},"value":"Invalid user account."}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_38b84b28ce7f687a4159aa3c3ed79b1bf1faf0b83ba6e19eed8306e5b73a5699","typeString":"literal_string \"Invalid user account.\""}],"id":5958,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"5273:7:21","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5966,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5273:64:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5967,"nodeType":"ExpressionStatement","src":"5273:64:21"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5971,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5969,"name":"_scanCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5929,"src":"5356:10:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":5970,"name":"DailyScanLimit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5706,"src":"5370:14:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5356:28:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"596f752068617665207265616368656420796f7572206461696c79206c696d6974206f66207363616e732e2054727920616761696e20746f6d6f72726f772e","id":5972,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5386:65:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_12de7e57f38ef3cb4742b8103ea2bfd9784ae418ac798dfc74c2fb64d1412e2f","typeString":"literal_string \"You have reached your daily limit of scans. Try again tomorrow.\""},"value":"You have reached your daily limit of scans. Try again tomorrow."}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_12de7e57f38ef3cb4742b8103ea2bfd9784ae418ac798dfc74c2fb64d1412e2f","typeString":"literal_string \"You have reached your daily limit of scans. Try again tomorrow.\""}],"id":5968,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"5348:7:21","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5973,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5348:104:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5974,"nodeType":"ExpressionStatement","src":"5348:104:21"},{"expression":{"id":5981,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":5975,"name":"scannedCoasters","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5756,"src":"5465:15:21","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_string_memory_ptr_$_t_bool_$_$","typeString":"mapping(address => mapping(string memory => bool))"}},"id":5978,"indexExpression":{"id":5976,"name":"_user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5927,"src":"5481:5:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5465:22:21","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_bool_$","typeString":"mapping(string memory => bool)"}},"id":5979,"indexExpression":{"id":5977,"name":"_coasterId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5931,"src":"5488:10:21","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5465:34:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":5980,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5502:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"5465:41:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5982,"nodeType":"ExpressionStatement","src":"5465:41:21"},{"expression":{"arguments":[{"id":5988,"name":"_user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5927,"src":"5561:5:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"expression":{"baseExpression":{"id":5983,"name":"coasters","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5744,"src":"5519:8:21","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_struct$_Coaster_$5736_storage_$","typeString":"mapping(string memory => struct NextRoundNFT.Coaster storage ref)"}},"id":5985,"indexExpression":{"id":5984,"name":"_coasterId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5931,"src":"5528:10:21","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5519:20:21","typeDescriptions":{"typeIdentifier":"t_struct$_Coaster_$5736_storage","typeString":"struct NextRoundNFT.Coaster storage ref"}},"id":5986,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5540:15:21","memberName":"scannersAccount","nodeType":"MemberAccess","referencedDeclaration":5735,"src":"5519:36:21","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":5987,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5556:4:21","memberName":"push","nodeType":"MemberAccess","src":"5519:41:21","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$attached_to$_t_array$_t_address_$dyn_storage_ptr_$","typeString":"function (address[] storage pointer,address)"}},"id":5989,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5519:48:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5990,"nodeType":"ExpressionStatement","src":"5519:48:21"},{"eventCall":{"arguments":[{"id":5992,"name":"_user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5927,"src":"5686:5:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5993,"name":"_coasterId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5931,"src":"5693:10:21","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}],"id":5991,"name":"CoasterScanned","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5772,"src":"5671:14:21","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_string_memory_ptr_$returns$__$","typeString":"function (address,string memory)"}},"id":5994,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5671:33:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5995,"nodeType":"EmitStatement","src":"5666:38:21"}]},"documentation":{"id":5925,"nodeType":"StructuredDocumentation","src":"4729:237:21","text":" @dev Record a scan and reward a user\n @param _user wallet address of user who is scanning\n @param _scanCount total scans for the user (resets daily)\n @param _coasterId ID of the coaster asset to scan"},"functionSelector":"4918c4f6","id":5997,"implemented":true,"kind":"function","modifiers":[{"id":5934,"kind":"modifierInvocation","modifierName":{"id":5933,"name":"onlyOwner","nameLocations":["5065:9:21"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"5065:9:21"},"nodeType":"ModifierInvocation","src":"5065:9:21"},{"id":5936,"kind":"modifierInvocation","modifierName":{"id":5935,"name":"nonReentrant","nameLocations":["5075:12:21"],"nodeType":"IdentifierPath","referencedDeclaration":1754,"src":"5075:12:21"},"nodeType":"ModifierInvocation","src":"5075:12:21"}],"name":"scanCoaster","nameLocation":"4981:11:21","nodeType":"FunctionDefinition","parameters":{"id":5932,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5927,"mutability":"mutable","name":"_user","nameLocation":"5001:5:21","nodeType":"VariableDeclaration","scope":5997,"src":"4993:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5926,"name":"address","nodeType":"ElementaryTypeName","src":"4993:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5929,"mutability":"mutable","name":"_scanCount","nameLocation":"5016:10:21","nodeType":"VariableDeclaration","scope":5997,"src":"5008:18:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5928,"name":"uint256","nodeType":"ElementaryTypeName","src":"5008:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5931,"mutability":"mutable","name":"_coasterId","nameLocation":"5044:10:21","nodeType":"VariableDeclaration","scope":5997,"src":"5028:26:21","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":5930,"name":"string","nodeType":"ElementaryTypeName","src":"5028:6:21","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4992:63:21"},"returnParameters":{"id":5937,"nodeType":"ParameterList","parameters":[],"src":"5088:0:21"},"scope":6109,"src":"4972:740:21","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":6069,"nodeType":"Block","src":"6086:560:21","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6017,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":6014,"name":"_user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6000,"src":"6124:5:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":6012,"name":"NRCoin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5703,"src":"6105:6:21","typeDescriptions":{"typeIdentifier":"t_contract$_INRCoin_$5690","typeString":"contract INRCoin"}},"id":6013,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6112:11:21","memberName":"userBalance","nodeType":"MemberAccess","referencedDeclaration":5675,"src":"6105:18:21","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":6015,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6105:25:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":6016,"name":"NRCPricePerNicknaming","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5709,"src":"6134:21:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6105:50:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e73756666696369656e742062616c616e63652e","id":6018,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6157:23:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_7572e40391d07d4b91d51e72cb8caa5f33f56b2b616c219ac11e2b95b18edce9","typeString":"literal_string \"Insufficient balance.\""},"value":"Insufficient balance."}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_7572e40391d07d4b91d51e72cb8caa5f33f56b2b616c219ac11e2b95b18edce9","typeString":"literal_string \"Insufficient balance.\""}],"id":6011,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"6097:7:21","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6019,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6097:84:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6020,"nodeType":"ExpressionStatement","src":"6097:84:21"},{"assignments":[6023],"declarations":[{"constant":false,"id":6023,"mutability":"mutable","name":"coaster","nameLocation":"6210:7:21","nodeType":"VariableDeclaration","scope":6069,"src":"6194:23:21","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Coaster_$5736_storage_ptr","typeString":"struct NextRoundNFT.Coaster"},"typeName":{"id":6022,"nodeType":"UserDefinedTypeName","pathNode":{"id":6021,"name":"Coaster","nameLocations":["6194:7:21"],"nodeType":"IdentifierPath","referencedDeclaration":5736,"src":"6194:7:21"},"referencedDeclaration":5736,"src":"6194:7:21","typeDescriptions":{"typeIdentifier":"t_struct$_Coaster_$5736_storage_ptr","typeString":"struct NextRoundNFT.Coaster"}},"visibility":"internal"}],"id":6027,"initialValue":{"baseExpression":{"id":6024,"name":"coasters","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5744,"src":"6220:8:21","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_struct$_Coaster_$5736_storage_$","typeString":"mapping(string memory => struct NextRoundNFT.Coaster storage ref)"}},"id":6026,"indexExpression":{"id":6025,"name":"_assetId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6002,"src":"6229:8:21","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6220:18:21","typeDescriptions":{"typeIdentifier":"t_struct$_Coaster_$5736_storage","typeString":"struct NextRoundNFT.Coaster storage ref"}},"nodeType":"VariableDeclarationStatement","src":"6194:44:21"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6036,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"expression":{"id":6031,"name":"coaster","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6023,"src":"6263:7:21","typeDescriptions":{"typeIdentifier":"t_struct$_Coaster_$5736_storage_ptr","typeString":"struct NextRoundNFT.Coaster storage pointer"}},"id":6032,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6271:8:21","memberName":"nickname","nodeType":"MemberAccess","referencedDeclaration":5730,"src":"6263:16:21","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"id":6030,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6257:5:21","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":6029,"name":"bytes","nodeType":"ElementaryTypeName","src":"6257:5:21","typeDescriptions":{}}},"id":6033,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6257:23:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes storage pointer"}},"id":6034,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6281:6:21","memberName":"length","nodeType":"MemberAccess","src":"6257:30:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":6035,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6291:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6257:35:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"417373657420616c7265616479206e616d6564","id":6037,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6294:21:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_7495b1928eec20e7a70fd948a18c2ffd1e105a6b9600a16103e7a35603da4874","typeString":"literal_string \"Asset already named\""},"value":"Asset already named"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_7495b1928eec20e7a70fd948a18c2ffd1e105a6b9600a16103e7a35603da4874","typeString":"literal_string \"Asset already named\""}],"id":6028,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"6249:7:21","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6038,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6249:67:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6039,"nodeType":"ExpressionStatement","src":"6249:67:21"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":6047,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":6041,"name":"coaster","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6023,"src":"6335:7:21","typeDescriptions":{"typeIdentifier":"t_struct$_Coaster_$5736_storage_ptr","typeString":"struct NextRoundNFT.Coaster storage pointer"}},"id":6042,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6343:5:21","memberName":"owner","nodeType":"MemberAccess","referencedDeclaration":5728,"src":"6335:13:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":6045,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6360:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":6044,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6352:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":6043,"name":"address","nodeType":"ElementaryTypeName","src":"6352:7:21","typeDescriptions":{}}},"id":6046,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6352:10:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6335:27:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"436f617374657220646f6573206e6f742065786973742e","id":6048,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6364:25:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_f7848f9f96a60d30aa251e250188b2e647f641f6dedaeaaa76f9f0f103da72a6","typeString":"literal_string \"Coaster does not exist.\""},"value":"Coaster does not exist."}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_f7848f9f96a60d30aa251e250188b2e647f641f6dedaeaaa76f9f0f103da72a6","typeString":"literal_string \"Coaster does not exist.\""}],"id":6040,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"6327:7:21","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6049,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6327:63:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6050,"nodeType":"ExpressionStatement","src":"6327:63:21"},{"expression":{"id":6055,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":6051,"name":"coaster","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6023,"src":"6403:7:21","typeDescriptions":{"typeIdentifier":"t_struct$_Coaster_$5736_storage_ptr","typeString":"struct NextRoundNFT.Coaster storage pointer"}},"id":6053,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"6411:8:21","memberName":"nickname","nodeType":"MemberAccess","referencedDeclaration":5730,"src":"6403:16:21","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":6054,"name":"_nickname","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6004,"src":"6422:9:21","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}},"src":"6403:28:21","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":6056,"nodeType":"ExpressionStatement","src":"6403:28:21"},{"expression":{"id":6061,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":6057,"name":"coaster","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6023,"src":"6442:7:21","typeDescriptions":{"typeIdentifier":"t_struct$_Coaster_$5736_storage_ptr","typeString":"struct NextRoundNFT.Coaster storage pointer"}},"id":6059,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"6450:12:21","memberName":"namerAccount","nodeType":"MemberAccess","referencedDeclaration":5732,"src":"6442:20:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":6060,"name":"_user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6000,"src":"6465:5:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6442:28:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":6062,"nodeType":"ExpressionStatement","src":"6442:28:21"},{"eventCall":{"arguments":[{"id":6064,"name":"_user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6000,"src":"6611:5:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":6065,"name":"_assetId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6002,"src":"6618:8:21","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}},{"id":6066,"name":"_nickname","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6004,"src":"6628:9:21","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"},{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}],"id":6063,"name":"CoasterNamed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5780,"src":"6598:12:21","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$","typeString":"function (address,string memory,string memory)"}},"id":6067,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6598:40:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6068,"nodeType":"EmitStatement","src":"6593:45:21"}]},"documentation":{"id":5998,"nodeType":"StructuredDocumentation","src":"5720:203:21","text":" @dev Nickname NFT by first scanner\n @param _user Wallet address of first scanner\n @param _assetId ID of the NFT asset to name\n @param _nickname Nick name to give NFT"},"functionSelector":"ee84eb77","id":6070,"implemented":true,"kind":"function","modifiers":[{"id":6007,"kind":"modifierInvocation","modifierName":{"id":6006,"name":"onlyOwner","nameLocations":["6063:9:21"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"6063:9:21"},"nodeType":"ModifierInvocation","src":"6063:9:21"},{"id":6009,"kind":"modifierInvocation","modifierName":{"id":6008,"name":"nonReentrant","nameLocations":["6073:12:21"],"nodeType":"IdentifierPath","referencedDeclaration":1754,"src":"6073:12:21"},"nodeType":"ModifierInvocation","src":"6073:12:21"}],"name":"nicknameNFT","nameLocation":"5938:11:21","nodeType":"FunctionDefinition","parameters":{"id":6005,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6000,"mutability":"mutable","name":"_user","nameLocation":"5968:5:21","nodeType":"VariableDeclaration","scope":6070,"src":"5960:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5999,"name":"address","nodeType":"ElementaryTypeName","src":"5960:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6002,"mutability":"mutable","name":"_assetId","nameLocation":"6001:8:21","nodeType":"VariableDeclaration","scope":6070,"src":"5985:24:21","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":6001,"name":"string","nodeType":"ElementaryTypeName","src":"5985:6:21","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":6004,"mutability":"mutable","name":"_nickname","nameLocation":"6037:9:21","nodeType":"VariableDeclaration","scope":6070,"src":"6021:25:21","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":6003,"name":"string","nodeType":"ElementaryTypeName","src":"6021:6:21","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"5949:104:21"},"returnParameters":{"id":6010,"nodeType":"ParameterList","parameters":[],"src":"6086:0:21"},"scope":6109,"src":"5929:717:21","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":6107,"nodeType":"Block","src":"6893:232:21","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":6094,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"baseExpression":{"id":6084,"name":"ownedCoasters","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5750,"src":"6912:13:21","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_string_memory_ptr_$_t_bool_$_$","typeString":"mapping(address => mapping(string memory => bool))"}},"id":6086,"indexExpression":{"id":6085,"name":"_user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6073,"src":"6926:5:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6912:20:21","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_bool_$","typeString":"mapping(string memory => bool)"}},"id":6088,"indexExpression":{"id":6087,"name":"_coasterId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6075,"src":"6933:10:21","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6912:32:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"baseExpression":{"baseExpression":{"id":6089,"name":"scannedCoasters","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5756,"src":"6948:15:21","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_string_memory_ptr_$_t_bool_$_$","typeString":"mapping(address => mapping(string memory => bool))"}},"id":6091,"indexExpression":{"id":6090,"name":"_user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6073,"src":"6964:5:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6948:22:21","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_bool_$","typeString":"mapping(string memory => bool)"}},"id":6093,"indexExpression":{"id":6092,"name":"_coasterId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6075,"src":"6971:10:21","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6948:34:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6912:70:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"436f6173746572206173736574206e6f7420666f756e6420696e20796f757220636f6c6c656374696f6e2e","id":6095,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6984:45:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_161894f84106194f60134a235ea6785ea039b3b0499813672d7f05567d18263d","typeString":"literal_string \"Coaster asset not found in your collection.\""},"value":"Coaster asset not found in your collection."}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_161894f84106194f60134a235ea6785ea039b3b0499813672d7f05567d18263d","typeString":"literal_string \"Coaster asset not found in your collection.\""}],"id":6083,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"6904:7:21","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6096,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6904:126:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6097,"nodeType":"ExpressionStatement","src":"6904:126:21"},{"assignments":[6100],"declarations":[{"constant":false,"id":6100,"mutability":"mutable","name":"_coaster","nameLocation":"7058:8:21","nodeType":"VariableDeclaration","scope":6107,"src":"7043:23:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Coaster_$5736_memory_ptr","typeString":"struct NextRoundNFT.Coaster"},"typeName":{"id":6099,"nodeType":"UserDefinedTypeName","pathNode":{"id":6098,"name":"Coaster","nameLocations":["7043:7:21"],"nodeType":"IdentifierPath","referencedDeclaration":5736,"src":"7043:7:21"},"referencedDeclaration":5736,"src":"7043:7:21","typeDescriptions":{"typeIdentifier":"t_struct$_Coaster_$5736_storage_ptr","typeString":"struct NextRoundNFT.Coaster"}},"visibility":"internal"}],"id":6104,"initialValue":{"baseExpression":{"id":6101,"name":"coasters","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5744,"src":"7069:8:21","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_struct$_Coaster_$5736_storage_$","typeString":"mapping(string memory => struct NextRoundNFT.Coaster storage ref)"}},"id":6103,"indexExpression":{"id":6102,"name":"_coasterId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6075,"src":"7078:10:21","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7069:20:21","typeDescriptions":{"typeIdentifier":"t_struct$_Coaster_$5736_storage","typeString":"struct NextRoundNFT.Coaster storage ref"}},"nodeType":"VariableDeclarationStatement","src":"7043:46:21"},{"expression":{"id":6105,"name":"_coaster","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6100,"src":"7109:8:21","typeDescriptions":{"typeIdentifier":"t_struct$_Coaster_$5736_memory_ptr","typeString":"struct NextRoundNFT.Coaster memory"}},"functionReturnParameters":6082,"id":6106,"nodeType":"Return","src":"7102:15:21"}]},"documentation":{"id":6071,"nodeType":"StructuredDocumentation","src":"6654:127:21","text":" @dev Get NFT detail\n @param _user Wallet of user\n @param _coasterId Coaster ID to fetch by user"},"functionSelector":"9199aeca","id":6108,"implemented":true,"kind":"function","modifiers":[{"id":6078,"kind":"modifierInvocation","modifierName":{"id":6077,"name":"onlyOwner","nameLocations":["6858:9:21"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"6858:9:21"},"nodeType":"ModifierInvocation","src":"6858:9:21"}],"name":"getNFT","nameLocation":"6796:6:21","nodeType":"FunctionDefinition","parameters":{"id":6076,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6073,"mutability":"mutable","name":"_user","nameLocation":"6811:5:21","nodeType":"VariableDeclaration","scope":6108,"src":"6803:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6072,"name":"address","nodeType":"ElementaryTypeName","src":"6803:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6075,"mutability":"mutable","name":"_coasterId","nameLocation":"6832:10:21","nodeType":"VariableDeclaration","scope":6108,"src":"6818:24:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":6074,"name":"string","nodeType":"ElementaryTypeName","src":"6818:6:21","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"6802:41:21"},"returnParameters":{"id":6082,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6081,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6108,"src":"6877:14:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Coaster_$5736_memory_ptr","typeString":"struct NextRoundNFT.Coaster"},"typeName":{"id":6080,"nodeType":"UserDefinedTypeName","pathNode":{"id":6079,"name":"Coaster","nameLocations":["6877:7:21"],"nodeType":"IdentifierPath","referencedDeclaration":5736,"src":"6877:7:21"},"referencedDeclaration":5736,"src":"6877:7:21","typeDescriptions":{"typeIdentifier":"t_struct$_Coaster_$5736_storage_ptr","typeString":"struct NextRoundNFT.Coaster"}},"visibility":"internal"}],"src":"6876:16:21"},"scope":6109,"src":"6787:338:21","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":6110,"src":"557:6571:21","usedErrors":[13,18,227,232,241,246,251,258,263,268,1735],"usedEvents":[24,167,174,1289,1298,1307,5760,5766,5772,5780]}],"src":"40:7088:21"},"id":21}},"contracts":{"@openzeppelin/contracts/access/Ownable.sol":{"Ownable":{"abi":[{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"owner()":"8da5cb5b","renounceOwnership()":"715018a6","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}"}},"@openzeppelin/contracts/interfaces/IERC4906.sol":{"IERC4906":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"_fromTokenId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"_toTokenId","type":"uint256"}],"name":"BatchMetadataUpdate","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"_tokenId","type":"uint256"}],"name":"MetadataUpdate","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"balance","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"operator","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"owner","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","ownerOf(uint256)":"6352211e","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_fromTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_toTokenId\",\"type\":\"uint256\"}],\"name\":\"BatchMetadataUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"MetadataUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"BatchMetadataUpdate(uint256,uint256)\":{\"details\":\"This event emits when the metadata of a range of tokens is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFTs.\"},\"MetadataUpdate(uint256)\":{\"details\":\"This event emits when the metadata of a token is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFT.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC-721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"title\":\"ERC-721 Metadata Update Extension\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/IERC4906.sol\":\"IERC4906\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"@openzeppelin/contracts/interfaces/IERC4906.sol\":{\"keccak256\":\"0x1b8691e244f6e11d987459993671db0af33e6a29f7805eac6a9925cc6b601957\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a9e2a5efc2e14e98f5fe91bbab769199b4987a40dd3b96075b04957fda2ae80f\",\"dweb:/ipfs/QmbAjrSSVBiJ6MbgF7Jkr53m674iGMZ6haWbbRrWDZJraK\"]},\"@openzeppelin/contracts/interfaces/IERC721.sol\":{\"keccak256\":\"0xc4d7ebf63eb2f6bf3fee1b6c0ee775efa9f31b4843a5511d07eea147e212932d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://01c66a2fad66bc710db7510419a7eee569b40b67cd9f01b70a3fc90d6f76c03b\",\"dweb:/ipfs/QmT1CjJZq4eTNA4nu8E9ZrWfaZu6ReUsDbjcK8DbEFqwx5\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5dc63d1c6a12fe1b17793e1745877b2fcbe1964c3edfd0a482fac21ca8f18261\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6b7f97c5960a50fd1822cb298551ffc908e37b7893a68d6d08bce18a11cb0f11\",\"dweb:/ipfs/QmQQvxBytoY1eBt3pRQDmvH2hZ2yjhs12YqVfzGm7KSURq\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}"}},"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"IERC1155Errors":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC1155InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC1155InvalidApprover","type":"error"},{"inputs":[{"internalType":"uint256","name":"idsLength","type":"uint256"},{"internalType":"uint256","name":"valuesLength","type":"uint256"}],"name":"ERC1155InvalidArrayLength","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC1155InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC1155InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC1155InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC1155MissingApprovalForAll","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}"},"IERC20Errors":{"abi":[{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}"},"IERC721Errors":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721IncorrectOwner","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721InsufficientApproval","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC721InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC721InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721InvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC721InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC721InvalidSender","type":"error"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721NonexistentToken","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC721/ERC721.sol":{"ERC721":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721IncorrectOwner","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721InsufficientApproval","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC721InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC721InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721InvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC721InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC721InvalidSender","type":"error"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721NonexistentToken","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"tokenURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","name()":"06fdde03","ownerOf(uint256)":"6352211e","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","symbol()":"95d89b41","tokenURI(uint256)":"c87b56dd","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC-721] Non-Fungible Token Standard, including the Metadata extension, but not including the Enumerable extension, which is available separately as {ERC721Enumerable}.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"constructor\":{\"details\":\"Initializes the contract by setting a `name` and a `symbol` to the token collection.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":\"ERC721\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x39ed367e54765186281efcfe83e47cf0ad62cc879f10e191360712507125f29a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2c5ae6d85bd48cca8d6d2fcec8c63efd86f56f8a5832577a47e403ce0e65cb09\",\"dweb:/ipfs/QmUtcS8AbRSWhuc61puYet58os8FvSqm329ChoW8wwZXZk\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5dc63d1c6a12fe1b17793e1745877b2fcbe1964c3edfd0a482fac21ca8f18261\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6b7f97c5960a50fd1822cb298551ffc908e37b7893a68d6d08bce18a11cb0f11\",\"dweb:/ipfs/QmQQvxBytoY1eBt3pRQDmvH2hZ2yjhs12YqVfzGm7KSURq\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xb5afb8e8eebc4d1c6404df2f5e1e6d2c3d24fd01e5dfc855314951ecfaae462d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://78586466c424f076c6a2a551d848cfbe3f7c49e723830807598484a1047b3b34\",\"dweb:/ipfs/Qmb717ovcFxm7qgNKEShiV6M9SPR3v1qnNpAGH84D6w29p\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x37d1aaaa5a2908a09e9dcf56a26ddf762ecf295afb5964695937344fc6802ce1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed0bfc1b92153c5000e50f4021367b931bbe96372ac6facec3c4961b72053d02\",\"dweb:/ipfs/Qmbwp8VDerjS5SV1quwHH1oMXxPQ93fzfLVqJ2RCqbowGE\"]},\"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol\":{\"keccak256\":\"0x40399695922383778f9f540a620bec475a2f8e0f08d41f0005682842e28a9855\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://746d295e403931aeb9d6065fd5a0871f43ab5459814a60623611e4b6641a09fd\",\"dweb:/ipfs/QmWrgT8YJrQ9FfD1o3YYArwo57e7MGdpFKuM74qJ4qE34E\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x725209b582291bb83058e3078624b53d15a133f7401c30295e7f3704181d2aed\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0564ddb19c6d870e27b789d8f985283d815267ad7224883c2d5243c8bacc7dc0\",\"dweb:/ipfs/QmeC953H4sj88ZRFdJNFdmpf7J9SksP1wK4jyMHLo66z49\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xddce8e17e3d3f9ed818b4f4c4478a8262aab8b11ed322f1bf5ed705bb4bd97fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8084aa71a4cc7d2980972412a88fe4f114869faea3fefa5436431644eb5c0287\",\"dweb:/ipfs/Qmbqfs5dRdPvHVKY8kTaeyc65NdqXRQwRK7h9s5UJEhD1p\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa00be322d7db5786750ce0ac7e2f5b633ac30a5ed5fa1ced1e74acfc19acecea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c84e822f87cbdc4082533b626667b6928715bb2b1e8e7eb96954cebb9e38c8d\",\"dweb:/ipfs/QmZmy9dgxLTerBAQDuuHqbL6EpgRxddqgv5KmwpXYVbKz1\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC721/IERC721.sol":{"IERC721":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"balance","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"operator","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"owner","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","ownerOf(uint256)":"6352211e","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC-721 compliant contract.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC-721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":\"IERC721\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5dc63d1c6a12fe1b17793e1745877b2fcbe1964c3edfd0a482fac21ca8f18261\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6b7f97c5960a50fd1822cb298551ffc908e37b7893a68d6d08bce18a11cb0f11\",\"dweb:/ipfs/QmQQvxBytoY1eBt3pRQDmvH2hZ2yjhs12YqVfzGm7KSURq\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol":{"IERC721Receiver":{"abi":[{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"from","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"onERC721Received","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"onERC721Received(address,address,uint256,bytes)":"150b7a02"}},"metadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for any contract that wants to support safeTransfers from ERC-721 asset contracts.\",\"kind\":\"dev\",\"methods\":{\"onERC721Received(address,address,uint256,bytes)\":{\"details\":\"Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\"}},\"title\":\"ERC-721 token receiver interface\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":\"IERC721Receiver\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xb5afb8e8eebc4d1c6404df2f5e1e6d2c3d24fd01e5dfc855314951ecfaae462d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://78586466c424f076c6a2a551d848cfbe3f7c49e723830807598484a1047b3b34\",\"dweb:/ipfs/Qmb717ovcFxm7qgNKEShiV6M9SPR3v1qnNpAGH84D6w29p\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol":{"ERC721URIStorage":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721IncorrectOwner","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721InsufficientApproval","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC721InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC721InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721InvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC721InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC721InvalidSender","type":"error"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721NonexistentToken","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"_fromTokenId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"_toTokenId","type":"uint256"}],"name":"BatchMetadataUpdate","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"_tokenId","type":"uint256"}],"name":"MetadataUpdate","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"tokenURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","name()":"06fdde03","ownerOf(uint256)":"6352211e","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","symbol()":"95d89b41","tokenURI(uint256)":"c87b56dd","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_fromTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_toTokenId\",\"type\":\"uint256\"}],\"name\":\"BatchMetadataUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"MetadataUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"ERC-721 token with storage based token URI management.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"BatchMetadataUpdate(uint256,uint256)\":{\"details\":\"This event emits when the metadata of a range of tokens is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFTs.\"},\"MetadataUpdate(uint256)\":{\"details\":\"This event emits when the metadata of a token is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFT.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":\"ERC721URIStorage\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"@openzeppelin/contracts/interfaces/IERC4906.sol\":{\"keccak256\":\"0x1b8691e244f6e11d987459993671db0af33e6a29f7805eac6a9925cc6b601957\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a9e2a5efc2e14e98f5fe91bbab769199b4987a40dd3b96075b04957fda2ae80f\",\"dweb:/ipfs/QmbAjrSSVBiJ6MbgF7Jkr53m674iGMZ6haWbbRrWDZJraK\"]},\"@openzeppelin/contracts/interfaces/IERC721.sol\":{\"keccak256\":\"0xc4d7ebf63eb2f6bf3fee1b6c0ee775efa9f31b4843a5511d07eea147e212932d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://01c66a2fad66bc710db7510419a7eee569b40b67cd9f01b70a3fc90d6f76c03b\",\"dweb:/ipfs/QmT1CjJZq4eTNA4nu8E9ZrWfaZu6ReUsDbjcK8DbEFqwx5\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x39ed367e54765186281efcfe83e47cf0ad62cc879f10e191360712507125f29a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2c5ae6d85bd48cca8d6d2fcec8c63efd86f56f8a5832577a47e403ce0e65cb09\",\"dweb:/ipfs/QmUtcS8AbRSWhuc61puYet58os8FvSqm329ChoW8wwZXZk\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5dc63d1c6a12fe1b17793e1745877b2fcbe1964c3edfd0a482fac21ca8f18261\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6b7f97c5960a50fd1822cb298551ffc908e37b7893a68d6d08bce18a11cb0f11\",\"dweb:/ipfs/QmQQvxBytoY1eBt3pRQDmvH2hZ2yjhs12YqVfzGm7KSURq\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xb5afb8e8eebc4d1c6404df2f5e1e6d2c3d24fd01e5dfc855314951ecfaae462d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://78586466c424f076c6a2a551d848cfbe3f7c49e723830807598484a1047b3b34\",\"dweb:/ipfs/Qmb717ovcFxm7qgNKEShiV6M9SPR3v1qnNpAGH84D6w29p\"]},\"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":{\"keccak256\":\"0xe52813067c6d5838eeb34e1da8beb2514371a7d778266013b04ca3be1dda7100\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://53fb552d625eb5f60ef9dce439c826bb780952cbbafc985db6e48ac6382a5585\",\"dweb:/ipfs/QmSEbLqEWN1SqsWekfqt6RWC4oEajFWtZ5j8i6gKaGdtKr\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x37d1aaaa5a2908a09e9dcf56a26ddf762ecf295afb5964695937344fc6802ce1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed0bfc1b92153c5000e50f4021367b931bbe96372ac6facec3c4961b72053d02\",\"dweb:/ipfs/Qmbwp8VDerjS5SV1quwHH1oMXxPQ93fzfLVqJ2RCqbowGE\"]},\"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol\":{\"keccak256\":\"0x40399695922383778f9f540a620bec475a2f8e0f08d41f0005682842e28a9855\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://746d295e403931aeb9d6065fd5a0871f43ab5459814a60623611e4b6641a09fd\",\"dweb:/ipfs/QmWrgT8YJrQ9FfD1o3YYArwo57e7MGdpFKuM74qJ4qE34E\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x725209b582291bb83058e3078624b53d15a133f7401c30295e7f3704181d2aed\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0564ddb19c6d870e27b789d8f985283d815267ad7224883c2d5243c8bacc7dc0\",\"dweb:/ipfs/QmeC953H4sj88ZRFdJNFdmpf7J9SksP1wK4jyMHLo66z49\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xddce8e17e3d3f9ed818b4f4c4478a8262aab8b11ed322f1bf5ed705bb4bd97fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8084aa71a4cc7d2980972412a88fe4f114869faea3fefa5436431644eb5c0287\",\"dweb:/ipfs/Qmbqfs5dRdPvHVKY8kTaeyc65NdqXRQwRK7h9s5UJEhD1p\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa00be322d7db5786750ce0ac7e2f5b633ac30a5ed5fa1ced1e74acfc19acecea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c84e822f87cbdc4082533b626667b6928715bb2b1e8e7eb96954cebb9e38c8d\",\"dweb:/ipfs/QmZmy9dgxLTerBAQDuuHqbL6EpgRxddqgv5KmwpXYVbKz1\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol":{"IERC721Metadata":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"balance","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"operator","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"owner","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"tokenURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","name()":"06fdde03","ownerOf(uint256)":"6352211e","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","symbol()":"95d89b41","tokenURI(uint256)":"c87b56dd","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"See https://eips.ethereum.org/EIPS/eip-721\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"name()\":{\"details\":\"Returns the token collection name.\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC-721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"symbol()\":{\"details\":\"Returns the token collection symbol.\"},\"tokenURI(uint256)\":{\"details\":\"Returns the Uniform Resource Identifier (URI) for `tokenId` token.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"title\":\"ERC-721 Non-Fungible Token Standard, optional metadata extension\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":\"IERC721Metadata\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5dc63d1c6a12fe1b17793e1745877b2fcbe1964c3edfd0a482fac21ca8f18261\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6b7f97c5960a50fd1822cb298551ffc908e37b7893a68d6d08bce18a11cb0f11\",\"dweb:/ipfs/QmQQvxBytoY1eBt3pRQDmvH2hZ2yjhs12YqVfzGm7KSURq\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x37d1aaaa5a2908a09e9dcf56a26ddf762ecf295afb5964695937344fc6802ce1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed0bfc1b92153c5000e50f4021367b931bbe96372ac6facec3c4961b72053d02\",\"dweb:/ipfs/Qmbwp8VDerjS5SV1quwHH1oMXxPQ93fzfLVqJ2RCqbowGE\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol":{"ERC721Utils":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212201e28f2b0f8e6139c6f6c8666a834e07de42b6927bfd8f607beaefe687827e97e64736f6c634300081b0033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x1E 0x28 CALLCODE 0xB0 0xF8 0xE6 SGT SWAP13 PUSH16 0x6C8666A834E07DE42B6927BFD8F607BE 0xAE INVALID PUSH9 0x7827E97E64736F6C63 NUMBER STOP ADDMOD SHL STOP CALLER ","sourceMap":"431:1480:10:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;431:1480:10;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212201e28f2b0f8e6139c6f6c8666a834e07de42b6927bfd8f607beaefe687827e97e64736f6c634300081b0033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x1E 0x28 CALLCODE 0xB0 0xF8 0xE6 SGT SWAP13 PUSH16 0x6C8666A834E07DE42B6927BFD8F607BE 0xAE INVALID PUSH9 0x7827E97E64736F6C63 NUMBER STOP ADDMOD SHL STOP CALLER ","sourceMap":"431:1480:10:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library that provide common ERC-721 utility functions. See https://eips.ethereum.org/EIPS/eip-721[ERC-721]. _Available since v5.1._\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol\":\"ERC721Utils\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xb5afb8e8eebc4d1c6404df2f5e1e6d2c3d24fd01e5dfc855314951ecfaae462d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://78586466c424f076c6a2a551d848cfbe3f7c49e723830807598484a1047b3b34\",\"dweb:/ipfs/Qmb717ovcFxm7qgNKEShiV6M9SPR3v1qnNpAGH84D6w29p\"]},\"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol\":{\"keccak256\":\"0x40399695922383778f9f540a620bec475a2f8e0f08d41f0005682842e28a9855\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://746d295e403931aeb9d6065fd5a0871f43ab5459814a60623611e4b6641a09fd\",\"dweb:/ipfs/QmWrgT8YJrQ9FfD1o3YYArwo57e7MGdpFKuM74qJ4qE34E\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Context.sol":{"Context":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Panic.sol":{"Panic":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220cebe40d49468f4eea75f3ed3b43bd0a1573e3acdb9858c097754b7173807b75364736f6c634300081b0033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCE 0xBE BLOCKHASH 0xD4 SWAP5 PUSH9 0xF4EEA75F3ED3B43BD0 LOG1 JUMPI RETURNDATACOPY GASPRICE 0xCD 0xB9 DUP6 DUP13 MULMOD PUSH24 0x54B7173807B75364736F6C634300081B0033000000000000 ","sourceMap":"657:1315:12:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;657:1315:12;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220cebe40d49468f4eea75f3ed3b43bd0a1573e3acdb9858c097754b7173807b75364736f6c634300081b0033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCE 0xBE BLOCKHASH 0xD4 SWAP5 PUSH9 0xF4EEA75F3ED3B43BD0 LOG1 JUMPI RETURNDATACOPY GASPRICE 0xCD 0xB9 DUP6 DUP13 MULMOD PUSH24 0x54B7173807B75364736F6C634300081B0033000000000000 ","sourceMap":"657:1315:12:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Helper library for emitting standardized panic codes. ```solidity contract Example {      using Panic for uint256;      // Use any of the declared internal constants      function foo() { Panic.GENERIC.panic(); }      // Alternatively      function foo() { Panic.panic(Panic.GENERIC); } } ``` Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil]. _Available since v5.1._\",\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"ARRAY_OUT_OF_BOUNDS\":{\"details\":\"array out of bounds access\"},\"ASSERT\":{\"details\":\"used by the assert() builtin\"},\"DIVISION_BY_ZERO\":{\"details\":\"division or modulo by zero\"},\"EMPTY_ARRAY_POP\":{\"details\":\"empty array pop\"},\"ENUM_CONVERSION_ERROR\":{\"details\":\"enum conversion error\"},\"GENERIC\":{\"details\":\"generic / unspecified error\"},\"INVALID_INTERNAL_FUNCTION\":{\"details\":\"calling invalid internal function\"},\"RESOURCE_ERROR\":{\"details\":\"resource error (too large allocation or too large array)\"},\"STORAGE_ENCODING_ERROR\":{\"details\":\"invalid encoding in storage\"},\"UNDER_OVERFLOW\":{\"details\":\"arithmetic underflow or overflow\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Panic.sol\":\"Panic\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/ReentrancyGuard.sol":{"ReentrancyGuard":{"abi":[{"inputs":[],"name":"ReentrancyGuardReentrantCall","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If EIP-1153 (transient storage) is available on the chain you're deploying at, consider using {ReentrancyGuardTransient} instead. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"errors\":{\"ReentrancyGuardReentrantCall()\":[{\"details\":\"Unauthorized reentrant call.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0x11a5a79827df29e915a12740caf62fe21ebe27c08c9ae3e09abe9ee3ba3866d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3cf0c69ab827e3251db9ee6a50647d62c90ba580a4d7bbff21f2bea39e7b2f4a\",\"dweb:/ipfs/QmZiKwtKU1SBX4RGfQtY7PZfiapbbu6SZ9vizGQD9UHjRA\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Strings.sol":{"Strings":{"abi":[{"inputs":[{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"length","type":"uint256"}],"name":"StringsInsufficientHexLength","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212205f96f1394358b8ea8953117e745530f3c8760036e0cfc01901151934dc043b5264736f6c634300081b0033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH0 SWAP7 CALL CODECOPY NUMBER PC 0xB8 0xEA DUP10 MSTORE8 GT PUSH31 0x745530F3C8760036E0CFC01901151934DC043B5264736F6C634300081B0033 ","sourceMap":"251:3680:14:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;251:3680:14;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212205f96f1394358b8ea8953117e745530f3c8760036e0cfc01901151934dc043b5264736f6c634300081b0033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH0 SWAP7 CALL CODECOPY NUMBER PC 0xB8 0xEA DUP10 MSTORE8 GT PUSH31 0x745530F3C8760036E0CFC01901151934DC043B5264736F6C634300081B0033 ","sourceMap":"251:3680:14:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"StringsInsufficientHexLength\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"String operations.\",\"errors\":{\"StringsInsufficientHexLength(uint256,uint256)\":[{\"details\":\"The `value` string doesn't fit in the specified `length`.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Strings.sol\":\"Strings\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x725209b582291bb83058e3078624b53d15a133f7401c30295e7f3704181d2aed\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0564ddb19c6d870e27b789d8f985283d815267ad7224883c2d5243c8bacc7dc0\",\"dweb:/ipfs/QmeC953H4sj88ZRFdJNFdmpf7J9SksP1wK4jyMHLo66z49\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa00be322d7db5786750ce0ac7e2f5b633ac30a5ed5fa1ced1e74acfc19acecea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c84e822f87cbdc4082533b626667b6928715bb2b1e8e7eb96954cebb9e38c8d\",\"dweb:/ipfs/QmZmy9dgxLTerBAQDuuHqbL6EpgRxddqgv5KmwpXYVbKz1\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"ERC165":{"abi":[{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xddce8e17e3d3f9ed818b4f4c4478a8262aab8b11ed322f1bf5ed705bb4bd97fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8084aa71a4cc7d2980972412a88fe4f114869faea3fefa5436431644eb5c0287\",\"dweb:/ipfs/Qmbqfs5dRdPvHVKY8kTaeyc65NdqXRQwRK7h9s5UJEhD1p\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"IERC165":{"abi":[{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/math/Math.sol":{"Math":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220b3ac383bcb138082b5b8cd3912674c0d32367de90de8227cf9cf233b77b8a5fe64736f6c634300081b0033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB3 0xAC CODESIZE EXTCODESIZE 0xCB SGT DUP1 DUP3 0xB5 0xB8 0xCD CODECOPY SLT PUSH8 0x4C0D32367DE90DE8 0x22 PUSH29 0xF9CF233B77B8A5FE64736F6C634300081B003300000000000000000000 ","sourceMap":"281:28026:17:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;281:28026:17;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220b3ac383bcb138082b5b8cd3912674c0d32367de90de8227cf9cf233b77b8a5fe64736f6c634300081b0033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB3 0xAC CODESIZE EXTCODESIZE 0xCB SGT DUP1 DUP3 0xB5 0xB8 0xCD CODECOPY SLT PUSH8 0x4C0D32367DE90DE8 0x22 PUSH29 0xF9CF233B77B8A5FE64736F6C634300081B003300000000000000000000 ","sourceMap":"281:28026:17:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa00be322d7db5786750ce0ac7e2f5b633ac30a5ed5fa1ced1e74acfc19acecea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c84e822f87cbdc4082533b626667b6928715bb2b1e8e7eb96954cebb9e38c8d\",\"dweb:/ipfs/QmZmy9dgxLTerBAQDuuHqbL6EpgRxddqgv5KmwpXYVbKz1\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"SafeCast":{"abi":[{"inputs":[{"internalType":"uint8","name":"bits","type":"uint8"},{"internalType":"int256","name":"value","type":"int256"}],"name":"SafeCastOverflowedIntDowncast","type":"error"},{"inputs":[{"internalType":"int256","name":"value","type":"int256"}],"name":"SafeCastOverflowedIntToUint","type":"error"},{"inputs":[{"internalType":"uint8","name":"bits","type":"uint8"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"SafeCastOverflowedUintDowncast","type":"error"},{"inputs":[{"internalType":"uint256","name":"value","type":"uint256"}],"name":"SafeCastOverflowedUintToInt","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212209cb9a6abeec825f6bbc58223d0da4f96cdc91cab8b22351cb03cad252044b50f64736f6c634300081b0033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP13 0xB9 0xA6 0xAB 0xEE 0xC8 0x25 0xF6 0xBB 0xC5 DUP3 0x23 0xD0 0xDA 0x4F SWAP7 0xCD 0xC9 SHR 0xAB DUP12 0x22 CALLDATALOAD SHR 0xB0 EXTCODECOPY 0xAD 0x25 KECCAK256 PREVRANDAO 0xB5 0xF PUSH5 0x736F6C6343 STOP ADDMOD SHL STOP CALLER ","sourceMap":"769:34173:18:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;769:34173:18;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212209cb9a6abeec825f6bbc58223d0da4f96cdc91cab8b22351cb03cad252044b50f64736f6c634300081b0033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP13 0xB9 0xA6 0xAB 0xEE 0xC8 0x25 0xF6 0xBB 0xC5 DUP3 0x23 0xD0 0xDA 0x4F SWAP7 0xCD 0xC9 SHR 0xAB DUP12 0x22 CALLDATALOAD SHR 0xB0 EXTCODECOPY 0xAD 0x25 KECCAK256 PREVRANDAO 0xB5 0xF PUSH5 0x736F6C6343 STOP ADDMOD SHL STOP CALLER ","sourceMap":"769:34173:18:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"bits\",\"type\":\"uint8\"},{\"internalType\":\"int256\",\"name\":\"value\",\"type\":\"int256\"}],\"name\":\"SafeCastOverflowedIntDowncast\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"value\",\"type\":\"int256\"}],\"name\":\"SafeCastOverflowedIntToUint\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"bits\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"SafeCastOverflowedUintDowncast\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"SafeCastOverflowedUintToInt\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow checks. Downcasting from uint256/int256 in Solidity does not revert on overflow. This can easily result in undesired exploitation or bugs, since developers usually assume that overflows raise errors. `SafeCast` restores this intuition by reverting the transaction when such an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.\",\"errors\":{\"SafeCastOverflowedIntDowncast(uint8,int256)\":[{\"details\":\"Value doesn't fit in an int of `bits` size.\"}],\"SafeCastOverflowedIntToUint(int256)\":[{\"details\":\"An int value doesn't fit in an uint of `bits` size.\"}],\"SafeCastOverflowedUintDowncast(uint8,uint256)\":[{\"details\":\"Value doesn't fit in an uint of `bits` size.\"}],\"SafeCastOverflowedUintToInt(uint256)\":[{\"details\":\"An uint value doesn't fit in an int of `bits` size.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":\"SafeCast\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"SignedMath":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220952ef2c9829c2ccbd088b94ccd73a4e7b142eb2845f109198feb363ea8df4f5564736f6c634300081b0033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP6 0x2E CALLCODE 0xC9 DUP3 SWAP13 0x2C 0xCB 0xD0 DUP9 0xB9 0x4C 0xCD PUSH20 0xA4E7B142EB2845F109198FEB363EA8DF4F556473 PUSH16 0x6C634300081B00330000000000000000 ","sourceMap":"258:2354:19:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;258:2354:19;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220952ef2c9829c2ccbd088b94ccd73a4e7b142eb2845f109198feb363ea8df4f5564736f6c634300081b0033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP6 0x2E CALLCODE 0xC9 DUP3 SWAP13 0x2C 0xCB 0xD0 DUP9 0xB9 0x4C 0xCD PUSH20 0xA4E7B142EB2845F109198FEB363EA8DF4F556473 PUSH16 0x6C634300081B00330000000000000000 ","sourceMap":"258:2354:19:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard signed math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":\"SignedMath\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]}},\"version\":1}"}},"contracts/NextRoundNFT.sol":{"INRCoin":{"abi":[{"inputs":[{"internalType":"address","name":"_user","type":"address"},{"internalType":"uint256","name":"_amount","type":"uint256"}],"name":"chargeUser","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_user","type":"address"},{"internalType":"uint256","name":"_amount","type":"uint256"}],"name":"rewardUser","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"user","type":"address"}],"name":"userBalance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"chargeUser(address,uint256)":"44086669","rewardUser(address,uint256)":"e4e103dc","userBalance(address)":"0103c92b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"chargeUser\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"rewardUser\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"userBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/NextRoundNFT.sol\":\"INRCoin\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"@openzeppelin/contracts/interfaces/IERC4906.sol\":{\"keccak256\":\"0x1b8691e244f6e11d987459993671db0af33e6a29f7805eac6a9925cc6b601957\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a9e2a5efc2e14e98f5fe91bbab769199b4987a40dd3b96075b04957fda2ae80f\",\"dweb:/ipfs/QmbAjrSSVBiJ6MbgF7Jkr53m674iGMZ6haWbbRrWDZJraK\"]},\"@openzeppelin/contracts/interfaces/IERC721.sol\":{\"keccak256\":\"0xc4d7ebf63eb2f6bf3fee1b6c0ee775efa9f31b4843a5511d07eea147e212932d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://01c66a2fad66bc710db7510419a7eee569b40b67cd9f01b70a3fc90d6f76c03b\",\"dweb:/ipfs/QmT1CjJZq4eTNA4nu8E9ZrWfaZu6ReUsDbjcK8DbEFqwx5\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x39ed367e54765186281efcfe83e47cf0ad62cc879f10e191360712507125f29a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2c5ae6d85bd48cca8d6d2fcec8c63efd86f56f8a5832577a47e403ce0e65cb09\",\"dweb:/ipfs/QmUtcS8AbRSWhuc61puYet58os8FvSqm329ChoW8wwZXZk\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5dc63d1c6a12fe1b17793e1745877b2fcbe1964c3edfd0a482fac21ca8f18261\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6b7f97c5960a50fd1822cb298551ffc908e37b7893a68d6d08bce18a11cb0f11\",\"dweb:/ipfs/QmQQvxBytoY1eBt3pRQDmvH2hZ2yjhs12YqVfzGm7KSURq\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xb5afb8e8eebc4d1c6404df2f5e1e6d2c3d24fd01e5dfc855314951ecfaae462d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://78586466c424f076c6a2a551d848cfbe3f7c49e723830807598484a1047b3b34\",\"dweb:/ipfs/Qmb717ovcFxm7qgNKEShiV6M9SPR3v1qnNpAGH84D6w29p\"]},\"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":{\"keccak256\":\"0xe52813067c6d5838eeb34e1da8beb2514371a7d778266013b04ca3be1dda7100\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://53fb552d625eb5f60ef9dce439c826bb780952cbbafc985db6e48ac6382a5585\",\"dweb:/ipfs/QmSEbLqEWN1SqsWekfqt6RWC4oEajFWtZ5j8i6gKaGdtKr\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x37d1aaaa5a2908a09e9dcf56a26ddf762ecf295afb5964695937344fc6802ce1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed0bfc1b92153c5000e50f4021367b931bbe96372ac6facec3c4961b72053d02\",\"dweb:/ipfs/Qmbwp8VDerjS5SV1quwHH1oMXxPQ93fzfLVqJ2RCqbowGE\"]},\"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol\":{\"keccak256\":\"0x40399695922383778f9f540a620bec475a2f8e0f08d41f0005682842e28a9855\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://746d295e403931aeb9d6065fd5a0871f43ab5459814a60623611e4b6641a09fd\",\"dweb:/ipfs/QmWrgT8YJrQ9FfD1o3YYArwo57e7MGdpFKuM74qJ4qE34E\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0x11a5a79827df29e915a12740caf62fe21ebe27c08c9ae3e09abe9ee3ba3866d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3cf0c69ab827e3251db9ee6a50647d62c90ba580a4d7bbff21f2bea39e7b2f4a\",\"dweb:/ipfs/QmZiKwtKU1SBX4RGfQtY7PZfiapbbu6SZ9vizGQD9UHjRA\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x725209b582291bb83058e3078624b53d15a133f7401c30295e7f3704181d2aed\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0564ddb19c6d870e27b789d8f985283d815267ad7224883c2d5243c8bacc7dc0\",\"dweb:/ipfs/QmeC953H4sj88ZRFdJNFdmpf7J9SksP1wK4jyMHLo66z49\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xddce8e17e3d3f9ed818b4f4c4478a8262aab8b11ed322f1bf5ed705bb4bd97fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8084aa71a4cc7d2980972412a88fe4f114869faea3fefa5436431644eb5c0287\",\"dweb:/ipfs/Qmbqfs5dRdPvHVKY8kTaeyc65NdqXRQwRK7h9s5UJEhD1p\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa00be322d7db5786750ce0ac7e2f5b633ac30a5ed5fa1ced1e74acfc19acecea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c84e822f87cbdc4082533b626667b6928715bb2b1e8e7eb96954cebb9e38c8d\",\"dweb:/ipfs/QmZmy9dgxLTerBAQDuuHqbL6EpgRxddqgv5KmwpXYVbKz1\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]},\"contracts/NextRoundNFT.sol\":{\"keccak256\":\"0x59eaf2221505ead4742e412d153aaf0a821b6b83ba1c71ef538188bbf2d3be05\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://eab7ce0795faf65e99179d8c02ae5b4c0acf219b90691ac7bc36945ee3648c25\",\"dweb:/ipfs/QmZvBDpLfTzEBv9DWiJY1WuPJb74jGp7QoZv6n3sgU5KQB\"]}},\"version\":1}"},"NextRoundNFT":{"abi":[{"inputs":[{"internalType":"address","name":"_NRCoin","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721IncorrectOwner","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721InsufficientApproval","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC721InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC721InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721InvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC721InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC721InvalidSender","type":"error"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721NonexistentToken","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"inputs":[],"name":"ReentrancyGuardReentrantCall","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"_fromTokenId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"_toTokenId","type":"uint256"}],"name":"BatchMetadataUpdate","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"_namerAccount","type":"address"},{"indexed":false,"internalType":"string","name":"_assetId","type":"string"},{"indexed":false,"internalType":"string","name":"_nickname","type":"string"}],"name":"CoasterNamed","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"_user","type":"address"},{"indexed":false,"internalType":"string","name":"_coasterId","type":"string"}],"name":"CoasterScanned","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"_tokenId","type":"uint256"}],"name":"MetadataUpdate","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"_user","type":"address"},{"indexed":false,"internalType":"string","name":"_assetId","type":"string"}],"name":"NFTMinted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"_user","type":"address"}],"name":"UserRegistered","type":"event"},{"inputs":[],"name":"DailyScanLimit","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"NRCPricePerMint","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"NRCPricePerNicknaming","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"NRCReward","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"NRCoin","outputs":[{"internalType":"contract INRCoin","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_user","type":"address"},{"internalType":"string","name":"_coasterId","type":"string"}],"name":"getNFT","outputs":[{"components":[{"internalType":"string","name":"id","type":"string"},{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"description","type":"string"},{"internalType":"string","name":"assetURI","type":"string"},{"internalType":"address","name":"owner","type":"address"},{"internalType":"string","name":"nickname","type":"string"},{"internalType":"address","name":"namerAccount","type":"address"},{"internalType":"address[]","name":"scannersAccount","type":"address[]"}],"internalType":"struct NextRoundNFT.Coaster","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_user","type":"address"},{"internalType":"string","name":"_name","type":"string"},{"internalType":"string","name":"_description","type":"string"},{"internalType":"string","name":"_assetURI","type":"string"},{"internalType":"string","name":"_assetId","type":"string"}],"name":"mintNFT","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_user","type":"address"},{"internalType":"string","name":"_assetId","type":"string"},{"internalType":"string","name":"_nickname","type":"string"}],"name":"nicknameNFT","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"string","name":"","type":"string"}],"name":"ownedCoasters","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"registeredUserAddresses","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_user","type":"address"},{"internalType":"uint256","name":"_scanCount","type":"uint256"},{"internalType":"string","name":"_coasterId","type":"string"}],"name":"scanCoaster","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"string","name":"","type":"string"}],"name":"scannedCoasters","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"tokenURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{"@_1743":{"entryPoint":null,"id":1743,"parameterSlots":0,"returnSlots":0},"@_386":{"entryPoint":null,"id":386,"parameterSlots":2,"returnSlots":0},"@_50":{"entryPoint":null,"id":50,"parameterSlots":1,"returnSlots":0},"@_5797":{"entryPoint":null,"id":5797,"parameterSlots":1,"returnSlots":0},"@_transferOwnership_146":{"entryPoint":250,"id":146,"parameterSlots":1,"returnSlots":0},"abi_decode_tuple_t_address_fromMemory":{"entryPoint":332,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"array_dataslot_string_storage":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"clean_up_bytearray_end_slots_string_storage":{"entryPoint":460,"id":null,"parameterSlots":3,"returnSlots":0},"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage":{"entryPoint":539,"id":null,"parameterSlots":2,"returnSlots":0},"extract_byte_array_length":{"entryPoint":402,"id":null,"parameterSlots":1,"returnSlots":1},"extract_used_part_and_set_length_of_short_byte_array":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x41":{"entryPoint":380,"id":null,"parameterSlots":0,"returnSlots":0}},"generatedSources":[{"ast":{"nativeSrc":"0:3155:22","nodeType":"YulBlock","src":"0:3155:22","statements":[{"nativeSrc":"6:3:22","nodeType":"YulBlock","src":"6:3:22","statements":[]},{"body":{"nativeSrc":"95:209:22","nodeType":"YulBlock","src":"95:209:22","statements":[{"body":{"nativeSrc":"141:16:22","nodeType":"YulBlock","src":"141:16:22","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"150:1:22","nodeType":"YulLiteral","src":"150:1:22","type":"","value":"0"},{"kind":"number","nativeSrc":"153:1:22","nodeType":"YulLiteral","src":"153:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"143:6:22","nodeType":"YulIdentifier","src":"143:6:22"},"nativeSrc":"143:12:22","nodeType":"YulFunctionCall","src":"143:12:22"},"nativeSrc":"143:12:22","nodeType":"YulExpressionStatement","src":"143:12:22"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"116:7:22","nodeType":"YulIdentifier","src":"116:7:22"},{"name":"headStart","nativeSrc":"125:9:22","nodeType":"YulIdentifier","src":"125:9:22"}],"functionName":{"name":"sub","nativeSrc":"112:3:22","nodeType":"YulIdentifier","src":"112:3:22"},"nativeSrc":"112:23:22","nodeType":"YulFunctionCall","src":"112:23:22"},{"kind":"number","nativeSrc":"137:2:22","nodeType":"YulLiteral","src":"137:2:22","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"108:3:22","nodeType":"YulIdentifier","src":"108:3:22"},"nativeSrc":"108:32:22","nodeType":"YulFunctionCall","src":"108:32:22"},"nativeSrc":"105:52:22","nodeType":"YulIf","src":"105:52:22"},{"nativeSrc":"166:29:22","nodeType":"YulVariableDeclaration","src":"166:29:22","value":{"arguments":[{"name":"headStart","nativeSrc":"185:9:22","nodeType":"YulIdentifier","src":"185:9:22"}],"functionName":{"name":"mload","nativeSrc":"179:5:22","nodeType":"YulIdentifier","src":"179:5:22"},"nativeSrc":"179:16:22","nodeType":"YulFunctionCall","src":"179:16:22"},"variables":[{"name":"value","nativeSrc":"170:5:22","nodeType":"YulTypedName","src":"170:5:22","type":""}]},{"body":{"nativeSrc":"258:16:22","nodeType":"YulBlock","src":"258:16:22","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"267:1:22","nodeType":"YulLiteral","src":"267:1:22","type":"","value":"0"},{"kind":"number","nativeSrc":"270:1:22","nodeType":"YulLiteral","src":"270:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"260:6:22","nodeType":"YulIdentifier","src":"260:6:22"},"nativeSrc":"260:12:22","nodeType":"YulFunctionCall","src":"260:12:22"},"nativeSrc":"260:12:22","nodeType":"YulExpressionStatement","src":"260:12:22"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"217:5:22","nodeType":"YulIdentifier","src":"217:5:22"},{"arguments":[{"name":"value","nativeSrc":"228:5:22","nodeType":"YulIdentifier","src":"228:5:22"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"243:3:22","nodeType":"YulLiteral","src":"243:3:22","type":"","value":"160"},{"kind":"number","nativeSrc":"248:1:22","nodeType":"YulLiteral","src":"248:1:22","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"239:3:22","nodeType":"YulIdentifier","src":"239:3:22"},"nativeSrc":"239:11:22","nodeType":"YulFunctionCall","src":"239:11:22"},{"kind":"number","nativeSrc":"252:1:22","nodeType":"YulLiteral","src":"252:1:22","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"235:3:22","nodeType":"YulIdentifier","src":"235:3:22"},"nativeSrc":"235:19:22","nodeType":"YulFunctionCall","src":"235:19:22"}],"functionName":{"name":"and","nativeSrc":"224:3:22","nodeType":"YulIdentifier","src":"224:3:22"},"nativeSrc":"224:31:22","nodeType":"YulFunctionCall","src":"224:31:22"}],"functionName":{"name":"eq","nativeSrc":"214:2:22","nodeType":"YulIdentifier","src":"214:2:22"},"nativeSrc":"214:42:22","nodeType":"YulFunctionCall","src":"214:42:22"}],"functionName":{"name":"iszero","nativeSrc":"207:6:22","nodeType":"YulIdentifier","src":"207:6:22"},"nativeSrc":"207:50:22","nodeType":"YulFunctionCall","src":"207:50:22"},"nativeSrc":"204:70:22","nodeType":"YulIf","src":"204:70:22"},{"nativeSrc":"283:15:22","nodeType":"YulAssignment","src":"283:15:22","value":{"name":"value","nativeSrc":"293:5:22","nodeType":"YulIdentifier","src":"293:5:22"},"variableNames":[{"name":"value0","nativeSrc":"283:6:22","nodeType":"YulIdentifier","src":"283:6:22"}]}]},"name":"abi_decode_tuple_t_address_fromMemory","nativeSrc":"14:290:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"61:9:22","nodeType":"YulTypedName","src":"61:9:22","type":""},{"name":"dataEnd","nativeSrc":"72:7:22","nodeType":"YulTypedName","src":"72:7:22","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"84:6:22","nodeType":"YulTypedName","src":"84:6:22","type":""}],"src":"14:290:22"},{"body":{"nativeSrc":"341:95:22","nodeType":"YulBlock","src":"341:95:22","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"358:1:22","nodeType":"YulLiteral","src":"358:1:22","type":"","value":"0"},{"arguments":[{"kind":"number","nativeSrc":"365:3:22","nodeType":"YulLiteral","src":"365:3:22","type":"","value":"224"},{"kind":"number","nativeSrc":"370:10:22","nodeType":"YulLiteral","src":"370:10:22","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nativeSrc":"361:3:22","nodeType":"YulIdentifier","src":"361:3:22"},"nativeSrc":"361:20:22","nodeType":"YulFunctionCall","src":"361:20:22"}],"functionName":{"name":"mstore","nativeSrc":"351:6:22","nodeType":"YulIdentifier","src":"351:6:22"},"nativeSrc":"351:31:22","nodeType":"YulFunctionCall","src":"351:31:22"},"nativeSrc":"351:31:22","nodeType":"YulExpressionStatement","src":"351:31:22"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"398:1:22","nodeType":"YulLiteral","src":"398:1:22","type":"","value":"4"},{"kind":"number","nativeSrc":"401:4:22","nodeType":"YulLiteral","src":"401:4:22","type":"","value":"0x41"}],"functionName":{"name":"mstore","nativeSrc":"391:6:22","nodeType":"YulIdentifier","src":"391:6:22"},"nativeSrc":"391:15:22","nodeType":"YulFunctionCall","src":"391:15:22"},"nativeSrc":"391:15:22","nodeType":"YulExpressionStatement","src":"391:15:22"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"422:1:22","nodeType":"YulLiteral","src":"422:1:22","type":"","value":"0"},{"kind":"number","nativeSrc":"425:4:22","nodeType":"YulLiteral","src":"425:4:22","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"415:6:22","nodeType":"YulIdentifier","src":"415:6:22"},"nativeSrc":"415:15:22","nodeType":"YulFunctionCall","src":"415:15:22"},"nativeSrc":"415:15:22","nodeType":"YulExpressionStatement","src":"415:15:22"}]},"name":"panic_error_0x41","nativeSrc":"309:127:22","nodeType":"YulFunctionDefinition","src":"309:127:22"},{"body":{"nativeSrc":"496:325:22","nodeType":"YulBlock","src":"496:325:22","statements":[{"nativeSrc":"506:22:22","nodeType":"YulAssignment","src":"506:22:22","value":{"arguments":[{"kind":"number","nativeSrc":"520:1:22","nodeType":"YulLiteral","src":"520:1:22","type":"","value":"1"},{"name":"data","nativeSrc":"523:4:22","nodeType":"YulIdentifier","src":"523:4:22"}],"functionName":{"name":"shr","nativeSrc":"516:3:22","nodeType":"YulIdentifier","src":"516:3:22"},"nativeSrc":"516:12:22","nodeType":"YulFunctionCall","src":"516:12:22"},"variableNames":[{"name":"length","nativeSrc":"506:6:22","nodeType":"YulIdentifier","src":"506:6:22"}]},{"nativeSrc":"537:38:22","nodeType":"YulVariableDeclaration","src":"537:38:22","value":{"arguments":[{"name":"data","nativeSrc":"567:4:22","nodeType":"YulIdentifier","src":"567:4:22"},{"kind":"number","nativeSrc":"573:1:22","nodeType":"YulLiteral","src":"573:1:22","type":"","value":"1"}],"functionName":{"name":"and","nativeSrc":"563:3:22","nodeType":"YulIdentifier","src":"563:3:22"},"nativeSrc":"563:12:22","nodeType":"YulFunctionCall","src":"563:12:22"},"variables":[{"name":"outOfPlaceEncoding","nativeSrc":"541:18:22","nodeType":"YulTypedName","src":"541:18:22","type":""}]},{"body":{"nativeSrc":"614:31:22","nodeType":"YulBlock","src":"614:31:22","statements":[{"nativeSrc":"616:27:22","nodeType":"YulAssignment","src":"616:27:22","value":{"arguments":[{"name":"length","nativeSrc":"630:6:22","nodeType":"YulIdentifier","src":"630:6:22"},{"kind":"number","nativeSrc":"638:4:22","nodeType":"YulLiteral","src":"638:4:22","type":"","value":"0x7f"}],"functionName":{"name":"and","nativeSrc":"626:3:22","nodeType":"YulIdentifier","src":"626:3:22"},"nativeSrc":"626:17:22","nodeType":"YulFunctionCall","src":"626:17:22"},"variableNames":[{"name":"length","nativeSrc":"616:6:22","nodeType":"YulIdentifier","src":"616:6:22"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nativeSrc":"594:18:22","nodeType":"YulIdentifier","src":"594:18:22"}],"functionName":{"name":"iszero","nativeSrc":"587:6:22","nodeType":"YulIdentifier","src":"587:6:22"},"nativeSrc":"587:26:22","nodeType":"YulFunctionCall","src":"587:26:22"},"nativeSrc":"584:61:22","nodeType":"YulIf","src":"584:61:22"},{"body":{"nativeSrc":"704:111:22","nodeType":"YulBlock","src":"704:111:22","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"725:1:22","nodeType":"YulLiteral","src":"725:1:22","type":"","value":"0"},{"arguments":[{"kind":"number","nativeSrc":"732:3:22","nodeType":"YulLiteral","src":"732:3:22","type":"","value":"224"},{"kind":"number","nativeSrc":"737:10:22","nodeType":"YulLiteral","src":"737:10:22","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nativeSrc":"728:3:22","nodeType":"YulIdentifier","src":"728:3:22"},"nativeSrc":"728:20:22","nodeType":"YulFunctionCall","src":"728:20:22"}],"functionName":{"name":"mstore","nativeSrc":"718:6:22","nodeType":"YulIdentifier","src":"718:6:22"},"nativeSrc":"718:31:22","nodeType":"YulFunctionCall","src":"718:31:22"},"nativeSrc":"718:31:22","nodeType":"YulExpressionStatement","src":"718:31:22"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"769:1:22","nodeType":"YulLiteral","src":"769:1:22","type":"","value":"4"},{"kind":"number","nativeSrc":"772:4:22","nodeType":"YulLiteral","src":"772:4:22","type":"","value":"0x22"}],"functionName":{"name":"mstore","nativeSrc":"762:6:22","nodeType":"YulIdentifier","src":"762:6:22"},"nativeSrc":"762:15:22","nodeType":"YulFunctionCall","src":"762:15:22"},"nativeSrc":"762:15:22","nodeType":"YulExpressionStatement","src":"762:15:22"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"797:1:22","nodeType":"YulLiteral","src":"797:1:22","type":"","value":"0"},{"kind":"number","nativeSrc":"800:4:22","nodeType":"YulLiteral","src":"800:4:22","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"790:6:22","nodeType":"YulIdentifier","src":"790:6:22"},"nativeSrc":"790:15:22","nodeType":"YulFunctionCall","src":"790:15:22"},"nativeSrc":"790:15:22","nodeType":"YulExpressionStatement","src":"790:15:22"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nativeSrc":"660:18:22","nodeType":"YulIdentifier","src":"660:18:22"},{"arguments":[{"name":"length","nativeSrc":"683:6:22","nodeType":"YulIdentifier","src":"683:6:22"},{"kind":"number","nativeSrc":"691:2:22","nodeType":"YulLiteral","src":"691:2:22","type":"","value":"32"}],"functionName":{"name":"lt","nativeSrc":"680:2:22","nodeType":"YulIdentifier","src":"680:2:22"},"nativeSrc":"680:14:22","nodeType":"YulFunctionCall","src":"680:14:22"}],"functionName":{"name":"eq","nativeSrc":"657:2:22","nodeType":"YulIdentifier","src":"657:2:22"},"nativeSrc":"657:38:22","nodeType":"YulFunctionCall","src":"657:38:22"},"nativeSrc":"654:161:22","nodeType":"YulIf","src":"654:161:22"}]},"name":"extract_byte_array_length","nativeSrc":"441:380:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nativeSrc":"476:4:22","nodeType":"YulTypedName","src":"476:4:22","type":""}],"returnVariables":[{"name":"length","nativeSrc":"485:6:22","nodeType":"YulTypedName","src":"485:6:22","type":""}],"src":"441:380:22"},{"body":{"nativeSrc":"882:65:22","nodeType":"YulBlock","src":"882:65:22","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"899:1:22","nodeType":"YulLiteral","src":"899:1:22","type":"","value":"0"},{"name":"ptr","nativeSrc":"902:3:22","nodeType":"YulIdentifier","src":"902:3:22"}],"functionName":{"name":"mstore","nativeSrc":"892:6:22","nodeType":"YulIdentifier","src":"892:6:22"},"nativeSrc":"892:14:22","nodeType":"YulFunctionCall","src":"892:14:22"},"nativeSrc":"892:14:22","nodeType":"YulExpressionStatement","src":"892:14:22"},{"nativeSrc":"915:26:22","nodeType":"YulAssignment","src":"915:26:22","value":{"arguments":[{"kind":"number","nativeSrc":"933:1:22","nodeType":"YulLiteral","src":"933:1:22","type":"","value":"0"},{"kind":"number","nativeSrc":"936:4:22","nodeType":"YulLiteral","src":"936:4:22","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nativeSrc":"923:9:22","nodeType":"YulIdentifier","src":"923:9:22"},"nativeSrc":"923:18:22","nodeType":"YulFunctionCall","src":"923:18:22"},"variableNames":[{"name":"data","nativeSrc":"915:4:22","nodeType":"YulIdentifier","src":"915:4:22"}]}]},"name":"array_dataslot_string_storage","nativeSrc":"826:121:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nativeSrc":"865:3:22","nodeType":"YulTypedName","src":"865:3:22","type":""}],"returnVariables":[{"name":"data","nativeSrc":"873:4:22","nodeType":"YulTypedName","src":"873:4:22","type":""}],"src":"826:121:22"},{"body":{"nativeSrc":"1033:437:22","nodeType":"YulBlock","src":"1033:437:22","statements":[{"body":{"nativeSrc":"1066:398:22","nodeType":"YulBlock","src":"1066:398:22","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1087:1:22","nodeType":"YulLiteral","src":"1087:1:22","type":"","value":"0"},{"name":"array","nativeSrc":"1090:5:22","nodeType":"YulIdentifier","src":"1090:5:22"}],"functionName":{"name":"mstore","nativeSrc":"1080:6:22","nodeType":"YulIdentifier","src":"1080:6:22"},"nativeSrc":"1080:16:22","nodeType":"YulFunctionCall","src":"1080:16:22"},"nativeSrc":"1080:16:22","nodeType":"YulExpressionStatement","src":"1080:16:22"},{"nativeSrc":"1109:30:22","nodeType":"YulVariableDeclaration","src":"1109:30:22","value":{"arguments":[{"kind":"number","nativeSrc":"1131:1:22","nodeType":"YulLiteral","src":"1131:1:22","type":"","value":"0"},{"kind":"number","nativeSrc":"1134:4:22","nodeType":"YulLiteral","src":"1134:4:22","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nativeSrc":"1121:9:22","nodeType":"YulIdentifier","src":"1121:9:22"},"nativeSrc":"1121:18:22","nodeType":"YulFunctionCall","src":"1121:18:22"},"variables":[{"name":"data","nativeSrc":"1113:4:22","nodeType":"YulTypedName","src":"1113:4:22","type":""}]},{"nativeSrc":"1152:57:22","nodeType":"YulVariableDeclaration","src":"1152:57:22","value":{"arguments":[{"name":"data","nativeSrc":"1175:4:22","nodeType":"YulIdentifier","src":"1175:4:22"},{"arguments":[{"kind":"number","nativeSrc":"1185:1:22","nodeType":"YulLiteral","src":"1185:1:22","type":"","value":"5"},{"arguments":[{"name":"startIndex","nativeSrc":"1192:10:22","nodeType":"YulIdentifier","src":"1192:10:22"},{"kind":"number","nativeSrc":"1204:2:22","nodeType":"YulLiteral","src":"1204:2:22","type":"","value":"31"}],"functionName":{"name":"add","nativeSrc":"1188:3:22","nodeType":"YulIdentifier","src":"1188:3:22"},"nativeSrc":"1188:19:22","nodeType":"YulFunctionCall","src":"1188:19:22"}],"functionName":{"name":"shr","nativeSrc":"1181:3:22","nodeType":"YulIdentifier","src":"1181:3:22"},"nativeSrc":"1181:27:22","nodeType":"YulFunctionCall","src":"1181:27:22"}],"functionName":{"name":"add","nativeSrc":"1171:3:22","nodeType":"YulIdentifier","src":"1171:3:22"},"nativeSrc":"1171:38:22","nodeType":"YulFunctionCall","src":"1171:38:22"},"variables":[{"name":"deleteStart","nativeSrc":"1156:11:22","nodeType":"YulTypedName","src":"1156:11:22","type":""}]},{"body":{"nativeSrc":"1246:23:22","nodeType":"YulBlock","src":"1246:23:22","statements":[{"nativeSrc":"1248:19:22","nodeType":"YulAssignment","src":"1248:19:22","value":{"name":"data","nativeSrc":"1263:4:22","nodeType":"YulIdentifier","src":"1263:4:22"},"variableNames":[{"name":"deleteStart","nativeSrc":"1248:11:22","nodeType":"YulIdentifier","src":"1248:11:22"}]}]},"condition":{"arguments":[{"name":"startIndex","nativeSrc":"1228:10:22","nodeType":"YulIdentifier","src":"1228:10:22"},{"kind":"number","nativeSrc":"1240:4:22","nodeType":"YulLiteral","src":"1240:4:22","type":"","value":"0x20"}],"functionName":{"name":"lt","nativeSrc":"1225:2:22","nodeType":"YulIdentifier","src":"1225:2:22"},"nativeSrc":"1225:20:22","nodeType":"YulFunctionCall","src":"1225:20:22"},"nativeSrc":"1222:47:22","nodeType":"YulIf","src":"1222:47:22"},{"nativeSrc":"1282:41:22","nodeType":"YulVariableDeclaration","src":"1282:41:22","value":{"arguments":[{"name":"data","nativeSrc":"1296:4:22","nodeType":"YulIdentifier","src":"1296:4:22"},{"arguments":[{"kind":"number","nativeSrc":"1306:1:22","nodeType":"YulLiteral","src":"1306:1:22","type":"","value":"5"},{"arguments":[{"name":"len","nativeSrc":"1313:3:22","nodeType":"YulIdentifier","src":"1313:3:22"},{"kind":"number","nativeSrc":"1318:2:22","nodeType":"YulLiteral","src":"1318:2:22","type":"","value":"31"}],"functionName":{"name":"add","nativeSrc":"1309:3:22","nodeType":"YulIdentifier","src":"1309:3:22"},"nativeSrc":"1309:12:22","nodeType":"YulFunctionCall","src":"1309:12:22"}],"functionName":{"name":"shr","nativeSrc":"1302:3:22","nodeType":"YulIdentifier","src":"1302:3:22"},"nativeSrc":"1302:20:22","nodeType":"YulFunctionCall","src":"1302:20:22"}],"functionName":{"name":"add","nativeSrc":"1292:3:22","nodeType":"YulIdentifier","src":"1292:3:22"},"nativeSrc":"1292:31:22","nodeType":"YulFunctionCall","src":"1292:31:22"},"variables":[{"name":"_1","nativeSrc":"1286:2:22","nodeType":"YulTypedName","src":"1286:2:22","type":""}]},{"nativeSrc":"1336:24:22","nodeType":"YulVariableDeclaration","src":"1336:24:22","value":{"name":"deleteStart","nativeSrc":"1349:11:22","nodeType":"YulIdentifier","src":"1349:11:22"},"variables":[{"name":"start","nativeSrc":"1340:5:22","nodeType":"YulTypedName","src":"1340:5:22","type":""}]},{"body":{"nativeSrc":"1434:20:22","nodeType":"YulBlock","src":"1434:20:22","statements":[{"expression":{"arguments":[{"name":"start","nativeSrc":"1443:5:22","nodeType":"YulIdentifier","src":"1443:5:22"},{"kind":"number","nativeSrc":"1450:1:22","nodeType":"YulLiteral","src":"1450:1:22","type":"","value":"0"}],"functionName":{"name":"sstore","nativeSrc":"1436:6:22","nodeType":"YulIdentifier","src":"1436:6:22"},"nativeSrc":"1436:16:22","nodeType":"YulFunctionCall","src":"1436:16:22"},"nativeSrc":"1436:16:22","nodeType":"YulExpressionStatement","src":"1436:16:22"}]},"condition":{"arguments":[{"name":"start","nativeSrc":"1384:5:22","nodeType":"YulIdentifier","src":"1384:5:22"},{"name":"_1","nativeSrc":"1391:2:22","nodeType":"YulIdentifier","src":"1391:2:22"}],"functionName":{"name":"lt","nativeSrc":"1381:2:22","nodeType":"YulIdentifier","src":"1381:2:22"},"nativeSrc":"1381:13:22","nodeType":"YulFunctionCall","src":"1381:13:22"},"nativeSrc":"1373:81:22","nodeType":"YulForLoop","post":{"nativeSrc":"1395:26:22","nodeType":"YulBlock","src":"1395:26:22","statements":[{"nativeSrc":"1397:22:22","nodeType":"YulAssignment","src":"1397:22:22","value":{"arguments":[{"name":"start","nativeSrc":"1410:5:22","nodeType":"YulIdentifier","src":"1410:5:22"},{"kind":"number","nativeSrc":"1417:1:22","nodeType":"YulLiteral","src":"1417:1:22","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"1406:3:22","nodeType":"YulIdentifier","src":"1406:3:22"},"nativeSrc":"1406:13:22","nodeType":"YulFunctionCall","src":"1406:13:22"},"variableNames":[{"name":"start","nativeSrc":"1397:5:22","nodeType":"YulIdentifier","src":"1397:5:22"}]}]},"pre":{"nativeSrc":"1377:3:22","nodeType":"YulBlock","src":"1377:3:22","statements":[]},"src":"1373:81:22"}]},"condition":{"arguments":[{"name":"len","nativeSrc":"1049:3:22","nodeType":"YulIdentifier","src":"1049:3:22"},{"kind":"number","nativeSrc":"1054:2:22","nodeType":"YulLiteral","src":"1054:2:22","type":"","value":"31"}],"functionName":{"name":"gt","nativeSrc":"1046:2:22","nodeType":"YulIdentifier","src":"1046:2:22"},"nativeSrc":"1046:11:22","nodeType":"YulFunctionCall","src":"1046:11:22"},"nativeSrc":"1043:421:22","nodeType":"YulIf","src":"1043:421:22"}]},"name":"clean_up_bytearray_end_slots_string_storage","nativeSrc":"952:518:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nativeSrc":"1005:5:22","nodeType":"YulTypedName","src":"1005:5:22","type":""},{"name":"len","nativeSrc":"1012:3:22","nodeType":"YulTypedName","src":"1012:3:22","type":""},{"name":"startIndex","nativeSrc":"1017:10:22","nodeType":"YulTypedName","src":"1017:10:22","type":""}],"src":"952:518:22"},{"body":{"nativeSrc":"1560:81:22","nodeType":"YulBlock","src":"1560:81:22","statements":[{"nativeSrc":"1570:65:22","nodeType":"YulAssignment","src":"1570:65:22","value":{"arguments":[{"arguments":[{"name":"data","nativeSrc":"1585:4:22","nodeType":"YulIdentifier","src":"1585:4:22"},{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"1603:1:22","nodeType":"YulLiteral","src":"1603:1:22","type":"","value":"3"},{"name":"len","nativeSrc":"1606:3:22","nodeType":"YulIdentifier","src":"1606:3:22"}],"functionName":{"name":"shl","nativeSrc":"1599:3:22","nodeType":"YulIdentifier","src":"1599:3:22"},"nativeSrc":"1599:11:22","nodeType":"YulFunctionCall","src":"1599:11:22"},{"arguments":[{"kind":"number","nativeSrc":"1616:1:22","nodeType":"YulLiteral","src":"1616:1:22","type":"","value":"0"}],"functionName":{"name":"not","nativeSrc":"1612:3:22","nodeType":"YulIdentifier","src":"1612:3:22"},"nativeSrc":"1612:6:22","nodeType":"YulFunctionCall","src":"1612:6:22"}],"functionName":{"name":"shr","nativeSrc":"1595:3:22","nodeType":"YulIdentifier","src":"1595:3:22"},"nativeSrc":"1595:24:22","nodeType":"YulFunctionCall","src":"1595:24:22"}],"functionName":{"name":"not","nativeSrc":"1591:3:22","nodeType":"YulIdentifier","src":"1591:3:22"},"nativeSrc":"1591:29:22","nodeType":"YulFunctionCall","src":"1591:29:22"}],"functionName":{"name":"and","nativeSrc":"1581:3:22","nodeType":"YulIdentifier","src":"1581:3:22"},"nativeSrc":"1581:40:22","nodeType":"YulFunctionCall","src":"1581:40:22"},{"arguments":[{"kind":"number","nativeSrc":"1627:1:22","nodeType":"YulLiteral","src":"1627:1:22","type":"","value":"1"},{"name":"len","nativeSrc":"1630:3:22","nodeType":"YulIdentifier","src":"1630:3:22"}],"functionName":{"name":"shl","nativeSrc":"1623:3:22","nodeType":"YulIdentifier","src":"1623:3:22"},"nativeSrc":"1623:11:22","nodeType":"YulFunctionCall","src":"1623:11:22"}],"functionName":{"name":"or","nativeSrc":"1578:2:22","nodeType":"YulIdentifier","src":"1578:2:22"},"nativeSrc":"1578:57:22","nodeType":"YulFunctionCall","src":"1578:57:22"},"variableNames":[{"name":"used","nativeSrc":"1570:4:22","nodeType":"YulIdentifier","src":"1570:4:22"}]}]},"name":"extract_used_part_and_set_length_of_short_byte_array","nativeSrc":"1475:166:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nativeSrc":"1537:4:22","nodeType":"YulTypedName","src":"1537:4:22","type":""},{"name":"len","nativeSrc":"1543:3:22","nodeType":"YulTypedName","src":"1543:3:22","type":""}],"returnVariables":[{"name":"used","nativeSrc":"1551:4:22","nodeType":"YulTypedName","src":"1551:4:22","type":""}],"src":"1475:166:22"},{"body":{"nativeSrc":"1742:1203:22","nodeType":"YulBlock","src":"1742:1203:22","statements":[{"nativeSrc":"1752:24:22","nodeType":"YulVariableDeclaration","src":"1752:24:22","value":{"arguments":[{"name":"src","nativeSrc":"1772:3:22","nodeType":"YulIdentifier","src":"1772:3:22"}],"functionName":{"name":"mload","nativeSrc":"1766:5:22","nodeType":"YulIdentifier","src":"1766:5:22"},"nativeSrc":"1766:10:22","nodeType":"YulFunctionCall","src":"1766:10:22"},"variables":[{"name":"newLen","nativeSrc":"1756:6:22","nodeType":"YulTypedName","src":"1756:6:22","type":""}]},{"body":{"nativeSrc":"1819:22:22","nodeType":"YulBlock","src":"1819:22:22","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nativeSrc":"1821:16:22","nodeType":"YulIdentifier","src":"1821:16:22"},"nativeSrc":"1821:18:22","nodeType":"YulFunctionCall","src":"1821:18:22"},"nativeSrc":"1821:18:22","nodeType":"YulExpressionStatement","src":"1821:18:22"}]},"condition":{"arguments":[{"name":"newLen","nativeSrc":"1791:6:22","nodeType":"YulIdentifier","src":"1791:6:22"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"1807:2:22","nodeType":"YulLiteral","src":"1807:2:22","type":"","value":"64"},{"kind":"number","nativeSrc":"1811:1:22","nodeType":"YulLiteral","src":"1811:1:22","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"1803:3:22","nodeType":"YulIdentifier","src":"1803:3:22"},"nativeSrc":"1803:10:22","nodeType":"YulFunctionCall","src":"1803:10:22"},{"kind":"number","nativeSrc":"1815:1:22","nodeType":"YulLiteral","src":"1815:1:22","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"1799:3:22","nodeType":"YulIdentifier","src":"1799:3:22"},"nativeSrc":"1799:18:22","nodeType":"YulFunctionCall","src":"1799:18:22"}],"functionName":{"name":"gt","nativeSrc":"1788:2:22","nodeType":"YulIdentifier","src":"1788:2:22"},"nativeSrc":"1788:30:22","nodeType":"YulFunctionCall","src":"1788:30:22"},"nativeSrc":"1785:56:22","nodeType":"YulIf","src":"1785:56:22"},{"expression":{"arguments":[{"name":"slot","nativeSrc":"1894:4:22","nodeType":"YulIdentifier","src":"1894:4:22"},{"arguments":[{"arguments":[{"name":"slot","nativeSrc":"1932:4:22","nodeType":"YulIdentifier","src":"1932:4:22"}],"functionName":{"name":"sload","nativeSrc":"1926:5:22","nodeType":"YulIdentifier","src":"1926:5:22"},"nativeSrc":"1926:11:22","nodeType":"YulFunctionCall","src":"1926:11:22"}],"functionName":{"name":"extract_byte_array_length","nativeSrc":"1900:25:22","nodeType":"YulIdentifier","src":"1900:25:22"},"nativeSrc":"1900:38:22","nodeType":"YulFunctionCall","src":"1900:38:22"},{"name":"newLen","nativeSrc":"1940:6:22","nodeType":"YulIdentifier","src":"1940:6:22"}],"functionName":{"name":"clean_up_bytearray_end_slots_string_storage","nativeSrc":"1850:43:22","nodeType":"YulIdentifier","src":"1850:43:22"},"nativeSrc":"1850:97:22","nodeType":"YulFunctionCall","src":"1850:97:22"},"nativeSrc":"1850:97:22","nodeType":"YulExpressionStatement","src":"1850:97:22"},{"nativeSrc":"1956:18:22","nodeType":"YulVariableDeclaration","src":"1956:18:22","value":{"kind":"number","nativeSrc":"1973:1:22","nodeType":"YulLiteral","src":"1973:1:22","type":"","value":"0"},"variables":[{"name":"srcOffset","nativeSrc":"1960:9:22","nodeType":"YulTypedName","src":"1960:9:22","type":""}]},{"nativeSrc":"1983:17:22","nodeType":"YulAssignment","src":"1983:17:22","value":{"kind":"number","nativeSrc":"1996:4:22","nodeType":"YulLiteral","src":"1996:4:22","type":"","value":"0x20"},"variableNames":[{"name":"srcOffset","nativeSrc":"1983:9:22","nodeType":"YulIdentifier","src":"1983:9:22"}]},{"cases":[{"body":{"nativeSrc":"2046:642:22","nodeType":"YulBlock","src":"2046:642:22","statements":[{"nativeSrc":"2060:35:22","nodeType":"YulVariableDeclaration","src":"2060:35:22","value":{"arguments":[{"name":"newLen","nativeSrc":"2079:6:22","nodeType":"YulIdentifier","src":"2079:6:22"},{"arguments":[{"kind":"number","nativeSrc":"2091:2:22","nodeType":"YulLiteral","src":"2091:2:22","type":"","value":"31"}],"functionName":{"name":"not","nativeSrc":"2087:3:22","nodeType":"YulIdentifier","src":"2087:3:22"},"nativeSrc":"2087:7:22","nodeType":"YulFunctionCall","src":"2087:7:22"}],"functionName":{"name":"and","nativeSrc":"2075:3:22","nodeType":"YulIdentifier","src":"2075:3:22"},"nativeSrc":"2075:20:22","nodeType":"YulFunctionCall","src":"2075:20:22"},"variables":[{"name":"loopEnd","nativeSrc":"2064:7:22","nodeType":"YulTypedName","src":"2064:7:22","type":""}]},{"nativeSrc":"2108:49:22","nodeType":"YulVariableDeclaration","src":"2108:49:22","value":{"arguments":[{"name":"slot","nativeSrc":"2152:4:22","nodeType":"YulIdentifier","src":"2152:4:22"}],"functionName":{"name":"array_dataslot_string_storage","nativeSrc":"2122:29:22","nodeType":"YulIdentifier","src":"2122:29:22"},"nativeSrc":"2122:35:22","nodeType":"YulFunctionCall","src":"2122:35:22"},"variables":[{"name":"dstPtr","nativeSrc":"2112:6:22","nodeType":"YulTypedName","src":"2112:6:22","type":""}]},{"nativeSrc":"2170:10:22","nodeType":"YulVariableDeclaration","src":"2170:10:22","value":{"kind":"number","nativeSrc":"2179:1:22","nodeType":"YulLiteral","src":"2179:1:22","type":"","value":"0"},"variables":[{"name":"i","nativeSrc":"2174:1:22","nodeType":"YulTypedName","src":"2174:1:22","type":""}]},{"body":{"nativeSrc":"2250:165:22","nodeType":"YulBlock","src":"2250:165:22","statements":[{"expression":{"arguments":[{"name":"dstPtr","nativeSrc":"2275:6:22","nodeType":"YulIdentifier","src":"2275:6:22"},{"arguments":[{"arguments":[{"name":"src","nativeSrc":"2293:3:22","nodeType":"YulIdentifier","src":"2293:3:22"},{"name":"srcOffset","nativeSrc":"2298:9:22","nodeType":"YulIdentifier","src":"2298:9:22"}],"functionName":{"name":"add","nativeSrc":"2289:3:22","nodeType":"YulIdentifier","src":"2289:3:22"},"nativeSrc":"2289:19:22","nodeType":"YulFunctionCall","src":"2289:19:22"}],"functionName":{"name":"mload","nativeSrc":"2283:5:22","nodeType":"YulIdentifier","src":"2283:5:22"},"nativeSrc":"2283:26:22","nodeType":"YulFunctionCall","src":"2283:26:22"}],"functionName":{"name":"sstore","nativeSrc":"2268:6:22","nodeType":"YulIdentifier","src":"2268:6:22"},"nativeSrc":"2268:42:22","nodeType":"YulFunctionCall","src":"2268:42:22"},"nativeSrc":"2268:42:22","nodeType":"YulExpressionStatement","src":"2268:42:22"},{"nativeSrc":"2327:24:22","nodeType":"YulAssignment","src":"2327:24:22","value":{"arguments":[{"name":"dstPtr","nativeSrc":"2341:6:22","nodeType":"YulIdentifier","src":"2341:6:22"},{"kind":"number","nativeSrc":"2349:1:22","nodeType":"YulLiteral","src":"2349:1:22","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"2337:3:22","nodeType":"YulIdentifier","src":"2337:3:22"},"nativeSrc":"2337:14:22","nodeType":"YulFunctionCall","src":"2337:14:22"},"variableNames":[{"name":"dstPtr","nativeSrc":"2327:6:22","nodeType":"YulIdentifier","src":"2327:6:22"}]},{"nativeSrc":"2368:33:22","nodeType":"YulAssignment","src":"2368:33:22","value":{"arguments":[{"name":"srcOffset","nativeSrc":"2385:9:22","nodeType":"YulIdentifier","src":"2385:9:22"},{"kind":"number","nativeSrc":"2396:4:22","nodeType":"YulLiteral","src":"2396:4:22","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"2381:3:22","nodeType":"YulIdentifier","src":"2381:3:22"},"nativeSrc":"2381:20:22","nodeType":"YulFunctionCall","src":"2381:20:22"},"variableNames":[{"name":"srcOffset","nativeSrc":"2368:9:22","nodeType":"YulIdentifier","src":"2368:9:22"}]}]},"condition":{"arguments":[{"name":"i","nativeSrc":"2204:1:22","nodeType":"YulIdentifier","src":"2204:1:22"},{"name":"loopEnd","nativeSrc":"2207:7:22","nodeType":"YulIdentifier","src":"2207:7:22"}],"functionName":{"name":"lt","nativeSrc":"2201:2:22","nodeType":"YulIdentifier","src":"2201:2:22"},"nativeSrc":"2201:14:22","nodeType":"YulFunctionCall","src":"2201:14:22"},"nativeSrc":"2193:222:22","nodeType":"YulForLoop","post":{"nativeSrc":"2216:21:22","nodeType":"YulBlock","src":"2216:21:22","statements":[{"nativeSrc":"2218:17:22","nodeType":"YulAssignment","src":"2218:17:22","value":{"arguments":[{"name":"i","nativeSrc":"2227:1:22","nodeType":"YulIdentifier","src":"2227:1:22"},{"kind":"number","nativeSrc":"2230:4:22","nodeType":"YulLiteral","src":"2230:4:22","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"2223:3:22","nodeType":"YulIdentifier","src":"2223:3:22"},"nativeSrc":"2223:12:22","nodeType":"YulFunctionCall","src":"2223:12:22"},"variableNames":[{"name":"i","nativeSrc":"2218:1:22","nodeType":"YulIdentifier","src":"2218:1:22"}]}]},"pre":{"nativeSrc":"2197:3:22","nodeType":"YulBlock","src":"2197:3:22","statements":[]},"src":"2193:222:22"},{"body":{"nativeSrc":"2463:166:22","nodeType":"YulBlock","src":"2463:166:22","statements":[{"nativeSrc":"2481:43:22","nodeType":"YulVariableDeclaration","src":"2481:43:22","value":{"arguments":[{"arguments":[{"name":"src","nativeSrc":"2508:3:22","nodeType":"YulIdentifier","src":"2508:3:22"},{"name":"srcOffset","nativeSrc":"2513:9:22","nodeType":"YulIdentifier","src":"2513:9:22"}],"functionName":{"name":"add","nativeSrc":"2504:3:22","nodeType":"YulIdentifier","src":"2504:3:22"},"nativeSrc":"2504:19:22","nodeType":"YulFunctionCall","src":"2504:19:22"}],"functionName":{"name":"mload","nativeSrc":"2498:5:22","nodeType":"YulIdentifier","src":"2498:5:22"},"nativeSrc":"2498:26:22","nodeType":"YulFunctionCall","src":"2498:26:22"},"variables":[{"name":"lastValue","nativeSrc":"2485:9:22","nodeType":"YulTypedName","src":"2485:9:22","type":""}]},{"expression":{"arguments":[{"name":"dstPtr","nativeSrc":"2548:6:22","nodeType":"YulIdentifier","src":"2548:6:22"},{"arguments":[{"name":"lastValue","nativeSrc":"2560:9:22","nodeType":"YulIdentifier","src":"2560:9:22"},{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"2587:1:22","nodeType":"YulLiteral","src":"2587:1:22","type":"","value":"3"},{"name":"newLen","nativeSrc":"2590:6:22","nodeType":"YulIdentifier","src":"2590:6:22"}],"functionName":{"name":"shl","nativeSrc":"2583:3:22","nodeType":"YulIdentifier","src":"2583:3:22"},"nativeSrc":"2583:14:22","nodeType":"YulFunctionCall","src":"2583:14:22"},{"kind":"number","nativeSrc":"2599:3:22","nodeType":"YulLiteral","src":"2599:3:22","type":"","value":"248"}],"functionName":{"name":"and","nativeSrc":"2579:3:22","nodeType":"YulIdentifier","src":"2579:3:22"},"nativeSrc":"2579:24:22","nodeType":"YulFunctionCall","src":"2579:24:22"},{"arguments":[{"kind":"number","nativeSrc":"2609:1:22","nodeType":"YulLiteral","src":"2609:1:22","type":"","value":"0"}],"functionName":{"name":"not","nativeSrc":"2605:3:22","nodeType":"YulIdentifier","src":"2605:3:22"},"nativeSrc":"2605:6:22","nodeType":"YulFunctionCall","src":"2605:6:22"}],"functionName":{"name":"shr","nativeSrc":"2575:3:22","nodeType":"YulIdentifier","src":"2575:3:22"},"nativeSrc":"2575:37:22","nodeType":"YulFunctionCall","src":"2575:37:22"}],"functionName":{"name":"not","nativeSrc":"2571:3:22","nodeType":"YulIdentifier","src":"2571:3:22"},"nativeSrc":"2571:42:22","nodeType":"YulFunctionCall","src":"2571:42:22"}],"functionName":{"name":"and","nativeSrc":"2556:3:22","nodeType":"YulIdentifier","src":"2556:3:22"},"nativeSrc":"2556:58:22","nodeType":"YulFunctionCall","src":"2556:58:22"}],"functionName":{"name":"sstore","nativeSrc":"2541:6:22","nodeType":"YulIdentifier","src":"2541:6:22"},"nativeSrc":"2541:74:22","nodeType":"YulFunctionCall","src":"2541:74:22"},"nativeSrc":"2541:74:22","nodeType":"YulExpressionStatement","src":"2541:74:22"}]},"condition":{"arguments":[{"name":"loopEnd","nativeSrc":"2434:7:22","nodeType":"YulIdentifier","src":"2434:7:22"},{"name":"newLen","nativeSrc":"2443:6:22","nodeType":"YulIdentifier","src":"2443:6:22"}],"functionName":{"name":"lt","nativeSrc":"2431:2:22","nodeType":"YulIdentifier","src":"2431:2:22"},"nativeSrc":"2431:19:22","nodeType":"YulFunctionCall","src":"2431:19:22"},"nativeSrc":"2428:201:22","nodeType":"YulIf","src":"2428:201:22"},{"expression":{"arguments":[{"name":"slot","nativeSrc":"2649:4:22","nodeType":"YulIdentifier","src":"2649:4:22"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"2663:1:22","nodeType":"YulLiteral","src":"2663:1:22","type":"","value":"1"},{"name":"newLen","nativeSrc":"2666:6:22","nodeType":"YulIdentifier","src":"2666:6:22"}],"functionName":{"name":"shl","nativeSrc":"2659:3:22","nodeType":"YulIdentifier","src":"2659:3:22"},"nativeSrc":"2659:14:22","nodeType":"YulFunctionCall","src":"2659:14:22"},{"kind":"number","nativeSrc":"2675:1:22","nodeType":"YulLiteral","src":"2675:1:22","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"2655:3:22","nodeType":"YulIdentifier","src":"2655:3:22"},"nativeSrc":"2655:22:22","nodeType":"YulFunctionCall","src":"2655:22:22"}],"functionName":{"name":"sstore","nativeSrc":"2642:6:22","nodeType":"YulIdentifier","src":"2642:6:22"},"nativeSrc":"2642:36:22","nodeType":"YulFunctionCall","src":"2642:36:22"},"nativeSrc":"2642:36:22","nodeType":"YulExpressionStatement","src":"2642:36:22"}]},"nativeSrc":"2039:649:22","nodeType":"YulCase","src":"2039:649:22","value":{"kind":"number","nativeSrc":"2044:1:22","nodeType":"YulLiteral","src":"2044:1:22","type":"","value":"1"}},{"body":{"nativeSrc":"2705:234:22","nodeType":"YulBlock","src":"2705:234:22","statements":[{"nativeSrc":"2719:14:22","nodeType":"YulVariableDeclaration","src":"2719:14:22","value":{"kind":"number","nativeSrc":"2732:1:22","nodeType":"YulLiteral","src":"2732:1:22","type":"","value":"0"},"variables":[{"name":"value","nativeSrc":"2723:5:22","nodeType":"YulTypedName","src":"2723:5:22","type":""}]},{"body":{"nativeSrc":"2768:67:22","nodeType":"YulBlock","src":"2768:67:22","statements":[{"nativeSrc":"2786:35:22","nodeType":"YulAssignment","src":"2786:35:22","value":{"arguments":[{"arguments":[{"name":"src","nativeSrc":"2805:3:22","nodeType":"YulIdentifier","src":"2805:3:22"},{"name":"srcOffset","nativeSrc":"2810:9:22","nodeType":"YulIdentifier","src":"2810:9:22"}],"functionName":{"name":"add","nativeSrc":"2801:3:22","nodeType":"YulIdentifier","src":"2801:3:22"},"nativeSrc":"2801:19:22","nodeType":"YulFunctionCall","src":"2801:19:22"}],"functionName":{"name":"mload","nativeSrc":"2795:5:22","nodeType":"YulIdentifier","src":"2795:5:22"},"nativeSrc":"2795:26:22","nodeType":"YulFunctionCall","src":"2795:26:22"},"variableNames":[{"name":"value","nativeSrc":"2786:5:22","nodeType":"YulIdentifier","src":"2786:5:22"}]}]},"condition":{"name":"newLen","nativeSrc":"2749:6:22","nodeType":"YulIdentifier","src":"2749:6:22"},"nativeSrc":"2746:89:22","nodeType":"YulIf","src":"2746:89:22"},{"expression":{"arguments":[{"name":"slot","nativeSrc":"2855:4:22","nodeType":"YulIdentifier","src":"2855:4:22"},{"arguments":[{"name":"value","nativeSrc":"2914:5:22","nodeType":"YulIdentifier","src":"2914:5:22"},{"name":"newLen","nativeSrc":"2921:6:22","nodeType":"YulIdentifier","src":"2921:6:22"}],"functionName":{"name":"extract_used_part_and_set_length_of_short_byte_array","nativeSrc":"2861:52:22","nodeType":"YulIdentifier","src":"2861:52:22"},"nativeSrc":"2861:67:22","nodeType":"YulFunctionCall","src":"2861:67:22"}],"functionName":{"name":"sstore","nativeSrc":"2848:6:22","nodeType":"YulIdentifier","src":"2848:6:22"},"nativeSrc":"2848:81:22","nodeType":"YulFunctionCall","src":"2848:81:22"},"nativeSrc":"2848:81:22","nodeType":"YulExpressionStatement","src":"2848:81:22"}]},"nativeSrc":"2697:242:22","nodeType":"YulCase","src":"2697:242:22","value":"default"}],"expression":{"arguments":[{"name":"newLen","nativeSrc":"2019:6:22","nodeType":"YulIdentifier","src":"2019:6:22"},{"kind":"number","nativeSrc":"2027:2:22","nodeType":"YulLiteral","src":"2027:2:22","type":"","value":"31"}],"functionName":{"name":"gt","nativeSrc":"2016:2:22","nodeType":"YulIdentifier","src":"2016:2:22"},"nativeSrc":"2016:14:22","nodeType":"YulFunctionCall","src":"2016:14:22"},"nativeSrc":"2009:930:22","nodeType":"YulSwitch","src":"2009:930:22"}]},"name":"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage","nativeSrc":"1646:1299:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nativeSrc":"1727:4:22","nodeType":"YulTypedName","src":"1727:4:22","type":""},{"name":"src","nativeSrc":"1733:3:22","nodeType":"YulTypedName","src":"1733:3:22","type":""}],"src":"1646:1299:22"},{"body":{"nativeSrc":"3051:102:22","nodeType":"YulBlock","src":"3051:102:22","statements":[{"nativeSrc":"3061:26:22","nodeType":"YulAssignment","src":"3061:26:22","value":{"arguments":[{"name":"headStart","nativeSrc":"3073:9:22","nodeType":"YulIdentifier","src":"3073:9:22"},{"kind":"number","nativeSrc":"3084:2:22","nodeType":"YulLiteral","src":"3084:2:22","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"3069:3:22","nodeType":"YulIdentifier","src":"3069:3:22"},"nativeSrc":"3069:18:22","nodeType":"YulFunctionCall","src":"3069:18:22"},"variableNames":[{"name":"tail","nativeSrc":"3061:4:22","nodeType":"YulIdentifier","src":"3061:4:22"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"3103:9:22","nodeType":"YulIdentifier","src":"3103:9:22"},{"arguments":[{"name":"value0","nativeSrc":"3118:6:22","nodeType":"YulIdentifier","src":"3118:6:22"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"3134:3:22","nodeType":"YulLiteral","src":"3134:3:22","type":"","value":"160"},{"kind":"number","nativeSrc":"3139:1:22","nodeType":"YulLiteral","src":"3139:1:22","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"3130:3:22","nodeType":"YulIdentifier","src":"3130:3:22"},"nativeSrc":"3130:11:22","nodeType":"YulFunctionCall","src":"3130:11:22"},{"kind":"number","nativeSrc":"3143:1:22","nodeType":"YulLiteral","src":"3143:1:22","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"3126:3:22","nodeType":"YulIdentifier","src":"3126:3:22"},"nativeSrc":"3126:19:22","nodeType":"YulFunctionCall","src":"3126:19:22"}],"functionName":{"name":"and","nativeSrc":"3114:3:22","nodeType":"YulIdentifier","src":"3114:3:22"},"nativeSrc":"3114:32:22","nodeType":"YulFunctionCall","src":"3114:32:22"}],"functionName":{"name":"mstore","nativeSrc":"3096:6:22","nodeType":"YulIdentifier","src":"3096:6:22"},"nativeSrc":"3096:51:22","nodeType":"YulFunctionCall","src":"3096:51:22"},"nativeSrc":"3096:51:22","nodeType":"YulExpressionStatement","src":"3096:51:22"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nativeSrc":"2950:203:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"3020:9:22","nodeType":"YulTypedName","src":"3020:9:22","type":""},{"name":"value0","nativeSrc":"3031:6:22","nodeType":"YulTypedName","src":"3031:6:22","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"3042:4:22","nodeType":"YulTypedName","src":"3042:4:22","type":""}],"src":"2950:203:22"}]},"contents":"{\n    { }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            mstore(0, array)\n            let data := keccak256(0, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _1 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _1) { start := add(start, 1) }\n            { sstore(start, 0) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, sub(shl(64, 1), 1)) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        srcOffset := 0x20\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 0x20)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n}","id":22,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"60806040526000600a5534801561001557600080fd5b50604051612ca4380380612ca48339810160408190526100349161014c565b336040518060400160405280600d81526020016c13995e1d149bdd5b9908139195609a1b81525060405180604001604052806005815260200164139493919560da1b8152508160009081610088919061021b565b506001610095828261021b565b50506001600755506001600160a01b0381166100cb57604051631e4fbdf760e01b81526000600482015260240160405180910390fd5b6100d4816100fa565b50600980546001600160a01b0319166001600160a01b03929092169190911790556102d9565b600880546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b60006020828403121561015e57600080fd5b81516001600160a01b038116811461017557600080fd5b9392505050565b634e487b7160e01b600052604160045260246000fd5b600181811c908216806101a657607f821691505b6020821081036101c657634e487b7160e01b600052602260045260246000fd5b50919050565b601f82111561021657806000526020600020601f840160051c810160208510156101f35750805b601f840160051c820191505b8181101561021357600081556001016101ff565b50505b505050565b81516001600160401b038111156102345761023461017c565b610248816102428454610192565b846101cc565b6020601f82116001811461027c57600083156102645750848201515b600019600385901b1c1916600184901b178455610213565b600084815260208120601f198516915b828110156102ac578785015182556020948501946001909201910161028c565b50848210156102ca5786840151600019600387901b60f8161c191681555b50505050600190811b01905550565b6129bc806102e86000396000f3fe608060405234801561001057600080fd5b50600436106101c45760003560e01c8063715018a6116100f9578063bd228bbd11610097578063e985e9c511610071578063e985e9c5146103b5578063ea52a156146103c8578063ee84eb7714610407578063f2fde38b1461041a57600080fd5b8063bd228bbd14610350578063c87b56dd1461038f578063cee28be1146103a257600080fd5b806395d89b41116100d357806395d89b41146103225780639af52a9114610282578063a22cb4651461032a578063b88d4fde1461033d57600080fd5b8063715018a6146102e95780638da5cb5b146102f15780639199aeca1461030257600080fd5b806341e36364116101665780635dc2e20d116101405780635dc2e20d1461026c5780636352211e146102b05780636e0690a2146102c357806370a08231146102d657600080fd5b806341e363641461028257806342842e0e1461028a5780634918c4f61461029d57600080fd5b8063095ea7b3116101a2578063095ea7b3146102315780632365dce21461024657806323b872dd1461025957806330c293de1461026c57600080fd5b806301ffc9a7146101c957806306fdde03146101f1578063081812fc14610206575b600080fd5b6101dc6101d7366004611fd1565b61042d565b60405190151581526020015b60405180910390f35b6101f961043e565b6040516101e8919061203e565b610219610214366004612051565b6104d0565b6040516001600160a01b0390911681526020016101e8565b61024461023f366004612086565b6104f9565b005b610219610254366004612051565b610508565b6102446102673660046120b0565b610532565b610274600581565b6040519081526020016101e8565b610274600181565b6102446102983660046120b0565b6105c2565b6102446102ab366004612135565b6105e2565b6102196102be366004612051565b61091d565b600954610219906001600160a01b031681565b6102746102e436600461218e565b610928565b610244610970565b6008546001600160a01b0316610219565b610315610310366004612237565b610984565b6040516101e891906122dd565b6101f9610e5a565b6102446103383660046123d0565b610e69565b61024461034b36600461240c565b610e74565b6101dc61035e366004612237565b600e602090815260009283526040909220815180830184018051928152908401929093019190912091525460ff1681565b6101f961039d366004612051565b610e8c565b6102446103b0366004612487565b610e97565b6101dc6103c336600461256d565b6112f4565b6101dc6103d6366004612237565b600d602090815260009283526040909220815180830184018051928152908401929093019190912091525460ff1681565b6102446104153660046125a0565b611322565b61024461042836600461218e565b611539565b600061043882611577565b92915050565b60606000805461044d90612624565b80601f016020809104026020016040519081016040528092919081815260200182805461047990612624565b80156104c65780601f1061049b576101008083540402835291602001916104c6565b820191906000526020600020905b8154815290600101906020018083116104a957829003601f168201915b5050505050905090565b60006104db8261159c565b506000828152600460205260409020546001600160a01b0316610438565b6105048282336115d5565b5050565b600b818154811061051857600080fd5b6000918252602090912001546001600160a01b0316905081565b6001600160a01b03821661056157604051633250574960e11b8152600060048201526024015b60405180910390fd5b600061056e8383336115e2565b9050836001600160a01b0316816001600160a01b0316146105bc576040516364283d7b60e01b81526001600160a01b0380861660048301526024820184905282166044820152606401610558565b50505050565b6105dd83838360405180602001604052806000815250610e74565b505050565b6105ea6116db565b6105f2611708565b6001600160a01b0384166000908152600e602052604090819020905161061b908490849061265e565b9081526040519081900360200190205460ff161561067b5760405162461bcd60e51b815260206004820152601860248201527f436f617374657220616c7265616479207363616e6e65642e00000000000000006044820152606401610558565b6001600160a01b0384166000908152600d60205260409081902090516106a4908490849061265e565b9081526040519081900360200190205460ff161561070f5760405162461bcd60e51b815260206004820152602260248201527f596f752063616e206e6f74207363616e20796f7572206f776e20436f61737465604482015261391760f11b6064820152608401610558565b600954604051630103c92b60e01b81526001600160a01b0386811660048301526000921690630103c92b90602401602060405180830381865afa15801561075a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061077e919061266e565b10156107c45760405162461bcd60e51b815260206004820152601560248201527424b73b30b634b2103ab9b2b91030b1b1b7bab73a1760591b6044820152606401610558565b600583111561083b5760405162461bcd60e51b815260206004820152603f60248201527f596f752068617665207265616368656420796f7572206461696c79206c696d6960448201527f74206f66207363616e732e2054727920616761696e20746f6d6f72726f772e006064820152608401610558565b6001600160a01b0384166000908152600e602052604090819020905160019190610868908590859061265e565b908152604051908190036020018120805492151560ff1990931692909217909155600c90610899908490849061265e565b9081526040519081900360209081018220600701805460018101825560009182529190200180546001600160a01b0387166001600160a01b03199091168117909155907fa102e7cfa1a123ee2b7875a4863e2da990b4480be2b4c43ced07d863be7c59269061090b90859085906126b0565b60405180910390a26105bc6001600755565b60006104388261159c565b60006001600160a01b038216610954576040516322718ad960e21b815260006004820152602401610558565b506001600160a01b031660009081526003602052604090205490565b6109786116db565b6109826000611732565b565b6109de6040518061010001604052806060815260200160608152602001606081526020016060815260200160006001600160a01b031681526020016060815260200160006001600160a01b03168152602001606081525090565b6109e66116db565b6001600160a01b0383166000908152600d6020526040908190209051610a0d9084906126c4565b9081526040519081900360200190205460ff1680610a6157506001600160a01b0383166000908152600e6020526040908190209051610a4d9084906126c4565b9081526040519081900360200190205460ff165b610ac15760405162461bcd60e51b815260206004820152602b60248201527f436f6173746572206173736574206e6f7420666f756e6420696e20796f75722060448201526a31b7b63632b1ba34b7b71760a91b6064820152608401610558565b6000600c83604051610ad391906126c4565b908152602001604051809103902060405180610100016040529081600082018054610afd90612624565b80601f0160208091040260200160405190810160405280929190818152602001828054610b2990612624565b8015610b765780601f10610b4b57610100808354040283529160200191610b76565b820191906000526020600020905b815481529060010190602001808311610b5957829003601f168201915b50505050508152602001600182018054610b8f90612624565b80601f0160208091040260200160405190810160405280929190818152602001828054610bbb90612624565b8015610c085780601f10610bdd57610100808354040283529160200191610c08565b820191906000526020600020905b815481529060010190602001808311610beb57829003601f168201915b50505050508152602001600282018054610c2190612624565b80601f0160208091040260200160405190810160405280929190818152602001828054610c4d90612624565b8015610c9a5780601f10610c6f57610100808354040283529160200191610c9a565b820191906000526020600020905b815481529060010190602001808311610c7d57829003601f168201915b50505050508152602001600382018054610cb390612624565b80601f0160208091040260200160405190810160405280929190818152602001828054610cdf90612624565b8015610d2c5780601f10610d0157610100808354040283529160200191610d2c565b820191906000526020600020905b815481529060010190602001808311610d0f57829003601f168201915b505050918352505060048201546001600160a01b03166020820152600582018054604090920191610d5c90612624565b80601f0160208091040260200160405190810160405280929190818152602001828054610d8890612624565b8015610dd55780601f10610daa57610100808354040283529160200191610dd5565b820191906000526020600020905b815481529060010190602001808311610db857829003601f168201915b505050918352505060068201546001600160a01b03166020808301919091526007830180546040805182850281018501825282815294019392830182828015610e4757602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311610e29575b5050509190925250919695505050505050565b60606001805461044d90612624565b610504338383611784565b610e7f848484610532565b6105bc3385858585611823565b60606104388261194d565b610e9f6116db565b610ea7611708565b600c8282604051610eb992919061265e565b9081526040519081900360200190208054610ed390612624565b159050610f1b5760405162461bcd60e51b815260206004820152601660248201527521b7b0b9ba32b91030b63932b0b23c9032bc34b9ba1760511b6044820152606401610558565b600954604051630103c92b60e01b81526001600160a01b038b811660048301526005921690630103c92b90602401602060405180830381865afa158015610f66573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f8a919061266e565b1015610fd05760405162461bcd60e51b815260206004820152601560248201527424b739bab33334b1b4b2b73a103130b630b731b29760591b6044820152606401610558565b600a8054906000610fe0836126e0565b9091555050600a54610ff28a82611a5e565b6110328186868080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250611a7892505050565b60405180610100016040528084848080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250505090825250604080516020601f8d018190048102820181019092528b815291810191908c908c9081908401838280828437600092019190915250505090825250604080516020601f8b0181900481028201810190925289815291810191908a908a9081908401838280828437600092019190915250505090825250604080516020601f89018190048102820181019092528781529181019190889088908190840183828082843760009201829052509385525050506001600160a01b038d1660208084019190915260408051808301825283815281850152606084018390528051928352908201815260809092015251600c90611172908690869061265e565b9081526040519081900360200190208151819061118f908261274e565b50602082015160018201906111a4908261274e565b50604082015160028201906111b9908261274e565b50606082015160038201906111ce908261274e565b5060808201516004820180546001600160a01b0319166001600160a01b0390921691909117905560a08201516005820190611209908261274e565b5060c08201516006820180546001600160a01b0319166001600160a01b0390921691909117905560e0820151805161124b916007840191602090910190611f41565b5050506001600160a01b038a166000908152600d60205260409081902090516001919061127b908690869061265e565b908152604051908190036020018120805492151560ff19909316929092179091556001600160a01b038b16907f371f376692dd846fa34380a8fd44c6a140dc5cd442cd8ae5657963685f17ebed906112d690869086906126b0565b60405180910390a2506112e96001600755565b505050505050505050565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b61132a6116db565b611332611708565b600954604051630103c92b60e01b81526001600160a01b0387811660048301526001921690630103c92b90602401602060405180830381865afa15801561137d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113a1919061266e565b10156113e75760405162461bcd60e51b815260206004820152601560248201527424b739bab33334b1b4b2b73a103130b630b731b29760591b6044820152606401610558565b6000600c85856040516113fb92919061265e565b9081526020016040518091039020905080600501805461141a90612624565b15905061145f5760405162461bcd60e51b8152602060048201526013602482015272105cdcd95d08185b1c9958591e481b985b5959606a1b6044820152606401610558565b60048101546001600160a01b03166114b95760405162461bcd60e51b815260206004820152601760248201527f436f617374657220646f6573206e6f742065786973742e0000000000000000006044820152606401610558565b600581016114c883858361280c565b506006810180546001600160a01b0319166001600160a01b0388169081179091556040517f8ddc804fe891e93143e1ff64637459a983d0c09831f8c83fa2264ddf2e46932e9061151f9088908890889088906128cb565b60405180910390a2506115326001600755565b5050505050565b6115416116db565b6001600160a01b03811661156b57604051631e4fbdf760e01b815260006004820152602401610558565b61157481611732565b50565b60006001600160e01b03198216632483248360e11b1480610438575061043882611ac8565b6000818152600260205260408120546001600160a01b03168061043857604051637e27328960e01b815260048101849052602401610558565b6105dd8383836001611b18565b6000828152600260205260408120546001600160a01b039081169083161561160f5761160f818486611c1e565b6001600160a01b0381161561164d5761162c600085600080611b18565b6001600160a01b038116600090815260036020526040902080546000190190555b6001600160a01b0385161561167c576001600160a01b0385166000908152600360205260409020805460010190555b60008481526002602052604080822080546001600160a01b0319166001600160a01b0389811691821790925591518793918516917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4949350505050565b6008546001600160a01b031633146109825760405163118cdaa760e01b8152336004820152602401610558565b60026007540361172b57604051633ee5aeb560e01b815260040160405180910390fd5b6002600755565b600880546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6001600160a01b0382166117b657604051630b61174360e31b81526001600160a01b0383166004820152602401610558565b6001600160a01b03838116600081815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b6001600160a01b0383163b1561153257604051630a85bd0160e11b81526001600160a01b0384169063150b7a02906118659088908890879087906004016128fd565b6020604051808303816000875af19250505080156118a0575060408051601f3d908101601f1916820190925261189d9181019061293a565b60015b611909573d8080156118ce576040519150601f19603f3d011682016040523d82523d6000602084013e6118d3565b606091505b50805160000361190157604051633250574960e11b81526001600160a01b0385166004820152602401610558565b805181602001fd5b6001600160e01b03198116630a85bd0160e11b1461194557604051633250574960e11b81526001600160a01b0385166004820152602401610558565b505050505050565b60606119588261159c565b506000828152600660205260408120805461197290612624565b80601f016020809104026020016040519081016040528092919081815260200182805461199e90612624565b80156119eb5780601f106119c0576101008083540402835291602001916119eb565b820191906000526020600020905b8154815290600101906020018083116119ce57829003601f168201915b505050505090506000611a0960408051602081019091526000815290565b90508051600003611a1b575092915050565b815115611a4d578082604051602001611a35929190612957565b60405160208183030381529060405292505050919050565b611a5684611c82565b949350505050565b610504828260405180602001604052806000815250611cf7565b6000828152600660205260409020611a90828261274e565b506040518281527ff8e1a15aba9398e019f0b49df1a4fde98ee17ae345cb5f6b5e2c27f5033e8ce79060200160405180910390a15050565b60006001600160e01b031982166380ac58cd60e01b1480611af957506001600160e01b03198216635b5e139f60e01b145b8061043857506301ffc9a760e01b6001600160e01b0319831614610438565b8080611b2c57506001600160a01b03821615155b15611bee576000611b3c8461159c565b90506001600160a01b03831615801590611b685750826001600160a01b0316816001600160a01b031614155b8015611b7b5750611b7981846112f4565b155b15611ba45760405163a9fbf51f60e01b81526001600160a01b0384166004820152602401610558565b8115611bec5783856001600160a01b0316826001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45b505b5050600090815260046020526040902080546001600160a01b0319166001600160a01b0392909216919091179055565b611c29838383611d0f565b6105dd576001600160a01b038316611c5757604051637e27328960e01b815260048101829052602401610558565b60405163177e802f60e01b81526001600160a01b038316600482015260248101829052604401610558565b6060611c8d8261159c565b506000611ca560408051602081019091526000815290565b90506000815111611cc55760405180602001604052806000815250611cf0565b80611ccf84611d72565b604051602001611ce0929190612957565b6040516020818303038152906040525b9392505050565b611d018383611e04565b6105dd336000858585611823565b60006001600160a01b03831615801590611a565750826001600160a01b0316846001600160a01b03161480611d495750611d4984846112f4565b80611a565750506000908152600460205260409020546001600160a01b03908116911614919050565b60606000611d7f83611e69565b60010190506000816001600160401b03811115611d9e57611d9e6121a9565b6040519080825280601f01601f191660200182016040528015611dc8576020820181803683370190505b5090508181016020015b600019016f181899199a1a9b1b9c1cb0b131b232b360811b600a86061a8153600a8504945084611dd257509392505050565b6001600160a01b038216611e2e57604051633250574960e11b815260006004820152602401610558565b6000611e3c838360006115e2565b90506001600160a01b038116156105dd576040516339e3563760e11b815260006004820152602401610558565b60008072184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b8310611ea85772184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b830492506040015b6d04ee2d6d415b85acef81000000008310611ed4576d04ee2d6d415b85acef8100000000830492506020015b662386f26fc100008310611ef257662386f26fc10000830492506010015b6305f5e1008310611f0a576305f5e100830492506008015b6127108310611f1e57612710830492506004015b60648310611f30576064830492506002015b600a83106104385760010192915050565b828054828255906000526020600020908101928215611f96579160200282015b82811115611f9657825182546001600160a01b0319166001600160a01b03909116178255602090920191600190910190611f61565b50611fa2929150611fa6565b5090565b5b80821115611fa25760008155600101611fa7565b6001600160e01b03198116811461157457600080fd5b600060208284031215611fe357600080fd5b8135611cf081611fbb565b60005b83811015612009578181015183820152602001611ff1565b50506000910152565b6000815180845261202a816020860160208601611fee565b601f01601f19169290920160200192915050565b602081526000611cf06020830184612012565b60006020828403121561206357600080fd5b5035919050565b80356001600160a01b038116811461208157600080fd5b919050565b6000806040838503121561209957600080fd5b6120a28361206a565b946020939093013593505050565b6000806000606084860312156120c557600080fd5b6120ce8461206a565b92506120dc6020850161206a565b929592945050506040919091013590565b60008083601f8401126120ff57600080fd5b5081356001600160401b0381111561211657600080fd5b60208301915083602082850101111561212e57600080fd5b9250929050565b6000806000806060858703121561214b57600080fd5b6121548561206a565b93506020850135925060408501356001600160401b0381111561217657600080fd5b612182878288016120ed565b95989497509550505050565b6000602082840312156121a057600080fd5b611cf08261206a565b634e487b7160e01b600052604160045260246000fd5b6000806001600160401b038411156121d9576121d96121a9565b50604051601f19601f85018116603f011681018181106001600160401b0382111715612207576122076121a9565b60405283815290508082840185101561221f57600080fd5b83836020830137600060208583010152509392505050565b6000806040838503121561224a57600080fd5b6122538361206a565b915060208301356001600160401b0381111561226e57600080fd5b8301601f8101851361227f57600080fd5b61228e858235602084016121bf565b9150509250929050565b600081518084526020840193506020830160005b828110156122d35781516001600160a01b03168652602095860195909101906001016122ac565b5093949350505050565b602081526000825161010060208401526122fb610120840182612012565b90506020840151601f198483030160408501526123188282612012565b9150506040840151601f198483030160608501526123368282612012565b9150506060840151601f198483030160808501526123548282612012565b915050608084015161237160a08501826001600160a01b03169052565b5060a0840151838203601f190160c085015261238d8282612012565b91505060c08401516123aa60e08501826001600160a01b03169052565b5060e0840151838203601f19016101008501526123c78282612298565b95945050505050565b600080604083850312156123e357600080fd5b6123ec8361206a565b91506020830135801515811461240157600080fd5b809150509250929050565b6000806000806080858703121561242257600080fd5b61242b8561206a565b93506124396020860161206a565b92506040850135915060608501356001600160401b0381111561245b57600080fd5b8501601f8101871361246c57600080fd5b61247b878235602084016121bf565b91505092959194509250565b600080600080600080600080600060a08a8c0312156124a557600080fd5b6124ae8a61206a565b985060208a01356001600160401b038111156124c957600080fd5b6124d58c828d016120ed565b90995097505060408a01356001600160401b038111156124f457600080fd5b6125008c828d016120ed565b90975095505060608a01356001600160401b0381111561251f57600080fd5b61252b8c828d016120ed565b90955093505060808a01356001600160401b0381111561254a57600080fd5b6125568c828d016120ed565b915080935050809150509295985092959850929598565b6000806040838503121561258057600080fd5b6125898361206a565b91506125976020840161206a565b90509250929050565b6000806000806000606086880312156125b857600080fd5b6125c18661206a565b945060208601356001600160401b038111156125dc57600080fd5b6125e8888289016120ed565b90955093505060408601356001600160401b0381111561260757600080fd5b612613888289016120ed565b969995985093965092949392505050565b600181811c9082168061263857607f821691505b60208210810361265857634e487b7160e01b600052602260045260246000fd5b50919050565b8183823760009101908152919050565b60006020828403121561268057600080fd5b5051919050565b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b602081526000611a56602083018486612687565b600082516126d6818460208701611fee565b9190910192915050565b60006001820161270057634e487b7160e01b600052601160045260246000fd5b5060010190565b601f8211156105dd57806000526020600020601f840160051c8101602085101561272e5750805b601f840160051c820191505b81811015611532576000815560010161273a565b81516001600160401b03811115612767576127676121a9565b61277b816127758454612624565b84612707565b6020601f8211600181146127af57600083156127975750848201515b600019600385901b1c1916600184901b178455611532565b600084815260208120601f198516915b828110156127df57878501518255602094850194600190920191016127bf565b50848210156127fd5786840151600019600387901b60f8161c191681555b50505050600190811b01905550565b6001600160401b03831115612823576128236121a9565b612837836128318354612624565b83612707565b6000601f84116001811461286b57600085156128535750838201355b600019600387901b1c1916600186901b178355611532565b600083815260209020601f19861690835b8281101561289c578685013582556020948501946001909201910161287c565b50868210156128b95760001960f88860031b161c19848701351681555b505060018560011b0183555050505050565b6040815260006128df604083018688612687565b82810360208401526128f2818587612687565b979650505050505050565b6001600160a01b038581168252841660208201526040810183905260806060820181905260009061293090830184612012565b9695505050505050565b60006020828403121561294c57600080fd5b8151611cf081611fbb565b60008351612969818460208801611fee565b83519083019061297d818360208801611fee565b0194935050505056fea26469706673582212206cd6cacfcc90718978620ebe7b1b015c84f6bdb38f5eb8ee4dc4227ed0cf8cf564736f6c634300081b0033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 PUSH1 0xA SSTORE CALLVALUE DUP1 ISZERO PUSH2 0x15 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x2CA4 CODESIZE SUB DUP1 PUSH2 0x2CA4 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x34 SWAP2 PUSH2 0x14C JUMP JUMPDEST CALLER PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xD DUP2 MSTORE PUSH1 0x20 ADD PUSH13 0x13995E1D149BDD5B9908139195 PUSH1 0x9A SHL DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5 DUP2 MSTORE PUSH1 0x20 ADD PUSH5 0x1394939195 PUSH1 0xDA SHL DUP2 MSTORE POP DUP2 PUSH1 0x0 SWAP1 DUP2 PUSH2 0x88 SWAP2 SWAP1 PUSH2 0x21B JUMP JUMPDEST POP PUSH1 0x1 PUSH2 0x95 DUP3 DUP3 PUSH2 0x21B JUMP JUMPDEST POP POP PUSH1 0x1 PUSH1 0x7 SSTORE POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xCB JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xD4 DUP2 PUSH2 0xFA JUMP JUMPDEST POP PUSH1 0x9 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH2 0x2D9 JUMP JUMPDEST PUSH1 0x8 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x15E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x175 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x1A6 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1C6 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x216 JUMPI DUP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x1F3 JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x213 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x1FF JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x234 JUMPI PUSH2 0x234 PUSH2 0x17C JUMP JUMPDEST PUSH2 0x248 DUP2 PUSH2 0x242 DUP5 SLOAD PUSH2 0x192 JUMP JUMPDEST DUP5 PUSH2 0x1CC JUMP JUMPDEST PUSH1 0x20 PUSH1 0x1F DUP3 GT PUSH1 0x1 DUP2 EQ PUSH2 0x27C JUMPI PUSH1 0x0 DUP4 ISZERO PUSH2 0x264 JUMPI POP DUP5 DUP3 ADD MLOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP6 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP5 SWAP1 SHL OR DUP5 SSTORE PUSH2 0x213 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP6 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x2AC JUMPI DUP8 DUP6 ADD MLOAD DUP3 SSTORE PUSH1 0x20 SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP3 ADD SWAP2 ADD PUSH2 0x28C JUMP JUMPDEST POP DUP5 DUP3 LT ISZERO PUSH2 0x2CA JUMPI DUP7 DUP5 ADD MLOAD PUSH1 0x0 NOT PUSH1 0x3 DUP8 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0x29BC DUP1 PUSH2 0x2E8 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1C4 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0xF9 JUMPI DUP1 PUSH4 0xBD228BBD GT PUSH2 0x97 JUMPI DUP1 PUSH4 0xE985E9C5 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x3B5 JUMPI DUP1 PUSH4 0xEA52A156 EQ PUSH2 0x3C8 JUMPI DUP1 PUSH4 0xEE84EB77 EQ PUSH2 0x407 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x41A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xBD228BBD EQ PUSH2 0x350 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x38F JUMPI DUP1 PUSH4 0xCEE28BE1 EQ PUSH2 0x3A2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x95D89B41 GT PUSH2 0xD3 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x322 JUMPI DUP1 PUSH4 0x9AF52A91 EQ PUSH2 0x282 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x32A JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x33D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x2E9 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x2F1 JUMPI DUP1 PUSH4 0x9199AECA EQ PUSH2 0x302 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x41E36364 GT PUSH2 0x166 JUMPI DUP1 PUSH4 0x5DC2E20D GT PUSH2 0x140 JUMPI DUP1 PUSH4 0x5DC2E20D EQ PUSH2 0x26C JUMPI DUP1 PUSH4 0x6352211E EQ PUSH2 0x2B0 JUMPI DUP1 PUSH4 0x6E0690A2 EQ PUSH2 0x2C3 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x2D6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x41E36364 EQ PUSH2 0x282 JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x28A JUMPI DUP1 PUSH4 0x4918C4F6 EQ PUSH2 0x29D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x95EA7B3 GT PUSH2 0x1A2 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x231 JUMPI DUP1 PUSH4 0x2365DCE2 EQ PUSH2 0x246 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x259 JUMPI DUP1 PUSH4 0x30C293DE EQ PUSH2 0x26C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x1C9 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x1F1 JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x206 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1DC PUSH2 0x1D7 CALLDATASIZE PUSH1 0x4 PUSH2 0x1FD1 JUMP JUMPDEST PUSH2 0x42D JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1F9 PUSH2 0x43E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E8 SWAP2 SWAP1 PUSH2 0x203E JUMP JUMPDEST PUSH2 0x219 PUSH2 0x214 CALLDATASIZE PUSH1 0x4 PUSH2 0x2051 JUMP JUMPDEST PUSH2 0x4D0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1E8 JUMP JUMPDEST PUSH2 0x244 PUSH2 0x23F CALLDATASIZE PUSH1 0x4 PUSH2 0x2086 JUMP JUMPDEST PUSH2 0x4F9 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x219 PUSH2 0x254 CALLDATASIZE PUSH1 0x4 PUSH2 0x2051 JUMP JUMPDEST PUSH2 0x508 JUMP JUMPDEST PUSH2 0x244 PUSH2 0x267 CALLDATASIZE PUSH1 0x4 PUSH2 0x20B0 JUMP JUMPDEST PUSH2 0x532 JUMP JUMPDEST PUSH2 0x274 PUSH1 0x5 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1E8 JUMP JUMPDEST PUSH2 0x274 PUSH1 0x1 DUP2 JUMP JUMPDEST PUSH2 0x244 PUSH2 0x298 CALLDATASIZE PUSH1 0x4 PUSH2 0x20B0 JUMP JUMPDEST PUSH2 0x5C2 JUMP JUMPDEST PUSH2 0x244 PUSH2 0x2AB CALLDATASIZE PUSH1 0x4 PUSH2 0x2135 JUMP JUMPDEST PUSH2 0x5E2 JUMP JUMPDEST PUSH2 0x219 PUSH2 0x2BE CALLDATASIZE PUSH1 0x4 PUSH2 0x2051 JUMP JUMPDEST PUSH2 0x91D JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH2 0x219 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x274 PUSH2 0x2E4 CALLDATASIZE PUSH1 0x4 PUSH2 0x218E JUMP JUMPDEST PUSH2 0x928 JUMP JUMPDEST PUSH2 0x244 PUSH2 0x970 JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x219 JUMP JUMPDEST PUSH2 0x315 PUSH2 0x310 CALLDATASIZE PUSH1 0x4 PUSH2 0x2237 JUMP JUMPDEST PUSH2 0x984 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E8 SWAP2 SWAP1 PUSH2 0x22DD JUMP JUMPDEST PUSH2 0x1F9 PUSH2 0xE5A JUMP JUMPDEST PUSH2 0x244 PUSH2 0x338 CALLDATASIZE PUSH1 0x4 PUSH2 0x23D0 JUMP JUMPDEST PUSH2 0xE69 JUMP JUMPDEST PUSH2 0x244 PUSH2 0x34B CALLDATASIZE PUSH1 0x4 PUSH2 0x240C JUMP JUMPDEST PUSH2 0xE74 JUMP JUMPDEST PUSH2 0x1DC PUSH2 0x35E CALLDATASIZE PUSH1 0x4 PUSH2 0x2237 JUMP JUMPDEST PUSH1 0xE PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x40 SWAP1 SWAP3 KECCAK256 DUP2 MLOAD DUP1 DUP4 ADD DUP5 ADD DUP1 MLOAD SWAP3 DUP2 MSTORE SWAP1 DUP5 ADD SWAP3 SWAP1 SWAP4 ADD SWAP2 SWAP1 SWAP2 KECCAK256 SWAP2 MSTORE SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x1F9 PUSH2 0x39D CALLDATASIZE PUSH1 0x4 PUSH2 0x2051 JUMP JUMPDEST PUSH2 0xE8C JUMP JUMPDEST PUSH2 0x244 PUSH2 0x3B0 CALLDATASIZE PUSH1 0x4 PUSH2 0x2487 JUMP JUMPDEST PUSH2 0xE97 JUMP JUMPDEST PUSH2 0x1DC PUSH2 0x3C3 CALLDATASIZE PUSH1 0x4 PUSH2 0x256D JUMP JUMPDEST PUSH2 0x12F4 JUMP JUMPDEST PUSH2 0x1DC PUSH2 0x3D6 CALLDATASIZE PUSH1 0x4 PUSH2 0x2237 JUMP JUMPDEST PUSH1 0xD PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x40 SWAP1 SWAP3 KECCAK256 DUP2 MLOAD DUP1 DUP4 ADD DUP5 ADD DUP1 MLOAD SWAP3 DUP2 MSTORE SWAP1 DUP5 ADD SWAP3 SWAP1 SWAP4 ADD SWAP2 SWAP1 SWAP2 KECCAK256 SWAP2 MSTORE SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x244 PUSH2 0x415 CALLDATASIZE PUSH1 0x4 PUSH2 0x25A0 JUMP JUMPDEST PUSH2 0x1322 JUMP JUMPDEST PUSH2 0x244 PUSH2 0x428 CALLDATASIZE PUSH1 0x4 PUSH2 0x218E JUMP JUMPDEST PUSH2 0x1539 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x438 DUP3 PUSH2 0x1577 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 SLOAD PUSH2 0x44D SWAP1 PUSH2 0x2624 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x479 SWAP1 PUSH2 0x2624 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x4C6 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x49B JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x4C6 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x4A9 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4DB DUP3 PUSH2 0x159C JUMP JUMPDEST POP PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x438 JUMP JUMPDEST PUSH2 0x504 DUP3 DUP3 CALLER PUSH2 0x15D5 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0xB DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x518 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 POP DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x561 JUMPI PUSH1 0x40 MLOAD PUSH4 0x32505749 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x56E DUP4 DUP4 CALLER PUSH2 0x15E2 JUMP JUMPDEST SWAP1 POP DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x5BC JUMPI PUSH1 0x40 MLOAD PUSH4 0x64283D7B PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP7 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP5 SWAP1 MSTORE DUP3 AND PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x558 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x5DD DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0xE74 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x5EA PUSH2 0x16DB JUMP JUMPDEST PUSH2 0x5F2 PUSH2 0x1708 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 SWAP1 MLOAD PUSH2 0x61B SWAP1 DUP5 SWAP1 DUP5 SWAP1 PUSH2 0x265E JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x67B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x436F617374657220616C7265616479207363616E6E65642E0000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x558 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 SWAP1 MLOAD PUSH2 0x6A4 SWAP1 DUP5 SWAP1 DUP5 SWAP1 PUSH2 0x265E JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x70F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x596F752063616E206E6F74207363616E20796F7572206F776E20436F61737465 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x3917 PUSH1 0xF1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x558 JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH1 0x40 MLOAD PUSH4 0x103C92B PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x0 SWAP3 AND SWAP1 PUSH4 0x103C92B SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x75A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x77E SWAP2 SWAP1 PUSH2 0x266E JUMP JUMPDEST LT ISZERO PUSH2 0x7C4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x24B73B30B634B2103AB9B2B91030B1B1B7BAB73A17 PUSH1 0x59 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x558 JUMP JUMPDEST PUSH1 0x5 DUP4 GT ISZERO PUSH2 0x83B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x596F752068617665207265616368656420796F7572206461696C79206C696D69 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x74206F66207363616E732E2054727920616761696E20746F6D6F72726F772E00 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x558 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 SWAP1 MLOAD PUSH1 0x1 SWAP2 SWAP1 PUSH2 0x868 SWAP1 DUP6 SWAP1 DUP6 SWAP1 PUSH2 0x265E JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD DUP2 KECCAK256 DUP1 SLOAD SWAP3 ISZERO ISZERO PUSH1 0xFF NOT SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 SSTORE PUSH1 0xC SWAP1 PUSH2 0x899 SWAP1 DUP5 SWAP1 DUP5 SWAP1 PUSH2 0x265E JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 SWAP1 DUP2 ADD DUP3 KECCAK256 PUSH1 0x7 ADD DUP1 SLOAD PUSH1 0x1 DUP2 ADD DUP3 SSTORE PUSH1 0x0 SWAP2 DUP3 MSTORE SWAP2 SWAP1 KECCAK256 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 SWAP2 AND DUP2 OR SWAP1 SWAP2 SSTORE SWAP1 PUSH32 0xA102E7CFA1A123EE2B7875A4863E2DA990B4480BE2B4C43CED07D863BE7C5926 SWAP1 PUSH2 0x90B SWAP1 DUP6 SWAP1 DUP6 SWAP1 PUSH2 0x26B0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH2 0x5BC PUSH1 0x1 PUSH1 0x7 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH2 0x438 DUP3 PUSH2 0x159C JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x954 JUMPI PUSH1 0x40 MLOAD PUSH4 0x22718AD9 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x558 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x978 PUSH2 0x16DB JUMP JUMPDEST PUSH2 0x982 PUSH1 0x0 PUSH2 0x1732 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x9DE PUSH1 0x40 MLOAD DUP1 PUSH2 0x100 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x60 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH2 0x9E6 PUSH2 0x16DB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 SWAP1 MLOAD PUSH2 0xA0D SWAP1 DUP5 SWAP1 PUSH2 0x26C4 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP1 PUSH2 0xA61 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 SWAP1 MLOAD PUSH2 0xA4D SWAP1 DUP5 SWAP1 PUSH2 0x26C4 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST PUSH2 0xAC1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x436F6173746572206173736574206E6F7420666F756E6420696E20796F757220 PUSH1 0x44 DUP3 ADD MSTORE PUSH11 0x31B7B63632B1BA34B7B717 PUSH1 0xA9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x558 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xC DUP4 PUSH1 0x40 MLOAD PUSH2 0xAD3 SWAP2 SWAP1 PUSH2 0x26C4 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH2 0x100 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD DUP1 SLOAD PUSH2 0xAFD SWAP1 PUSH2 0x2624 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xB29 SWAP1 PUSH2 0x2624 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xB76 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xB4B JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xB76 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xB59 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD DUP1 SLOAD PUSH2 0xB8F SWAP1 PUSH2 0x2624 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xBBB SWAP1 PUSH2 0x2624 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xC08 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xBDD JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xC08 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xBEB JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD DUP1 SLOAD PUSH2 0xC21 SWAP1 PUSH2 0x2624 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xC4D SWAP1 PUSH2 0x2624 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xC9A JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xC6F JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xC9A JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xC7D JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD DUP1 SLOAD PUSH2 0xCB3 SWAP1 PUSH2 0x2624 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xCDF SWAP1 PUSH2 0x2624 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xD2C JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xD01 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xD2C JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xD0F JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP SWAP2 DUP4 MSTORE POP POP PUSH1 0x4 DUP3 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x5 DUP3 ADD DUP1 SLOAD PUSH1 0x40 SWAP1 SWAP3 ADD SWAP2 PUSH2 0xD5C SWAP1 PUSH2 0x2624 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xD88 SWAP1 PUSH2 0x2624 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xDD5 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xDAA JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xDD5 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xDB8 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP SWAP2 DUP4 MSTORE POP POP PUSH1 0x6 DUP3 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x20 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x7 DUP4 ADD DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD DUP3 DUP6 MUL DUP2 ADD DUP6 ADD DUP3 MSTORE DUP3 DUP2 MSTORE SWAP5 ADD SWAP4 SWAP3 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0xE47 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xE29 JUMPI JUMPDEST POP POP POP SWAP2 SWAP1 SWAP3 MSTORE POP SWAP2 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x44D SWAP1 PUSH2 0x2624 JUMP JUMPDEST PUSH2 0x504 CALLER DUP4 DUP4 PUSH2 0x1784 JUMP JUMPDEST PUSH2 0xE7F DUP5 DUP5 DUP5 PUSH2 0x532 JUMP JUMPDEST PUSH2 0x5BC CALLER DUP6 DUP6 DUP6 DUP6 PUSH2 0x1823 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x438 DUP3 PUSH2 0x194D JUMP JUMPDEST PUSH2 0xE9F PUSH2 0x16DB JUMP JUMPDEST PUSH2 0xEA7 PUSH2 0x1708 JUMP JUMPDEST PUSH1 0xC DUP3 DUP3 PUSH1 0x40 MLOAD PUSH2 0xEB9 SWAP3 SWAP2 SWAP1 PUSH2 0x265E JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 KECCAK256 DUP1 SLOAD PUSH2 0xED3 SWAP1 PUSH2 0x2624 JUMP JUMPDEST ISZERO SWAP1 POP PUSH2 0xF1B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x21B7B0B9BA32B91030B63932B0B23C9032BC34B9BA17 PUSH1 0x51 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x558 JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH1 0x40 MLOAD PUSH4 0x103C92B PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP12 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x5 SWAP3 AND SWAP1 PUSH4 0x103C92B SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xF66 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xF8A SWAP2 SWAP1 PUSH2 0x266E JUMP JUMPDEST LT ISZERO PUSH2 0xFD0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x24B739BAB33334B1B4B2B73A103130B630B731B297 PUSH1 0x59 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x558 JUMP JUMPDEST PUSH1 0xA DUP1 SLOAD SWAP1 PUSH1 0x0 PUSH2 0xFE0 DUP4 PUSH2 0x26E0 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0xA SLOAD PUSH2 0xFF2 DUP11 DUP3 PUSH2 0x1A5E JUMP JUMPDEST PUSH2 0x1032 DUP2 DUP7 DUP7 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP PUSH2 0x1A78 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH2 0x100 ADD PUSH1 0x40 MSTORE DUP1 DUP5 DUP5 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP POP POP SWAP1 DUP3 MSTORE POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F DUP14 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP12 DUP2 MSTORE SWAP2 DUP2 ADD SWAP2 SWAP1 DUP13 SWAP1 DUP13 SWAP1 DUP2 SWAP1 DUP5 ADD DUP4 DUP3 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP POP POP SWAP1 DUP3 MSTORE POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F DUP12 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP10 DUP2 MSTORE SWAP2 DUP2 ADD SWAP2 SWAP1 DUP11 SWAP1 DUP11 SWAP1 DUP2 SWAP1 DUP5 ADD DUP4 DUP3 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP POP POP SWAP1 DUP3 MSTORE POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F DUP10 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP8 DUP2 MSTORE SWAP2 DUP2 ADD SWAP2 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP2 SWAP1 DUP5 ADD DUP4 DUP3 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD DUP3 SWAP1 MSTORE POP SWAP4 DUP6 MSTORE POP POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP14 AND PUSH1 0x20 DUP1 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 DUP1 MLOAD DUP1 DUP4 ADD DUP3 MSTORE DUP4 DUP2 MSTORE DUP2 DUP6 ADD MSTORE PUSH1 0x60 DUP5 ADD DUP4 SWAP1 MSTORE DUP1 MLOAD SWAP3 DUP4 MSTORE SWAP1 DUP3 ADD DUP2 MSTORE PUSH1 0x80 SWAP1 SWAP3 ADD MSTORE MLOAD PUSH1 0xC SWAP1 PUSH2 0x1172 SWAP1 DUP7 SWAP1 DUP7 SWAP1 PUSH2 0x265E JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 KECCAK256 DUP2 MLOAD DUP2 SWAP1 PUSH2 0x118F SWAP1 DUP3 PUSH2 0x274E JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH1 0x1 DUP3 ADD SWAP1 PUSH2 0x11A4 SWAP1 DUP3 PUSH2 0x274E JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD PUSH1 0x2 DUP3 ADD SWAP1 PUSH2 0x11B9 SWAP1 DUP3 PUSH2 0x274E JUMP JUMPDEST POP PUSH1 0x60 DUP3 ADD MLOAD PUSH1 0x3 DUP3 ADD SWAP1 PUSH2 0x11CE SWAP1 DUP3 PUSH2 0x274E JUMP JUMPDEST POP PUSH1 0x80 DUP3 ADD MLOAD PUSH1 0x4 DUP3 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0xA0 DUP3 ADD MLOAD PUSH1 0x5 DUP3 ADD SWAP1 PUSH2 0x1209 SWAP1 DUP3 PUSH2 0x274E JUMP JUMPDEST POP PUSH1 0xC0 DUP3 ADD MLOAD PUSH1 0x6 DUP3 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0xE0 DUP3 ADD MLOAD DUP1 MLOAD PUSH2 0x124B SWAP2 PUSH1 0x7 DUP5 ADD SWAP2 PUSH1 0x20 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x1F41 JUMP JUMPDEST POP POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 SWAP1 MLOAD PUSH1 0x1 SWAP2 SWAP1 PUSH2 0x127B SWAP1 DUP7 SWAP1 DUP7 SWAP1 PUSH2 0x265E JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD DUP2 KECCAK256 DUP1 SLOAD SWAP3 ISZERO ISZERO PUSH1 0xFF NOT SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP12 AND SWAP1 PUSH32 0x371F376692DD846FA34380A8FD44C6A140DC5CD442CD8AE5657963685F17EBED SWAP1 PUSH2 0x12D6 SWAP1 DUP7 SWAP1 DUP7 SWAP1 PUSH2 0x26B0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP PUSH2 0x12E9 PUSH1 0x1 PUSH1 0x7 SSTORE JUMP JUMPDEST POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH2 0x132A PUSH2 0x16DB JUMP JUMPDEST PUSH2 0x1332 PUSH2 0x1708 JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH1 0x40 MLOAD PUSH4 0x103C92B PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x1 SWAP3 AND SWAP1 PUSH4 0x103C92B SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x137D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x13A1 SWAP2 SWAP1 PUSH2 0x266E JUMP JUMPDEST LT ISZERO PUSH2 0x13E7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x24B739BAB33334B1B4B2B73A103130B630B731B297 PUSH1 0x59 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x558 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xC DUP6 DUP6 PUSH1 0x40 MLOAD PUSH2 0x13FB SWAP3 SWAP2 SWAP1 PUSH2 0x265E JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 SWAP1 POP DUP1 PUSH1 0x5 ADD DUP1 SLOAD PUSH2 0x141A SWAP1 PUSH2 0x2624 JUMP JUMPDEST ISZERO SWAP1 POP PUSH2 0x145F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x105CDCD95D08185B1C9958591E481B985B5959 PUSH1 0x6A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x558 JUMP JUMPDEST PUSH1 0x4 DUP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x14B9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x436F617374657220646F6573206E6F742065786973742E000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x558 JUMP JUMPDEST PUSH1 0x5 DUP2 ADD PUSH2 0x14C8 DUP4 DUP6 DUP4 PUSH2 0x280C JUMP JUMPDEST POP PUSH1 0x6 DUP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD PUSH32 0x8DDC804FE891E93143E1FF64637459A983D0C09831F8C83FA2264DDF2E46932E SWAP1 PUSH2 0x151F SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH2 0x28CB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP PUSH2 0x1532 PUSH1 0x1 PUSH1 0x7 SSTORE JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH2 0x1541 PUSH2 0x16DB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x156B JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x558 JUMP JUMPDEST PUSH2 0x1574 DUP2 PUSH2 0x1732 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x24832483 PUSH1 0xE1 SHL EQ DUP1 PUSH2 0x438 JUMPI POP PUSH2 0x438 DUP3 PUSH2 0x1AC8 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 PUSH2 0x438 JUMPI PUSH1 0x40 MLOAD PUSH4 0x7E273289 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x558 JUMP JUMPDEST PUSH2 0x5DD DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x1B18 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP1 DUP4 AND ISZERO PUSH2 0x160F JUMPI PUSH2 0x160F DUP2 DUP5 DUP7 PUSH2 0x1C1E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO PUSH2 0x164D JUMPI PUSH2 0x162C PUSH1 0x0 DUP6 PUSH1 0x0 DUP1 PUSH2 0x1B18 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x0 NOT ADD SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND ISZERO PUSH2 0x167C JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 DUP2 AND SWAP2 DUP3 OR SWAP1 SWAP3 SSTORE SWAP2 MLOAD DUP8 SWAP4 SWAP2 DUP6 AND SWAP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 LOG4 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x982 JUMPI PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x558 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x7 SLOAD SUB PUSH2 0x172B JUMPI PUSH1 0x40 MLOAD PUSH4 0x3EE5AEB5 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x7 SSTORE JUMP JUMPDEST PUSH1 0x8 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x17B6 JUMPI PUSH1 0x40 MLOAD PUSH4 0xB611743 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x558 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP7 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP2 MLOAD SWAP2 DUP3 MSTORE PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND EXTCODESIZE ISZERO PUSH2 0x1532 JUMPI PUSH1 0x40 MLOAD PUSH4 0xA85BD01 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 PUSH4 0x150B7A02 SWAP1 PUSH2 0x1865 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP8 SWAP1 DUP8 SWAP1 PUSH1 0x4 ADD PUSH2 0x28FD JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x18A0 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x189D SWAP2 DUP2 ADD SWAP1 PUSH2 0x293A JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x1909 JUMPI RETURNDATASIZE DUP1 DUP1 ISZERO PUSH2 0x18CE JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x18D3 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP DUP1 MLOAD PUSH1 0x0 SUB PUSH2 0x1901 JUMPI PUSH1 0x40 MLOAD PUSH4 0x32505749 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x558 JUMP JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH4 0xA85BD01 PUSH1 0xE1 SHL EQ PUSH2 0x1945 JUMPI PUSH1 0x40 MLOAD PUSH4 0x32505749 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x558 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x1958 DUP3 PUSH2 0x159C JUMP JUMPDEST POP PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH2 0x1972 SWAP1 PUSH2 0x2624 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x199E SWAP1 PUSH2 0x2624 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x19EB JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x19C0 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x19EB JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x19CE JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP PUSH1 0x0 PUSH2 0x1A09 PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP2 MSTORE SWAP1 JUMP JUMPDEST SWAP1 POP DUP1 MLOAD PUSH1 0x0 SUB PUSH2 0x1A1B JUMPI POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP2 MLOAD ISZERO PUSH2 0x1A4D JUMPI DUP1 DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1A35 SWAP3 SWAP2 SWAP1 PUSH2 0x2957 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1A56 DUP5 PUSH2 0x1C82 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x504 DUP3 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x1CF7 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH2 0x1A90 DUP3 DUP3 PUSH2 0x274E JUMP JUMPDEST POP PUSH1 0x40 MLOAD DUP3 DUP2 MSTORE PUSH32 0xF8E1A15ABA9398E019F0B49DF1A4FDE98EE17AE345CB5F6B5E2C27F5033E8CE7 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x80AC58CD PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x1AF9 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x5B5E139F PUSH1 0xE0 SHL EQ JUMPDEST DUP1 PUSH2 0x438 JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ PUSH2 0x438 JUMP JUMPDEST DUP1 DUP1 PUSH2 0x1B2C JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND ISZERO ISZERO JUMPDEST ISZERO PUSH2 0x1BEE JUMPI PUSH1 0x0 PUSH2 0x1B3C DUP5 PUSH2 0x159C JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ISZERO DUP1 ISZERO SWAP1 PUSH2 0x1B68 JUMPI POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x1B7B JUMPI POP PUSH2 0x1B79 DUP2 DUP5 PUSH2 0x12F4 JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x1BA4 JUMPI PUSH1 0x40 MLOAD PUSH4 0xA9FBF51F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x558 JUMP JUMPDEST DUP2 ISZERO PUSH2 0x1BEC JUMPI DUP4 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP JUMPDEST POP POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x1C29 DUP4 DUP4 DUP4 PUSH2 0x1D0F JUMP JUMPDEST PUSH2 0x5DD JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x1C57 JUMPI PUSH1 0x40 MLOAD PUSH4 0x7E273289 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x558 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x177E802F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 ADD PUSH2 0x558 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x1C8D DUP3 PUSH2 0x159C JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0x1CA5 PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP2 MSTORE SWAP1 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT PUSH2 0x1CC5 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x1CF0 JUMP JUMPDEST DUP1 PUSH2 0x1CCF DUP5 PUSH2 0x1D72 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1CE0 SWAP3 SWAP2 SWAP1 PUSH2 0x2957 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x1D01 DUP4 DUP4 PUSH2 0x1E04 JUMP JUMPDEST PUSH2 0x5DD CALLER PUSH1 0x0 DUP6 DUP6 DUP6 PUSH2 0x1823 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ISZERO DUP1 ISZERO SWAP1 PUSH2 0x1A56 JUMPI POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 PUSH2 0x1D49 JUMPI POP PUSH2 0x1D49 DUP5 DUP5 PUSH2 0x12F4 JUMP JUMPDEST DUP1 PUSH2 0x1A56 JUMPI POP POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x1D7F DUP4 PUSH2 0x1E69 JUMP JUMPDEST PUSH1 0x1 ADD SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x1D9E JUMPI PUSH2 0x1D9E PUSH2 0x21A9 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1DC8 JUMPI PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP DUP2 DUP2 ADD PUSH1 0x20 ADD JUMPDEST PUSH1 0x0 NOT ADD PUSH16 0x181899199A1A9B1B9C1CB0B131B232B3 PUSH1 0x81 SHL PUSH1 0xA DUP7 MOD BYTE DUP2 MSTORE8 PUSH1 0xA DUP6 DIV SWAP5 POP DUP5 PUSH2 0x1DD2 JUMPI POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x1E2E JUMPI PUSH1 0x40 MLOAD PUSH4 0x32505749 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x558 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E3C DUP4 DUP4 PUSH1 0x0 PUSH2 0x15E2 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO PUSH2 0x5DD JUMPI PUSH1 0x40 MLOAD PUSH4 0x39E35637 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x558 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH19 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F01 PUSH1 0x40 SHL DUP4 LT PUSH2 0x1EA8 JUMPI PUSH19 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F01 PUSH1 0x40 SHL DUP4 DIV SWAP3 POP PUSH1 0x40 ADD JUMPDEST PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 LT PUSH2 0x1ED4 JUMPI PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 DIV SWAP3 POP PUSH1 0x20 ADD JUMPDEST PUSH7 0x2386F26FC10000 DUP4 LT PUSH2 0x1EF2 JUMPI PUSH7 0x2386F26FC10000 DUP4 DIV SWAP3 POP PUSH1 0x10 ADD JUMPDEST PUSH4 0x5F5E100 DUP4 LT PUSH2 0x1F0A JUMPI PUSH4 0x5F5E100 DUP4 DIV SWAP3 POP PUSH1 0x8 ADD JUMPDEST PUSH2 0x2710 DUP4 LT PUSH2 0x1F1E JUMPI PUSH2 0x2710 DUP4 DIV SWAP3 POP PUSH1 0x4 ADD JUMPDEST PUSH1 0x64 DUP4 LT PUSH2 0x1F30 JUMPI PUSH1 0x64 DUP4 DIV SWAP3 POP PUSH1 0x2 ADD JUMPDEST PUSH1 0xA DUP4 LT PUSH2 0x438 JUMPI PUSH1 0x1 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP1 SLOAD DUP3 DUP3 SSTORE SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP3 DUP3 ISZERO PUSH2 0x1F96 JUMPI SWAP2 PUSH1 0x20 MUL DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x1F96 JUMPI DUP3 MLOAD DUP3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND OR DUP3 SSTORE PUSH1 0x20 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x1F61 JUMP JUMPDEST POP PUSH2 0x1FA2 SWAP3 SWAP2 POP PUSH2 0x1FA6 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x1FA2 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x1FA7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x1574 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1FE3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1CF0 DUP2 PUSH2 0x1FBB JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2009 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1FF1 JUMP JUMPDEST POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0x202A DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x1FEE JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x1CF0 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2012 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2063 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x2081 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2099 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x20A2 DUP4 PUSH2 0x206A JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x20C5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x20CE DUP5 PUSH2 0x206A JUMP JUMPDEST SWAP3 POP PUSH2 0x20DC PUSH1 0x20 DUP6 ADD PUSH2 0x206A JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x20FF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x2116 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x212E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x60 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x214B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2154 DUP6 PUSH2 0x206A JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x2176 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2182 DUP8 DUP3 DUP9 ADD PUSH2 0x20ED JUMP JUMPDEST SWAP6 SWAP9 SWAP5 SWAP8 POP SWAP6 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x21A0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1CF0 DUP3 PUSH2 0x206A JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP5 GT ISZERO PUSH2 0x21D9 JUMPI PUSH2 0x21D9 PUSH2 0x21A9 JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH1 0x1F NOT PUSH1 0x1F DUP6 ADD DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD DUP2 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR ISZERO PUSH2 0x2207 JUMPI PUSH2 0x2207 PUSH2 0x21A9 JUMP JUMPDEST PUSH1 0x40 MSTORE DUP4 DUP2 MSTORE SWAP1 POP DUP1 DUP3 DUP5 ADD DUP6 LT ISZERO PUSH2 0x221F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 DUP4 PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP6 DUP4 ADD ADD MSTORE POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x224A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2253 DUP4 PUSH2 0x206A JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x226E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 ADD PUSH1 0x1F DUP2 ADD DUP6 SGT PUSH2 0x227F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x228E DUP6 DUP3 CALLDATALOAD PUSH1 0x20 DUP5 ADD PUSH2 0x21BF JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP PUSH1 0x20 DUP4 ADD PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x22D3 JUMPI DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP7 MSTORE PUSH1 0x20 SWAP6 DUP7 ADD SWAP6 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x22AC JUMP JUMPDEST POP SWAP4 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD PUSH2 0x100 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x22FB PUSH2 0x120 DUP5 ADD DUP3 PUSH2 0x2012 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP5 ADD MLOAD PUSH1 0x1F NOT DUP5 DUP4 SUB ADD PUSH1 0x40 DUP6 ADD MSTORE PUSH2 0x2318 DUP3 DUP3 PUSH2 0x2012 JUMP JUMPDEST SWAP2 POP POP PUSH1 0x40 DUP5 ADD MLOAD PUSH1 0x1F NOT DUP5 DUP4 SUB ADD PUSH1 0x60 DUP6 ADD MSTORE PUSH2 0x2336 DUP3 DUP3 PUSH2 0x2012 JUMP JUMPDEST SWAP2 POP POP PUSH1 0x60 DUP5 ADD MLOAD PUSH1 0x1F NOT DUP5 DUP4 SUB ADD PUSH1 0x80 DUP6 ADD MSTORE PUSH2 0x2354 DUP3 DUP3 PUSH2 0x2012 JUMP JUMPDEST SWAP2 POP POP PUSH1 0x80 DUP5 ADD MLOAD PUSH2 0x2371 PUSH1 0xA0 DUP6 ADD DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 MSTORE JUMP JUMPDEST POP PUSH1 0xA0 DUP5 ADD MLOAD DUP4 DUP3 SUB PUSH1 0x1F NOT ADD PUSH1 0xC0 DUP6 ADD MSTORE PUSH2 0x238D DUP3 DUP3 PUSH2 0x2012 JUMP JUMPDEST SWAP2 POP POP PUSH1 0xC0 DUP5 ADD MLOAD PUSH2 0x23AA PUSH1 0xE0 DUP6 ADD DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 MSTORE JUMP JUMPDEST POP PUSH1 0xE0 DUP5 ADD MLOAD DUP4 DUP3 SUB PUSH1 0x1F NOT ADD PUSH2 0x100 DUP6 ADD MSTORE PUSH2 0x23C7 DUP3 DUP3 PUSH2 0x2298 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x23E3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x23EC DUP4 PUSH2 0x206A JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x2401 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x2422 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x242B DUP6 PUSH2 0x206A JUMP JUMPDEST SWAP4 POP PUSH2 0x2439 PUSH1 0x20 DUP7 ADD PUSH2 0x206A JUMP JUMPDEST SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP2 POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x245B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 ADD PUSH1 0x1F DUP2 ADD DUP8 SGT PUSH2 0x246C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x247B DUP8 DUP3 CALLDATALOAD PUSH1 0x20 DUP5 ADD PUSH2 0x21BF JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP11 DUP13 SUB SLT ISZERO PUSH2 0x24A5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x24AE DUP11 PUSH2 0x206A JUMP JUMPDEST SWAP9 POP PUSH1 0x20 DUP11 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x24C9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x24D5 DUP13 DUP3 DUP14 ADD PUSH2 0x20ED JUMP JUMPDEST SWAP1 SWAP10 POP SWAP8 POP POP PUSH1 0x40 DUP11 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x24F4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2500 DUP13 DUP3 DUP14 ADD PUSH2 0x20ED JUMP JUMPDEST SWAP1 SWAP8 POP SWAP6 POP POP PUSH1 0x60 DUP11 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x251F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x252B DUP13 DUP3 DUP14 ADD PUSH2 0x20ED JUMP JUMPDEST SWAP1 SWAP6 POP SWAP4 POP POP PUSH1 0x80 DUP11 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x254A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2556 DUP13 DUP3 DUP14 ADD PUSH2 0x20ED JUMP JUMPDEST SWAP2 POP DUP1 SWAP4 POP POP DUP1 SWAP2 POP POP SWAP3 SWAP6 SWAP9 POP SWAP3 SWAP6 SWAP9 POP SWAP3 SWAP6 SWAP9 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2580 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2589 DUP4 PUSH2 0x206A JUMP JUMPDEST SWAP2 POP PUSH2 0x2597 PUSH1 0x20 DUP5 ADD PUSH2 0x206A JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x25B8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x25C1 DUP7 PUSH2 0x206A JUMP JUMPDEST SWAP5 POP PUSH1 0x20 DUP7 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x25DC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x25E8 DUP9 DUP3 DUP10 ADD PUSH2 0x20ED JUMP JUMPDEST SWAP1 SWAP6 POP SWAP4 POP POP PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x2607 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2613 DUP9 DUP3 DUP10 ADD PUSH2 0x20ED JUMP JUMPDEST SWAP7 SWAP10 SWAP6 SWAP9 POP SWAP4 SWAP7 POP SWAP3 SWAP5 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x2638 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x2658 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP2 DUP4 DUP3 CALLDATACOPY PUSH1 0x0 SWAP2 ADD SWAP1 DUP2 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2680 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP2 DUP4 MSTORE DUP2 DUP2 PUSH1 0x20 DUP6 ADD CALLDATACOPY POP PUSH1 0x0 DUP3 DUP3 ADD PUSH1 0x20 SWAP1 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x1F SWAP1 SWAP2 ADD PUSH1 0x1F NOT AND SWAP1 SWAP2 ADD ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x1A56 PUSH1 0x20 DUP4 ADD DUP5 DUP7 PUSH2 0x2687 JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x26D6 DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x1FEE JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0x2700 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x5DD JUMPI DUP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x272E JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1532 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x273A JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x2767 JUMPI PUSH2 0x2767 PUSH2 0x21A9 JUMP JUMPDEST PUSH2 0x277B DUP2 PUSH2 0x2775 DUP5 SLOAD PUSH2 0x2624 JUMP JUMPDEST DUP5 PUSH2 0x2707 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x1F DUP3 GT PUSH1 0x1 DUP2 EQ PUSH2 0x27AF JUMPI PUSH1 0x0 DUP4 ISZERO PUSH2 0x2797 JUMPI POP DUP5 DUP3 ADD MLOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP6 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP5 SWAP1 SHL OR DUP5 SSTORE PUSH2 0x1532 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP6 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x27DF JUMPI DUP8 DUP6 ADD MLOAD DUP3 SSTORE PUSH1 0x20 SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP3 ADD SWAP2 ADD PUSH2 0x27BF JUMP JUMPDEST POP DUP5 DUP3 LT ISZERO PUSH2 0x27FD JUMPI DUP7 DUP5 ADD MLOAD PUSH1 0x0 NOT PUSH1 0x3 DUP8 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP4 GT ISZERO PUSH2 0x2823 JUMPI PUSH2 0x2823 PUSH2 0x21A9 JUMP JUMPDEST PUSH2 0x2837 DUP4 PUSH2 0x2831 DUP4 SLOAD PUSH2 0x2624 JUMP JUMPDEST DUP4 PUSH2 0x2707 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F DUP5 GT PUSH1 0x1 DUP2 EQ PUSH2 0x286B JUMPI PUSH1 0x0 DUP6 ISZERO PUSH2 0x2853 JUMPI POP DUP4 DUP3 ADD CALLDATALOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP8 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP7 SWAP1 SHL OR DUP4 SSTORE PUSH2 0x1532 JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 SWAP1 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP1 DUP4 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x289C JUMPI DUP7 DUP6 ADD CALLDATALOAD DUP3 SSTORE PUSH1 0x20 SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP3 ADD SWAP2 ADD PUSH2 0x287C JUMP JUMPDEST POP DUP7 DUP3 LT ISZERO PUSH2 0x28B9 JUMPI PUSH1 0x0 NOT PUSH1 0xF8 DUP9 PUSH1 0x3 SHL AND SHR NOT DUP5 DUP8 ADD CALLDATALOAD AND DUP2 SSTORE JUMPDEST POP POP PUSH1 0x1 DUP6 PUSH1 0x1 SHL ADD DUP4 SSTORE POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP2 MSTORE PUSH1 0x0 PUSH2 0x28DF PUSH1 0x40 DUP4 ADD DUP7 DUP9 PUSH2 0x2687 JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x28F2 DUP2 DUP6 DUP8 PUSH2 0x2687 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND DUP3 MSTORE DUP5 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x80 PUSH1 0x60 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x2930 SWAP1 DUP4 ADD DUP5 PUSH2 0x2012 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x294C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x1CF0 DUP2 PUSH2 0x1FBB JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD PUSH2 0x2969 DUP2 DUP5 PUSH1 0x20 DUP9 ADD PUSH2 0x1FEE JUMP JUMPDEST DUP4 MLOAD SWAP1 DUP4 ADD SWAP1 PUSH2 0x297D DUP2 DUP4 PUSH1 0x20 DUP9 ADD PUSH2 0x1FEE JUMP JUMPDEST ADD SWAP5 SWAP4 POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH13 0xD6CACFCC90718978620EBE7B1B ADD TLOAD DUP5 0xF6 0xBD 0xB3 DUP16 MCOPY 0xB8 0xEE 0x4D 0xC4 0x22 PUSH31 0xD0CF8CF564736F6C634300081B003300000000000000000000000000000000 ","sourceMap":"557:6571:21:-:0;;;1235:1;1203:33;;2311:139;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;633:10;1380:113:5;;;;;;;;;;;;;-1:-1:-1;;;1380:113:5;;;;;;;;;;;;;;;;-1:-1:-1;;;1380:113:5;;;1454:5;1446;:13;;;;;;:::i;:::-;-1:-1:-1;1469:7:5;:17;1479:7;1469;:17;:::i;:::-;-1:-1:-1;;1857:1:13;2061:7;:21;-1:-1:-1;;;;;;1273:26:0;;1269:95;;1322:31;;-1:-1:-1;;;1322:31:0;;1350:1;1322:31;;;3096:51:22;3069:18;;1322:31:0;;;;;;;1269:95;1373:32;1392:12;1373:18;:32::i;:::-;-1:-1:-1;2417:6:21::1;:25:::0;;-1:-1:-1;;;;;;2417:25:21::1;-1:-1:-1::0;;;;;2417:25:21;;;::::1;::::0;;;::::1;::::0;;557:6571;;2912:187:0;3004:6;;;-1:-1:-1;;;;;3020:17:0;;;-1:-1:-1;;;;;;3020:17:0;;;;;;;3052:40;;3004:6;;;3020:17;3004:6;;3052:40;;2985:16;;3052:40;2975:124;2912:187;:::o;14:290:22:-;84:6;137:2;125:9;116:7;112:23;108:32;105:52;;;153:1;150;143:12;105:52;179:16;;-1:-1:-1;;;;;224:31:22;;214:42;;204:70;;270:1;267;260:12;204:70;293:5;14:290;-1:-1:-1;;;14:290:22:o;309:127::-;370:10;365:3;361:20;358:1;351:31;401:4;398:1;391:15;425:4;422:1;415:15;441:380;520:1;516:12;;;;563;;;584:61;;638:4;630:6;626:17;616:27;;584:61;691:2;683:6;680:14;660:18;657:38;654:161;;737:10;732:3;728:20;725:1;718:31;772:4;769:1;762:15;800:4;797:1;790:15;654:161;;441:380;;;:::o;952:518::-;1054:2;1049:3;1046:11;1043:421;;;1090:5;1087:1;1080:16;1134:4;1131:1;1121:18;1204:2;1192:10;1188:19;1185:1;1181:27;1175:4;1171:38;1240:4;1228:10;1225:20;1222:47;;;-1:-1:-1;1263:4:22;1222:47;1318:2;1313:3;1309:12;1306:1;1302:20;1296:4;1292:31;1282:41;;1373:81;1391:2;1384:5;1381:13;1373:81;;;1450:1;1436:16;;1417:1;1406:13;1373:81;;;1377:3;;1043:421;952:518;;;:::o;1646:1299::-;1766:10;;-1:-1:-1;;;;;1788:30:22;;1785:56;;;1821:18;;:::i;:::-;1850:97;1940:6;1900:38;1932:4;1926:11;1900:38;:::i;:::-;1894:4;1850:97;:::i;:::-;1996:4;2027:2;2016:14;;2044:1;2039:649;;;;2732:1;2749:6;2746:89;;;-1:-1:-1;2801:19:22;;;2795:26;2746:89;-1:-1:-1;;1603:1:22;1599:11;;;1595:24;1591:29;1581:40;1627:1;1623:11;;;1578:57;2848:81;;2009:930;;2039:649;899:1;892:14;;;936:4;923:18;;-1:-1:-1;;2075:20:22;;;2193:222;2207:7;2204:1;2201:14;2193:222;;;2289:19;;;2283:26;2268:42;;2396:4;2381:20;;;;2349:1;2337:14;;;;2223:12;2193:222;;;2197:3;2443:6;2434:7;2431:19;2428:201;;;2504:19;;;2498:26;-1:-1:-1;;2587:1:22;2583:14;;;2599:3;2579:24;2575:37;2571:42;2556:58;2541:74;;2428:201;-1:-1:-1;;;;2675:1:22;2659:14;;;2655:22;2642:36;;-1:-1:-1;1646:1299:22:o;2950:203::-;557:6571:21;;;;;;"},"deployedBytecode":{"functionDebugData":{"@DailyScanLimit_5706":{"entryPoint":null,"id":5706,"parameterSlots":0,"returnSlots":0},"@NRCPricePerMint_5715":{"entryPoint":null,"id":5715,"parameterSlots":0,"returnSlots":0},"@NRCPricePerNicknaming_5709":{"entryPoint":null,"id":5709,"parameterSlots":0,"returnSlots":0},"@NRCReward_5712":{"entryPoint":null,"id":5712,"parameterSlots":0,"returnSlots":0},"@NRCoin_5703":{"entryPoint":null,"id":5703,"parameterSlots":0,"returnSlots":0},"@_approve_1140":{"entryPoint":5589,"id":1140,"parameterSlots":3,"returnSlots":0},"@_approve_1206":{"entryPoint":6936,"id":1206,"parameterSlots":4,"returnSlots":0},"@_baseURI_521":{"entryPoint":null,"id":521,"parameterSlots":0,"returnSlots":1},"@_checkAuthorized_780":{"entryPoint":7198,"id":780,"parameterSlots":3,"returnSlots":0},"@_checkOwner_84":{"entryPoint":5851,"id":84,"parameterSlots":0,"returnSlots":0},"@_getApproved_707":{"entryPoint":null,"id":707,"parameterSlots":1,"returnSlots":1},"@_isAuthorized_743":{"entryPoint":7439,"id":743,"parameterSlots":3,"returnSlots":1},"@_mint_936":{"entryPoint":7684,"id":936,"parameterSlots":2,"returnSlots":0},"@_msgSender_1651":{"entryPoint":null,"id":1651,"parameterSlots":0,"returnSlots":1},"@_nonReentrantAfter_1778":{"entryPoint":null,"id":1778,"parameterSlots":0,"returnSlots":0},"@_nonReentrantBefore_1770":{"entryPoint":5896,"id":1770,"parameterSlots":0,"returnSlots":0},"@_ownerOf_694":{"entryPoint":null,"id":694,"parameterSlots":1,"returnSlots":1},"@_requireOwned_1272":{"entryPoint":5532,"id":1272,"parameterSlots":1,"returnSlots":1},"@_safeMint_951":{"entryPoint":6750,"id":951,"parameterSlots":2,"returnSlots":0},"@_safeMint_981":{"entryPoint":7415,"id":981,"parameterSlots":3,"returnSlots":0},"@_setApprovalForAll_1243":{"entryPoint":6020,"id":1243,"parameterSlots":3,"returnSlots":0},"@_setTokenURI_1533":{"entryPoint":6776,"id":1533,"parameterSlots":2,"returnSlots":0},"@_transferOwnership_146":{"entryPoint":5938,"id":146,"parameterSlots":1,"returnSlots":0},"@_update_886":{"entryPoint":5602,"id":886,"parameterSlots":3,"returnSlots":1},"@approve_537":{"entryPoint":1273,"id":537,"parameterSlots":2,"returnSlots":0},"@balanceOf_445":{"entryPoint":2344,"id":445,"parameterSlots":1,"returnSlots":1},"@checkOnERC721Received_1638":{"entryPoint":6179,"id":1638,"parameterSlots":5,"returnSlots":0},"@getApproved_554":{"entryPoint":1232,"id":554,"parameterSlots":1,"returnSlots":1},"@getNFT_6108":{"entryPoint":2436,"id":6108,"parameterSlots":2,"returnSlots":1},"@isApprovedForAll_587":{"entryPoint":4852,"id":587,"parameterSlots":2,"returnSlots":1},"@log10_3524":{"entryPoint":7785,"id":3524,"parameterSlots":1,"returnSlots":1},"@mintNFT_5924":{"entryPoint":3735,"id":5924,"parameterSlots":9,"returnSlots":0},"@name_467":{"entryPoint":1086,"id":467,"parameterSlots":0,"returnSlots":1},"@nicknameNFT_6070":{"entryPoint":4898,"id":6070,"parameterSlots":5,"returnSlots":0},"@ownedCoasters_5750":{"entryPoint":null,"id":5750,"parameterSlots":0,"returnSlots":0},"@ownerOf_458":{"entryPoint":2333,"id":458,"parameterSlots":1,"returnSlots":1},"@owner_67":{"entryPoint":null,"id":67,"parameterSlots":0,"returnSlots":1},"@registeredUserAddresses_5739":{"entryPoint":1288,"id":5739,"parameterSlots":0,"returnSlots":0},"@renounceOwnership_98":{"entryPoint":2416,"id":98,"parameterSlots":0,"returnSlots":0},"@safeTransferFrom_651":{"entryPoint":1474,"id":651,"parameterSlots":3,"returnSlots":0},"@safeTransferFrom_681":{"entryPoint":3700,"id":681,"parameterSlots":4,"returnSlots":0},"@scanCoaster_5997":{"entryPoint":1506,"id":5997,"parameterSlots":4,"returnSlots":0},"@scannedCoasters_5756":{"entryPoint":null,"id":5756,"parameterSlots":0,"returnSlots":0},"@setApprovalForAll_570":{"entryPoint":3689,"id":570,"parameterSlots":2,"returnSlots":0},"@supportsInterface_1457":{"entryPoint":5495,"id":1457,"parameterSlots":1,"returnSlots":1},"@supportsInterface_2133":{"entryPoint":null,"id":2133,"parameterSlots":1,"returnSlots":1},"@supportsInterface_417":{"entryPoint":6856,"id":417,"parameterSlots":1,"returnSlots":1},"@supportsInterface_5813":{"entryPoint":1069,"id":5813,"parameterSlots":1,"returnSlots":1},"@symbol_476":{"entryPoint":3674,"id":476,"parameterSlots":0,"returnSlots":1},"@toString_1858":{"entryPoint":7538,"id":1858,"parameterSlots":1,"returnSlots":1},"@tokenURI_1514":{"entryPoint":6477,"id":1514,"parameterSlots":1,"returnSlots":1},"@tokenURI_512":{"entryPoint":7298,"id":512,"parameterSlots":1,"returnSlots":1},"@tokenURI_5829":{"entryPoint":3724,"id":5829,"parameterSlots":1,"returnSlots":1},"@transferFrom_633":{"entryPoint":1330,"id":633,"parameterSlots":3,"returnSlots":0},"@transferOwnership_126":{"entryPoint":5433,"id":126,"parameterSlots":1,"returnSlots":0},"abi_decode_address":{"entryPoint":8298,"id":null,"parameterSlots":1,"returnSlots":1},"abi_decode_available_length_string":{"entryPoint":8639,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_string_calldata":{"entryPoint":8429,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_address":{"entryPoint":8590,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_address":{"entryPoint":9581,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_addresst_uint256":{"entryPoint":8368,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr":{"entryPoint":9228,"id":null,"parameterSlots":2,"returnSlots":4},"abi_decode_tuple_t_addresst_bool":{"entryPoint":9168,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_string_calldata_ptrt_string_calldata_ptr":{"entryPoint":9632,"id":null,"parameterSlots":2,"returnSlots":5},"abi_decode_tuple_t_addresst_string_calldata_ptrt_string_calldata_ptrt_string_calldata_ptrt_string_calldata_ptr":{"entryPoint":9351,"id":null,"parameterSlots":2,"returnSlots":9},"abi_decode_tuple_t_addresst_string_memory_ptr":{"entryPoint":8759,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_uint256":{"entryPoint":8326,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_uint256t_string_calldata_ptr":{"entryPoint":8501,"id":null,"parameterSlots":2,"returnSlots":4},"abi_decode_tuple_t_bytes4":{"entryPoint":8145,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bytes4_fromMemory":{"entryPoint":10554,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256":{"entryPoint":8273,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256_fromMemory":{"entryPoint":9838,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_address":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_array_address_dyn":{"entryPoint":8856,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_string":{"entryPoint":8210,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_string_calldata":{"entryPoint":9863,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_packed_t_string_calldata_ptr__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":9822,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_packed_t_string_memory_ptr__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":9924,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":10583,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed":{"entryPoint":10493,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256_t_address__to_t_address_t_uint256_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_contract$_INRCoin_$5690__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_calldata_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":9904,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_string_calldata_ptr_t_string_calldata_ptr__to_t_string_memory_ptr_t_string_memory_ptr__fromStack_reversed":{"entryPoint":10443,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":8254,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_12de7e57f38ef3cb4742b8103ea2bfd9784ae418ac798dfc74c2fb64d1412e2f__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_161894f84106194f60134a235ea6785ea039b3b0499813672d7f05567d18263d__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_374180e2178bd46e20d3ad5ffa47410137636792d207c61c23c6b429c903bad4__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_38b84b28ce7f687a4159aa3c3ed79b1bf1faf0b83ba6e19eed8306e5b73a5699__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_6397d8391ec10cb4049b569dd407a6acb94a7aa795742ed7e668b1eed10eab04__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_7495b1928eec20e7a70fd948a18c2ffd1e105a6b9600a16103e7a35603da4874__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_7572e40391d07d4b91d51e72cb8caa5f33f56b2b616c219ac11e2b95b18edce9__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_a60f8625a5ac2a62e25d3594e822288b44825183565533b1d915245d8c386ead__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_f7848f9f96a60d30aa251e250188b2e647f641f6dedaeaaa76f9f0f103da72a6__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_struct$_Coaster_$5736_memory_ptr__to_t_struct$_Coaster_$5736_memory_ptr__fromStack_reversed":{"entryPoint":8925,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"array_dataslot_string_storage":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"clean_up_bytearray_end_slots_string_storage":{"entryPoint":9991,"id":null,"parameterSlots":3,"returnSlots":0},"copy_byte_array_to_storage_from_t_string_calldata_ptr_to_t_string_storage":{"entryPoint":10252,"id":null,"parameterSlots":3,"returnSlots":0},"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage":{"entryPoint":10062,"id":null,"parameterSlots":2,"returnSlots":0},"copy_memory_to_memory_with_cleanup":{"entryPoint":8174,"id":null,"parameterSlots":3,"returnSlots":0},"extract_byte_array_length":{"entryPoint":9764,"id":null,"parameterSlots":1,"returnSlots":1},"extract_used_part_and_set_length_of_short_byte_array":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"increment_t_uint256":{"entryPoint":9952,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x12":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":8617,"id":null,"parameterSlots":0,"returnSlots":0},"validator_revert_bytes4":{"entryPoint":8123,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nativeSrc":"0:22299:22","nodeType":"YulBlock","src":"0:22299:22","statements":[{"nativeSrc":"6:3:22","nodeType":"YulBlock","src":"6:3:22","statements":[]},{"body":{"nativeSrc":"58:87:22","nodeType":"YulBlock","src":"58:87:22","statements":[{"body":{"nativeSrc":"123:16:22","nodeType":"YulBlock","src":"123:16:22","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"132:1:22","nodeType":"YulLiteral","src":"132:1:22","type":"","value":"0"},{"kind":"number","nativeSrc":"135:1:22","nodeType":"YulLiteral","src":"135:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"125:6:22","nodeType":"YulIdentifier","src":"125:6:22"},"nativeSrc":"125:12:22","nodeType":"YulFunctionCall","src":"125:12:22"},"nativeSrc":"125:12:22","nodeType":"YulExpressionStatement","src":"125:12:22"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"81:5:22","nodeType":"YulIdentifier","src":"81:5:22"},{"arguments":[{"name":"value","nativeSrc":"92:5:22","nodeType":"YulIdentifier","src":"92:5:22"},{"arguments":[{"kind":"number","nativeSrc":"103:3:22","nodeType":"YulLiteral","src":"103:3:22","type":"","value":"224"},{"kind":"number","nativeSrc":"108:10:22","nodeType":"YulLiteral","src":"108:10:22","type":"","value":"0xffffffff"}],"functionName":{"name":"shl","nativeSrc":"99:3:22","nodeType":"YulIdentifier","src":"99:3:22"},"nativeSrc":"99:20:22","nodeType":"YulFunctionCall","src":"99:20:22"}],"functionName":{"name":"and","nativeSrc":"88:3:22","nodeType":"YulIdentifier","src":"88:3:22"},"nativeSrc":"88:32:22","nodeType":"YulFunctionCall","src":"88:32:22"}],"functionName":{"name":"eq","nativeSrc":"78:2:22","nodeType":"YulIdentifier","src":"78:2:22"},"nativeSrc":"78:43:22","nodeType":"YulFunctionCall","src":"78:43:22"}],"functionName":{"name":"iszero","nativeSrc":"71:6:22","nodeType":"YulIdentifier","src":"71:6:22"},"nativeSrc":"71:51:22","nodeType":"YulFunctionCall","src":"71:51:22"},"nativeSrc":"68:71:22","nodeType":"YulIf","src":"68:71:22"}]},"name":"validator_revert_bytes4","nativeSrc":"14:131:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"47:5:22","nodeType":"YulTypedName","src":"47:5:22","type":""}],"src":"14:131:22"},{"body":{"nativeSrc":"219:176:22","nodeType":"YulBlock","src":"219:176:22","statements":[{"body":{"nativeSrc":"265:16:22","nodeType":"YulBlock","src":"265:16:22","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"274:1:22","nodeType":"YulLiteral","src":"274:1:22","type":"","value":"0"},{"kind":"number","nativeSrc":"277:1:22","nodeType":"YulLiteral","src":"277:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"267:6:22","nodeType":"YulIdentifier","src":"267:6:22"},"nativeSrc":"267:12:22","nodeType":"YulFunctionCall","src":"267:12:22"},"nativeSrc":"267:12:22","nodeType":"YulExpressionStatement","src":"267:12:22"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"240:7:22","nodeType":"YulIdentifier","src":"240:7:22"},{"name":"headStart","nativeSrc":"249:9:22","nodeType":"YulIdentifier","src":"249:9:22"}],"functionName":{"name":"sub","nativeSrc":"236:3:22","nodeType":"YulIdentifier","src":"236:3:22"},"nativeSrc":"236:23:22","nodeType":"YulFunctionCall","src":"236:23:22"},{"kind":"number","nativeSrc":"261:2:22","nodeType":"YulLiteral","src":"261:2:22","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"232:3:22","nodeType":"YulIdentifier","src":"232:3:22"},"nativeSrc":"232:32:22","nodeType":"YulFunctionCall","src":"232:32:22"},"nativeSrc":"229:52:22","nodeType":"YulIf","src":"229:52:22"},{"nativeSrc":"290:36:22","nodeType":"YulVariableDeclaration","src":"290:36:22","value":{"arguments":[{"name":"headStart","nativeSrc":"316:9:22","nodeType":"YulIdentifier","src":"316:9:22"}],"functionName":{"name":"calldataload","nativeSrc":"303:12:22","nodeType":"YulIdentifier","src":"303:12:22"},"nativeSrc":"303:23:22","nodeType":"YulFunctionCall","src":"303:23:22"},"variables":[{"name":"value","nativeSrc":"294:5:22","nodeType":"YulTypedName","src":"294:5:22","type":""}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"359:5:22","nodeType":"YulIdentifier","src":"359:5:22"}],"functionName":{"name":"validator_revert_bytes4","nativeSrc":"335:23:22","nodeType":"YulIdentifier","src":"335:23:22"},"nativeSrc":"335:30:22","nodeType":"YulFunctionCall","src":"335:30:22"},"nativeSrc":"335:30:22","nodeType":"YulExpressionStatement","src":"335:30:22"},{"nativeSrc":"374:15:22","nodeType":"YulAssignment","src":"374:15:22","value":{"name":"value","nativeSrc":"384:5:22","nodeType":"YulIdentifier","src":"384:5:22"},"variableNames":[{"name":"value0","nativeSrc":"374:6:22","nodeType":"YulIdentifier","src":"374:6:22"}]}]},"name":"abi_decode_tuple_t_bytes4","nativeSrc":"150:245:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"185:9:22","nodeType":"YulTypedName","src":"185:9:22","type":""},{"name":"dataEnd","nativeSrc":"196:7:22","nodeType":"YulTypedName","src":"196:7:22","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"208:6:22","nodeType":"YulTypedName","src":"208:6:22","type":""}],"src":"150:245:22"},{"body":{"nativeSrc":"495:92:22","nodeType":"YulBlock","src":"495:92:22","statements":[{"nativeSrc":"505:26:22","nodeType":"YulAssignment","src":"505:26:22","value":{"arguments":[{"name":"headStart","nativeSrc":"517:9:22","nodeType":"YulIdentifier","src":"517:9:22"},{"kind":"number","nativeSrc":"528:2:22","nodeType":"YulLiteral","src":"528:2:22","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"513:3:22","nodeType":"YulIdentifier","src":"513:3:22"},"nativeSrc":"513:18:22","nodeType":"YulFunctionCall","src":"513:18:22"},"variableNames":[{"name":"tail","nativeSrc":"505:4:22","nodeType":"YulIdentifier","src":"505:4:22"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"547:9:22","nodeType":"YulIdentifier","src":"547:9:22"},{"arguments":[{"arguments":[{"name":"value0","nativeSrc":"572:6:22","nodeType":"YulIdentifier","src":"572:6:22"}],"functionName":{"name":"iszero","nativeSrc":"565:6:22","nodeType":"YulIdentifier","src":"565:6:22"},"nativeSrc":"565:14:22","nodeType":"YulFunctionCall","src":"565:14:22"}],"functionName":{"name":"iszero","nativeSrc":"558:6:22","nodeType":"YulIdentifier","src":"558:6:22"},"nativeSrc":"558:22:22","nodeType":"YulFunctionCall","src":"558:22:22"}],"functionName":{"name":"mstore","nativeSrc":"540:6:22","nodeType":"YulIdentifier","src":"540:6:22"},"nativeSrc":"540:41:22","nodeType":"YulFunctionCall","src":"540:41:22"},"nativeSrc":"540:41:22","nodeType":"YulExpressionStatement","src":"540:41:22"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nativeSrc":"400:187:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"464:9:22","nodeType":"YulTypedName","src":"464:9:22","type":""},{"name":"value0","nativeSrc":"475:6:22","nodeType":"YulTypedName","src":"475:6:22","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"486:4:22","nodeType":"YulTypedName","src":"486:4:22","type":""}],"src":"400:187:22"},{"body":{"nativeSrc":"658:184:22","nodeType":"YulBlock","src":"658:184:22","statements":[{"nativeSrc":"668:10:22","nodeType":"YulVariableDeclaration","src":"668:10:22","value":{"kind":"number","nativeSrc":"677:1:22","nodeType":"YulLiteral","src":"677:1:22","type":"","value":"0"},"variables":[{"name":"i","nativeSrc":"672:1:22","nodeType":"YulTypedName","src":"672:1:22","type":""}]},{"body":{"nativeSrc":"737:63:22","nodeType":"YulBlock","src":"737:63:22","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nativeSrc":"762:3:22","nodeType":"YulIdentifier","src":"762:3:22"},{"name":"i","nativeSrc":"767:1:22","nodeType":"YulIdentifier","src":"767:1:22"}],"functionName":{"name":"add","nativeSrc":"758:3:22","nodeType":"YulIdentifier","src":"758:3:22"},"nativeSrc":"758:11:22","nodeType":"YulFunctionCall","src":"758:11:22"},{"arguments":[{"arguments":[{"name":"src","nativeSrc":"781:3:22","nodeType":"YulIdentifier","src":"781:3:22"},{"name":"i","nativeSrc":"786:1:22","nodeType":"YulIdentifier","src":"786:1:22"}],"functionName":{"name":"add","nativeSrc":"777:3:22","nodeType":"YulIdentifier","src":"777:3:22"},"nativeSrc":"777:11:22","nodeType":"YulFunctionCall","src":"777:11:22"}],"functionName":{"name":"mload","nativeSrc":"771:5:22","nodeType":"YulIdentifier","src":"771:5:22"},"nativeSrc":"771:18:22","nodeType":"YulFunctionCall","src":"771:18:22"}],"functionName":{"name":"mstore","nativeSrc":"751:6:22","nodeType":"YulIdentifier","src":"751:6:22"},"nativeSrc":"751:39:22","nodeType":"YulFunctionCall","src":"751:39:22"},"nativeSrc":"751:39:22","nodeType":"YulExpressionStatement","src":"751:39:22"}]},"condition":{"arguments":[{"name":"i","nativeSrc":"698:1:22","nodeType":"YulIdentifier","src":"698:1:22"},{"name":"length","nativeSrc":"701:6:22","nodeType":"YulIdentifier","src":"701:6:22"}],"functionName":{"name":"lt","nativeSrc":"695:2:22","nodeType":"YulIdentifier","src":"695:2:22"},"nativeSrc":"695:13:22","nodeType":"YulFunctionCall","src":"695:13:22"},"nativeSrc":"687:113:22","nodeType":"YulForLoop","post":{"nativeSrc":"709:19:22","nodeType":"YulBlock","src":"709:19:22","statements":[{"nativeSrc":"711:15:22","nodeType":"YulAssignment","src":"711:15:22","value":{"arguments":[{"name":"i","nativeSrc":"720:1:22","nodeType":"YulIdentifier","src":"720:1:22"},{"kind":"number","nativeSrc":"723:2:22","nodeType":"YulLiteral","src":"723:2:22","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"716:3:22","nodeType":"YulIdentifier","src":"716:3:22"},"nativeSrc":"716:10:22","nodeType":"YulFunctionCall","src":"716:10:22"},"variableNames":[{"name":"i","nativeSrc":"711:1:22","nodeType":"YulIdentifier","src":"711:1:22"}]}]},"pre":{"nativeSrc":"691:3:22","nodeType":"YulBlock","src":"691:3:22","statements":[]},"src":"687:113:22"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nativeSrc":"820:3:22","nodeType":"YulIdentifier","src":"820:3:22"},{"name":"length","nativeSrc":"825:6:22","nodeType":"YulIdentifier","src":"825:6:22"}],"functionName":{"name":"add","nativeSrc":"816:3:22","nodeType":"YulIdentifier","src":"816:3:22"},"nativeSrc":"816:16:22","nodeType":"YulFunctionCall","src":"816:16:22"},{"kind":"number","nativeSrc":"834:1:22","nodeType":"YulLiteral","src":"834:1:22","type":"","value":"0"}],"functionName":{"name":"mstore","nativeSrc":"809:6:22","nodeType":"YulIdentifier","src":"809:6:22"},"nativeSrc":"809:27:22","nodeType":"YulFunctionCall","src":"809:27:22"},"nativeSrc":"809:27:22","nodeType":"YulExpressionStatement","src":"809:27:22"}]},"name":"copy_memory_to_memory_with_cleanup","nativeSrc":"592:250:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nativeSrc":"636:3:22","nodeType":"YulTypedName","src":"636:3:22","type":""},{"name":"dst","nativeSrc":"641:3:22","nodeType":"YulTypedName","src":"641:3:22","type":""},{"name":"length","nativeSrc":"646:6:22","nodeType":"YulTypedName","src":"646:6:22","type":""}],"src":"592:250:22"},{"body":{"nativeSrc":"897:221:22","nodeType":"YulBlock","src":"897:221:22","statements":[{"nativeSrc":"907:26:22","nodeType":"YulVariableDeclaration","src":"907:26:22","value":{"arguments":[{"name":"value","nativeSrc":"927:5:22","nodeType":"YulIdentifier","src":"927:5:22"}],"functionName":{"name":"mload","nativeSrc":"921:5:22","nodeType":"YulIdentifier","src":"921:5:22"},"nativeSrc":"921:12:22","nodeType":"YulFunctionCall","src":"921:12:22"},"variables":[{"name":"length","nativeSrc":"911:6:22","nodeType":"YulTypedName","src":"911:6:22","type":""}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"949:3:22","nodeType":"YulIdentifier","src":"949:3:22"},{"name":"length","nativeSrc":"954:6:22","nodeType":"YulIdentifier","src":"954:6:22"}],"functionName":{"name":"mstore","nativeSrc":"942:6:22","nodeType":"YulIdentifier","src":"942:6:22"},"nativeSrc":"942:19:22","nodeType":"YulFunctionCall","src":"942:19:22"},"nativeSrc":"942:19:22","nodeType":"YulExpressionStatement","src":"942:19:22"},{"expression":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"1009:5:22","nodeType":"YulIdentifier","src":"1009:5:22"},{"kind":"number","nativeSrc":"1016:4:22","nodeType":"YulLiteral","src":"1016:4:22","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"1005:3:22","nodeType":"YulIdentifier","src":"1005:3:22"},"nativeSrc":"1005:16:22","nodeType":"YulFunctionCall","src":"1005:16:22"},{"arguments":[{"name":"pos","nativeSrc":"1027:3:22","nodeType":"YulIdentifier","src":"1027:3:22"},{"kind":"number","nativeSrc":"1032:4:22","nodeType":"YulLiteral","src":"1032:4:22","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"1023:3:22","nodeType":"YulIdentifier","src":"1023:3:22"},"nativeSrc":"1023:14:22","nodeType":"YulFunctionCall","src":"1023:14:22"},{"name":"length","nativeSrc":"1039:6:22","nodeType":"YulIdentifier","src":"1039:6:22"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nativeSrc":"970:34:22","nodeType":"YulIdentifier","src":"970:34:22"},"nativeSrc":"970:76:22","nodeType":"YulFunctionCall","src":"970:76:22"},"nativeSrc":"970:76:22","nodeType":"YulExpressionStatement","src":"970:76:22"},{"nativeSrc":"1055:57:22","nodeType":"YulAssignment","src":"1055:57:22","value":{"arguments":[{"arguments":[{"name":"pos","nativeSrc":"1070:3:22","nodeType":"YulIdentifier","src":"1070:3:22"},{"arguments":[{"arguments":[{"name":"length","nativeSrc":"1083:6:22","nodeType":"YulIdentifier","src":"1083:6:22"},{"kind":"number","nativeSrc":"1091:2:22","nodeType":"YulLiteral","src":"1091:2:22","type":"","value":"31"}],"functionName":{"name":"add","nativeSrc":"1079:3:22","nodeType":"YulIdentifier","src":"1079:3:22"},"nativeSrc":"1079:15:22","nodeType":"YulFunctionCall","src":"1079:15:22"},{"arguments":[{"kind":"number","nativeSrc":"1100:2:22","nodeType":"YulLiteral","src":"1100:2:22","type":"","value":"31"}],"functionName":{"name":"not","nativeSrc":"1096:3:22","nodeType":"YulIdentifier","src":"1096:3:22"},"nativeSrc":"1096:7:22","nodeType":"YulFunctionCall","src":"1096:7:22"}],"functionName":{"name":"and","nativeSrc":"1075:3:22","nodeType":"YulIdentifier","src":"1075:3:22"},"nativeSrc":"1075:29:22","nodeType":"YulFunctionCall","src":"1075:29:22"}],"functionName":{"name":"add","nativeSrc":"1066:3:22","nodeType":"YulIdentifier","src":"1066:3:22"},"nativeSrc":"1066:39:22","nodeType":"YulFunctionCall","src":"1066:39:22"},{"kind":"number","nativeSrc":"1107:4:22","nodeType":"YulLiteral","src":"1107:4:22","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"1062:3:22","nodeType":"YulIdentifier","src":"1062:3:22"},"nativeSrc":"1062:50:22","nodeType":"YulFunctionCall","src":"1062:50:22"},"variableNames":[{"name":"end","nativeSrc":"1055:3:22","nodeType":"YulIdentifier","src":"1055:3:22"}]}]},"name":"abi_encode_string","nativeSrc":"847:271:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"874:5:22","nodeType":"YulTypedName","src":"874:5:22","type":""},{"name":"pos","nativeSrc":"881:3:22","nodeType":"YulTypedName","src":"881:3:22","type":""}],"returnVariables":[{"name":"end","nativeSrc":"889:3:22","nodeType":"YulTypedName","src":"889:3:22","type":""}],"src":"847:271:22"},{"body":{"nativeSrc":"1244:99:22","nodeType":"YulBlock","src":"1244:99:22","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"1261:9:22","nodeType":"YulIdentifier","src":"1261:9:22"},{"kind":"number","nativeSrc":"1272:2:22","nodeType":"YulLiteral","src":"1272:2:22","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"1254:6:22","nodeType":"YulIdentifier","src":"1254:6:22"},"nativeSrc":"1254:21:22","nodeType":"YulFunctionCall","src":"1254:21:22"},"nativeSrc":"1254:21:22","nodeType":"YulExpressionStatement","src":"1254:21:22"},{"nativeSrc":"1284:53:22","nodeType":"YulAssignment","src":"1284:53:22","value":{"arguments":[{"name":"value0","nativeSrc":"1310:6:22","nodeType":"YulIdentifier","src":"1310:6:22"},{"arguments":[{"name":"headStart","nativeSrc":"1322:9:22","nodeType":"YulIdentifier","src":"1322:9:22"},{"kind":"number","nativeSrc":"1333:2:22","nodeType":"YulLiteral","src":"1333:2:22","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"1318:3:22","nodeType":"YulIdentifier","src":"1318:3:22"},"nativeSrc":"1318:18:22","nodeType":"YulFunctionCall","src":"1318:18:22"}],"functionName":{"name":"abi_encode_string","nativeSrc":"1292:17:22","nodeType":"YulIdentifier","src":"1292:17:22"},"nativeSrc":"1292:45:22","nodeType":"YulFunctionCall","src":"1292:45:22"},"variableNames":[{"name":"tail","nativeSrc":"1284:4:22","nodeType":"YulIdentifier","src":"1284:4:22"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"1123:220:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"1213:9:22","nodeType":"YulTypedName","src":"1213:9:22","type":""},{"name":"value0","nativeSrc":"1224:6:22","nodeType":"YulTypedName","src":"1224:6:22","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"1235:4:22","nodeType":"YulTypedName","src":"1235:4:22","type":""}],"src":"1123:220:22"},{"body":{"nativeSrc":"1418:156:22","nodeType":"YulBlock","src":"1418:156:22","statements":[{"body":{"nativeSrc":"1464:16:22","nodeType":"YulBlock","src":"1464:16:22","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1473:1:22","nodeType":"YulLiteral","src":"1473:1:22","type":"","value":"0"},{"kind":"number","nativeSrc":"1476:1:22","nodeType":"YulLiteral","src":"1476:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"1466:6:22","nodeType":"YulIdentifier","src":"1466:6:22"},"nativeSrc":"1466:12:22","nodeType":"YulFunctionCall","src":"1466:12:22"},"nativeSrc":"1466:12:22","nodeType":"YulExpressionStatement","src":"1466:12:22"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"1439:7:22","nodeType":"YulIdentifier","src":"1439:7:22"},{"name":"headStart","nativeSrc":"1448:9:22","nodeType":"YulIdentifier","src":"1448:9:22"}],"functionName":{"name":"sub","nativeSrc":"1435:3:22","nodeType":"YulIdentifier","src":"1435:3:22"},"nativeSrc":"1435:23:22","nodeType":"YulFunctionCall","src":"1435:23:22"},{"kind":"number","nativeSrc":"1460:2:22","nodeType":"YulLiteral","src":"1460:2:22","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"1431:3:22","nodeType":"YulIdentifier","src":"1431:3:22"},"nativeSrc":"1431:32:22","nodeType":"YulFunctionCall","src":"1431:32:22"},"nativeSrc":"1428:52:22","nodeType":"YulIf","src":"1428:52:22"},{"nativeSrc":"1489:14:22","nodeType":"YulVariableDeclaration","src":"1489:14:22","value":{"kind":"number","nativeSrc":"1502:1:22","nodeType":"YulLiteral","src":"1502:1:22","type":"","value":"0"},"variables":[{"name":"value","nativeSrc":"1493:5:22","nodeType":"YulTypedName","src":"1493:5:22","type":""}]},{"nativeSrc":"1512:32:22","nodeType":"YulAssignment","src":"1512:32:22","value":{"arguments":[{"name":"headStart","nativeSrc":"1534:9:22","nodeType":"YulIdentifier","src":"1534:9:22"}],"functionName":{"name":"calldataload","nativeSrc":"1521:12:22","nodeType":"YulIdentifier","src":"1521:12:22"},"nativeSrc":"1521:23:22","nodeType":"YulFunctionCall","src":"1521:23:22"},"variableNames":[{"name":"value","nativeSrc":"1512:5:22","nodeType":"YulIdentifier","src":"1512:5:22"}]},{"nativeSrc":"1553:15:22","nodeType":"YulAssignment","src":"1553:15:22","value":{"name":"value","nativeSrc":"1563:5:22","nodeType":"YulIdentifier","src":"1563:5:22"},"variableNames":[{"name":"value0","nativeSrc":"1553:6:22","nodeType":"YulIdentifier","src":"1553:6:22"}]}]},"name":"abi_decode_tuple_t_uint256","nativeSrc":"1348:226:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"1384:9:22","nodeType":"YulTypedName","src":"1384:9:22","type":""},{"name":"dataEnd","nativeSrc":"1395:7:22","nodeType":"YulTypedName","src":"1395:7:22","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"1407:6:22","nodeType":"YulTypedName","src":"1407:6:22","type":""}],"src":"1348:226:22"},{"body":{"nativeSrc":"1623:60:22","nodeType":"YulBlock","src":"1623:60:22","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"1640:3:22","nodeType":"YulIdentifier","src":"1640:3:22"},{"arguments":[{"name":"value","nativeSrc":"1649:5:22","nodeType":"YulIdentifier","src":"1649:5:22"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"1664:3:22","nodeType":"YulLiteral","src":"1664:3:22","type":"","value":"160"},{"kind":"number","nativeSrc":"1669:1:22","nodeType":"YulLiteral","src":"1669:1:22","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"1660:3:22","nodeType":"YulIdentifier","src":"1660:3:22"},"nativeSrc":"1660:11:22","nodeType":"YulFunctionCall","src":"1660:11:22"},{"kind":"number","nativeSrc":"1673:1:22","nodeType":"YulLiteral","src":"1673:1:22","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"1656:3:22","nodeType":"YulIdentifier","src":"1656:3:22"},"nativeSrc":"1656:19:22","nodeType":"YulFunctionCall","src":"1656:19:22"}],"functionName":{"name":"and","nativeSrc":"1645:3:22","nodeType":"YulIdentifier","src":"1645:3:22"},"nativeSrc":"1645:31:22","nodeType":"YulFunctionCall","src":"1645:31:22"}],"functionName":{"name":"mstore","nativeSrc":"1633:6:22","nodeType":"YulIdentifier","src":"1633:6:22"},"nativeSrc":"1633:44:22","nodeType":"YulFunctionCall","src":"1633:44:22"},"nativeSrc":"1633:44:22","nodeType":"YulExpressionStatement","src":"1633:44:22"}]},"name":"abi_encode_address","nativeSrc":"1579:104:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"1607:5:22","nodeType":"YulTypedName","src":"1607:5:22","type":""},{"name":"pos","nativeSrc":"1614:3:22","nodeType":"YulTypedName","src":"1614:3:22","type":""}],"src":"1579:104:22"},{"body":{"nativeSrc":"1789:102:22","nodeType":"YulBlock","src":"1789:102:22","statements":[{"nativeSrc":"1799:26:22","nodeType":"YulAssignment","src":"1799:26:22","value":{"arguments":[{"name":"headStart","nativeSrc":"1811:9:22","nodeType":"YulIdentifier","src":"1811:9:22"},{"kind":"number","nativeSrc":"1822:2:22","nodeType":"YulLiteral","src":"1822:2:22","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"1807:3:22","nodeType":"YulIdentifier","src":"1807:3:22"},"nativeSrc":"1807:18:22","nodeType":"YulFunctionCall","src":"1807:18:22"},"variableNames":[{"name":"tail","nativeSrc":"1799:4:22","nodeType":"YulIdentifier","src":"1799:4:22"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"1841:9:22","nodeType":"YulIdentifier","src":"1841:9:22"},{"arguments":[{"name":"value0","nativeSrc":"1856:6:22","nodeType":"YulIdentifier","src":"1856:6:22"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"1872:3:22","nodeType":"YulLiteral","src":"1872:3:22","type":"","value":"160"},{"kind":"number","nativeSrc":"1877:1:22","nodeType":"YulLiteral","src":"1877:1:22","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"1868:3:22","nodeType":"YulIdentifier","src":"1868:3:22"},"nativeSrc":"1868:11:22","nodeType":"YulFunctionCall","src":"1868:11:22"},{"kind":"number","nativeSrc":"1881:1:22","nodeType":"YulLiteral","src":"1881:1:22","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"1864:3:22","nodeType":"YulIdentifier","src":"1864:3:22"},"nativeSrc":"1864:19:22","nodeType":"YulFunctionCall","src":"1864:19:22"}],"functionName":{"name":"and","nativeSrc":"1852:3:22","nodeType":"YulIdentifier","src":"1852:3:22"},"nativeSrc":"1852:32:22","nodeType":"YulFunctionCall","src":"1852:32:22"}],"functionName":{"name":"mstore","nativeSrc":"1834:6:22","nodeType":"YulIdentifier","src":"1834:6:22"},"nativeSrc":"1834:51:22","nodeType":"YulFunctionCall","src":"1834:51:22"},"nativeSrc":"1834:51:22","nodeType":"YulExpressionStatement","src":"1834:51:22"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nativeSrc":"1688:203:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"1758:9:22","nodeType":"YulTypedName","src":"1758:9:22","type":""},{"name":"value0","nativeSrc":"1769:6:22","nodeType":"YulTypedName","src":"1769:6:22","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"1780:4:22","nodeType":"YulTypedName","src":"1780:4:22","type":""}],"src":"1688:203:22"},{"body":{"nativeSrc":"1945:124:22","nodeType":"YulBlock","src":"1945:124:22","statements":[{"nativeSrc":"1955:29:22","nodeType":"YulAssignment","src":"1955:29:22","value":{"arguments":[{"name":"offset","nativeSrc":"1977:6:22","nodeType":"YulIdentifier","src":"1977:6:22"}],"functionName":{"name":"calldataload","nativeSrc":"1964:12:22","nodeType":"YulIdentifier","src":"1964:12:22"},"nativeSrc":"1964:20:22","nodeType":"YulFunctionCall","src":"1964:20:22"},"variableNames":[{"name":"value","nativeSrc":"1955:5:22","nodeType":"YulIdentifier","src":"1955:5:22"}]},{"body":{"nativeSrc":"2047:16:22","nodeType":"YulBlock","src":"2047:16:22","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"2056:1:22","nodeType":"YulLiteral","src":"2056:1:22","type":"","value":"0"},{"kind":"number","nativeSrc":"2059:1:22","nodeType":"YulLiteral","src":"2059:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"2049:6:22","nodeType":"YulIdentifier","src":"2049:6:22"},"nativeSrc":"2049:12:22","nodeType":"YulFunctionCall","src":"2049:12:22"},"nativeSrc":"2049:12:22","nodeType":"YulExpressionStatement","src":"2049:12:22"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"2006:5:22","nodeType":"YulIdentifier","src":"2006:5:22"},{"arguments":[{"name":"value","nativeSrc":"2017:5:22","nodeType":"YulIdentifier","src":"2017:5:22"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"2032:3:22","nodeType":"YulLiteral","src":"2032:3:22","type":"","value":"160"},{"kind":"number","nativeSrc":"2037:1:22","nodeType":"YulLiteral","src":"2037:1:22","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"2028:3:22","nodeType":"YulIdentifier","src":"2028:3:22"},"nativeSrc":"2028:11:22","nodeType":"YulFunctionCall","src":"2028:11:22"},{"kind":"number","nativeSrc":"2041:1:22","nodeType":"YulLiteral","src":"2041:1:22","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"2024:3:22","nodeType":"YulIdentifier","src":"2024:3:22"},"nativeSrc":"2024:19:22","nodeType":"YulFunctionCall","src":"2024:19:22"}],"functionName":{"name":"and","nativeSrc":"2013:3:22","nodeType":"YulIdentifier","src":"2013:3:22"},"nativeSrc":"2013:31:22","nodeType":"YulFunctionCall","src":"2013:31:22"}],"functionName":{"name":"eq","nativeSrc":"2003:2:22","nodeType":"YulIdentifier","src":"2003:2:22"},"nativeSrc":"2003:42:22","nodeType":"YulFunctionCall","src":"2003:42:22"}],"functionName":{"name":"iszero","nativeSrc":"1996:6:22","nodeType":"YulIdentifier","src":"1996:6:22"},"nativeSrc":"1996:50:22","nodeType":"YulFunctionCall","src":"1996:50:22"},"nativeSrc":"1993:70:22","nodeType":"YulIf","src":"1993:70:22"}]},"name":"abi_decode_address","nativeSrc":"1896:173:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"1924:6:22","nodeType":"YulTypedName","src":"1924:6:22","type":""}],"returnVariables":[{"name":"value","nativeSrc":"1935:5:22","nodeType":"YulTypedName","src":"1935:5:22","type":""}],"src":"1896:173:22"},{"body":{"nativeSrc":"2161:213:22","nodeType":"YulBlock","src":"2161:213:22","statements":[{"body":{"nativeSrc":"2207:16:22","nodeType":"YulBlock","src":"2207:16:22","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"2216:1:22","nodeType":"YulLiteral","src":"2216:1:22","type":"","value":"0"},{"kind":"number","nativeSrc":"2219:1:22","nodeType":"YulLiteral","src":"2219:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"2209:6:22","nodeType":"YulIdentifier","src":"2209:6:22"},"nativeSrc":"2209:12:22","nodeType":"YulFunctionCall","src":"2209:12:22"},"nativeSrc":"2209:12:22","nodeType":"YulExpressionStatement","src":"2209:12:22"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"2182:7:22","nodeType":"YulIdentifier","src":"2182:7:22"},{"name":"headStart","nativeSrc":"2191:9:22","nodeType":"YulIdentifier","src":"2191:9:22"}],"functionName":{"name":"sub","nativeSrc":"2178:3:22","nodeType":"YulIdentifier","src":"2178:3:22"},"nativeSrc":"2178:23:22","nodeType":"YulFunctionCall","src":"2178:23:22"},{"kind":"number","nativeSrc":"2203:2:22","nodeType":"YulLiteral","src":"2203:2:22","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"2174:3:22","nodeType":"YulIdentifier","src":"2174:3:22"},"nativeSrc":"2174:32:22","nodeType":"YulFunctionCall","src":"2174:32:22"},"nativeSrc":"2171:52:22","nodeType":"YulIf","src":"2171:52:22"},{"nativeSrc":"2232:39:22","nodeType":"YulAssignment","src":"2232:39:22","value":{"arguments":[{"name":"headStart","nativeSrc":"2261:9:22","nodeType":"YulIdentifier","src":"2261:9:22"}],"functionName":{"name":"abi_decode_address","nativeSrc":"2242:18:22","nodeType":"YulIdentifier","src":"2242:18:22"},"nativeSrc":"2242:29:22","nodeType":"YulFunctionCall","src":"2242:29:22"},"variableNames":[{"name":"value0","nativeSrc":"2232:6:22","nodeType":"YulIdentifier","src":"2232:6:22"}]},{"nativeSrc":"2280:14:22","nodeType":"YulVariableDeclaration","src":"2280:14:22","value":{"kind":"number","nativeSrc":"2293:1:22","nodeType":"YulLiteral","src":"2293:1:22","type":"","value":"0"},"variables":[{"name":"value","nativeSrc":"2284:5:22","nodeType":"YulTypedName","src":"2284:5:22","type":""}]},{"nativeSrc":"2303:41:22","nodeType":"YulAssignment","src":"2303:41:22","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"2329:9:22","nodeType":"YulIdentifier","src":"2329:9:22"},{"kind":"number","nativeSrc":"2340:2:22","nodeType":"YulLiteral","src":"2340:2:22","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"2325:3:22","nodeType":"YulIdentifier","src":"2325:3:22"},"nativeSrc":"2325:18:22","nodeType":"YulFunctionCall","src":"2325:18:22"}],"functionName":{"name":"calldataload","nativeSrc":"2312:12:22","nodeType":"YulIdentifier","src":"2312:12:22"},"nativeSrc":"2312:32:22","nodeType":"YulFunctionCall","src":"2312:32:22"},"variableNames":[{"name":"value","nativeSrc":"2303:5:22","nodeType":"YulIdentifier","src":"2303:5:22"}]},{"nativeSrc":"2353:15:22","nodeType":"YulAssignment","src":"2353:15:22","value":{"name":"value","nativeSrc":"2363:5:22","nodeType":"YulIdentifier","src":"2363:5:22"},"variableNames":[{"name":"value1","nativeSrc":"2353:6:22","nodeType":"YulIdentifier","src":"2353:6:22"}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nativeSrc":"2074:300:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"2119:9:22","nodeType":"YulTypedName","src":"2119:9:22","type":""},{"name":"dataEnd","nativeSrc":"2130:7:22","nodeType":"YulTypedName","src":"2130:7:22","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"2142:6:22","nodeType":"YulTypedName","src":"2142:6:22","type":""},{"name":"value1","nativeSrc":"2150:6:22","nodeType":"YulTypedName","src":"2150:6:22","type":""}],"src":"2074:300:22"},{"body":{"nativeSrc":"2483:270:22","nodeType":"YulBlock","src":"2483:270:22","statements":[{"body":{"nativeSrc":"2529:16:22","nodeType":"YulBlock","src":"2529:16:22","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"2538:1:22","nodeType":"YulLiteral","src":"2538:1:22","type":"","value":"0"},{"kind":"number","nativeSrc":"2541:1:22","nodeType":"YulLiteral","src":"2541:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"2531:6:22","nodeType":"YulIdentifier","src":"2531:6:22"},"nativeSrc":"2531:12:22","nodeType":"YulFunctionCall","src":"2531:12:22"},"nativeSrc":"2531:12:22","nodeType":"YulExpressionStatement","src":"2531:12:22"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"2504:7:22","nodeType":"YulIdentifier","src":"2504:7:22"},{"name":"headStart","nativeSrc":"2513:9:22","nodeType":"YulIdentifier","src":"2513:9:22"}],"functionName":{"name":"sub","nativeSrc":"2500:3:22","nodeType":"YulIdentifier","src":"2500:3:22"},"nativeSrc":"2500:23:22","nodeType":"YulFunctionCall","src":"2500:23:22"},{"kind":"number","nativeSrc":"2525:2:22","nodeType":"YulLiteral","src":"2525:2:22","type":"","value":"96"}],"functionName":{"name":"slt","nativeSrc":"2496:3:22","nodeType":"YulIdentifier","src":"2496:3:22"},"nativeSrc":"2496:32:22","nodeType":"YulFunctionCall","src":"2496:32:22"},"nativeSrc":"2493:52:22","nodeType":"YulIf","src":"2493:52:22"},{"nativeSrc":"2554:39:22","nodeType":"YulAssignment","src":"2554:39:22","value":{"arguments":[{"name":"headStart","nativeSrc":"2583:9:22","nodeType":"YulIdentifier","src":"2583:9:22"}],"functionName":{"name":"abi_decode_address","nativeSrc":"2564:18:22","nodeType":"YulIdentifier","src":"2564:18:22"},"nativeSrc":"2564:29:22","nodeType":"YulFunctionCall","src":"2564:29:22"},"variableNames":[{"name":"value0","nativeSrc":"2554:6:22","nodeType":"YulIdentifier","src":"2554:6:22"}]},{"nativeSrc":"2602:48:22","nodeType":"YulAssignment","src":"2602:48:22","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"2635:9:22","nodeType":"YulIdentifier","src":"2635:9:22"},{"kind":"number","nativeSrc":"2646:2:22","nodeType":"YulLiteral","src":"2646:2:22","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"2631:3:22","nodeType":"YulIdentifier","src":"2631:3:22"},"nativeSrc":"2631:18:22","nodeType":"YulFunctionCall","src":"2631:18:22"}],"functionName":{"name":"abi_decode_address","nativeSrc":"2612:18:22","nodeType":"YulIdentifier","src":"2612:18:22"},"nativeSrc":"2612:38:22","nodeType":"YulFunctionCall","src":"2612:38:22"},"variableNames":[{"name":"value1","nativeSrc":"2602:6:22","nodeType":"YulIdentifier","src":"2602:6:22"}]},{"nativeSrc":"2659:14:22","nodeType":"YulVariableDeclaration","src":"2659:14:22","value":{"kind":"number","nativeSrc":"2672:1:22","nodeType":"YulLiteral","src":"2672:1:22","type":"","value":"0"},"variables":[{"name":"value","nativeSrc":"2663:5:22","nodeType":"YulTypedName","src":"2663:5:22","type":""}]},{"nativeSrc":"2682:41:22","nodeType":"YulAssignment","src":"2682:41:22","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"2708:9:22","nodeType":"YulIdentifier","src":"2708:9:22"},{"kind":"number","nativeSrc":"2719:2:22","nodeType":"YulLiteral","src":"2719:2:22","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"2704:3:22","nodeType":"YulIdentifier","src":"2704:3:22"},"nativeSrc":"2704:18:22","nodeType":"YulFunctionCall","src":"2704:18:22"}],"functionName":{"name":"calldataload","nativeSrc":"2691:12:22","nodeType":"YulIdentifier","src":"2691:12:22"},"nativeSrc":"2691:32:22","nodeType":"YulFunctionCall","src":"2691:32:22"},"variableNames":[{"name":"value","nativeSrc":"2682:5:22","nodeType":"YulIdentifier","src":"2682:5:22"}]},{"nativeSrc":"2732:15:22","nodeType":"YulAssignment","src":"2732:15:22","value":{"name":"value","nativeSrc":"2742:5:22","nodeType":"YulIdentifier","src":"2742:5:22"},"variableNames":[{"name":"value2","nativeSrc":"2732:6:22","nodeType":"YulIdentifier","src":"2732:6:22"}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256","nativeSrc":"2379:374:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"2433:9:22","nodeType":"YulTypedName","src":"2433:9:22","type":""},{"name":"dataEnd","nativeSrc":"2444:7:22","nodeType":"YulTypedName","src":"2444:7:22","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"2456:6:22","nodeType":"YulTypedName","src":"2456:6:22","type":""},{"name":"value1","nativeSrc":"2464:6:22","nodeType":"YulTypedName","src":"2464:6:22","type":""},{"name":"value2","nativeSrc":"2472:6:22","nodeType":"YulTypedName","src":"2472:6:22","type":""}],"src":"2379:374:22"},{"body":{"nativeSrc":"2859:76:22","nodeType":"YulBlock","src":"2859:76:22","statements":[{"nativeSrc":"2869:26:22","nodeType":"YulAssignment","src":"2869:26:22","value":{"arguments":[{"name":"headStart","nativeSrc":"2881:9:22","nodeType":"YulIdentifier","src":"2881:9:22"},{"kind":"number","nativeSrc":"2892:2:22","nodeType":"YulLiteral","src":"2892:2:22","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"2877:3:22","nodeType":"YulIdentifier","src":"2877:3:22"},"nativeSrc":"2877:18:22","nodeType":"YulFunctionCall","src":"2877:18:22"},"variableNames":[{"name":"tail","nativeSrc":"2869:4:22","nodeType":"YulIdentifier","src":"2869:4:22"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"2911:9:22","nodeType":"YulIdentifier","src":"2911:9:22"},{"name":"value0","nativeSrc":"2922:6:22","nodeType":"YulIdentifier","src":"2922:6:22"}],"functionName":{"name":"mstore","nativeSrc":"2904:6:22","nodeType":"YulIdentifier","src":"2904:6:22"},"nativeSrc":"2904:25:22","nodeType":"YulFunctionCall","src":"2904:25:22"},"nativeSrc":"2904:25:22","nodeType":"YulExpressionStatement","src":"2904:25:22"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nativeSrc":"2758:177:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"2828:9:22","nodeType":"YulTypedName","src":"2828:9:22","type":""},{"name":"value0","nativeSrc":"2839:6:22","nodeType":"YulTypedName","src":"2839:6:22","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"2850:4:22","nodeType":"YulTypedName","src":"2850:4:22","type":""}],"src":"2758:177:22"},{"body":{"nativeSrc":"3013:275:22","nodeType":"YulBlock","src":"3013:275:22","statements":[{"body":{"nativeSrc":"3062:16:22","nodeType":"YulBlock","src":"3062:16:22","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"3071:1:22","nodeType":"YulLiteral","src":"3071:1:22","type":"","value":"0"},{"kind":"number","nativeSrc":"3074:1:22","nodeType":"YulLiteral","src":"3074:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"3064:6:22","nodeType":"YulIdentifier","src":"3064:6:22"},"nativeSrc":"3064:12:22","nodeType":"YulFunctionCall","src":"3064:12:22"},"nativeSrc":"3064:12:22","nodeType":"YulExpressionStatement","src":"3064:12:22"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nativeSrc":"3041:6:22","nodeType":"YulIdentifier","src":"3041:6:22"},{"kind":"number","nativeSrc":"3049:4:22","nodeType":"YulLiteral","src":"3049:4:22","type":"","value":"0x1f"}],"functionName":{"name":"add","nativeSrc":"3037:3:22","nodeType":"YulIdentifier","src":"3037:3:22"},"nativeSrc":"3037:17:22","nodeType":"YulFunctionCall","src":"3037:17:22"},{"name":"end","nativeSrc":"3056:3:22","nodeType":"YulIdentifier","src":"3056:3:22"}],"functionName":{"name":"slt","nativeSrc":"3033:3:22","nodeType":"YulIdentifier","src":"3033:3:22"},"nativeSrc":"3033:27:22","nodeType":"YulFunctionCall","src":"3033:27:22"}],"functionName":{"name":"iszero","nativeSrc":"3026:6:22","nodeType":"YulIdentifier","src":"3026:6:22"},"nativeSrc":"3026:35:22","nodeType":"YulFunctionCall","src":"3026:35:22"},"nativeSrc":"3023:55:22","nodeType":"YulIf","src":"3023:55:22"},{"nativeSrc":"3087:30:22","nodeType":"YulAssignment","src":"3087:30:22","value":{"arguments":[{"name":"offset","nativeSrc":"3110:6:22","nodeType":"YulIdentifier","src":"3110:6:22"}],"functionName":{"name":"calldataload","nativeSrc":"3097:12:22","nodeType":"YulIdentifier","src":"3097:12:22"},"nativeSrc":"3097:20:22","nodeType":"YulFunctionCall","src":"3097:20:22"},"variableNames":[{"name":"length","nativeSrc":"3087:6:22","nodeType":"YulIdentifier","src":"3087:6:22"}]},{"body":{"nativeSrc":"3160:16:22","nodeType":"YulBlock","src":"3160:16:22","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"3169:1:22","nodeType":"YulLiteral","src":"3169:1:22","type":"","value":"0"},{"kind":"number","nativeSrc":"3172:1:22","nodeType":"YulLiteral","src":"3172:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"3162:6:22","nodeType":"YulIdentifier","src":"3162:6:22"},"nativeSrc":"3162:12:22","nodeType":"YulFunctionCall","src":"3162:12:22"},"nativeSrc":"3162:12:22","nodeType":"YulExpressionStatement","src":"3162:12:22"}]},"condition":{"arguments":[{"name":"length","nativeSrc":"3132:6:22","nodeType":"YulIdentifier","src":"3132:6:22"},{"kind":"number","nativeSrc":"3140:18:22","nodeType":"YulLiteral","src":"3140:18:22","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"3129:2:22","nodeType":"YulIdentifier","src":"3129:2:22"},"nativeSrc":"3129:30:22","nodeType":"YulFunctionCall","src":"3129:30:22"},"nativeSrc":"3126:50:22","nodeType":"YulIf","src":"3126:50:22"},{"nativeSrc":"3185:29:22","nodeType":"YulAssignment","src":"3185:29:22","value":{"arguments":[{"name":"offset","nativeSrc":"3201:6:22","nodeType":"YulIdentifier","src":"3201:6:22"},{"kind":"number","nativeSrc":"3209:4:22","nodeType":"YulLiteral","src":"3209:4:22","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"3197:3:22","nodeType":"YulIdentifier","src":"3197:3:22"},"nativeSrc":"3197:17:22","nodeType":"YulFunctionCall","src":"3197:17:22"},"variableNames":[{"name":"arrayPos","nativeSrc":"3185:8:22","nodeType":"YulIdentifier","src":"3185:8:22"}]},{"body":{"nativeSrc":"3266:16:22","nodeType":"YulBlock","src":"3266:16:22","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"3275:1:22","nodeType":"YulLiteral","src":"3275:1:22","type":"","value":"0"},{"kind":"number","nativeSrc":"3278:1:22","nodeType":"YulLiteral","src":"3278:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"3268:6:22","nodeType":"YulIdentifier","src":"3268:6:22"},"nativeSrc":"3268:12:22","nodeType":"YulFunctionCall","src":"3268:12:22"},"nativeSrc":"3268:12:22","nodeType":"YulExpressionStatement","src":"3268:12:22"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nativeSrc":"3237:6:22","nodeType":"YulIdentifier","src":"3237:6:22"},{"name":"length","nativeSrc":"3245:6:22","nodeType":"YulIdentifier","src":"3245:6:22"}],"functionName":{"name":"add","nativeSrc":"3233:3:22","nodeType":"YulIdentifier","src":"3233:3:22"},"nativeSrc":"3233:19:22","nodeType":"YulFunctionCall","src":"3233:19:22"},{"kind":"number","nativeSrc":"3254:4:22","nodeType":"YulLiteral","src":"3254:4:22","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"3229:3:22","nodeType":"YulIdentifier","src":"3229:3:22"},"nativeSrc":"3229:30:22","nodeType":"YulFunctionCall","src":"3229:30:22"},{"name":"end","nativeSrc":"3261:3:22","nodeType":"YulIdentifier","src":"3261:3:22"}],"functionName":{"name":"gt","nativeSrc":"3226:2:22","nodeType":"YulIdentifier","src":"3226:2:22"},"nativeSrc":"3226:39:22","nodeType":"YulFunctionCall","src":"3226:39:22"},"nativeSrc":"3223:59:22","nodeType":"YulIf","src":"3223:59:22"}]},"name":"abi_decode_string_calldata","nativeSrc":"2940:348:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"2976:6:22","nodeType":"YulTypedName","src":"2976:6:22","type":""},{"name":"end","nativeSrc":"2984:3:22","nodeType":"YulTypedName","src":"2984:3:22","type":""}],"returnVariables":[{"name":"arrayPos","nativeSrc":"2992:8:22","nodeType":"YulTypedName","src":"2992:8:22","type":""},{"name":"length","nativeSrc":"3002:6:22","nodeType":"YulTypedName","src":"3002:6:22","type":""}],"src":"2940:348:22"},{"body":{"nativeSrc":"3417:475:22","nodeType":"YulBlock","src":"3417:475:22","statements":[{"body":{"nativeSrc":"3463:16:22","nodeType":"YulBlock","src":"3463:16:22","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"3472:1:22","nodeType":"YulLiteral","src":"3472:1:22","type":"","value":"0"},{"kind":"number","nativeSrc":"3475:1:22","nodeType":"YulLiteral","src":"3475:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"3465:6:22","nodeType":"YulIdentifier","src":"3465:6:22"},"nativeSrc":"3465:12:22","nodeType":"YulFunctionCall","src":"3465:12:22"},"nativeSrc":"3465:12:22","nodeType":"YulExpressionStatement","src":"3465:12:22"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"3438:7:22","nodeType":"YulIdentifier","src":"3438:7:22"},{"name":"headStart","nativeSrc":"3447:9:22","nodeType":"YulIdentifier","src":"3447:9:22"}],"functionName":{"name":"sub","nativeSrc":"3434:3:22","nodeType":"YulIdentifier","src":"3434:3:22"},"nativeSrc":"3434:23:22","nodeType":"YulFunctionCall","src":"3434:23:22"},{"kind":"number","nativeSrc":"3459:2:22","nodeType":"YulLiteral","src":"3459:2:22","type":"","value":"96"}],"functionName":{"name":"slt","nativeSrc":"3430:3:22","nodeType":"YulIdentifier","src":"3430:3:22"},"nativeSrc":"3430:32:22","nodeType":"YulFunctionCall","src":"3430:32:22"},"nativeSrc":"3427:52:22","nodeType":"YulIf","src":"3427:52:22"},{"nativeSrc":"3488:39:22","nodeType":"YulAssignment","src":"3488:39:22","value":{"arguments":[{"name":"headStart","nativeSrc":"3517:9:22","nodeType":"YulIdentifier","src":"3517:9:22"}],"functionName":{"name":"abi_decode_address","nativeSrc":"3498:18:22","nodeType":"YulIdentifier","src":"3498:18:22"},"nativeSrc":"3498:29:22","nodeType":"YulFunctionCall","src":"3498:29:22"},"variableNames":[{"name":"value0","nativeSrc":"3488:6:22","nodeType":"YulIdentifier","src":"3488:6:22"}]},{"nativeSrc":"3536:14:22","nodeType":"YulVariableDeclaration","src":"3536:14:22","value":{"kind":"number","nativeSrc":"3549:1:22","nodeType":"YulLiteral","src":"3549:1:22","type":"","value":"0"},"variables":[{"name":"value","nativeSrc":"3540:5:22","nodeType":"YulTypedName","src":"3540:5:22","type":""}]},{"nativeSrc":"3559:41:22","nodeType":"YulAssignment","src":"3559:41:22","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"3585:9:22","nodeType":"YulIdentifier","src":"3585:9:22"},{"kind":"number","nativeSrc":"3596:2:22","nodeType":"YulLiteral","src":"3596:2:22","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"3581:3:22","nodeType":"YulIdentifier","src":"3581:3:22"},"nativeSrc":"3581:18:22","nodeType":"YulFunctionCall","src":"3581:18:22"}],"functionName":{"name":"calldataload","nativeSrc":"3568:12:22","nodeType":"YulIdentifier","src":"3568:12:22"},"nativeSrc":"3568:32:22","nodeType":"YulFunctionCall","src":"3568:32:22"},"variableNames":[{"name":"value","nativeSrc":"3559:5:22","nodeType":"YulIdentifier","src":"3559:5:22"}]},{"nativeSrc":"3609:15:22","nodeType":"YulAssignment","src":"3609:15:22","value":{"name":"value","nativeSrc":"3619:5:22","nodeType":"YulIdentifier","src":"3619:5:22"},"variableNames":[{"name":"value1","nativeSrc":"3609:6:22","nodeType":"YulIdentifier","src":"3609:6:22"}]},{"nativeSrc":"3633:46:22","nodeType":"YulVariableDeclaration","src":"3633:46:22","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"3664:9:22","nodeType":"YulIdentifier","src":"3664:9:22"},{"kind":"number","nativeSrc":"3675:2:22","nodeType":"YulLiteral","src":"3675:2:22","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"3660:3:22","nodeType":"YulIdentifier","src":"3660:3:22"},"nativeSrc":"3660:18:22","nodeType":"YulFunctionCall","src":"3660:18:22"}],"functionName":{"name":"calldataload","nativeSrc":"3647:12:22","nodeType":"YulIdentifier","src":"3647:12:22"},"nativeSrc":"3647:32:22","nodeType":"YulFunctionCall","src":"3647:32:22"},"variables":[{"name":"offset","nativeSrc":"3637:6:22","nodeType":"YulTypedName","src":"3637:6:22","type":""}]},{"body":{"nativeSrc":"3722:16:22","nodeType":"YulBlock","src":"3722:16:22","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"3731:1:22","nodeType":"YulLiteral","src":"3731:1:22","type":"","value":"0"},{"kind":"number","nativeSrc":"3734:1:22","nodeType":"YulLiteral","src":"3734:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"3724:6:22","nodeType":"YulIdentifier","src":"3724:6:22"},"nativeSrc":"3724:12:22","nodeType":"YulFunctionCall","src":"3724:12:22"},"nativeSrc":"3724:12:22","nodeType":"YulExpressionStatement","src":"3724:12:22"}]},"condition":{"arguments":[{"name":"offset","nativeSrc":"3694:6:22","nodeType":"YulIdentifier","src":"3694:6:22"},{"kind":"number","nativeSrc":"3702:18:22","nodeType":"YulLiteral","src":"3702:18:22","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"3691:2:22","nodeType":"YulIdentifier","src":"3691:2:22"},"nativeSrc":"3691:30:22","nodeType":"YulFunctionCall","src":"3691:30:22"},"nativeSrc":"3688:50:22","nodeType":"YulIf","src":"3688:50:22"},{"nativeSrc":"3747:85:22","nodeType":"YulVariableDeclaration","src":"3747:85:22","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"3804:9:22","nodeType":"YulIdentifier","src":"3804:9:22"},{"name":"offset","nativeSrc":"3815:6:22","nodeType":"YulIdentifier","src":"3815:6:22"}],"functionName":{"name":"add","nativeSrc":"3800:3:22","nodeType":"YulIdentifier","src":"3800:3:22"},"nativeSrc":"3800:22:22","nodeType":"YulFunctionCall","src":"3800:22:22"},{"name":"dataEnd","nativeSrc":"3824:7:22","nodeType":"YulIdentifier","src":"3824:7:22"}],"functionName":{"name":"abi_decode_string_calldata","nativeSrc":"3773:26:22","nodeType":"YulIdentifier","src":"3773:26:22"},"nativeSrc":"3773:59:22","nodeType":"YulFunctionCall","src":"3773:59:22"},"variables":[{"name":"value2_1","nativeSrc":"3751:8:22","nodeType":"YulTypedName","src":"3751:8:22","type":""},{"name":"value3_1","nativeSrc":"3761:8:22","nodeType":"YulTypedName","src":"3761:8:22","type":""}]},{"nativeSrc":"3841:18:22","nodeType":"YulAssignment","src":"3841:18:22","value":{"name":"value2_1","nativeSrc":"3851:8:22","nodeType":"YulIdentifier","src":"3851:8:22"},"variableNames":[{"name":"value2","nativeSrc":"3841:6:22","nodeType":"YulIdentifier","src":"3841:6:22"}]},{"nativeSrc":"3868:18:22","nodeType":"YulAssignment","src":"3868:18:22","value":{"name":"value3_1","nativeSrc":"3878:8:22","nodeType":"YulIdentifier","src":"3878:8:22"},"variableNames":[{"name":"value3","nativeSrc":"3868:6:22","nodeType":"YulIdentifier","src":"3868:6:22"}]}]},"name":"abi_decode_tuple_t_addresst_uint256t_string_calldata_ptr","nativeSrc":"3293:599:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"3359:9:22","nodeType":"YulTypedName","src":"3359:9:22","type":""},{"name":"dataEnd","nativeSrc":"3370:7:22","nodeType":"YulTypedName","src":"3370:7:22","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"3382:6:22","nodeType":"YulTypedName","src":"3382:6:22","type":""},{"name":"value1","nativeSrc":"3390:6:22","nodeType":"YulTypedName","src":"3390:6:22","type":""},{"name":"value2","nativeSrc":"3398:6:22","nodeType":"YulTypedName","src":"3398:6:22","type":""},{"name":"value3","nativeSrc":"3406:6:22","nodeType":"YulTypedName","src":"3406:6:22","type":""}],"src":"3293:599:22"},{"body":{"nativeSrc":"4014:102:22","nodeType":"YulBlock","src":"4014:102:22","statements":[{"nativeSrc":"4024:26:22","nodeType":"YulAssignment","src":"4024:26:22","value":{"arguments":[{"name":"headStart","nativeSrc":"4036:9:22","nodeType":"YulIdentifier","src":"4036:9:22"},{"kind":"number","nativeSrc":"4047:2:22","nodeType":"YulLiteral","src":"4047:2:22","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"4032:3:22","nodeType":"YulIdentifier","src":"4032:3:22"},"nativeSrc":"4032:18:22","nodeType":"YulFunctionCall","src":"4032:18:22"},"variableNames":[{"name":"tail","nativeSrc":"4024:4:22","nodeType":"YulIdentifier","src":"4024:4:22"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"4066:9:22","nodeType":"YulIdentifier","src":"4066:9:22"},{"arguments":[{"name":"value0","nativeSrc":"4081:6:22","nodeType":"YulIdentifier","src":"4081:6:22"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"4097:3:22","nodeType":"YulLiteral","src":"4097:3:22","type":"","value":"160"},{"kind":"number","nativeSrc":"4102:1:22","nodeType":"YulLiteral","src":"4102:1:22","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"4093:3:22","nodeType":"YulIdentifier","src":"4093:3:22"},"nativeSrc":"4093:11:22","nodeType":"YulFunctionCall","src":"4093:11:22"},{"kind":"number","nativeSrc":"4106:1:22","nodeType":"YulLiteral","src":"4106:1:22","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"4089:3:22","nodeType":"YulIdentifier","src":"4089:3:22"},"nativeSrc":"4089:19:22","nodeType":"YulFunctionCall","src":"4089:19:22"}],"functionName":{"name":"and","nativeSrc":"4077:3:22","nodeType":"YulIdentifier","src":"4077:3:22"},"nativeSrc":"4077:32:22","nodeType":"YulFunctionCall","src":"4077:32:22"}],"functionName":{"name":"mstore","nativeSrc":"4059:6:22","nodeType":"YulIdentifier","src":"4059:6:22"},"nativeSrc":"4059:51:22","nodeType":"YulFunctionCall","src":"4059:51:22"},"nativeSrc":"4059:51:22","nodeType":"YulExpressionStatement","src":"4059:51:22"}]},"name":"abi_encode_tuple_t_contract$_INRCoin_$5690__to_t_address__fromStack_reversed","nativeSrc":"3897:219:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"3983:9:22","nodeType":"YulTypedName","src":"3983:9:22","type":""},{"name":"value0","nativeSrc":"3994:6:22","nodeType":"YulTypedName","src":"3994:6:22","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"4005:4:22","nodeType":"YulTypedName","src":"4005:4:22","type":""}],"src":"3897:219:22"},{"body":{"nativeSrc":"4191:116:22","nodeType":"YulBlock","src":"4191:116:22","statements":[{"body":{"nativeSrc":"4237:16:22","nodeType":"YulBlock","src":"4237:16:22","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"4246:1:22","nodeType":"YulLiteral","src":"4246:1:22","type":"","value":"0"},{"kind":"number","nativeSrc":"4249:1:22","nodeType":"YulLiteral","src":"4249:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"4239:6:22","nodeType":"YulIdentifier","src":"4239:6:22"},"nativeSrc":"4239:12:22","nodeType":"YulFunctionCall","src":"4239:12:22"},"nativeSrc":"4239:12:22","nodeType":"YulExpressionStatement","src":"4239:12:22"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"4212:7:22","nodeType":"YulIdentifier","src":"4212:7:22"},{"name":"headStart","nativeSrc":"4221:9:22","nodeType":"YulIdentifier","src":"4221:9:22"}],"functionName":{"name":"sub","nativeSrc":"4208:3:22","nodeType":"YulIdentifier","src":"4208:3:22"},"nativeSrc":"4208:23:22","nodeType":"YulFunctionCall","src":"4208:23:22"},{"kind":"number","nativeSrc":"4233:2:22","nodeType":"YulLiteral","src":"4233:2:22","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"4204:3:22","nodeType":"YulIdentifier","src":"4204:3:22"},"nativeSrc":"4204:32:22","nodeType":"YulFunctionCall","src":"4204:32:22"},"nativeSrc":"4201:52:22","nodeType":"YulIf","src":"4201:52:22"},{"nativeSrc":"4262:39:22","nodeType":"YulAssignment","src":"4262:39:22","value":{"arguments":[{"name":"headStart","nativeSrc":"4291:9:22","nodeType":"YulIdentifier","src":"4291:9:22"}],"functionName":{"name":"abi_decode_address","nativeSrc":"4272:18:22","nodeType":"YulIdentifier","src":"4272:18:22"},"nativeSrc":"4272:29:22","nodeType":"YulFunctionCall","src":"4272:29:22"},"variableNames":[{"name":"value0","nativeSrc":"4262:6:22","nodeType":"YulIdentifier","src":"4262:6:22"}]}]},"name":"abi_decode_tuple_t_address","nativeSrc":"4121:186:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"4157:9:22","nodeType":"YulTypedName","src":"4157:9:22","type":""},{"name":"dataEnd","nativeSrc":"4168:7:22","nodeType":"YulTypedName","src":"4168:7:22","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"4180:6:22","nodeType":"YulTypedName","src":"4180:6:22","type":""}],"src":"4121:186:22"},{"body":{"nativeSrc":"4344:95:22","nodeType":"YulBlock","src":"4344:95:22","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"4361:1:22","nodeType":"YulLiteral","src":"4361:1:22","type":"","value":"0"},{"arguments":[{"kind":"number","nativeSrc":"4368:3:22","nodeType":"YulLiteral","src":"4368:3:22","type":"","value":"224"},{"kind":"number","nativeSrc":"4373:10:22","nodeType":"YulLiteral","src":"4373:10:22","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nativeSrc":"4364:3:22","nodeType":"YulIdentifier","src":"4364:3:22"},"nativeSrc":"4364:20:22","nodeType":"YulFunctionCall","src":"4364:20:22"}],"functionName":{"name":"mstore","nativeSrc":"4354:6:22","nodeType":"YulIdentifier","src":"4354:6:22"},"nativeSrc":"4354:31:22","nodeType":"YulFunctionCall","src":"4354:31:22"},"nativeSrc":"4354:31:22","nodeType":"YulExpressionStatement","src":"4354:31:22"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"4401:1:22","nodeType":"YulLiteral","src":"4401:1:22","type":"","value":"4"},{"kind":"number","nativeSrc":"4404:4:22","nodeType":"YulLiteral","src":"4404:4:22","type":"","value":"0x41"}],"functionName":{"name":"mstore","nativeSrc":"4394:6:22","nodeType":"YulIdentifier","src":"4394:6:22"},"nativeSrc":"4394:15:22","nodeType":"YulFunctionCall","src":"4394:15:22"},"nativeSrc":"4394:15:22","nodeType":"YulExpressionStatement","src":"4394:15:22"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"4425:1:22","nodeType":"YulLiteral","src":"4425:1:22","type":"","value":"0"},{"kind":"number","nativeSrc":"4428:4:22","nodeType":"YulLiteral","src":"4428:4:22","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"4418:6:22","nodeType":"YulIdentifier","src":"4418:6:22"},"nativeSrc":"4418:15:22","nodeType":"YulFunctionCall","src":"4418:15:22"},"nativeSrc":"4418:15:22","nodeType":"YulExpressionStatement","src":"4418:15:22"}]},"name":"panic_error_0x41","nativeSrc":"4312:127:22","nodeType":"YulFunctionDefinition","src":"4312:127:22"},{"body":{"nativeSrc":"4519:641:22","nodeType":"YulBlock","src":"4519:641:22","statements":[{"nativeSrc":"4529:13:22","nodeType":"YulVariableDeclaration","src":"4529:13:22","value":{"kind":"number","nativeSrc":"4541:1:22","nodeType":"YulLiteral","src":"4541:1:22","type":"","value":"0"},"variables":[{"name":"size","nativeSrc":"4533:4:22","nodeType":"YulTypedName","src":"4533:4:22","type":""}]},{"body":{"nativeSrc":"4585:22:22","nodeType":"YulBlock","src":"4585:22:22","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nativeSrc":"4587:16:22","nodeType":"YulIdentifier","src":"4587:16:22"},"nativeSrc":"4587:18:22","nodeType":"YulFunctionCall","src":"4587:18:22"},"nativeSrc":"4587:18:22","nodeType":"YulExpressionStatement","src":"4587:18:22"}]},"condition":{"arguments":[{"name":"length","nativeSrc":"4557:6:22","nodeType":"YulIdentifier","src":"4557:6:22"},{"kind":"number","nativeSrc":"4565:18:22","nodeType":"YulLiteral","src":"4565:18:22","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"4554:2:22","nodeType":"YulIdentifier","src":"4554:2:22"},"nativeSrc":"4554:30:22","nodeType":"YulFunctionCall","src":"4554:30:22"},"nativeSrc":"4551:56:22","nodeType":"YulIf","src":"4551:56:22"},{"nativeSrc":"4616:43:22","nodeType":"YulVariableDeclaration","src":"4616:43:22","value":{"arguments":[{"arguments":[{"name":"length","nativeSrc":"4638:6:22","nodeType":"YulIdentifier","src":"4638:6:22"},{"kind":"number","nativeSrc":"4646:2:22","nodeType":"YulLiteral","src":"4646:2:22","type":"","value":"31"}],"functionName":{"name":"add","nativeSrc":"4634:3:22","nodeType":"YulIdentifier","src":"4634:3:22"},"nativeSrc":"4634:15:22","nodeType":"YulFunctionCall","src":"4634:15:22"},{"arguments":[{"kind":"number","nativeSrc":"4655:2:22","nodeType":"YulLiteral","src":"4655:2:22","type":"","value":"31"}],"functionName":{"name":"not","nativeSrc":"4651:3:22","nodeType":"YulIdentifier","src":"4651:3:22"},"nativeSrc":"4651:7:22","nodeType":"YulFunctionCall","src":"4651:7:22"}],"functionName":{"name":"and","nativeSrc":"4630:3:22","nodeType":"YulIdentifier","src":"4630:3:22"},"nativeSrc":"4630:29:22","nodeType":"YulFunctionCall","src":"4630:29:22"},"variables":[{"name":"result","nativeSrc":"4620:6:22","nodeType":"YulTypedName","src":"4620:6:22","type":""}]},{"nativeSrc":"4668:25:22","nodeType":"YulAssignment","src":"4668:25:22","value":{"arguments":[{"name":"result","nativeSrc":"4680:6:22","nodeType":"YulIdentifier","src":"4680:6:22"},{"kind":"number","nativeSrc":"4688:4:22","nodeType":"YulLiteral","src":"4688:4:22","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"4676:3:22","nodeType":"YulIdentifier","src":"4676:3:22"},"nativeSrc":"4676:17:22","nodeType":"YulFunctionCall","src":"4676:17:22"},"variableNames":[{"name":"size","nativeSrc":"4668:4:22","nodeType":"YulIdentifier","src":"4668:4:22"}]},{"nativeSrc":"4702:15:22","nodeType":"YulVariableDeclaration","src":"4702:15:22","value":{"kind":"number","nativeSrc":"4716:1:22","nodeType":"YulLiteral","src":"4716:1:22","type":"","value":"0"},"variables":[{"name":"memPtr","nativeSrc":"4706:6:22","nodeType":"YulTypedName","src":"4706:6:22","type":""}]},{"nativeSrc":"4726:19:22","nodeType":"YulAssignment","src":"4726:19:22","value":{"arguments":[{"kind":"number","nativeSrc":"4742:2:22","nodeType":"YulLiteral","src":"4742:2:22","type":"","value":"64"}],"functionName":{"name":"mload","nativeSrc":"4736:5:22","nodeType":"YulIdentifier","src":"4736:5:22"},"nativeSrc":"4736:9:22","nodeType":"YulFunctionCall","src":"4736:9:22"},"variableNames":[{"name":"memPtr","nativeSrc":"4726:6:22","nodeType":"YulIdentifier","src":"4726:6:22"}]},{"nativeSrc":"4754:60:22","nodeType":"YulVariableDeclaration","src":"4754:60:22","value":{"arguments":[{"name":"memPtr","nativeSrc":"4776:6:22","nodeType":"YulIdentifier","src":"4776:6:22"},{"arguments":[{"arguments":[{"name":"result","nativeSrc":"4792:6:22","nodeType":"YulIdentifier","src":"4792:6:22"},{"kind":"number","nativeSrc":"4800:2:22","nodeType":"YulLiteral","src":"4800:2:22","type":"","value":"63"}],"functionName":{"name":"add","nativeSrc":"4788:3:22","nodeType":"YulIdentifier","src":"4788:3:22"},"nativeSrc":"4788:15:22","nodeType":"YulFunctionCall","src":"4788:15:22"},{"arguments":[{"kind":"number","nativeSrc":"4809:2:22","nodeType":"YulLiteral","src":"4809:2:22","type":"","value":"31"}],"functionName":{"name":"not","nativeSrc":"4805:3:22","nodeType":"YulIdentifier","src":"4805:3:22"},"nativeSrc":"4805:7:22","nodeType":"YulFunctionCall","src":"4805:7:22"}],"functionName":{"name":"and","nativeSrc":"4784:3:22","nodeType":"YulIdentifier","src":"4784:3:22"},"nativeSrc":"4784:29:22","nodeType":"YulFunctionCall","src":"4784:29:22"}],"functionName":{"name":"add","nativeSrc":"4772:3:22","nodeType":"YulIdentifier","src":"4772:3:22"},"nativeSrc":"4772:42:22","nodeType":"YulFunctionCall","src":"4772:42:22"},"variables":[{"name":"newFreePtr","nativeSrc":"4758:10:22","nodeType":"YulTypedName","src":"4758:10:22","type":""}]},{"body":{"nativeSrc":"4889:22:22","nodeType":"YulBlock","src":"4889:22:22","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nativeSrc":"4891:16:22","nodeType":"YulIdentifier","src":"4891:16:22"},"nativeSrc":"4891:18:22","nodeType":"YulFunctionCall","src":"4891:18:22"},"nativeSrc":"4891:18:22","nodeType":"YulExpressionStatement","src":"4891:18:22"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nativeSrc":"4832:10:22","nodeType":"YulIdentifier","src":"4832:10:22"},{"kind":"number","nativeSrc":"4844:18:22","nodeType":"YulLiteral","src":"4844:18:22","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"4829:2:22","nodeType":"YulIdentifier","src":"4829:2:22"},"nativeSrc":"4829:34:22","nodeType":"YulFunctionCall","src":"4829:34:22"},{"arguments":[{"name":"newFreePtr","nativeSrc":"4868:10:22","nodeType":"YulIdentifier","src":"4868:10:22"},{"name":"memPtr","nativeSrc":"4880:6:22","nodeType":"YulIdentifier","src":"4880:6:22"}],"functionName":{"name":"lt","nativeSrc":"4865:2:22","nodeType":"YulIdentifier","src":"4865:2:22"},"nativeSrc":"4865:22:22","nodeType":"YulFunctionCall","src":"4865:22:22"}],"functionName":{"name":"or","nativeSrc":"4826:2:22","nodeType":"YulIdentifier","src":"4826:2:22"},"nativeSrc":"4826:62:22","nodeType":"YulFunctionCall","src":"4826:62:22"},"nativeSrc":"4823:88:22","nodeType":"YulIf","src":"4823:88:22"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"4927:2:22","nodeType":"YulLiteral","src":"4927:2:22","type":"","value":"64"},{"name":"newFreePtr","nativeSrc":"4931:10:22","nodeType":"YulIdentifier","src":"4931:10:22"}],"functionName":{"name":"mstore","nativeSrc":"4920:6:22","nodeType":"YulIdentifier","src":"4920:6:22"},"nativeSrc":"4920:22:22","nodeType":"YulFunctionCall","src":"4920:22:22"},"nativeSrc":"4920:22:22","nodeType":"YulExpressionStatement","src":"4920:22:22"},{"nativeSrc":"4951:15:22","nodeType":"YulAssignment","src":"4951:15:22","value":{"name":"memPtr","nativeSrc":"4960:6:22","nodeType":"YulIdentifier","src":"4960:6:22"},"variableNames":[{"name":"array","nativeSrc":"4951:5:22","nodeType":"YulIdentifier","src":"4951:5:22"}]},{"expression":{"arguments":[{"name":"memPtr","nativeSrc":"4982:6:22","nodeType":"YulIdentifier","src":"4982:6:22"},{"name":"length","nativeSrc":"4990:6:22","nodeType":"YulIdentifier","src":"4990:6:22"}],"functionName":{"name":"mstore","nativeSrc":"4975:6:22","nodeType":"YulIdentifier","src":"4975:6:22"},"nativeSrc":"4975:22:22","nodeType":"YulFunctionCall","src":"4975:22:22"},"nativeSrc":"4975:22:22","nodeType":"YulExpressionStatement","src":"4975:22:22"},{"body":{"nativeSrc":"5035:16:22","nodeType":"YulBlock","src":"5035:16:22","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"5044:1:22","nodeType":"YulLiteral","src":"5044:1:22","type":"","value":"0"},{"kind":"number","nativeSrc":"5047:1:22","nodeType":"YulLiteral","src":"5047:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"5037:6:22","nodeType":"YulIdentifier","src":"5037:6:22"},"nativeSrc":"5037:12:22","nodeType":"YulFunctionCall","src":"5037:12:22"},"nativeSrc":"5037:12:22","nodeType":"YulExpressionStatement","src":"5037:12:22"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nativeSrc":"5016:3:22","nodeType":"YulIdentifier","src":"5016:3:22"},{"name":"length","nativeSrc":"5021:6:22","nodeType":"YulIdentifier","src":"5021:6:22"}],"functionName":{"name":"add","nativeSrc":"5012:3:22","nodeType":"YulIdentifier","src":"5012:3:22"},"nativeSrc":"5012:16:22","nodeType":"YulFunctionCall","src":"5012:16:22"},{"name":"end","nativeSrc":"5030:3:22","nodeType":"YulIdentifier","src":"5030:3:22"}],"functionName":{"name":"gt","nativeSrc":"5009:2:22","nodeType":"YulIdentifier","src":"5009:2:22"},"nativeSrc":"5009:25:22","nodeType":"YulFunctionCall","src":"5009:25:22"},"nativeSrc":"5006:45:22","nodeType":"YulIf","src":"5006:45:22"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"5077:6:22","nodeType":"YulIdentifier","src":"5077:6:22"},{"kind":"number","nativeSrc":"5085:4:22","nodeType":"YulLiteral","src":"5085:4:22","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"5073:3:22","nodeType":"YulIdentifier","src":"5073:3:22"},"nativeSrc":"5073:17:22","nodeType":"YulFunctionCall","src":"5073:17:22"},{"name":"src","nativeSrc":"5092:3:22","nodeType":"YulIdentifier","src":"5092:3:22"},{"name":"length","nativeSrc":"5097:6:22","nodeType":"YulIdentifier","src":"5097:6:22"}],"functionName":{"name":"calldatacopy","nativeSrc":"5060:12:22","nodeType":"YulIdentifier","src":"5060:12:22"},"nativeSrc":"5060:44:22","nodeType":"YulFunctionCall","src":"5060:44:22"},"nativeSrc":"5060:44:22","nodeType":"YulExpressionStatement","src":"5060:44:22"},{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"5128:6:22","nodeType":"YulIdentifier","src":"5128:6:22"},{"name":"length","nativeSrc":"5136:6:22","nodeType":"YulIdentifier","src":"5136:6:22"}],"functionName":{"name":"add","nativeSrc":"5124:3:22","nodeType":"YulIdentifier","src":"5124:3:22"},"nativeSrc":"5124:19:22","nodeType":"YulFunctionCall","src":"5124:19:22"},{"kind":"number","nativeSrc":"5145:4:22","nodeType":"YulLiteral","src":"5145:4:22","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"5120:3:22","nodeType":"YulIdentifier","src":"5120:3:22"},"nativeSrc":"5120:30:22","nodeType":"YulFunctionCall","src":"5120:30:22"},{"kind":"number","nativeSrc":"5152:1:22","nodeType":"YulLiteral","src":"5152:1:22","type":"","value":"0"}],"functionName":{"name":"mstore","nativeSrc":"5113:6:22","nodeType":"YulIdentifier","src":"5113:6:22"},"nativeSrc":"5113:41:22","nodeType":"YulFunctionCall","src":"5113:41:22"},"nativeSrc":"5113:41:22","nodeType":"YulExpressionStatement","src":"5113:41:22"}]},"name":"abi_decode_available_length_string","nativeSrc":"4444:716:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nativeSrc":"4488:3:22","nodeType":"YulTypedName","src":"4488:3:22","type":""},{"name":"length","nativeSrc":"4493:6:22","nodeType":"YulTypedName","src":"4493:6:22","type":""},{"name":"end","nativeSrc":"4501:3:22","nodeType":"YulTypedName","src":"4501:3:22","type":""}],"returnVariables":[{"name":"array","nativeSrc":"4509:5:22","nodeType":"YulTypedName","src":"4509:5:22","type":""}],"src":"4444:716:22"},{"body":{"nativeSrc":"5262:428:22","nodeType":"YulBlock","src":"5262:428:22","statements":[{"body":{"nativeSrc":"5308:16:22","nodeType":"YulBlock","src":"5308:16:22","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"5317:1:22","nodeType":"YulLiteral","src":"5317:1:22","type":"","value":"0"},{"kind":"number","nativeSrc":"5320:1:22","nodeType":"YulLiteral","src":"5320:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"5310:6:22","nodeType":"YulIdentifier","src":"5310:6:22"},"nativeSrc":"5310:12:22","nodeType":"YulFunctionCall","src":"5310:12:22"},"nativeSrc":"5310:12:22","nodeType":"YulExpressionStatement","src":"5310:12:22"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"5283:7:22","nodeType":"YulIdentifier","src":"5283:7:22"},{"name":"headStart","nativeSrc":"5292:9:22","nodeType":"YulIdentifier","src":"5292:9:22"}],"functionName":{"name":"sub","nativeSrc":"5279:3:22","nodeType":"YulIdentifier","src":"5279:3:22"},"nativeSrc":"5279:23:22","nodeType":"YulFunctionCall","src":"5279:23:22"},{"kind":"number","nativeSrc":"5304:2:22","nodeType":"YulLiteral","src":"5304:2:22","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"5275:3:22","nodeType":"YulIdentifier","src":"5275:3:22"},"nativeSrc":"5275:32:22","nodeType":"YulFunctionCall","src":"5275:32:22"},"nativeSrc":"5272:52:22","nodeType":"YulIf","src":"5272:52:22"},{"nativeSrc":"5333:39:22","nodeType":"YulAssignment","src":"5333:39:22","value":{"arguments":[{"name":"headStart","nativeSrc":"5362:9:22","nodeType":"YulIdentifier","src":"5362:9:22"}],"functionName":{"name":"abi_decode_address","nativeSrc":"5343:18:22","nodeType":"YulIdentifier","src":"5343:18:22"},"nativeSrc":"5343:29:22","nodeType":"YulFunctionCall","src":"5343:29:22"},"variableNames":[{"name":"value0","nativeSrc":"5333:6:22","nodeType":"YulIdentifier","src":"5333:6:22"}]},{"nativeSrc":"5381:46:22","nodeType":"YulVariableDeclaration","src":"5381:46:22","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"5412:9:22","nodeType":"YulIdentifier","src":"5412:9:22"},{"kind":"number","nativeSrc":"5423:2:22","nodeType":"YulLiteral","src":"5423:2:22","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"5408:3:22","nodeType":"YulIdentifier","src":"5408:3:22"},"nativeSrc":"5408:18:22","nodeType":"YulFunctionCall","src":"5408:18:22"}],"functionName":{"name":"calldataload","nativeSrc":"5395:12:22","nodeType":"YulIdentifier","src":"5395:12:22"},"nativeSrc":"5395:32:22","nodeType":"YulFunctionCall","src":"5395:32:22"},"variables":[{"name":"offset","nativeSrc":"5385:6:22","nodeType":"YulTypedName","src":"5385:6:22","type":""}]},{"body":{"nativeSrc":"5470:16:22","nodeType":"YulBlock","src":"5470:16:22","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"5479:1:22","nodeType":"YulLiteral","src":"5479:1:22","type":"","value":"0"},{"kind":"number","nativeSrc":"5482:1:22","nodeType":"YulLiteral","src":"5482:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"5472:6:22","nodeType":"YulIdentifier","src":"5472:6:22"},"nativeSrc":"5472:12:22","nodeType":"YulFunctionCall","src":"5472:12:22"},"nativeSrc":"5472:12:22","nodeType":"YulExpressionStatement","src":"5472:12:22"}]},"condition":{"arguments":[{"name":"offset","nativeSrc":"5442:6:22","nodeType":"YulIdentifier","src":"5442:6:22"},{"kind":"number","nativeSrc":"5450:18:22","nodeType":"YulLiteral","src":"5450:18:22","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"5439:2:22","nodeType":"YulIdentifier","src":"5439:2:22"},"nativeSrc":"5439:30:22","nodeType":"YulFunctionCall","src":"5439:30:22"},"nativeSrc":"5436:50:22","nodeType":"YulIf","src":"5436:50:22"},{"nativeSrc":"5495:32:22","nodeType":"YulVariableDeclaration","src":"5495:32:22","value":{"arguments":[{"name":"headStart","nativeSrc":"5509:9:22","nodeType":"YulIdentifier","src":"5509:9:22"},{"name":"offset","nativeSrc":"5520:6:22","nodeType":"YulIdentifier","src":"5520:6:22"}],"functionName":{"name":"add","nativeSrc":"5505:3:22","nodeType":"YulIdentifier","src":"5505:3:22"},"nativeSrc":"5505:22:22","nodeType":"YulFunctionCall","src":"5505:22:22"},"variables":[{"name":"_1","nativeSrc":"5499:2:22","nodeType":"YulTypedName","src":"5499:2:22","type":""}]},{"body":{"nativeSrc":"5575:16:22","nodeType":"YulBlock","src":"5575:16:22","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"5584:1:22","nodeType":"YulLiteral","src":"5584:1:22","type":"","value":"0"},{"kind":"number","nativeSrc":"5587:1:22","nodeType":"YulLiteral","src":"5587:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"5577:6:22","nodeType":"YulIdentifier","src":"5577:6:22"},"nativeSrc":"5577:12:22","nodeType":"YulFunctionCall","src":"5577:12:22"},"nativeSrc":"5577:12:22","nodeType":"YulExpressionStatement","src":"5577:12:22"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_1","nativeSrc":"5554:2:22","nodeType":"YulIdentifier","src":"5554:2:22"},{"kind":"number","nativeSrc":"5558:4:22","nodeType":"YulLiteral","src":"5558:4:22","type":"","value":"0x1f"}],"functionName":{"name":"add","nativeSrc":"5550:3:22","nodeType":"YulIdentifier","src":"5550:3:22"},"nativeSrc":"5550:13:22","nodeType":"YulFunctionCall","src":"5550:13:22"},{"name":"dataEnd","nativeSrc":"5565:7:22","nodeType":"YulIdentifier","src":"5565:7:22"}],"functionName":{"name":"slt","nativeSrc":"5546:3:22","nodeType":"YulIdentifier","src":"5546:3:22"},"nativeSrc":"5546:27:22","nodeType":"YulFunctionCall","src":"5546:27:22"}],"functionName":{"name":"iszero","nativeSrc":"5539:6:22","nodeType":"YulIdentifier","src":"5539:6:22"},"nativeSrc":"5539:35:22","nodeType":"YulFunctionCall","src":"5539:35:22"},"nativeSrc":"5536:55:22","nodeType":"YulIf","src":"5536:55:22"},{"nativeSrc":"5600:84:22","nodeType":"YulAssignment","src":"5600:84:22","value":{"arguments":[{"arguments":[{"name":"_1","nativeSrc":"5649:2:22","nodeType":"YulIdentifier","src":"5649:2:22"},{"kind":"number","nativeSrc":"5653:2:22","nodeType":"YulLiteral","src":"5653:2:22","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"5645:3:22","nodeType":"YulIdentifier","src":"5645:3:22"},"nativeSrc":"5645:11:22","nodeType":"YulFunctionCall","src":"5645:11:22"},{"arguments":[{"name":"_1","nativeSrc":"5671:2:22","nodeType":"YulIdentifier","src":"5671:2:22"}],"functionName":{"name":"calldataload","nativeSrc":"5658:12:22","nodeType":"YulIdentifier","src":"5658:12:22"},"nativeSrc":"5658:16:22","nodeType":"YulFunctionCall","src":"5658:16:22"},{"name":"dataEnd","nativeSrc":"5676:7:22","nodeType":"YulIdentifier","src":"5676:7:22"}],"functionName":{"name":"abi_decode_available_length_string","nativeSrc":"5610:34:22","nodeType":"YulIdentifier","src":"5610:34:22"},"nativeSrc":"5610:74:22","nodeType":"YulFunctionCall","src":"5610:74:22"},"variableNames":[{"name":"value1","nativeSrc":"5600:6:22","nodeType":"YulIdentifier","src":"5600:6:22"}]}]},"name":"abi_decode_tuple_t_addresst_string_memory_ptr","nativeSrc":"5165:525:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"5220:9:22","nodeType":"YulTypedName","src":"5220:9:22","type":""},{"name":"dataEnd","nativeSrc":"5231:7:22","nodeType":"YulTypedName","src":"5231:7:22","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"5243:6:22","nodeType":"YulTypedName","src":"5243:6:22","type":""},{"name":"value1","nativeSrc":"5251:6:22","nodeType":"YulTypedName","src":"5251:6:22","type":""}],"src":"5165:525:22"},{"body":{"nativeSrc":"5756:385:22","nodeType":"YulBlock","src":"5756:385:22","statements":[{"nativeSrc":"5766:26:22","nodeType":"YulVariableDeclaration","src":"5766:26:22","value":{"arguments":[{"name":"value","nativeSrc":"5786:5:22","nodeType":"YulIdentifier","src":"5786:5:22"}],"functionName":{"name":"mload","nativeSrc":"5780:5:22","nodeType":"YulIdentifier","src":"5780:5:22"},"nativeSrc":"5780:12:22","nodeType":"YulFunctionCall","src":"5780:12:22"},"variables":[{"name":"length","nativeSrc":"5770:6:22","nodeType":"YulTypedName","src":"5770:6:22","type":""}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"5808:3:22","nodeType":"YulIdentifier","src":"5808:3:22"},{"name":"length","nativeSrc":"5813:6:22","nodeType":"YulIdentifier","src":"5813:6:22"}],"functionName":{"name":"mstore","nativeSrc":"5801:6:22","nodeType":"YulIdentifier","src":"5801:6:22"},"nativeSrc":"5801:19:22","nodeType":"YulFunctionCall","src":"5801:19:22"},"nativeSrc":"5801:19:22","nodeType":"YulExpressionStatement","src":"5801:19:22"},{"nativeSrc":"5829:21:22","nodeType":"YulAssignment","src":"5829:21:22","value":{"arguments":[{"name":"pos","nativeSrc":"5840:3:22","nodeType":"YulIdentifier","src":"5840:3:22"},{"kind":"number","nativeSrc":"5845:4:22","nodeType":"YulLiteral","src":"5845:4:22","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"5836:3:22","nodeType":"YulIdentifier","src":"5836:3:22"},"nativeSrc":"5836:14:22","nodeType":"YulFunctionCall","src":"5836:14:22"},"variableNames":[{"name":"pos","nativeSrc":"5829:3:22","nodeType":"YulIdentifier","src":"5829:3:22"}]},{"nativeSrc":"5859:30:22","nodeType":"YulVariableDeclaration","src":"5859:30:22","value":{"arguments":[{"name":"value","nativeSrc":"5877:5:22","nodeType":"YulIdentifier","src":"5877:5:22"},{"kind":"number","nativeSrc":"5884:4:22","nodeType":"YulLiteral","src":"5884:4:22","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"5873:3:22","nodeType":"YulIdentifier","src":"5873:3:22"},"nativeSrc":"5873:16:22","nodeType":"YulFunctionCall","src":"5873:16:22"},"variables":[{"name":"srcPtr","nativeSrc":"5863:6:22","nodeType":"YulTypedName","src":"5863:6:22","type":""}]},{"nativeSrc":"5898:10:22","nodeType":"YulVariableDeclaration","src":"5898:10:22","value":{"kind":"number","nativeSrc":"5907:1:22","nodeType":"YulLiteral","src":"5907:1:22","type":"","value":"0"},"variables":[{"name":"i","nativeSrc":"5902:1:22","nodeType":"YulTypedName","src":"5902:1:22","type":""}]},{"body":{"nativeSrc":"5966:150:22","nodeType":"YulBlock","src":"5966:150:22","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"5987:3:22","nodeType":"YulIdentifier","src":"5987:3:22"},{"arguments":[{"arguments":[{"name":"srcPtr","nativeSrc":"6002:6:22","nodeType":"YulIdentifier","src":"6002:6:22"}],"functionName":{"name":"mload","nativeSrc":"5996:5:22","nodeType":"YulIdentifier","src":"5996:5:22"},"nativeSrc":"5996:13:22","nodeType":"YulFunctionCall","src":"5996:13:22"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"6019:3:22","nodeType":"YulLiteral","src":"6019:3:22","type":"","value":"160"},{"kind":"number","nativeSrc":"6024:1:22","nodeType":"YulLiteral","src":"6024:1:22","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"6015:3:22","nodeType":"YulIdentifier","src":"6015:3:22"},"nativeSrc":"6015:11:22","nodeType":"YulFunctionCall","src":"6015:11:22"},{"kind":"number","nativeSrc":"6028:1:22","nodeType":"YulLiteral","src":"6028:1:22","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"6011:3:22","nodeType":"YulIdentifier","src":"6011:3:22"},"nativeSrc":"6011:19:22","nodeType":"YulFunctionCall","src":"6011:19:22"}],"functionName":{"name":"and","nativeSrc":"5992:3:22","nodeType":"YulIdentifier","src":"5992:3:22"},"nativeSrc":"5992:39:22","nodeType":"YulFunctionCall","src":"5992:39:22"}],"functionName":{"name":"mstore","nativeSrc":"5980:6:22","nodeType":"YulIdentifier","src":"5980:6:22"},"nativeSrc":"5980:52:22","nodeType":"YulFunctionCall","src":"5980:52:22"},"nativeSrc":"5980:52:22","nodeType":"YulExpressionStatement","src":"5980:52:22"},{"nativeSrc":"6045:21:22","nodeType":"YulAssignment","src":"6045:21:22","value":{"arguments":[{"name":"pos","nativeSrc":"6056:3:22","nodeType":"YulIdentifier","src":"6056:3:22"},{"kind":"number","nativeSrc":"6061:4:22","nodeType":"YulLiteral","src":"6061:4:22","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"6052:3:22","nodeType":"YulIdentifier","src":"6052:3:22"},"nativeSrc":"6052:14:22","nodeType":"YulFunctionCall","src":"6052:14:22"},"variableNames":[{"name":"pos","nativeSrc":"6045:3:22","nodeType":"YulIdentifier","src":"6045:3:22"}]},{"nativeSrc":"6079:27:22","nodeType":"YulAssignment","src":"6079:27:22","value":{"arguments":[{"name":"srcPtr","nativeSrc":"6093:6:22","nodeType":"YulIdentifier","src":"6093:6:22"},{"kind":"number","nativeSrc":"6101:4:22","nodeType":"YulLiteral","src":"6101:4:22","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"6089:3:22","nodeType":"YulIdentifier","src":"6089:3:22"},"nativeSrc":"6089:17:22","nodeType":"YulFunctionCall","src":"6089:17:22"},"variableNames":[{"name":"srcPtr","nativeSrc":"6079:6:22","nodeType":"YulIdentifier","src":"6079:6:22"}]}]},"condition":{"arguments":[{"name":"i","nativeSrc":"5928:1:22","nodeType":"YulIdentifier","src":"5928:1:22"},{"name":"length","nativeSrc":"5931:6:22","nodeType":"YulIdentifier","src":"5931:6:22"}],"functionName":{"name":"lt","nativeSrc":"5925:2:22","nodeType":"YulIdentifier","src":"5925:2:22"},"nativeSrc":"5925:13:22","nodeType":"YulFunctionCall","src":"5925:13:22"},"nativeSrc":"5917:199:22","nodeType":"YulForLoop","post":{"nativeSrc":"5939:18:22","nodeType":"YulBlock","src":"5939:18:22","statements":[{"nativeSrc":"5941:14:22","nodeType":"YulAssignment","src":"5941:14:22","value":{"arguments":[{"name":"i","nativeSrc":"5950:1:22","nodeType":"YulIdentifier","src":"5950:1:22"},{"kind":"number","nativeSrc":"5953:1:22","nodeType":"YulLiteral","src":"5953:1:22","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"5946:3:22","nodeType":"YulIdentifier","src":"5946:3:22"},"nativeSrc":"5946:9:22","nodeType":"YulFunctionCall","src":"5946:9:22"},"variableNames":[{"name":"i","nativeSrc":"5941:1:22","nodeType":"YulIdentifier","src":"5941:1:22"}]}]},"pre":{"nativeSrc":"5921:3:22","nodeType":"YulBlock","src":"5921:3:22","statements":[]},"src":"5917:199:22"},{"nativeSrc":"6125:10:22","nodeType":"YulAssignment","src":"6125:10:22","value":{"name":"pos","nativeSrc":"6132:3:22","nodeType":"YulIdentifier","src":"6132:3:22"},"variableNames":[{"name":"end","nativeSrc":"6125:3:22","nodeType":"YulIdentifier","src":"6125:3:22"}]}]},"name":"abi_encode_array_address_dyn","nativeSrc":"5695:446:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"5733:5:22","nodeType":"YulTypedName","src":"5733:5:22","type":""},{"name":"pos","nativeSrc":"5740:3:22","nodeType":"YulTypedName","src":"5740:3:22","type":""}],"returnVariables":[{"name":"end","nativeSrc":"5748:3:22","nodeType":"YulTypedName","src":"5748:3:22","type":""}],"src":"5695:446:22"},{"body":{"nativeSrc":"6297:1396:22","nodeType":"YulBlock","src":"6297:1396:22","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"6314:9:22","nodeType":"YulIdentifier","src":"6314:9:22"},{"kind":"number","nativeSrc":"6325:2:22","nodeType":"YulLiteral","src":"6325:2:22","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"6307:6:22","nodeType":"YulIdentifier","src":"6307:6:22"},"nativeSrc":"6307:21:22","nodeType":"YulFunctionCall","src":"6307:21:22"},"nativeSrc":"6307:21:22","nodeType":"YulExpressionStatement","src":"6307:21:22"},{"nativeSrc":"6337:33:22","nodeType":"YulVariableDeclaration","src":"6337:33:22","value":{"arguments":[{"name":"value0","nativeSrc":"6363:6:22","nodeType":"YulIdentifier","src":"6363:6:22"}],"functionName":{"name":"mload","nativeSrc":"6357:5:22","nodeType":"YulIdentifier","src":"6357:5:22"},"nativeSrc":"6357:13:22","nodeType":"YulFunctionCall","src":"6357:13:22"},"variables":[{"name":"memberValue0","nativeSrc":"6341:12:22","nodeType":"YulTypedName","src":"6341:12:22","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"6390:9:22","nodeType":"YulIdentifier","src":"6390:9:22"},{"kind":"number","nativeSrc":"6401:2:22","nodeType":"YulLiteral","src":"6401:2:22","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"6386:3:22","nodeType":"YulIdentifier","src":"6386:3:22"},"nativeSrc":"6386:18:22","nodeType":"YulFunctionCall","src":"6386:18:22"},{"kind":"number","nativeSrc":"6406:6:22","nodeType":"YulLiteral","src":"6406:6:22","type":"","value":"0x0100"}],"functionName":{"name":"mstore","nativeSrc":"6379:6:22","nodeType":"YulIdentifier","src":"6379:6:22"},"nativeSrc":"6379:34:22","nodeType":"YulFunctionCall","src":"6379:34:22"},"nativeSrc":"6379:34:22","nodeType":"YulExpressionStatement","src":"6379:34:22"},{"nativeSrc":"6422:66:22","nodeType":"YulVariableDeclaration","src":"6422:66:22","value":{"arguments":[{"name":"memberValue0","nativeSrc":"6454:12:22","nodeType":"YulIdentifier","src":"6454:12:22"},{"arguments":[{"name":"headStart","nativeSrc":"6472:9:22","nodeType":"YulIdentifier","src":"6472:9:22"},{"kind":"number","nativeSrc":"6483:3:22","nodeType":"YulLiteral","src":"6483:3:22","type":"","value":"288"}],"functionName":{"name":"add","nativeSrc":"6468:3:22","nodeType":"YulIdentifier","src":"6468:3:22"},"nativeSrc":"6468:19:22","nodeType":"YulFunctionCall","src":"6468:19:22"}],"functionName":{"name":"abi_encode_string","nativeSrc":"6436:17:22","nodeType":"YulIdentifier","src":"6436:17:22"},"nativeSrc":"6436:52:22","nodeType":"YulFunctionCall","src":"6436:52:22"},"variables":[{"name":"tail_1","nativeSrc":"6426:6:22","nodeType":"YulTypedName","src":"6426:6:22","type":""}]},{"nativeSrc":"6497:44:22","nodeType":"YulVariableDeclaration","src":"6497:44:22","value":{"arguments":[{"arguments":[{"name":"value0","nativeSrc":"6529:6:22","nodeType":"YulIdentifier","src":"6529:6:22"},{"kind":"number","nativeSrc":"6537:2:22","nodeType":"YulLiteral","src":"6537:2:22","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"6525:3:22","nodeType":"YulIdentifier","src":"6525:3:22"},"nativeSrc":"6525:15:22","nodeType":"YulFunctionCall","src":"6525:15:22"}],"functionName":{"name":"mload","nativeSrc":"6519:5:22","nodeType":"YulIdentifier","src":"6519:5:22"},"nativeSrc":"6519:22:22","nodeType":"YulFunctionCall","src":"6519:22:22"},"variables":[{"name":"memberValue0_1","nativeSrc":"6501:14:22","nodeType":"YulTypedName","src":"6501:14:22","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"6561:9:22","nodeType":"YulIdentifier","src":"6561:9:22"},{"kind":"number","nativeSrc":"6572:2:22","nodeType":"YulLiteral","src":"6572:2:22","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"6557:3:22","nodeType":"YulIdentifier","src":"6557:3:22"},"nativeSrc":"6557:18:22","nodeType":"YulFunctionCall","src":"6557:18:22"},{"arguments":[{"arguments":[{"name":"tail_1","nativeSrc":"6585:6:22","nodeType":"YulIdentifier","src":"6585:6:22"},{"name":"headStart","nativeSrc":"6593:9:22","nodeType":"YulIdentifier","src":"6593:9:22"}],"functionName":{"name":"sub","nativeSrc":"6581:3:22","nodeType":"YulIdentifier","src":"6581:3:22"},"nativeSrc":"6581:22:22","nodeType":"YulFunctionCall","src":"6581:22:22"},{"arguments":[{"kind":"number","nativeSrc":"6609:2:22","nodeType":"YulLiteral","src":"6609:2:22","type":"","value":"31"}],"functionName":{"name":"not","nativeSrc":"6605:3:22","nodeType":"YulIdentifier","src":"6605:3:22"},"nativeSrc":"6605:7:22","nodeType":"YulFunctionCall","src":"6605:7:22"}],"functionName":{"name":"add","nativeSrc":"6577:3:22","nodeType":"YulIdentifier","src":"6577:3:22"},"nativeSrc":"6577:36:22","nodeType":"YulFunctionCall","src":"6577:36:22"}],"functionName":{"name":"mstore","nativeSrc":"6550:6:22","nodeType":"YulIdentifier","src":"6550:6:22"},"nativeSrc":"6550:64:22","nodeType":"YulFunctionCall","src":"6550:64:22"},"nativeSrc":"6550:64:22","nodeType":"YulExpressionStatement","src":"6550:64:22"},{"nativeSrc":"6623:55:22","nodeType":"YulVariableDeclaration","src":"6623:55:22","value":{"arguments":[{"name":"memberValue0_1","nativeSrc":"6655:14:22","nodeType":"YulIdentifier","src":"6655:14:22"},{"name":"tail_1","nativeSrc":"6671:6:22","nodeType":"YulIdentifier","src":"6671:6:22"}],"functionName":{"name":"abi_encode_string","nativeSrc":"6637:17:22","nodeType":"YulIdentifier","src":"6637:17:22"},"nativeSrc":"6637:41:22","nodeType":"YulFunctionCall","src":"6637:41:22"},"variables":[{"name":"tail_2","nativeSrc":"6627:6:22","nodeType":"YulTypedName","src":"6627:6:22","type":""}]},{"nativeSrc":"6687:44:22","nodeType":"YulVariableDeclaration","src":"6687:44:22","value":{"arguments":[{"arguments":[{"name":"value0","nativeSrc":"6719:6:22","nodeType":"YulIdentifier","src":"6719:6:22"},{"kind":"number","nativeSrc":"6727:2:22","nodeType":"YulLiteral","src":"6727:2:22","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"6715:3:22","nodeType":"YulIdentifier","src":"6715:3:22"},"nativeSrc":"6715:15:22","nodeType":"YulFunctionCall","src":"6715:15:22"}],"functionName":{"name":"mload","nativeSrc":"6709:5:22","nodeType":"YulIdentifier","src":"6709:5:22"},"nativeSrc":"6709:22:22","nodeType":"YulFunctionCall","src":"6709:22:22"},"variables":[{"name":"memberValue0_2","nativeSrc":"6691:14:22","nodeType":"YulTypedName","src":"6691:14:22","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"6751:9:22","nodeType":"YulIdentifier","src":"6751:9:22"},{"kind":"number","nativeSrc":"6762:2:22","nodeType":"YulLiteral","src":"6762:2:22","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"6747:3:22","nodeType":"YulIdentifier","src":"6747:3:22"},"nativeSrc":"6747:18:22","nodeType":"YulFunctionCall","src":"6747:18:22"},{"arguments":[{"arguments":[{"name":"tail_2","nativeSrc":"6775:6:22","nodeType":"YulIdentifier","src":"6775:6:22"},{"name":"headStart","nativeSrc":"6783:9:22","nodeType":"YulIdentifier","src":"6783:9:22"}],"functionName":{"name":"sub","nativeSrc":"6771:3:22","nodeType":"YulIdentifier","src":"6771:3:22"},"nativeSrc":"6771:22:22","nodeType":"YulFunctionCall","src":"6771:22:22"},{"arguments":[{"kind":"number","nativeSrc":"6799:2:22","nodeType":"YulLiteral","src":"6799:2:22","type":"","value":"31"}],"functionName":{"name":"not","nativeSrc":"6795:3:22","nodeType":"YulIdentifier","src":"6795:3:22"},"nativeSrc":"6795:7:22","nodeType":"YulFunctionCall","src":"6795:7:22"}],"functionName":{"name":"add","nativeSrc":"6767:3:22","nodeType":"YulIdentifier","src":"6767:3:22"},"nativeSrc":"6767:36:22","nodeType":"YulFunctionCall","src":"6767:36:22"}],"functionName":{"name":"mstore","nativeSrc":"6740:6:22","nodeType":"YulIdentifier","src":"6740:6:22"},"nativeSrc":"6740:64:22","nodeType":"YulFunctionCall","src":"6740:64:22"},"nativeSrc":"6740:64:22","nodeType":"YulExpressionStatement","src":"6740:64:22"},{"nativeSrc":"6813:55:22","nodeType":"YulVariableDeclaration","src":"6813:55:22","value":{"arguments":[{"name":"memberValue0_2","nativeSrc":"6845:14:22","nodeType":"YulIdentifier","src":"6845:14:22"},{"name":"tail_2","nativeSrc":"6861:6:22","nodeType":"YulIdentifier","src":"6861:6:22"}],"functionName":{"name":"abi_encode_string","nativeSrc":"6827:17:22","nodeType":"YulIdentifier","src":"6827:17:22"},"nativeSrc":"6827:41:22","nodeType":"YulFunctionCall","src":"6827:41:22"},"variables":[{"name":"tail_3","nativeSrc":"6817:6:22","nodeType":"YulTypedName","src":"6817:6:22","type":""}]},{"nativeSrc":"6877:44:22","nodeType":"YulVariableDeclaration","src":"6877:44:22","value":{"arguments":[{"arguments":[{"name":"value0","nativeSrc":"6909:6:22","nodeType":"YulIdentifier","src":"6909:6:22"},{"kind":"number","nativeSrc":"6917:2:22","nodeType":"YulLiteral","src":"6917:2:22","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"6905:3:22","nodeType":"YulIdentifier","src":"6905:3:22"},"nativeSrc":"6905:15:22","nodeType":"YulFunctionCall","src":"6905:15:22"}],"functionName":{"name":"mload","nativeSrc":"6899:5:22","nodeType":"YulIdentifier","src":"6899:5:22"},"nativeSrc":"6899:22:22","nodeType":"YulFunctionCall","src":"6899:22:22"},"variables":[{"name":"memberValue0_3","nativeSrc":"6881:14:22","nodeType":"YulTypedName","src":"6881:14:22","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"6941:9:22","nodeType":"YulIdentifier","src":"6941:9:22"},{"kind":"number","nativeSrc":"6952:3:22","nodeType":"YulLiteral","src":"6952:3:22","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"6937:3:22","nodeType":"YulIdentifier","src":"6937:3:22"},"nativeSrc":"6937:19:22","nodeType":"YulFunctionCall","src":"6937:19:22"},{"arguments":[{"arguments":[{"name":"tail_3","nativeSrc":"6966:6:22","nodeType":"YulIdentifier","src":"6966:6:22"},{"name":"headStart","nativeSrc":"6974:9:22","nodeType":"YulIdentifier","src":"6974:9:22"}],"functionName":{"name":"sub","nativeSrc":"6962:3:22","nodeType":"YulIdentifier","src":"6962:3:22"},"nativeSrc":"6962:22:22","nodeType":"YulFunctionCall","src":"6962:22:22"},{"arguments":[{"kind":"number","nativeSrc":"6990:2:22","nodeType":"YulLiteral","src":"6990:2:22","type":"","value":"31"}],"functionName":{"name":"not","nativeSrc":"6986:3:22","nodeType":"YulIdentifier","src":"6986:3:22"},"nativeSrc":"6986:7:22","nodeType":"YulFunctionCall","src":"6986:7:22"}],"functionName":{"name":"add","nativeSrc":"6958:3:22","nodeType":"YulIdentifier","src":"6958:3:22"},"nativeSrc":"6958:36:22","nodeType":"YulFunctionCall","src":"6958:36:22"}],"functionName":{"name":"mstore","nativeSrc":"6930:6:22","nodeType":"YulIdentifier","src":"6930:6:22"},"nativeSrc":"6930:65:22","nodeType":"YulFunctionCall","src":"6930:65:22"},"nativeSrc":"6930:65:22","nodeType":"YulExpressionStatement","src":"6930:65:22"},{"nativeSrc":"7004:55:22","nodeType":"YulVariableDeclaration","src":"7004:55:22","value":{"arguments":[{"name":"memberValue0_3","nativeSrc":"7036:14:22","nodeType":"YulIdentifier","src":"7036:14:22"},{"name":"tail_3","nativeSrc":"7052:6:22","nodeType":"YulIdentifier","src":"7052:6:22"}],"functionName":{"name":"abi_encode_string","nativeSrc":"7018:17:22","nodeType":"YulIdentifier","src":"7018:17:22"},"nativeSrc":"7018:41:22","nodeType":"YulFunctionCall","src":"7018:41:22"},"variables":[{"name":"tail_4","nativeSrc":"7008:6:22","nodeType":"YulTypedName","src":"7008:6:22","type":""}]},{"nativeSrc":"7068:45:22","nodeType":"YulVariableDeclaration","src":"7068:45:22","value":{"arguments":[{"arguments":[{"name":"value0","nativeSrc":"7100:6:22","nodeType":"YulIdentifier","src":"7100:6:22"},{"kind":"number","nativeSrc":"7108:3:22","nodeType":"YulLiteral","src":"7108:3:22","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"7096:3:22","nodeType":"YulIdentifier","src":"7096:3:22"},"nativeSrc":"7096:16:22","nodeType":"YulFunctionCall","src":"7096:16:22"}],"functionName":{"name":"mload","nativeSrc":"7090:5:22","nodeType":"YulIdentifier","src":"7090:5:22"},"nativeSrc":"7090:23:22","nodeType":"YulFunctionCall","src":"7090:23:22"},"variables":[{"name":"memberValue0_4","nativeSrc":"7072:14:22","nodeType":"YulTypedName","src":"7072:14:22","type":""}]},{"expression":{"arguments":[{"name":"memberValue0_4","nativeSrc":"7141:14:22","nodeType":"YulIdentifier","src":"7141:14:22"},{"arguments":[{"name":"headStart","nativeSrc":"7161:9:22","nodeType":"YulIdentifier","src":"7161:9:22"},{"kind":"number","nativeSrc":"7172:3:22","nodeType":"YulLiteral","src":"7172:3:22","type":"","value":"160"}],"functionName":{"name":"add","nativeSrc":"7157:3:22","nodeType":"YulIdentifier","src":"7157:3:22"},"nativeSrc":"7157:19:22","nodeType":"YulFunctionCall","src":"7157:19:22"}],"functionName":{"name":"abi_encode_address","nativeSrc":"7122:18:22","nodeType":"YulIdentifier","src":"7122:18:22"},"nativeSrc":"7122:55:22","nodeType":"YulFunctionCall","src":"7122:55:22"},"nativeSrc":"7122:55:22","nodeType":"YulExpressionStatement","src":"7122:55:22"},{"nativeSrc":"7186:45:22","nodeType":"YulVariableDeclaration","src":"7186:45:22","value":{"arguments":[{"arguments":[{"name":"value0","nativeSrc":"7218:6:22","nodeType":"YulIdentifier","src":"7218:6:22"},{"kind":"number","nativeSrc":"7226:3:22","nodeType":"YulLiteral","src":"7226:3:22","type":"","value":"160"}],"functionName":{"name":"add","nativeSrc":"7214:3:22","nodeType":"YulIdentifier","src":"7214:3:22"},"nativeSrc":"7214:16:22","nodeType":"YulFunctionCall","src":"7214:16:22"}],"functionName":{"name":"mload","nativeSrc":"7208:5:22","nodeType":"YulIdentifier","src":"7208:5:22"},"nativeSrc":"7208:23:22","nodeType":"YulFunctionCall","src":"7208:23:22"},"variables":[{"name":"memberValue0_5","nativeSrc":"7190:14:22","nodeType":"YulTypedName","src":"7190:14:22","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"7251:9:22","nodeType":"YulIdentifier","src":"7251:9:22"},{"kind":"number","nativeSrc":"7262:3:22","nodeType":"YulLiteral","src":"7262:3:22","type":"","value":"192"}],"functionName":{"name":"add","nativeSrc":"7247:3:22","nodeType":"YulIdentifier","src":"7247:3:22"},"nativeSrc":"7247:19:22","nodeType":"YulFunctionCall","src":"7247:19:22"},{"arguments":[{"arguments":[{"name":"tail_4","nativeSrc":"7276:6:22","nodeType":"YulIdentifier","src":"7276:6:22"},{"name":"headStart","nativeSrc":"7284:9:22","nodeType":"YulIdentifier","src":"7284:9:22"}],"functionName":{"name":"sub","nativeSrc":"7272:3:22","nodeType":"YulIdentifier","src":"7272:3:22"},"nativeSrc":"7272:22:22","nodeType":"YulFunctionCall","src":"7272:22:22"},{"arguments":[{"kind":"number","nativeSrc":"7300:2:22","nodeType":"YulLiteral","src":"7300:2:22","type":"","value":"31"}],"functionName":{"name":"not","nativeSrc":"7296:3:22","nodeType":"YulIdentifier","src":"7296:3:22"},"nativeSrc":"7296:7:22","nodeType":"YulFunctionCall","src":"7296:7:22"}],"functionName":{"name":"add","nativeSrc":"7268:3:22","nodeType":"YulIdentifier","src":"7268:3:22"},"nativeSrc":"7268:36:22","nodeType":"YulFunctionCall","src":"7268:36:22"}],"functionName":{"name":"mstore","nativeSrc":"7240:6:22","nodeType":"YulIdentifier","src":"7240:6:22"},"nativeSrc":"7240:65:22","nodeType":"YulFunctionCall","src":"7240:65:22"},"nativeSrc":"7240:65:22","nodeType":"YulExpressionStatement","src":"7240:65:22"},{"nativeSrc":"7314:55:22","nodeType":"YulVariableDeclaration","src":"7314:55:22","value":{"arguments":[{"name":"memberValue0_5","nativeSrc":"7346:14:22","nodeType":"YulIdentifier","src":"7346:14:22"},{"name":"tail_4","nativeSrc":"7362:6:22","nodeType":"YulIdentifier","src":"7362:6:22"}],"functionName":{"name":"abi_encode_string","nativeSrc":"7328:17:22","nodeType":"YulIdentifier","src":"7328:17:22"},"nativeSrc":"7328:41:22","nodeType":"YulFunctionCall","src":"7328:41:22"},"variables":[{"name":"tail_5","nativeSrc":"7318:6:22","nodeType":"YulTypedName","src":"7318:6:22","type":""}]},{"nativeSrc":"7378:45:22","nodeType":"YulVariableDeclaration","src":"7378:45:22","value":{"arguments":[{"arguments":[{"name":"value0","nativeSrc":"7410:6:22","nodeType":"YulIdentifier","src":"7410:6:22"},{"kind":"number","nativeSrc":"7418:3:22","nodeType":"YulLiteral","src":"7418:3:22","type":"","value":"192"}],"functionName":{"name":"add","nativeSrc":"7406:3:22","nodeType":"YulIdentifier","src":"7406:3:22"},"nativeSrc":"7406:16:22","nodeType":"YulFunctionCall","src":"7406:16:22"}],"functionName":{"name":"mload","nativeSrc":"7400:5:22","nodeType":"YulIdentifier","src":"7400:5:22"},"nativeSrc":"7400:23:22","nodeType":"YulFunctionCall","src":"7400:23:22"},"variables":[{"name":"memberValue0_6","nativeSrc":"7382:14:22","nodeType":"YulTypedName","src":"7382:14:22","type":""}]},{"expression":{"arguments":[{"name":"memberValue0_6","nativeSrc":"7451:14:22","nodeType":"YulIdentifier","src":"7451:14:22"},{"arguments":[{"name":"headStart","nativeSrc":"7471:9:22","nodeType":"YulIdentifier","src":"7471:9:22"},{"kind":"number","nativeSrc":"7482:3:22","nodeType":"YulLiteral","src":"7482:3:22","type":"","value":"224"}],"functionName":{"name":"add","nativeSrc":"7467:3:22","nodeType":"YulIdentifier","src":"7467:3:22"},"nativeSrc":"7467:19:22","nodeType":"YulFunctionCall","src":"7467:19:22"}],"functionName":{"name":"abi_encode_address","nativeSrc":"7432:18:22","nodeType":"YulIdentifier","src":"7432:18:22"},"nativeSrc":"7432:55:22","nodeType":"YulFunctionCall","src":"7432:55:22"},"nativeSrc":"7432:55:22","nodeType":"YulExpressionStatement","src":"7432:55:22"},{"nativeSrc":"7496:45:22","nodeType":"YulVariableDeclaration","src":"7496:45:22","value":{"arguments":[{"arguments":[{"name":"value0","nativeSrc":"7528:6:22","nodeType":"YulIdentifier","src":"7528:6:22"},{"kind":"number","nativeSrc":"7536:3:22","nodeType":"YulLiteral","src":"7536:3:22","type":"","value":"224"}],"functionName":{"name":"add","nativeSrc":"7524:3:22","nodeType":"YulIdentifier","src":"7524:3:22"},"nativeSrc":"7524:16:22","nodeType":"YulFunctionCall","src":"7524:16:22"}],"functionName":{"name":"mload","nativeSrc":"7518:5:22","nodeType":"YulIdentifier","src":"7518:5:22"},"nativeSrc":"7518:23:22","nodeType":"YulFunctionCall","src":"7518:23:22"},"variables":[{"name":"memberValue0_7","nativeSrc":"7500:14:22","nodeType":"YulTypedName","src":"7500:14:22","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"7561:9:22","nodeType":"YulIdentifier","src":"7561:9:22"},{"kind":"number","nativeSrc":"7572:6:22","nodeType":"YulLiteral","src":"7572:6:22","type":"","value":"0x0100"}],"functionName":{"name":"add","nativeSrc":"7557:3:22","nodeType":"YulIdentifier","src":"7557:3:22"},"nativeSrc":"7557:22:22","nodeType":"YulFunctionCall","src":"7557:22:22"},{"arguments":[{"arguments":[{"name":"tail_5","nativeSrc":"7589:6:22","nodeType":"YulIdentifier","src":"7589:6:22"},{"name":"headStart","nativeSrc":"7597:9:22","nodeType":"YulIdentifier","src":"7597:9:22"}],"functionName":{"name":"sub","nativeSrc":"7585:3:22","nodeType":"YulIdentifier","src":"7585:3:22"},"nativeSrc":"7585:22:22","nodeType":"YulFunctionCall","src":"7585:22:22"},{"arguments":[{"kind":"number","nativeSrc":"7613:2:22","nodeType":"YulLiteral","src":"7613:2:22","type":"","value":"31"}],"functionName":{"name":"not","nativeSrc":"7609:3:22","nodeType":"YulIdentifier","src":"7609:3:22"},"nativeSrc":"7609:7:22","nodeType":"YulFunctionCall","src":"7609:7:22"}],"functionName":{"name":"add","nativeSrc":"7581:3:22","nodeType":"YulIdentifier","src":"7581:3:22"},"nativeSrc":"7581:36:22","nodeType":"YulFunctionCall","src":"7581:36:22"}],"functionName":{"name":"mstore","nativeSrc":"7550:6:22","nodeType":"YulIdentifier","src":"7550:6:22"},"nativeSrc":"7550:68:22","nodeType":"YulFunctionCall","src":"7550:68:22"},"nativeSrc":"7550:68:22","nodeType":"YulExpressionStatement","src":"7550:68:22"},{"nativeSrc":"7627:60:22","nodeType":"YulAssignment","src":"7627:60:22","value":{"arguments":[{"name":"memberValue0_7","nativeSrc":"7664:14:22","nodeType":"YulIdentifier","src":"7664:14:22"},{"name":"tail_5","nativeSrc":"7680:6:22","nodeType":"YulIdentifier","src":"7680:6:22"}],"functionName":{"name":"abi_encode_array_address_dyn","nativeSrc":"7635:28:22","nodeType":"YulIdentifier","src":"7635:28:22"},"nativeSrc":"7635:52:22","nodeType":"YulFunctionCall","src":"7635:52:22"},"variableNames":[{"name":"tail","nativeSrc":"7627:4:22","nodeType":"YulIdentifier","src":"7627:4:22"}]}]},"name":"abi_encode_tuple_t_struct$_Coaster_$5736_memory_ptr__to_t_struct$_Coaster_$5736_memory_ptr__fromStack_reversed","nativeSrc":"6146:1547:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"6266:9:22","nodeType":"YulTypedName","src":"6266:9:22","type":""},{"name":"value0","nativeSrc":"6277:6:22","nodeType":"YulTypedName","src":"6277:6:22","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"6288:4:22","nodeType":"YulTypedName","src":"6288:4:22","type":""}],"src":"6146:1547:22"},{"body":{"nativeSrc":"7782:263:22","nodeType":"YulBlock","src":"7782:263:22","statements":[{"body":{"nativeSrc":"7828:16:22","nodeType":"YulBlock","src":"7828:16:22","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"7837:1:22","nodeType":"YulLiteral","src":"7837:1:22","type":"","value":"0"},{"kind":"number","nativeSrc":"7840:1:22","nodeType":"YulLiteral","src":"7840:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"7830:6:22","nodeType":"YulIdentifier","src":"7830:6:22"},"nativeSrc":"7830:12:22","nodeType":"YulFunctionCall","src":"7830:12:22"},"nativeSrc":"7830:12:22","nodeType":"YulExpressionStatement","src":"7830:12:22"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"7803:7:22","nodeType":"YulIdentifier","src":"7803:7:22"},{"name":"headStart","nativeSrc":"7812:9:22","nodeType":"YulIdentifier","src":"7812:9:22"}],"functionName":{"name":"sub","nativeSrc":"7799:3:22","nodeType":"YulIdentifier","src":"7799:3:22"},"nativeSrc":"7799:23:22","nodeType":"YulFunctionCall","src":"7799:23:22"},{"kind":"number","nativeSrc":"7824:2:22","nodeType":"YulLiteral","src":"7824:2:22","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"7795:3:22","nodeType":"YulIdentifier","src":"7795:3:22"},"nativeSrc":"7795:32:22","nodeType":"YulFunctionCall","src":"7795:32:22"},"nativeSrc":"7792:52:22","nodeType":"YulIf","src":"7792:52:22"},{"nativeSrc":"7853:39:22","nodeType":"YulAssignment","src":"7853:39:22","value":{"arguments":[{"name":"headStart","nativeSrc":"7882:9:22","nodeType":"YulIdentifier","src":"7882:9:22"}],"functionName":{"name":"abi_decode_address","nativeSrc":"7863:18:22","nodeType":"YulIdentifier","src":"7863:18:22"},"nativeSrc":"7863:29:22","nodeType":"YulFunctionCall","src":"7863:29:22"},"variableNames":[{"name":"value0","nativeSrc":"7853:6:22","nodeType":"YulIdentifier","src":"7853:6:22"}]},{"nativeSrc":"7901:45:22","nodeType":"YulVariableDeclaration","src":"7901:45:22","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"7931:9:22","nodeType":"YulIdentifier","src":"7931:9:22"},{"kind":"number","nativeSrc":"7942:2:22","nodeType":"YulLiteral","src":"7942:2:22","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"7927:3:22","nodeType":"YulIdentifier","src":"7927:3:22"},"nativeSrc":"7927:18:22","nodeType":"YulFunctionCall","src":"7927:18:22"}],"functionName":{"name":"calldataload","nativeSrc":"7914:12:22","nodeType":"YulIdentifier","src":"7914:12:22"},"nativeSrc":"7914:32:22","nodeType":"YulFunctionCall","src":"7914:32:22"},"variables":[{"name":"value","nativeSrc":"7905:5:22","nodeType":"YulTypedName","src":"7905:5:22","type":""}]},{"body":{"nativeSrc":"7999:16:22","nodeType":"YulBlock","src":"7999:16:22","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"8008:1:22","nodeType":"YulLiteral","src":"8008:1:22","type":"","value":"0"},{"kind":"number","nativeSrc":"8011:1:22","nodeType":"YulLiteral","src":"8011:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"8001:6:22","nodeType":"YulIdentifier","src":"8001:6:22"},"nativeSrc":"8001:12:22","nodeType":"YulFunctionCall","src":"8001:12:22"},"nativeSrc":"8001:12:22","nodeType":"YulExpressionStatement","src":"8001:12:22"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"7968:5:22","nodeType":"YulIdentifier","src":"7968:5:22"},{"arguments":[{"arguments":[{"name":"value","nativeSrc":"7989:5:22","nodeType":"YulIdentifier","src":"7989:5:22"}],"functionName":{"name":"iszero","nativeSrc":"7982:6:22","nodeType":"YulIdentifier","src":"7982:6:22"},"nativeSrc":"7982:13:22","nodeType":"YulFunctionCall","src":"7982:13:22"}],"functionName":{"name":"iszero","nativeSrc":"7975:6:22","nodeType":"YulIdentifier","src":"7975:6:22"},"nativeSrc":"7975:21:22","nodeType":"YulFunctionCall","src":"7975:21:22"}],"functionName":{"name":"eq","nativeSrc":"7965:2:22","nodeType":"YulIdentifier","src":"7965:2:22"},"nativeSrc":"7965:32:22","nodeType":"YulFunctionCall","src":"7965:32:22"}],"functionName":{"name":"iszero","nativeSrc":"7958:6:22","nodeType":"YulIdentifier","src":"7958:6:22"},"nativeSrc":"7958:40:22","nodeType":"YulFunctionCall","src":"7958:40:22"},"nativeSrc":"7955:60:22","nodeType":"YulIf","src":"7955:60:22"},{"nativeSrc":"8024:15:22","nodeType":"YulAssignment","src":"8024:15:22","value":{"name":"value","nativeSrc":"8034:5:22","nodeType":"YulIdentifier","src":"8034:5:22"},"variableNames":[{"name":"value1","nativeSrc":"8024:6:22","nodeType":"YulIdentifier","src":"8024:6:22"}]}]},"name":"abi_decode_tuple_t_addresst_bool","nativeSrc":"7698:347:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"7740:9:22","nodeType":"YulTypedName","src":"7740:9:22","type":""},{"name":"dataEnd","nativeSrc":"7751:7:22","nodeType":"YulTypedName","src":"7751:7:22","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"7763:6:22","nodeType":"YulTypedName","src":"7763:6:22","type":""},{"name":"value1","nativeSrc":"7771:6:22","nodeType":"YulTypedName","src":"7771:6:22","type":""}],"src":"7698:347:22"},{"body":{"nativeSrc":"8180:583:22","nodeType":"YulBlock","src":"8180:583:22","statements":[{"body":{"nativeSrc":"8227:16:22","nodeType":"YulBlock","src":"8227:16:22","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"8236:1:22","nodeType":"YulLiteral","src":"8236:1:22","type":"","value":"0"},{"kind":"number","nativeSrc":"8239:1:22","nodeType":"YulLiteral","src":"8239:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"8229:6:22","nodeType":"YulIdentifier","src":"8229:6:22"},"nativeSrc":"8229:12:22","nodeType":"YulFunctionCall","src":"8229:12:22"},"nativeSrc":"8229:12:22","nodeType":"YulExpressionStatement","src":"8229:12:22"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"8201:7:22","nodeType":"YulIdentifier","src":"8201:7:22"},{"name":"headStart","nativeSrc":"8210:9:22","nodeType":"YulIdentifier","src":"8210:9:22"}],"functionName":{"name":"sub","nativeSrc":"8197:3:22","nodeType":"YulIdentifier","src":"8197:3:22"},"nativeSrc":"8197:23:22","nodeType":"YulFunctionCall","src":"8197:23:22"},{"kind":"number","nativeSrc":"8222:3:22","nodeType":"YulLiteral","src":"8222:3:22","type":"","value":"128"}],"functionName":{"name":"slt","nativeSrc":"8193:3:22","nodeType":"YulIdentifier","src":"8193:3:22"},"nativeSrc":"8193:33:22","nodeType":"YulFunctionCall","src":"8193:33:22"},"nativeSrc":"8190:53:22","nodeType":"YulIf","src":"8190:53:22"},{"nativeSrc":"8252:39:22","nodeType":"YulAssignment","src":"8252:39:22","value":{"arguments":[{"name":"headStart","nativeSrc":"8281:9:22","nodeType":"YulIdentifier","src":"8281:9:22"}],"functionName":{"name":"abi_decode_address","nativeSrc":"8262:18:22","nodeType":"YulIdentifier","src":"8262:18:22"},"nativeSrc":"8262:29:22","nodeType":"YulFunctionCall","src":"8262:29:22"},"variableNames":[{"name":"value0","nativeSrc":"8252:6:22","nodeType":"YulIdentifier","src":"8252:6:22"}]},{"nativeSrc":"8300:48:22","nodeType":"YulAssignment","src":"8300:48:22","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"8333:9:22","nodeType":"YulIdentifier","src":"8333:9:22"},{"kind":"number","nativeSrc":"8344:2:22","nodeType":"YulLiteral","src":"8344:2:22","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"8329:3:22","nodeType":"YulIdentifier","src":"8329:3:22"},"nativeSrc":"8329:18:22","nodeType":"YulFunctionCall","src":"8329:18:22"}],"functionName":{"name":"abi_decode_address","nativeSrc":"8310:18:22","nodeType":"YulIdentifier","src":"8310:18:22"},"nativeSrc":"8310:38:22","nodeType":"YulFunctionCall","src":"8310:38:22"},"variableNames":[{"name":"value1","nativeSrc":"8300:6:22","nodeType":"YulIdentifier","src":"8300:6:22"}]},{"nativeSrc":"8357:14:22","nodeType":"YulVariableDeclaration","src":"8357:14:22","value":{"kind":"number","nativeSrc":"8370:1:22","nodeType":"YulLiteral","src":"8370:1:22","type":"","value":"0"},"variables":[{"name":"value","nativeSrc":"8361:5:22","nodeType":"YulTypedName","src":"8361:5:22","type":""}]},{"nativeSrc":"8380:41:22","nodeType":"YulAssignment","src":"8380:41:22","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"8406:9:22","nodeType":"YulIdentifier","src":"8406:9:22"},{"kind":"number","nativeSrc":"8417:2:22","nodeType":"YulLiteral","src":"8417:2:22","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"8402:3:22","nodeType":"YulIdentifier","src":"8402:3:22"},"nativeSrc":"8402:18:22","nodeType":"YulFunctionCall","src":"8402:18:22"}],"functionName":{"name":"calldataload","nativeSrc":"8389:12:22","nodeType":"YulIdentifier","src":"8389:12:22"},"nativeSrc":"8389:32:22","nodeType":"YulFunctionCall","src":"8389:32:22"},"variableNames":[{"name":"value","nativeSrc":"8380:5:22","nodeType":"YulIdentifier","src":"8380:5:22"}]},{"nativeSrc":"8430:15:22","nodeType":"YulAssignment","src":"8430:15:22","value":{"name":"value","nativeSrc":"8440:5:22","nodeType":"YulIdentifier","src":"8440:5:22"},"variableNames":[{"name":"value2","nativeSrc":"8430:6:22","nodeType":"YulIdentifier","src":"8430:6:22"}]},{"nativeSrc":"8454:46:22","nodeType":"YulVariableDeclaration","src":"8454:46:22","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"8485:9:22","nodeType":"YulIdentifier","src":"8485:9:22"},{"kind":"number","nativeSrc":"8496:2:22","nodeType":"YulLiteral","src":"8496:2:22","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"8481:3:22","nodeType":"YulIdentifier","src":"8481:3:22"},"nativeSrc":"8481:18:22","nodeType":"YulFunctionCall","src":"8481:18:22"}],"functionName":{"name":"calldataload","nativeSrc":"8468:12:22","nodeType":"YulIdentifier","src":"8468:12:22"},"nativeSrc":"8468:32:22","nodeType":"YulFunctionCall","src":"8468:32:22"},"variables":[{"name":"offset","nativeSrc":"8458:6:22","nodeType":"YulTypedName","src":"8458:6:22","type":""}]},{"body":{"nativeSrc":"8543:16:22","nodeType":"YulBlock","src":"8543:16:22","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"8552:1:22","nodeType":"YulLiteral","src":"8552:1:22","type":"","value":"0"},{"kind":"number","nativeSrc":"8555:1:22","nodeType":"YulLiteral","src":"8555:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"8545:6:22","nodeType":"YulIdentifier","src":"8545:6:22"},"nativeSrc":"8545:12:22","nodeType":"YulFunctionCall","src":"8545:12:22"},"nativeSrc":"8545:12:22","nodeType":"YulExpressionStatement","src":"8545:12:22"}]},"condition":{"arguments":[{"name":"offset","nativeSrc":"8515:6:22","nodeType":"YulIdentifier","src":"8515:6:22"},{"kind":"number","nativeSrc":"8523:18:22","nodeType":"YulLiteral","src":"8523:18:22","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"8512:2:22","nodeType":"YulIdentifier","src":"8512:2:22"},"nativeSrc":"8512:30:22","nodeType":"YulFunctionCall","src":"8512:30:22"},"nativeSrc":"8509:50:22","nodeType":"YulIf","src":"8509:50:22"},{"nativeSrc":"8568:32:22","nodeType":"YulVariableDeclaration","src":"8568:32:22","value":{"arguments":[{"name":"headStart","nativeSrc":"8582:9:22","nodeType":"YulIdentifier","src":"8582:9:22"},{"name":"offset","nativeSrc":"8593:6:22","nodeType":"YulIdentifier","src":"8593:6:22"}],"functionName":{"name":"add","nativeSrc":"8578:3:22","nodeType":"YulIdentifier","src":"8578:3:22"},"nativeSrc":"8578:22:22","nodeType":"YulFunctionCall","src":"8578:22:22"},"variables":[{"name":"_1","nativeSrc":"8572:2:22","nodeType":"YulTypedName","src":"8572:2:22","type":""}]},{"body":{"nativeSrc":"8648:16:22","nodeType":"YulBlock","src":"8648:16:22","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"8657:1:22","nodeType":"YulLiteral","src":"8657:1:22","type":"","value":"0"},{"kind":"number","nativeSrc":"8660:1:22","nodeType":"YulLiteral","src":"8660:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"8650:6:22","nodeType":"YulIdentifier","src":"8650:6:22"},"nativeSrc":"8650:12:22","nodeType":"YulFunctionCall","src":"8650:12:22"},"nativeSrc":"8650:12:22","nodeType":"YulExpressionStatement","src":"8650:12:22"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_1","nativeSrc":"8627:2:22","nodeType":"YulIdentifier","src":"8627:2:22"},{"kind":"number","nativeSrc":"8631:4:22","nodeType":"YulLiteral","src":"8631:4:22","type":"","value":"0x1f"}],"functionName":{"name":"add","nativeSrc":"8623:3:22","nodeType":"YulIdentifier","src":"8623:3:22"},"nativeSrc":"8623:13:22","nodeType":"YulFunctionCall","src":"8623:13:22"},{"name":"dataEnd","nativeSrc":"8638:7:22","nodeType":"YulIdentifier","src":"8638:7:22"}],"functionName":{"name":"slt","nativeSrc":"8619:3:22","nodeType":"YulIdentifier","src":"8619:3:22"},"nativeSrc":"8619:27:22","nodeType":"YulFunctionCall","src":"8619:27:22"}],"functionName":{"name":"iszero","nativeSrc":"8612:6:22","nodeType":"YulIdentifier","src":"8612:6:22"},"nativeSrc":"8612:35:22","nodeType":"YulFunctionCall","src":"8612:35:22"},"nativeSrc":"8609:55:22","nodeType":"YulIf","src":"8609:55:22"},{"nativeSrc":"8673:84:22","nodeType":"YulAssignment","src":"8673:84:22","value":{"arguments":[{"arguments":[{"name":"_1","nativeSrc":"8722:2:22","nodeType":"YulIdentifier","src":"8722:2:22"},{"kind":"number","nativeSrc":"8726:2:22","nodeType":"YulLiteral","src":"8726:2:22","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"8718:3:22","nodeType":"YulIdentifier","src":"8718:3:22"},"nativeSrc":"8718:11:22","nodeType":"YulFunctionCall","src":"8718:11:22"},{"arguments":[{"name":"_1","nativeSrc":"8744:2:22","nodeType":"YulIdentifier","src":"8744:2:22"}],"functionName":{"name":"calldataload","nativeSrc":"8731:12:22","nodeType":"YulIdentifier","src":"8731:12:22"},"nativeSrc":"8731:16:22","nodeType":"YulFunctionCall","src":"8731:16:22"},{"name":"dataEnd","nativeSrc":"8749:7:22","nodeType":"YulIdentifier","src":"8749:7:22"}],"functionName":{"name":"abi_decode_available_length_string","nativeSrc":"8683:34:22","nodeType":"YulIdentifier","src":"8683:34:22"},"nativeSrc":"8683:74:22","nodeType":"YulFunctionCall","src":"8683:74:22"},"variableNames":[{"name":"value3","nativeSrc":"8673:6:22","nodeType":"YulIdentifier","src":"8673:6:22"}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr","nativeSrc":"8050:713:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"8122:9:22","nodeType":"YulTypedName","src":"8122:9:22","type":""},{"name":"dataEnd","nativeSrc":"8133:7:22","nodeType":"YulTypedName","src":"8133:7:22","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"8145:6:22","nodeType":"YulTypedName","src":"8145:6:22","type":""},{"name":"value1","nativeSrc":"8153:6:22","nodeType":"YulTypedName","src":"8153:6:22","type":""},{"name":"value2","nativeSrc":"8161:6:22","nodeType":"YulTypedName","src":"8161:6:22","type":""},{"name":"value3","nativeSrc":"8169:6:22","nodeType":"YulTypedName","src":"8169:6:22","type":""}],"src":"8050:713:22"},{"body":{"nativeSrc":"8986:1184:22","nodeType":"YulBlock","src":"8986:1184:22","statements":[{"body":{"nativeSrc":"9033:16:22","nodeType":"YulBlock","src":"9033:16:22","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"9042:1:22","nodeType":"YulLiteral","src":"9042:1:22","type":"","value":"0"},{"kind":"number","nativeSrc":"9045:1:22","nodeType":"YulLiteral","src":"9045:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"9035:6:22","nodeType":"YulIdentifier","src":"9035:6:22"},"nativeSrc":"9035:12:22","nodeType":"YulFunctionCall","src":"9035:12:22"},"nativeSrc":"9035:12:22","nodeType":"YulExpressionStatement","src":"9035:12:22"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"9007:7:22","nodeType":"YulIdentifier","src":"9007:7:22"},{"name":"headStart","nativeSrc":"9016:9:22","nodeType":"YulIdentifier","src":"9016:9:22"}],"functionName":{"name":"sub","nativeSrc":"9003:3:22","nodeType":"YulIdentifier","src":"9003:3:22"},"nativeSrc":"9003:23:22","nodeType":"YulFunctionCall","src":"9003:23:22"},{"kind":"number","nativeSrc":"9028:3:22","nodeType":"YulLiteral","src":"9028:3:22","type":"","value":"160"}],"functionName":{"name":"slt","nativeSrc":"8999:3:22","nodeType":"YulIdentifier","src":"8999:3:22"},"nativeSrc":"8999:33:22","nodeType":"YulFunctionCall","src":"8999:33:22"},"nativeSrc":"8996:53:22","nodeType":"YulIf","src":"8996:53:22"},{"nativeSrc":"9058:39:22","nodeType":"YulAssignment","src":"9058:39:22","value":{"arguments":[{"name":"headStart","nativeSrc":"9087:9:22","nodeType":"YulIdentifier","src":"9087:9:22"}],"functionName":{"name":"abi_decode_address","nativeSrc":"9068:18:22","nodeType":"YulIdentifier","src":"9068:18:22"},"nativeSrc":"9068:29:22","nodeType":"YulFunctionCall","src":"9068:29:22"},"variableNames":[{"name":"value0","nativeSrc":"9058:6:22","nodeType":"YulIdentifier","src":"9058:6:22"}]},{"nativeSrc":"9106:46:22","nodeType":"YulVariableDeclaration","src":"9106:46:22","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"9137:9:22","nodeType":"YulIdentifier","src":"9137:9:22"},{"kind":"number","nativeSrc":"9148:2:22","nodeType":"YulLiteral","src":"9148:2:22","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"9133:3:22","nodeType":"YulIdentifier","src":"9133:3:22"},"nativeSrc":"9133:18:22","nodeType":"YulFunctionCall","src":"9133:18:22"}],"functionName":{"name":"calldataload","nativeSrc":"9120:12:22","nodeType":"YulIdentifier","src":"9120:12:22"},"nativeSrc":"9120:32:22","nodeType":"YulFunctionCall","src":"9120:32:22"},"variables":[{"name":"offset","nativeSrc":"9110:6:22","nodeType":"YulTypedName","src":"9110:6:22","type":""}]},{"body":{"nativeSrc":"9195:16:22","nodeType":"YulBlock","src":"9195:16:22","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"9204:1:22","nodeType":"YulLiteral","src":"9204:1:22","type":"","value":"0"},{"kind":"number","nativeSrc":"9207:1:22","nodeType":"YulLiteral","src":"9207:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"9197:6:22","nodeType":"YulIdentifier","src":"9197:6:22"},"nativeSrc":"9197:12:22","nodeType":"YulFunctionCall","src":"9197:12:22"},"nativeSrc":"9197:12:22","nodeType":"YulExpressionStatement","src":"9197:12:22"}]},"condition":{"arguments":[{"name":"offset","nativeSrc":"9167:6:22","nodeType":"YulIdentifier","src":"9167:6:22"},{"kind":"number","nativeSrc":"9175:18:22","nodeType":"YulLiteral","src":"9175:18:22","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"9164:2:22","nodeType":"YulIdentifier","src":"9164:2:22"},"nativeSrc":"9164:30:22","nodeType":"YulFunctionCall","src":"9164:30:22"},"nativeSrc":"9161:50:22","nodeType":"YulIf","src":"9161:50:22"},{"nativeSrc":"9220:85:22","nodeType":"YulVariableDeclaration","src":"9220:85:22","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"9277:9:22","nodeType":"YulIdentifier","src":"9277:9:22"},{"name":"offset","nativeSrc":"9288:6:22","nodeType":"YulIdentifier","src":"9288:6:22"}],"functionName":{"name":"add","nativeSrc":"9273:3:22","nodeType":"YulIdentifier","src":"9273:3:22"},"nativeSrc":"9273:22:22","nodeType":"YulFunctionCall","src":"9273:22:22"},{"name":"dataEnd","nativeSrc":"9297:7:22","nodeType":"YulIdentifier","src":"9297:7:22"}],"functionName":{"name":"abi_decode_string_calldata","nativeSrc":"9246:26:22","nodeType":"YulIdentifier","src":"9246:26:22"},"nativeSrc":"9246:59:22","nodeType":"YulFunctionCall","src":"9246:59:22"},"variables":[{"name":"value1_1","nativeSrc":"9224:8:22","nodeType":"YulTypedName","src":"9224:8:22","type":""},{"name":"value2_1","nativeSrc":"9234:8:22","nodeType":"YulTypedName","src":"9234:8:22","type":""}]},{"nativeSrc":"9314:18:22","nodeType":"YulAssignment","src":"9314:18:22","value":{"name":"value1_1","nativeSrc":"9324:8:22","nodeType":"YulIdentifier","src":"9324:8:22"},"variableNames":[{"name":"value1","nativeSrc":"9314:6:22","nodeType":"YulIdentifier","src":"9314:6:22"}]},{"nativeSrc":"9341:18:22","nodeType":"YulAssignment","src":"9341:18:22","value":{"name":"value2_1","nativeSrc":"9351:8:22","nodeType":"YulIdentifier","src":"9351:8:22"},"variableNames":[{"name":"value2","nativeSrc":"9341:6:22","nodeType":"YulIdentifier","src":"9341:6:22"}]},{"nativeSrc":"9368:48:22","nodeType":"YulVariableDeclaration","src":"9368:48:22","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"9401:9:22","nodeType":"YulIdentifier","src":"9401:9:22"},{"kind":"number","nativeSrc":"9412:2:22","nodeType":"YulLiteral","src":"9412:2:22","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"9397:3:22","nodeType":"YulIdentifier","src":"9397:3:22"},"nativeSrc":"9397:18:22","nodeType":"YulFunctionCall","src":"9397:18:22"}],"functionName":{"name":"calldataload","nativeSrc":"9384:12:22","nodeType":"YulIdentifier","src":"9384:12:22"},"nativeSrc":"9384:32:22","nodeType":"YulFunctionCall","src":"9384:32:22"},"variables":[{"name":"offset_1","nativeSrc":"9372:8:22","nodeType":"YulTypedName","src":"9372:8:22","type":""}]},{"body":{"nativeSrc":"9461:16:22","nodeType":"YulBlock","src":"9461:16:22","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"9470:1:22","nodeType":"YulLiteral","src":"9470:1:22","type":"","value":"0"},{"kind":"number","nativeSrc":"9473:1:22","nodeType":"YulLiteral","src":"9473:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"9463:6:22","nodeType":"YulIdentifier","src":"9463:6:22"},"nativeSrc":"9463:12:22","nodeType":"YulFunctionCall","src":"9463:12:22"},"nativeSrc":"9463:12:22","nodeType":"YulExpressionStatement","src":"9463:12:22"}]},"condition":{"arguments":[{"name":"offset_1","nativeSrc":"9431:8:22","nodeType":"YulIdentifier","src":"9431:8:22"},{"kind":"number","nativeSrc":"9441:18:22","nodeType":"YulLiteral","src":"9441:18:22","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"9428:2:22","nodeType":"YulIdentifier","src":"9428:2:22"},"nativeSrc":"9428:32:22","nodeType":"YulFunctionCall","src":"9428:32:22"},"nativeSrc":"9425:52:22","nodeType":"YulIf","src":"9425:52:22"},{"nativeSrc":"9486:87:22","nodeType":"YulVariableDeclaration","src":"9486:87:22","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"9543:9:22","nodeType":"YulIdentifier","src":"9543:9:22"},{"name":"offset_1","nativeSrc":"9554:8:22","nodeType":"YulIdentifier","src":"9554:8:22"}],"functionName":{"name":"add","nativeSrc":"9539:3:22","nodeType":"YulIdentifier","src":"9539:3:22"},"nativeSrc":"9539:24:22","nodeType":"YulFunctionCall","src":"9539:24:22"},{"name":"dataEnd","nativeSrc":"9565:7:22","nodeType":"YulIdentifier","src":"9565:7:22"}],"functionName":{"name":"abi_decode_string_calldata","nativeSrc":"9512:26:22","nodeType":"YulIdentifier","src":"9512:26:22"},"nativeSrc":"9512:61:22","nodeType":"YulFunctionCall","src":"9512:61:22"},"variables":[{"name":"value3_1","nativeSrc":"9490:8:22","nodeType":"YulTypedName","src":"9490:8:22","type":""},{"name":"value4_1","nativeSrc":"9500:8:22","nodeType":"YulTypedName","src":"9500:8:22","type":""}]},{"nativeSrc":"9582:18:22","nodeType":"YulAssignment","src":"9582:18:22","value":{"name":"value3_1","nativeSrc":"9592:8:22","nodeType":"YulIdentifier","src":"9592:8:22"},"variableNames":[{"name":"value3","nativeSrc":"9582:6:22","nodeType":"YulIdentifier","src":"9582:6:22"}]},{"nativeSrc":"9609:18:22","nodeType":"YulAssignment","src":"9609:18:22","value":{"name":"value4_1","nativeSrc":"9619:8:22","nodeType":"YulIdentifier","src":"9619:8:22"},"variableNames":[{"name":"value4","nativeSrc":"9609:6:22","nodeType":"YulIdentifier","src":"9609:6:22"}]},{"nativeSrc":"9636:48:22","nodeType":"YulVariableDeclaration","src":"9636:48:22","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"9669:9:22","nodeType":"YulIdentifier","src":"9669:9:22"},{"kind":"number","nativeSrc":"9680:2:22","nodeType":"YulLiteral","src":"9680:2:22","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"9665:3:22","nodeType":"YulIdentifier","src":"9665:3:22"},"nativeSrc":"9665:18:22","nodeType":"YulFunctionCall","src":"9665:18:22"}],"functionName":{"name":"calldataload","nativeSrc":"9652:12:22","nodeType":"YulIdentifier","src":"9652:12:22"},"nativeSrc":"9652:32:22","nodeType":"YulFunctionCall","src":"9652:32:22"},"variables":[{"name":"offset_2","nativeSrc":"9640:8:22","nodeType":"YulTypedName","src":"9640:8:22","type":""}]},{"body":{"nativeSrc":"9729:16:22","nodeType":"YulBlock","src":"9729:16:22","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"9738:1:22","nodeType":"YulLiteral","src":"9738:1:22","type":"","value":"0"},{"kind":"number","nativeSrc":"9741:1:22","nodeType":"YulLiteral","src":"9741:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"9731:6:22","nodeType":"YulIdentifier","src":"9731:6:22"},"nativeSrc":"9731:12:22","nodeType":"YulFunctionCall","src":"9731:12:22"},"nativeSrc":"9731:12:22","nodeType":"YulExpressionStatement","src":"9731:12:22"}]},"condition":{"arguments":[{"name":"offset_2","nativeSrc":"9699:8:22","nodeType":"YulIdentifier","src":"9699:8:22"},{"kind":"number","nativeSrc":"9709:18:22","nodeType":"YulLiteral","src":"9709:18:22","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"9696:2:22","nodeType":"YulIdentifier","src":"9696:2:22"},"nativeSrc":"9696:32:22","nodeType":"YulFunctionCall","src":"9696:32:22"},"nativeSrc":"9693:52:22","nodeType":"YulIf","src":"9693:52:22"},{"nativeSrc":"9754:87:22","nodeType":"YulVariableDeclaration","src":"9754:87:22","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"9811:9:22","nodeType":"YulIdentifier","src":"9811:9:22"},{"name":"offset_2","nativeSrc":"9822:8:22","nodeType":"YulIdentifier","src":"9822:8:22"}],"functionName":{"name":"add","nativeSrc":"9807:3:22","nodeType":"YulIdentifier","src":"9807:3:22"},"nativeSrc":"9807:24:22","nodeType":"YulFunctionCall","src":"9807:24:22"},{"name":"dataEnd","nativeSrc":"9833:7:22","nodeType":"YulIdentifier","src":"9833:7:22"}],"functionName":{"name":"abi_decode_string_calldata","nativeSrc":"9780:26:22","nodeType":"YulIdentifier","src":"9780:26:22"},"nativeSrc":"9780:61:22","nodeType":"YulFunctionCall","src":"9780:61:22"},"variables":[{"name":"value5_1","nativeSrc":"9758:8:22","nodeType":"YulTypedName","src":"9758:8:22","type":""},{"name":"value6_1","nativeSrc":"9768:8:22","nodeType":"YulTypedName","src":"9768:8:22","type":""}]},{"nativeSrc":"9850:18:22","nodeType":"YulAssignment","src":"9850:18:22","value":{"name":"value5_1","nativeSrc":"9860:8:22","nodeType":"YulIdentifier","src":"9860:8:22"},"variableNames":[{"name":"value5","nativeSrc":"9850:6:22","nodeType":"YulIdentifier","src":"9850:6:22"}]},{"nativeSrc":"9877:18:22","nodeType":"YulAssignment","src":"9877:18:22","value":{"name":"value6_1","nativeSrc":"9887:8:22","nodeType":"YulIdentifier","src":"9887:8:22"},"variableNames":[{"name":"value6","nativeSrc":"9877:6:22","nodeType":"YulIdentifier","src":"9877:6:22"}]},{"nativeSrc":"9904:49:22","nodeType":"YulVariableDeclaration","src":"9904:49:22","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"9937:9:22","nodeType":"YulIdentifier","src":"9937:9:22"},{"kind":"number","nativeSrc":"9948:3:22","nodeType":"YulLiteral","src":"9948:3:22","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"9933:3:22","nodeType":"YulIdentifier","src":"9933:3:22"},"nativeSrc":"9933:19:22","nodeType":"YulFunctionCall","src":"9933:19:22"}],"functionName":{"name":"calldataload","nativeSrc":"9920:12:22","nodeType":"YulIdentifier","src":"9920:12:22"},"nativeSrc":"9920:33:22","nodeType":"YulFunctionCall","src":"9920:33:22"},"variables":[{"name":"offset_3","nativeSrc":"9908:8:22","nodeType":"YulTypedName","src":"9908:8:22","type":""}]},{"body":{"nativeSrc":"9998:16:22","nodeType":"YulBlock","src":"9998:16:22","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"10007:1:22","nodeType":"YulLiteral","src":"10007:1:22","type":"","value":"0"},{"kind":"number","nativeSrc":"10010:1:22","nodeType":"YulLiteral","src":"10010:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"10000:6:22","nodeType":"YulIdentifier","src":"10000:6:22"},"nativeSrc":"10000:12:22","nodeType":"YulFunctionCall","src":"10000:12:22"},"nativeSrc":"10000:12:22","nodeType":"YulExpressionStatement","src":"10000:12:22"}]},"condition":{"arguments":[{"name":"offset_3","nativeSrc":"9968:8:22","nodeType":"YulIdentifier","src":"9968:8:22"},{"kind":"number","nativeSrc":"9978:18:22","nodeType":"YulLiteral","src":"9978:18:22","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"9965:2:22","nodeType":"YulIdentifier","src":"9965:2:22"},"nativeSrc":"9965:32:22","nodeType":"YulFunctionCall","src":"9965:32:22"},"nativeSrc":"9962:52:22","nodeType":"YulIf","src":"9962:52:22"},{"nativeSrc":"10023:87:22","nodeType":"YulVariableDeclaration","src":"10023:87:22","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"10080:9:22","nodeType":"YulIdentifier","src":"10080:9:22"},{"name":"offset_3","nativeSrc":"10091:8:22","nodeType":"YulIdentifier","src":"10091:8:22"}],"functionName":{"name":"add","nativeSrc":"10076:3:22","nodeType":"YulIdentifier","src":"10076:3:22"},"nativeSrc":"10076:24:22","nodeType":"YulFunctionCall","src":"10076:24:22"},{"name":"dataEnd","nativeSrc":"10102:7:22","nodeType":"YulIdentifier","src":"10102:7:22"}],"functionName":{"name":"abi_decode_string_calldata","nativeSrc":"10049:26:22","nodeType":"YulIdentifier","src":"10049:26:22"},"nativeSrc":"10049:61:22","nodeType":"YulFunctionCall","src":"10049:61:22"},"variables":[{"name":"value7_1","nativeSrc":"10027:8:22","nodeType":"YulTypedName","src":"10027:8:22","type":""},{"name":"value8_1","nativeSrc":"10037:8:22","nodeType":"YulTypedName","src":"10037:8:22","type":""}]},{"nativeSrc":"10119:18:22","nodeType":"YulAssignment","src":"10119:18:22","value":{"name":"value7_1","nativeSrc":"10129:8:22","nodeType":"YulIdentifier","src":"10129:8:22"},"variableNames":[{"name":"value7","nativeSrc":"10119:6:22","nodeType":"YulIdentifier","src":"10119:6:22"}]},{"nativeSrc":"10146:18:22","nodeType":"YulAssignment","src":"10146:18:22","value":{"name":"value8_1","nativeSrc":"10156:8:22","nodeType":"YulIdentifier","src":"10156:8:22"},"variableNames":[{"name":"value8","nativeSrc":"10146:6:22","nodeType":"YulIdentifier","src":"10146:6:22"}]}]},"name":"abi_decode_tuple_t_addresst_string_calldata_ptrt_string_calldata_ptrt_string_calldata_ptrt_string_calldata_ptr","nativeSrc":"8768:1402:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"8888:9:22","nodeType":"YulTypedName","src":"8888:9:22","type":""},{"name":"dataEnd","nativeSrc":"8899:7:22","nodeType":"YulTypedName","src":"8899:7:22","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"8911:6:22","nodeType":"YulTypedName","src":"8911:6:22","type":""},{"name":"value1","nativeSrc":"8919:6:22","nodeType":"YulTypedName","src":"8919:6:22","type":""},{"name":"value2","nativeSrc":"8927:6:22","nodeType":"YulTypedName","src":"8927:6:22","type":""},{"name":"value3","nativeSrc":"8935:6:22","nodeType":"YulTypedName","src":"8935:6:22","type":""},{"name":"value4","nativeSrc":"8943:6:22","nodeType":"YulTypedName","src":"8943:6:22","type":""},{"name":"value5","nativeSrc":"8951:6:22","nodeType":"YulTypedName","src":"8951:6:22","type":""},{"name":"value6","nativeSrc":"8959:6:22","nodeType":"YulTypedName","src":"8959:6:22","type":""},{"name":"value7","nativeSrc":"8967:6:22","nodeType":"YulTypedName","src":"8967:6:22","type":""},{"name":"value8","nativeSrc":"8975:6:22","nodeType":"YulTypedName","src":"8975:6:22","type":""}],"src":"8768:1402:22"},{"body":{"nativeSrc":"10262:173:22","nodeType":"YulBlock","src":"10262:173:22","statements":[{"body":{"nativeSrc":"10308:16:22","nodeType":"YulBlock","src":"10308:16:22","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"10317:1:22","nodeType":"YulLiteral","src":"10317:1:22","type":"","value":"0"},{"kind":"number","nativeSrc":"10320:1:22","nodeType":"YulLiteral","src":"10320:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"10310:6:22","nodeType":"YulIdentifier","src":"10310:6:22"},"nativeSrc":"10310:12:22","nodeType":"YulFunctionCall","src":"10310:12:22"},"nativeSrc":"10310:12:22","nodeType":"YulExpressionStatement","src":"10310:12:22"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"10283:7:22","nodeType":"YulIdentifier","src":"10283:7:22"},{"name":"headStart","nativeSrc":"10292:9:22","nodeType":"YulIdentifier","src":"10292:9:22"}],"functionName":{"name":"sub","nativeSrc":"10279:3:22","nodeType":"YulIdentifier","src":"10279:3:22"},"nativeSrc":"10279:23:22","nodeType":"YulFunctionCall","src":"10279:23:22"},{"kind":"number","nativeSrc":"10304:2:22","nodeType":"YulLiteral","src":"10304:2:22","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"10275:3:22","nodeType":"YulIdentifier","src":"10275:3:22"},"nativeSrc":"10275:32:22","nodeType":"YulFunctionCall","src":"10275:32:22"},"nativeSrc":"10272:52:22","nodeType":"YulIf","src":"10272:52:22"},{"nativeSrc":"10333:39:22","nodeType":"YulAssignment","src":"10333:39:22","value":{"arguments":[{"name":"headStart","nativeSrc":"10362:9:22","nodeType":"YulIdentifier","src":"10362:9:22"}],"functionName":{"name":"abi_decode_address","nativeSrc":"10343:18:22","nodeType":"YulIdentifier","src":"10343:18:22"},"nativeSrc":"10343:29:22","nodeType":"YulFunctionCall","src":"10343:29:22"},"variableNames":[{"name":"value0","nativeSrc":"10333:6:22","nodeType":"YulIdentifier","src":"10333:6:22"}]},{"nativeSrc":"10381:48:22","nodeType":"YulAssignment","src":"10381:48:22","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"10414:9:22","nodeType":"YulIdentifier","src":"10414:9:22"},{"kind":"number","nativeSrc":"10425:2:22","nodeType":"YulLiteral","src":"10425:2:22","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"10410:3:22","nodeType":"YulIdentifier","src":"10410:3:22"},"nativeSrc":"10410:18:22","nodeType":"YulFunctionCall","src":"10410:18:22"}],"functionName":{"name":"abi_decode_address","nativeSrc":"10391:18:22","nodeType":"YulIdentifier","src":"10391:18:22"},"nativeSrc":"10391:38:22","nodeType":"YulFunctionCall","src":"10391:38:22"},"variableNames":[{"name":"value1","nativeSrc":"10381:6:22","nodeType":"YulIdentifier","src":"10381:6:22"}]}]},"name":"abi_decode_tuple_t_addresst_address","nativeSrc":"10175:260:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"10220:9:22","nodeType":"YulTypedName","src":"10220:9:22","type":""},{"name":"dataEnd","nativeSrc":"10231:7:22","nodeType":"YulTypedName","src":"10231:7:22","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"10243:6:22","nodeType":"YulTypedName","src":"10243:6:22","type":""},{"name":"value1","nativeSrc":"10251:6:22","nodeType":"YulTypedName","src":"10251:6:22","type":""}],"src":"10175:260:22"},{"body":{"nativeSrc":"10584:646:22","nodeType":"YulBlock","src":"10584:646:22","statements":[{"body":{"nativeSrc":"10630:16:22","nodeType":"YulBlock","src":"10630:16:22","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"10639:1:22","nodeType":"YulLiteral","src":"10639:1:22","type":"","value":"0"},{"kind":"number","nativeSrc":"10642:1:22","nodeType":"YulLiteral","src":"10642:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"10632:6:22","nodeType":"YulIdentifier","src":"10632:6:22"},"nativeSrc":"10632:12:22","nodeType":"YulFunctionCall","src":"10632:12:22"},"nativeSrc":"10632:12:22","nodeType":"YulExpressionStatement","src":"10632:12:22"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"10605:7:22","nodeType":"YulIdentifier","src":"10605:7:22"},{"name":"headStart","nativeSrc":"10614:9:22","nodeType":"YulIdentifier","src":"10614:9:22"}],"functionName":{"name":"sub","nativeSrc":"10601:3:22","nodeType":"YulIdentifier","src":"10601:3:22"},"nativeSrc":"10601:23:22","nodeType":"YulFunctionCall","src":"10601:23:22"},{"kind":"number","nativeSrc":"10626:2:22","nodeType":"YulLiteral","src":"10626:2:22","type":"","value":"96"}],"functionName":{"name":"slt","nativeSrc":"10597:3:22","nodeType":"YulIdentifier","src":"10597:3:22"},"nativeSrc":"10597:32:22","nodeType":"YulFunctionCall","src":"10597:32:22"},"nativeSrc":"10594:52:22","nodeType":"YulIf","src":"10594:52:22"},{"nativeSrc":"10655:39:22","nodeType":"YulAssignment","src":"10655:39:22","value":{"arguments":[{"name":"headStart","nativeSrc":"10684:9:22","nodeType":"YulIdentifier","src":"10684:9:22"}],"functionName":{"name":"abi_decode_address","nativeSrc":"10665:18:22","nodeType":"YulIdentifier","src":"10665:18:22"},"nativeSrc":"10665:29:22","nodeType":"YulFunctionCall","src":"10665:29:22"},"variableNames":[{"name":"value0","nativeSrc":"10655:6:22","nodeType":"YulIdentifier","src":"10655:6:22"}]},{"nativeSrc":"10703:46:22","nodeType":"YulVariableDeclaration","src":"10703:46:22","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"10734:9:22","nodeType":"YulIdentifier","src":"10734:9:22"},{"kind":"number","nativeSrc":"10745:2:22","nodeType":"YulLiteral","src":"10745:2:22","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"10730:3:22","nodeType":"YulIdentifier","src":"10730:3:22"},"nativeSrc":"10730:18:22","nodeType":"YulFunctionCall","src":"10730:18:22"}],"functionName":{"name":"calldataload","nativeSrc":"10717:12:22","nodeType":"YulIdentifier","src":"10717:12:22"},"nativeSrc":"10717:32:22","nodeType":"YulFunctionCall","src":"10717:32:22"},"variables":[{"name":"offset","nativeSrc":"10707:6:22","nodeType":"YulTypedName","src":"10707:6:22","type":""}]},{"body":{"nativeSrc":"10792:16:22","nodeType":"YulBlock","src":"10792:16:22","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"10801:1:22","nodeType":"YulLiteral","src":"10801:1:22","type":"","value":"0"},{"kind":"number","nativeSrc":"10804:1:22","nodeType":"YulLiteral","src":"10804:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"10794:6:22","nodeType":"YulIdentifier","src":"10794:6:22"},"nativeSrc":"10794:12:22","nodeType":"YulFunctionCall","src":"10794:12:22"},"nativeSrc":"10794:12:22","nodeType":"YulExpressionStatement","src":"10794:12:22"}]},"condition":{"arguments":[{"name":"offset","nativeSrc":"10764:6:22","nodeType":"YulIdentifier","src":"10764:6:22"},{"kind":"number","nativeSrc":"10772:18:22","nodeType":"YulLiteral","src":"10772:18:22","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"10761:2:22","nodeType":"YulIdentifier","src":"10761:2:22"},"nativeSrc":"10761:30:22","nodeType":"YulFunctionCall","src":"10761:30:22"},"nativeSrc":"10758:50:22","nodeType":"YulIf","src":"10758:50:22"},{"nativeSrc":"10817:85:22","nodeType":"YulVariableDeclaration","src":"10817:85:22","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"10874:9:22","nodeType":"YulIdentifier","src":"10874:9:22"},{"name":"offset","nativeSrc":"10885:6:22","nodeType":"YulIdentifier","src":"10885:6:22"}],"functionName":{"name":"add","nativeSrc":"10870:3:22","nodeType":"YulIdentifier","src":"10870:3:22"},"nativeSrc":"10870:22:22","nodeType":"YulFunctionCall","src":"10870:22:22"},{"name":"dataEnd","nativeSrc":"10894:7:22","nodeType":"YulIdentifier","src":"10894:7:22"}],"functionName":{"name":"abi_decode_string_calldata","nativeSrc":"10843:26:22","nodeType":"YulIdentifier","src":"10843:26:22"},"nativeSrc":"10843:59:22","nodeType":"YulFunctionCall","src":"10843:59:22"},"variables":[{"name":"value1_1","nativeSrc":"10821:8:22","nodeType":"YulTypedName","src":"10821:8:22","type":""},{"name":"value2_1","nativeSrc":"10831:8:22","nodeType":"YulTypedName","src":"10831:8:22","type":""}]},{"nativeSrc":"10911:18:22","nodeType":"YulAssignment","src":"10911:18:22","value":{"name":"value1_1","nativeSrc":"10921:8:22","nodeType":"YulIdentifier","src":"10921:8:22"},"variableNames":[{"name":"value1","nativeSrc":"10911:6:22","nodeType":"YulIdentifier","src":"10911:6:22"}]},{"nativeSrc":"10938:18:22","nodeType":"YulAssignment","src":"10938:18:22","value":{"name":"value2_1","nativeSrc":"10948:8:22","nodeType":"YulIdentifier","src":"10948:8:22"},"variableNames":[{"name":"value2","nativeSrc":"10938:6:22","nodeType":"YulIdentifier","src":"10938:6:22"}]},{"nativeSrc":"10965:48:22","nodeType":"YulVariableDeclaration","src":"10965:48:22","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"10998:9:22","nodeType":"YulIdentifier","src":"10998:9:22"},{"kind":"number","nativeSrc":"11009:2:22","nodeType":"YulLiteral","src":"11009:2:22","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"10994:3:22","nodeType":"YulIdentifier","src":"10994:3:22"},"nativeSrc":"10994:18:22","nodeType":"YulFunctionCall","src":"10994:18:22"}],"functionName":{"name":"calldataload","nativeSrc":"10981:12:22","nodeType":"YulIdentifier","src":"10981:12:22"},"nativeSrc":"10981:32:22","nodeType":"YulFunctionCall","src":"10981:32:22"},"variables":[{"name":"offset_1","nativeSrc":"10969:8:22","nodeType":"YulTypedName","src":"10969:8:22","type":""}]},{"body":{"nativeSrc":"11058:16:22","nodeType":"YulBlock","src":"11058:16:22","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"11067:1:22","nodeType":"YulLiteral","src":"11067:1:22","type":"","value":"0"},{"kind":"number","nativeSrc":"11070:1:22","nodeType":"YulLiteral","src":"11070:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"11060:6:22","nodeType":"YulIdentifier","src":"11060:6:22"},"nativeSrc":"11060:12:22","nodeType":"YulFunctionCall","src":"11060:12:22"},"nativeSrc":"11060:12:22","nodeType":"YulExpressionStatement","src":"11060:12:22"}]},"condition":{"arguments":[{"name":"offset_1","nativeSrc":"11028:8:22","nodeType":"YulIdentifier","src":"11028:8:22"},{"kind":"number","nativeSrc":"11038:18:22","nodeType":"YulLiteral","src":"11038:18:22","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"11025:2:22","nodeType":"YulIdentifier","src":"11025:2:22"},"nativeSrc":"11025:32:22","nodeType":"YulFunctionCall","src":"11025:32:22"},"nativeSrc":"11022:52:22","nodeType":"YulIf","src":"11022:52:22"},{"nativeSrc":"11083:87:22","nodeType":"YulVariableDeclaration","src":"11083:87:22","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"11140:9:22","nodeType":"YulIdentifier","src":"11140:9:22"},{"name":"offset_1","nativeSrc":"11151:8:22","nodeType":"YulIdentifier","src":"11151:8:22"}],"functionName":{"name":"add","nativeSrc":"11136:3:22","nodeType":"YulIdentifier","src":"11136:3:22"},"nativeSrc":"11136:24:22","nodeType":"YulFunctionCall","src":"11136:24:22"},{"name":"dataEnd","nativeSrc":"11162:7:22","nodeType":"YulIdentifier","src":"11162:7:22"}],"functionName":{"name":"abi_decode_string_calldata","nativeSrc":"11109:26:22","nodeType":"YulIdentifier","src":"11109:26:22"},"nativeSrc":"11109:61:22","nodeType":"YulFunctionCall","src":"11109:61:22"},"variables":[{"name":"value3_1","nativeSrc":"11087:8:22","nodeType":"YulTypedName","src":"11087:8:22","type":""},{"name":"value4_1","nativeSrc":"11097:8:22","nodeType":"YulTypedName","src":"11097:8:22","type":""}]},{"nativeSrc":"11179:18:22","nodeType":"YulAssignment","src":"11179:18:22","value":{"name":"value3_1","nativeSrc":"11189:8:22","nodeType":"YulIdentifier","src":"11189:8:22"},"variableNames":[{"name":"value3","nativeSrc":"11179:6:22","nodeType":"YulIdentifier","src":"11179:6:22"}]},{"nativeSrc":"11206:18:22","nodeType":"YulAssignment","src":"11206:18:22","value":{"name":"value4_1","nativeSrc":"11216:8:22","nodeType":"YulIdentifier","src":"11216:8:22"},"variableNames":[{"name":"value4","nativeSrc":"11206:6:22","nodeType":"YulIdentifier","src":"11206:6:22"}]}]},"name":"abi_decode_tuple_t_addresst_string_calldata_ptrt_string_calldata_ptr","nativeSrc":"10440:790:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"10518:9:22","nodeType":"YulTypedName","src":"10518:9:22","type":""},{"name":"dataEnd","nativeSrc":"10529:7:22","nodeType":"YulTypedName","src":"10529:7:22","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"10541:6:22","nodeType":"YulTypedName","src":"10541:6:22","type":""},{"name":"value1","nativeSrc":"10549:6:22","nodeType":"YulTypedName","src":"10549:6:22","type":""},{"name":"value2","nativeSrc":"10557:6:22","nodeType":"YulTypedName","src":"10557:6:22","type":""},{"name":"value3","nativeSrc":"10565:6:22","nodeType":"YulTypedName","src":"10565:6:22","type":""},{"name":"value4","nativeSrc":"10573:6:22","nodeType":"YulTypedName","src":"10573:6:22","type":""}],"src":"10440:790:22"},{"body":{"nativeSrc":"11290:325:22","nodeType":"YulBlock","src":"11290:325:22","statements":[{"nativeSrc":"11300:22:22","nodeType":"YulAssignment","src":"11300:22:22","value":{"arguments":[{"kind":"number","nativeSrc":"11314:1:22","nodeType":"YulLiteral","src":"11314:1:22","type":"","value":"1"},{"name":"data","nativeSrc":"11317:4:22","nodeType":"YulIdentifier","src":"11317:4:22"}],"functionName":{"name":"shr","nativeSrc":"11310:3:22","nodeType":"YulIdentifier","src":"11310:3:22"},"nativeSrc":"11310:12:22","nodeType":"YulFunctionCall","src":"11310:12:22"},"variableNames":[{"name":"length","nativeSrc":"11300:6:22","nodeType":"YulIdentifier","src":"11300:6:22"}]},{"nativeSrc":"11331:38:22","nodeType":"YulVariableDeclaration","src":"11331:38:22","value":{"arguments":[{"name":"data","nativeSrc":"11361:4:22","nodeType":"YulIdentifier","src":"11361:4:22"},{"kind":"number","nativeSrc":"11367:1:22","nodeType":"YulLiteral","src":"11367:1:22","type":"","value":"1"}],"functionName":{"name":"and","nativeSrc":"11357:3:22","nodeType":"YulIdentifier","src":"11357:3:22"},"nativeSrc":"11357:12:22","nodeType":"YulFunctionCall","src":"11357:12:22"},"variables":[{"name":"outOfPlaceEncoding","nativeSrc":"11335:18:22","nodeType":"YulTypedName","src":"11335:18:22","type":""}]},{"body":{"nativeSrc":"11408:31:22","nodeType":"YulBlock","src":"11408:31:22","statements":[{"nativeSrc":"11410:27:22","nodeType":"YulAssignment","src":"11410:27:22","value":{"arguments":[{"name":"length","nativeSrc":"11424:6:22","nodeType":"YulIdentifier","src":"11424:6:22"},{"kind":"number","nativeSrc":"11432:4:22","nodeType":"YulLiteral","src":"11432:4:22","type":"","value":"0x7f"}],"functionName":{"name":"and","nativeSrc":"11420:3:22","nodeType":"YulIdentifier","src":"11420:3:22"},"nativeSrc":"11420:17:22","nodeType":"YulFunctionCall","src":"11420:17:22"},"variableNames":[{"name":"length","nativeSrc":"11410:6:22","nodeType":"YulIdentifier","src":"11410:6:22"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nativeSrc":"11388:18:22","nodeType":"YulIdentifier","src":"11388:18:22"}],"functionName":{"name":"iszero","nativeSrc":"11381:6:22","nodeType":"YulIdentifier","src":"11381:6:22"},"nativeSrc":"11381:26:22","nodeType":"YulFunctionCall","src":"11381:26:22"},"nativeSrc":"11378:61:22","nodeType":"YulIf","src":"11378:61:22"},{"body":{"nativeSrc":"11498:111:22","nodeType":"YulBlock","src":"11498:111:22","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"11519:1:22","nodeType":"YulLiteral","src":"11519:1:22","type":"","value":"0"},{"arguments":[{"kind":"number","nativeSrc":"11526:3:22","nodeType":"YulLiteral","src":"11526:3:22","type":"","value":"224"},{"kind":"number","nativeSrc":"11531:10:22","nodeType":"YulLiteral","src":"11531:10:22","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nativeSrc":"11522:3:22","nodeType":"YulIdentifier","src":"11522:3:22"},"nativeSrc":"11522:20:22","nodeType":"YulFunctionCall","src":"11522:20:22"}],"functionName":{"name":"mstore","nativeSrc":"11512:6:22","nodeType":"YulIdentifier","src":"11512:6:22"},"nativeSrc":"11512:31:22","nodeType":"YulFunctionCall","src":"11512:31:22"},"nativeSrc":"11512:31:22","nodeType":"YulExpressionStatement","src":"11512:31:22"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"11563:1:22","nodeType":"YulLiteral","src":"11563:1:22","type":"","value":"4"},{"kind":"number","nativeSrc":"11566:4:22","nodeType":"YulLiteral","src":"11566:4:22","type":"","value":"0x22"}],"functionName":{"name":"mstore","nativeSrc":"11556:6:22","nodeType":"YulIdentifier","src":"11556:6:22"},"nativeSrc":"11556:15:22","nodeType":"YulFunctionCall","src":"11556:15:22"},"nativeSrc":"11556:15:22","nodeType":"YulExpressionStatement","src":"11556:15:22"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"11591:1:22","nodeType":"YulLiteral","src":"11591:1:22","type":"","value":"0"},{"kind":"number","nativeSrc":"11594:4:22","nodeType":"YulLiteral","src":"11594:4:22","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"11584:6:22","nodeType":"YulIdentifier","src":"11584:6:22"},"nativeSrc":"11584:15:22","nodeType":"YulFunctionCall","src":"11584:15:22"},"nativeSrc":"11584:15:22","nodeType":"YulExpressionStatement","src":"11584:15:22"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nativeSrc":"11454:18:22","nodeType":"YulIdentifier","src":"11454:18:22"},{"arguments":[{"name":"length","nativeSrc":"11477:6:22","nodeType":"YulIdentifier","src":"11477:6:22"},{"kind":"number","nativeSrc":"11485:2:22","nodeType":"YulLiteral","src":"11485:2:22","type":"","value":"32"}],"functionName":{"name":"lt","nativeSrc":"11474:2:22","nodeType":"YulIdentifier","src":"11474:2:22"},"nativeSrc":"11474:14:22","nodeType":"YulFunctionCall","src":"11474:14:22"}],"functionName":{"name":"eq","nativeSrc":"11451:2:22","nodeType":"YulIdentifier","src":"11451:2:22"},"nativeSrc":"11451:38:22","nodeType":"YulFunctionCall","src":"11451:38:22"},"nativeSrc":"11448:161:22","nodeType":"YulIf","src":"11448:161:22"}]},"name":"extract_byte_array_length","nativeSrc":"11235:380:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nativeSrc":"11270:4:22","nodeType":"YulTypedName","src":"11270:4:22","type":""}],"returnVariables":[{"name":"length","nativeSrc":"11279:6:22","nodeType":"YulTypedName","src":"11279:6:22","type":""}],"src":"11235:380:22"},{"body":{"nativeSrc":"11777:214:22","nodeType":"YulBlock","src":"11777:214:22","statements":[{"nativeSrc":"11787:26:22","nodeType":"YulAssignment","src":"11787:26:22","value":{"arguments":[{"name":"headStart","nativeSrc":"11799:9:22","nodeType":"YulIdentifier","src":"11799:9:22"},{"kind":"number","nativeSrc":"11810:2:22","nodeType":"YulLiteral","src":"11810:2:22","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"11795:3:22","nodeType":"YulIdentifier","src":"11795:3:22"},"nativeSrc":"11795:18:22","nodeType":"YulFunctionCall","src":"11795:18:22"},"variableNames":[{"name":"tail","nativeSrc":"11787:4:22","nodeType":"YulIdentifier","src":"11787:4:22"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"11829:9:22","nodeType":"YulIdentifier","src":"11829:9:22"},{"arguments":[{"name":"value0","nativeSrc":"11844:6:22","nodeType":"YulIdentifier","src":"11844:6:22"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"11860:3:22","nodeType":"YulLiteral","src":"11860:3:22","type":"","value":"160"},{"kind":"number","nativeSrc":"11865:1:22","nodeType":"YulLiteral","src":"11865:1:22","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"11856:3:22","nodeType":"YulIdentifier","src":"11856:3:22"},"nativeSrc":"11856:11:22","nodeType":"YulFunctionCall","src":"11856:11:22"},{"kind":"number","nativeSrc":"11869:1:22","nodeType":"YulLiteral","src":"11869:1:22","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"11852:3:22","nodeType":"YulIdentifier","src":"11852:3:22"},"nativeSrc":"11852:19:22","nodeType":"YulFunctionCall","src":"11852:19:22"}],"functionName":{"name":"and","nativeSrc":"11840:3:22","nodeType":"YulIdentifier","src":"11840:3:22"},"nativeSrc":"11840:32:22","nodeType":"YulFunctionCall","src":"11840:32:22"}],"functionName":{"name":"mstore","nativeSrc":"11822:6:22","nodeType":"YulIdentifier","src":"11822:6:22"},"nativeSrc":"11822:51:22","nodeType":"YulFunctionCall","src":"11822:51:22"},"nativeSrc":"11822:51:22","nodeType":"YulExpressionStatement","src":"11822:51:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"11893:9:22","nodeType":"YulIdentifier","src":"11893:9:22"},{"kind":"number","nativeSrc":"11904:2:22","nodeType":"YulLiteral","src":"11904:2:22","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"11889:3:22","nodeType":"YulIdentifier","src":"11889:3:22"},"nativeSrc":"11889:18:22","nodeType":"YulFunctionCall","src":"11889:18:22"},{"name":"value1","nativeSrc":"11909:6:22","nodeType":"YulIdentifier","src":"11909:6:22"}],"functionName":{"name":"mstore","nativeSrc":"11882:6:22","nodeType":"YulIdentifier","src":"11882:6:22"},"nativeSrc":"11882:34:22","nodeType":"YulFunctionCall","src":"11882:34:22"},"nativeSrc":"11882:34:22","nodeType":"YulExpressionStatement","src":"11882:34:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"11936:9:22","nodeType":"YulIdentifier","src":"11936:9:22"},{"kind":"number","nativeSrc":"11947:2:22","nodeType":"YulLiteral","src":"11947:2:22","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"11932:3:22","nodeType":"YulIdentifier","src":"11932:3:22"},"nativeSrc":"11932:18:22","nodeType":"YulFunctionCall","src":"11932:18:22"},{"arguments":[{"name":"value2","nativeSrc":"11956:6:22","nodeType":"YulIdentifier","src":"11956:6:22"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"11972:3:22","nodeType":"YulLiteral","src":"11972:3:22","type":"","value":"160"},{"kind":"number","nativeSrc":"11977:1:22","nodeType":"YulLiteral","src":"11977:1:22","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"11968:3:22","nodeType":"YulIdentifier","src":"11968:3:22"},"nativeSrc":"11968:11:22","nodeType":"YulFunctionCall","src":"11968:11:22"},{"kind":"number","nativeSrc":"11981:1:22","nodeType":"YulLiteral","src":"11981:1:22","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"11964:3:22","nodeType":"YulIdentifier","src":"11964:3:22"},"nativeSrc":"11964:19:22","nodeType":"YulFunctionCall","src":"11964:19:22"}],"functionName":{"name":"and","nativeSrc":"11952:3:22","nodeType":"YulIdentifier","src":"11952:3:22"},"nativeSrc":"11952:32:22","nodeType":"YulFunctionCall","src":"11952:32:22"}],"functionName":{"name":"mstore","nativeSrc":"11925:6:22","nodeType":"YulIdentifier","src":"11925:6:22"},"nativeSrc":"11925:60:22","nodeType":"YulFunctionCall","src":"11925:60:22"},"nativeSrc":"11925:60:22","nodeType":"YulExpressionStatement","src":"11925:60:22"}]},"name":"abi_encode_tuple_t_address_t_uint256_t_address__to_t_address_t_uint256_t_address__fromStack_reversed","nativeSrc":"11620:371:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"11730:9:22","nodeType":"YulTypedName","src":"11730:9:22","type":""},{"name":"value2","nativeSrc":"11741:6:22","nodeType":"YulTypedName","src":"11741:6:22","type":""},{"name":"value1","nativeSrc":"11749:6:22","nodeType":"YulTypedName","src":"11749:6:22","type":""},{"name":"value0","nativeSrc":"11757:6:22","nodeType":"YulTypedName","src":"11757:6:22","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"11768:4:22","nodeType":"YulTypedName","src":"11768:4:22","type":""}],"src":"11620:371:22"},{"body":{"nativeSrc":"12145:124:22","nodeType":"YulBlock","src":"12145:124:22","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"12168:3:22","nodeType":"YulIdentifier","src":"12168:3:22"},{"name":"value0","nativeSrc":"12173:6:22","nodeType":"YulIdentifier","src":"12173:6:22"},{"name":"value1","nativeSrc":"12181:6:22","nodeType":"YulIdentifier","src":"12181:6:22"}],"functionName":{"name":"calldatacopy","nativeSrc":"12155:12:22","nodeType":"YulIdentifier","src":"12155:12:22"},"nativeSrc":"12155:33:22","nodeType":"YulFunctionCall","src":"12155:33:22"},"nativeSrc":"12155:33:22","nodeType":"YulExpressionStatement","src":"12155:33:22"},{"nativeSrc":"12197:26:22","nodeType":"YulVariableDeclaration","src":"12197:26:22","value":{"arguments":[{"name":"pos","nativeSrc":"12211:3:22","nodeType":"YulIdentifier","src":"12211:3:22"},{"name":"value1","nativeSrc":"12216:6:22","nodeType":"YulIdentifier","src":"12216:6:22"}],"functionName":{"name":"add","nativeSrc":"12207:3:22","nodeType":"YulIdentifier","src":"12207:3:22"},"nativeSrc":"12207:16:22","nodeType":"YulFunctionCall","src":"12207:16:22"},"variables":[{"name":"_1","nativeSrc":"12201:2:22","nodeType":"YulTypedName","src":"12201:2:22","type":""}]},{"expression":{"arguments":[{"name":"_1","nativeSrc":"12239:2:22","nodeType":"YulIdentifier","src":"12239:2:22"},{"kind":"number","nativeSrc":"12243:1:22","nodeType":"YulLiteral","src":"12243:1:22","type":"","value":"0"}],"functionName":{"name":"mstore","nativeSrc":"12232:6:22","nodeType":"YulIdentifier","src":"12232:6:22"},"nativeSrc":"12232:13:22","nodeType":"YulFunctionCall","src":"12232:13:22"},"nativeSrc":"12232:13:22","nodeType":"YulExpressionStatement","src":"12232:13:22"},{"nativeSrc":"12254:9:22","nodeType":"YulAssignment","src":"12254:9:22","value":{"name":"_1","nativeSrc":"12261:2:22","nodeType":"YulIdentifier","src":"12261:2:22"},"variableNames":[{"name":"end","nativeSrc":"12254:3:22","nodeType":"YulIdentifier","src":"12254:3:22"}]}]},"name":"abi_encode_tuple_packed_t_string_calldata_ptr__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed","nativeSrc":"11996:273:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"12113:3:22","nodeType":"YulTypedName","src":"12113:3:22","type":""},{"name":"value1","nativeSrc":"12118:6:22","nodeType":"YulTypedName","src":"12118:6:22","type":""},{"name":"value0","nativeSrc":"12126:6:22","nodeType":"YulTypedName","src":"12126:6:22","type":""}],"returnVariables":[{"name":"end","nativeSrc":"12137:3:22","nodeType":"YulTypedName","src":"12137:3:22","type":""}],"src":"11996:273:22"},{"body":{"nativeSrc":"12448:174:22","nodeType":"YulBlock","src":"12448:174:22","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"12465:9:22","nodeType":"YulIdentifier","src":"12465:9:22"},{"kind":"number","nativeSrc":"12476:2:22","nodeType":"YulLiteral","src":"12476:2:22","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"12458:6:22","nodeType":"YulIdentifier","src":"12458:6:22"},"nativeSrc":"12458:21:22","nodeType":"YulFunctionCall","src":"12458:21:22"},"nativeSrc":"12458:21:22","nodeType":"YulExpressionStatement","src":"12458:21:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"12499:9:22","nodeType":"YulIdentifier","src":"12499:9:22"},{"kind":"number","nativeSrc":"12510:2:22","nodeType":"YulLiteral","src":"12510:2:22","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"12495:3:22","nodeType":"YulIdentifier","src":"12495:3:22"},"nativeSrc":"12495:18:22","nodeType":"YulFunctionCall","src":"12495:18:22"},{"kind":"number","nativeSrc":"12515:2:22","nodeType":"YulLiteral","src":"12515:2:22","type":"","value":"24"}],"functionName":{"name":"mstore","nativeSrc":"12488:6:22","nodeType":"YulIdentifier","src":"12488:6:22"},"nativeSrc":"12488:30:22","nodeType":"YulFunctionCall","src":"12488:30:22"},"nativeSrc":"12488:30:22","nodeType":"YulExpressionStatement","src":"12488:30:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"12538:9:22","nodeType":"YulIdentifier","src":"12538:9:22"},{"kind":"number","nativeSrc":"12549:2:22","nodeType":"YulLiteral","src":"12549:2:22","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"12534:3:22","nodeType":"YulIdentifier","src":"12534:3:22"},"nativeSrc":"12534:18:22","nodeType":"YulFunctionCall","src":"12534:18:22"},{"hexValue":"436f617374657220616c7265616479207363616e6e65642e","kind":"string","nativeSrc":"12554:26:22","nodeType":"YulLiteral","src":"12554:26:22","type":"","value":"Coaster already scanned."}],"functionName":{"name":"mstore","nativeSrc":"12527:6:22","nodeType":"YulIdentifier","src":"12527:6:22"},"nativeSrc":"12527:54:22","nodeType":"YulFunctionCall","src":"12527:54:22"},"nativeSrc":"12527:54:22","nodeType":"YulExpressionStatement","src":"12527:54:22"},{"nativeSrc":"12590:26:22","nodeType":"YulAssignment","src":"12590:26:22","value":{"arguments":[{"name":"headStart","nativeSrc":"12602:9:22","nodeType":"YulIdentifier","src":"12602:9:22"},{"kind":"number","nativeSrc":"12613:2:22","nodeType":"YulLiteral","src":"12613:2:22","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"12598:3:22","nodeType":"YulIdentifier","src":"12598:3:22"},"nativeSrc":"12598:18:22","nodeType":"YulFunctionCall","src":"12598:18:22"},"variableNames":[{"name":"tail","nativeSrc":"12590:4:22","nodeType":"YulIdentifier","src":"12590:4:22"}]}]},"name":"abi_encode_tuple_t_stringliteral_6397d8391ec10cb4049b569dd407a6acb94a7aa795742ed7e668b1eed10eab04__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"12274:348:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"12425:9:22","nodeType":"YulTypedName","src":"12425:9:22","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"12439:4:22","nodeType":"YulTypedName","src":"12439:4:22","type":""}],"src":"12274:348:22"},{"body":{"nativeSrc":"12801:224:22","nodeType":"YulBlock","src":"12801:224:22","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"12818:9:22","nodeType":"YulIdentifier","src":"12818:9:22"},{"kind":"number","nativeSrc":"12829:2:22","nodeType":"YulLiteral","src":"12829:2:22","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"12811:6:22","nodeType":"YulIdentifier","src":"12811:6:22"},"nativeSrc":"12811:21:22","nodeType":"YulFunctionCall","src":"12811:21:22"},"nativeSrc":"12811:21:22","nodeType":"YulExpressionStatement","src":"12811:21:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"12852:9:22","nodeType":"YulIdentifier","src":"12852:9:22"},{"kind":"number","nativeSrc":"12863:2:22","nodeType":"YulLiteral","src":"12863:2:22","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"12848:3:22","nodeType":"YulIdentifier","src":"12848:3:22"},"nativeSrc":"12848:18:22","nodeType":"YulFunctionCall","src":"12848:18:22"},{"kind":"number","nativeSrc":"12868:2:22","nodeType":"YulLiteral","src":"12868:2:22","type":"","value":"34"}],"functionName":{"name":"mstore","nativeSrc":"12841:6:22","nodeType":"YulIdentifier","src":"12841:6:22"},"nativeSrc":"12841:30:22","nodeType":"YulFunctionCall","src":"12841:30:22"},"nativeSrc":"12841:30:22","nodeType":"YulExpressionStatement","src":"12841:30:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"12891:9:22","nodeType":"YulIdentifier","src":"12891:9:22"},{"kind":"number","nativeSrc":"12902:2:22","nodeType":"YulLiteral","src":"12902:2:22","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"12887:3:22","nodeType":"YulIdentifier","src":"12887:3:22"},"nativeSrc":"12887:18:22","nodeType":"YulFunctionCall","src":"12887:18:22"},{"hexValue":"596f752063616e206e6f74207363616e20796f7572206f776e20436f61737465","kind":"string","nativeSrc":"12907:34:22","nodeType":"YulLiteral","src":"12907:34:22","type":"","value":"You can not scan your own Coaste"}],"functionName":{"name":"mstore","nativeSrc":"12880:6:22","nodeType":"YulIdentifier","src":"12880:6:22"},"nativeSrc":"12880:62:22","nodeType":"YulFunctionCall","src":"12880:62:22"},"nativeSrc":"12880:62:22","nodeType":"YulExpressionStatement","src":"12880:62:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"12962:9:22","nodeType":"YulIdentifier","src":"12962:9:22"},{"kind":"number","nativeSrc":"12973:2:22","nodeType":"YulLiteral","src":"12973:2:22","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"12958:3:22","nodeType":"YulIdentifier","src":"12958:3:22"},"nativeSrc":"12958:18:22","nodeType":"YulFunctionCall","src":"12958:18:22"},{"hexValue":"722e","kind":"string","nativeSrc":"12978:4:22","nodeType":"YulLiteral","src":"12978:4:22","type":"","value":"r."}],"functionName":{"name":"mstore","nativeSrc":"12951:6:22","nodeType":"YulIdentifier","src":"12951:6:22"},"nativeSrc":"12951:32:22","nodeType":"YulFunctionCall","src":"12951:32:22"},"nativeSrc":"12951:32:22","nodeType":"YulExpressionStatement","src":"12951:32:22"},{"nativeSrc":"12992:27:22","nodeType":"YulAssignment","src":"12992:27:22","value":{"arguments":[{"name":"headStart","nativeSrc":"13004:9:22","nodeType":"YulIdentifier","src":"13004:9:22"},{"kind":"number","nativeSrc":"13015:3:22","nodeType":"YulLiteral","src":"13015:3:22","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"13000:3:22","nodeType":"YulIdentifier","src":"13000:3:22"},"nativeSrc":"13000:19:22","nodeType":"YulFunctionCall","src":"13000:19:22"},"variableNames":[{"name":"tail","nativeSrc":"12992:4:22","nodeType":"YulIdentifier","src":"12992:4:22"}]}]},"name":"abi_encode_tuple_t_stringliteral_a60f8625a5ac2a62e25d3594e822288b44825183565533b1d915245d8c386ead__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"12627:398:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"12778:9:22","nodeType":"YulTypedName","src":"12778:9:22","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"12792:4:22","nodeType":"YulTypedName","src":"12792:4:22","type":""}],"src":"12627:398:22"},{"body":{"nativeSrc":"13111:103:22","nodeType":"YulBlock","src":"13111:103:22","statements":[{"body":{"nativeSrc":"13157:16:22","nodeType":"YulBlock","src":"13157:16:22","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"13166:1:22","nodeType":"YulLiteral","src":"13166:1:22","type":"","value":"0"},{"kind":"number","nativeSrc":"13169:1:22","nodeType":"YulLiteral","src":"13169:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"13159:6:22","nodeType":"YulIdentifier","src":"13159:6:22"},"nativeSrc":"13159:12:22","nodeType":"YulFunctionCall","src":"13159:12:22"},"nativeSrc":"13159:12:22","nodeType":"YulExpressionStatement","src":"13159:12:22"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"13132:7:22","nodeType":"YulIdentifier","src":"13132:7:22"},{"name":"headStart","nativeSrc":"13141:9:22","nodeType":"YulIdentifier","src":"13141:9:22"}],"functionName":{"name":"sub","nativeSrc":"13128:3:22","nodeType":"YulIdentifier","src":"13128:3:22"},"nativeSrc":"13128:23:22","nodeType":"YulFunctionCall","src":"13128:23:22"},{"kind":"number","nativeSrc":"13153:2:22","nodeType":"YulLiteral","src":"13153:2:22","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"13124:3:22","nodeType":"YulIdentifier","src":"13124:3:22"},"nativeSrc":"13124:32:22","nodeType":"YulFunctionCall","src":"13124:32:22"},"nativeSrc":"13121:52:22","nodeType":"YulIf","src":"13121:52:22"},{"nativeSrc":"13182:26:22","nodeType":"YulAssignment","src":"13182:26:22","value":{"arguments":[{"name":"headStart","nativeSrc":"13198:9:22","nodeType":"YulIdentifier","src":"13198:9:22"}],"functionName":{"name":"mload","nativeSrc":"13192:5:22","nodeType":"YulIdentifier","src":"13192:5:22"},"nativeSrc":"13192:16:22","nodeType":"YulFunctionCall","src":"13192:16:22"},"variableNames":[{"name":"value0","nativeSrc":"13182:6:22","nodeType":"YulIdentifier","src":"13182:6:22"}]}]},"name":"abi_decode_tuple_t_uint256_fromMemory","nativeSrc":"13030:184:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"13077:9:22","nodeType":"YulTypedName","src":"13077:9:22","type":""},{"name":"dataEnd","nativeSrc":"13088:7:22","nodeType":"YulTypedName","src":"13088:7:22","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"13100:6:22","nodeType":"YulTypedName","src":"13100:6:22","type":""}],"src":"13030:184:22"},{"body":{"nativeSrc":"13393:171:22","nodeType":"YulBlock","src":"13393:171:22","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"13410:9:22","nodeType":"YulIdentifier","src":"13410:9:22"},{"kind":"number","nativeSrc":"13421:2:22","nodeType":"YulLiteral","src":"13421:2:22","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"13403:6:22","nodeType":"YulIdentifier","src":"13403:6:22"},"nativeSrc":"13403:21:22","nodeType":"YulFunctionCall","src":"13403:21:22"},"nativeSrc":"13403:21:22","nodeType":"YulExpressionStatement","src":"13403:21:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"13444:9:22","nodeType":"YulIdentifier","src":"13444:9:22"},{"kind":"number","nativeSrc":"13455:2:22","nodeType":"YulLiteral","src":"13455:2:22","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"13440:3:22","nodeType":"YulIdentifier","src":"13440:3:22"},"nativeSrc":"13440:18:22","nodeType":"YulFunctionCall","src":"13440:18:22"},{"kind":"number","nativeSrc":"13460:2:22","nodeType":"YulLiteral","src":"13460:2:22","type":"","value":"21"}],"functionName":{"name":"mstore","nativeSrc":"13433:6:22","nodeType":"YulIdentifier","src":"13433:6:22"},"nativeSrc":"13433:30:22","nodeType":"YulFunctionCall","src":"13433:30:22"},"nativeSrc":"13433:30:22","nodeType":"YulExpressionStatement","src":"13433:30:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"13483:9:22","nodeType":"YulIdentifier","src":"13483:9:22"},{"kind":"number","nativeSrc":"13494:2:22","nodeType":"YulLiteral","src":"13494:2:22","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"13479:3:22","nodeType":"YulIdentifier","src":"13479:3:22"},"nativeSrc":"13479:18:22","nodeType":"YulFunctionCall","src":"13479:18:22"},{"hexValue":"496e76616c69642075736572206163636f756e742e","kind":"string","nativeSrc":"13499:23:22","nodeType":"YulLiteral","src":"13499:23:22","type":"","value":"Invalid user account."}],"functionName":{"name":"mstore","nativeSrc":"13472:6:22","nodeType":"YulIdentifier","src":"13472:6:22"},"nativeSrc":"13472:51:22","nodeType":"YulFunctionCall","src":"13472:51:22"},"nativeSrc":"13472:51:22","nodeType":"YulExpressionStatement","src":"13472:51:22"},{"nativeSrc":"13532:26:22","nodeType":"YulAssignment","src":"13532:26:22","value":{"arguments":[{"name":"headStart","nativeSrc":"13544:9:22","nodeType":"YulIdentifier","src":"13544:9:22"},{"kind":"number","nativeSrc":"13555:2:22","nodeType":"YulLiteral","src":"13555:2:22","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"13540:3:22","nodeType":"YulIdentifier","src":"13540:3:22"},"nativeSrc":"13540:18:22","nodeType":"YulFunctionCall","src":"13540:18:22"},"variableNames":[{"name":"tail","nativeSrc":"13532:4:22","nodeType":"YulIdentifier","src":"13532:4:22"}]}]},"name":"abi_encode_tuple_t_stringliteral_38b84b28ce7f687a4159aa3c3ed79b1bf1faf0b83ba6e19eed8306e5b73a5699__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"13219:345:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"13370:9:22","nodeType":"YulTypedName","src":"13370:9:22","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"13384:4:22","nodeType":"YulTypedName","src":"13384:4:22","type":""}],"src":"13219:345:22"},{"body":{"nativeSrc":"13743:253:22","nodeType":"YulBlock","src":"13743:253:22","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"13760:9:22","nodeType":"YulIdentifier","src":"13760:9:22"},{"kind":"number","nativeSrc":"13771:2:22","nodeType":"YulLiteral","src":"13771:2:22","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"13753:6:22","nodeType":"YulIdentifier","src":"13753:6:22"},"nativeSrc":"13753:21:22","nodeType":"YulFunctionCall","src":"13753:21:22"},"nativeSrc":"13753:21:22","nodeType":"YulExpressionStatement","src":"13753:21:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"13794:9:22","nodeType":"YulIdentifier","src":"13794:9:22"},{"kind":"number","nativeSrc":"13805:2:22","nodeType":"YulLiteral","src":"13805:2:22","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"13790:3:22","nodeType":"YulIdentifier","src":"13790:3:22"},"nativeSrc":"13790:18:22","nodeType":"YulFunctionCall","src":"13790:18:22"},{"kind":"number","nativeSrc":"13810:2:22","nodeType":"YulLiteral","src":"13810:2:22","type":"","value":"63"}],"functionName":{"name":"mstore","nativeSrc":"13783:6:22","nodeType":"YulIdentifier","src":"13783:6:22"},"nativeSrc":"13783:30:22","nodeType":"YulFunctionCall","src":"13783:30:22"},"nativeSrc":"13783:30:22","nodeType":"YulExpressionStatement","src":"13783:30:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"13833:9:22","nodeType":"YulIdentifier","src":"13833:9:22"},{"kind":"number","nativeSrc":"13844:2:22","nodeType":"YulLiteral","src":"13844:2:22","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"13829:3:22","nodeType":"YulIdentifier","src":"13829:3:22"},"nativeSrc":"13829:18:22","nodeType":"YulFunctionCall","src":"13829:18:22"},{"hexValue":"596f752068617665207265616368656420796f7572206461696c79206c696d69","kind":"string","nativeSrc":"13849:34:22","nodeType":"YulLiteral","src":"13849:34:22","type":"","value":"You have reached your daily limi"}],"functionName":{"name":"mstore","nativeSrc":"13822:6:22","nodeType":"YulIdentifier","src":"13822:6:22"},"nativeSrc":"13822:62:22","nodeType":"YulFunctionCall","src":"13822:62:22"},"nativeSrc":"13822:62:22","nodeType":"YulExpressionStatement","src":"13822:62:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"13904:9:22","nodeType":"YulIdentifier","src":"13904:9:22"},{"kind":"number","nativeSrc":"13915:2:22","nodeType":"YulLiteral","src":"13915:2:22","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"13900:3:22","nodeType":"YulIdentifier","src":"13900:3:22"},"nativeSrc":"13900:18:22","nodeType":"YulFunctionCall","src":"13900:18:22"},{"hexValue":"74206f66207363616e732e2054727920616761696e20746f6d6f72726f772e","kind":"string","nativeSrc":"13920:33:22","nodeType":"YulLiteral","src":"13920:33:22","type":"","value":"t of scans. Try again tomorrow."}],"functionName":{"name":"mstore","nativeSrc":"13893:6:22","nodeType":"YulIdentifier","src":"13893:6:22"},"nativeSrc":"13893:61:22","nodeType":"YulFunctionCall","src":"13893:61:22"},"nativeSrc":"13893:61:22","nodeType":"YulExpressionStatement","src":"13893:61:22"},{"nativeSrc":"13963:27:22","nodeType":"YulAssignment","src":"13963:27:22","value":{"arguments":[{"name":"headStart","nativeSrc":"13975:9:22","nodeType":"YulIdentifier","src":"13975:9:22"},{"kind":"number","nativeSrc":"13986:3:22","nodeType":"YulLiteral","src":"13986:3:22","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"13971:3:22","nodeType":"YulIdentifier","src":"13971:3:22"},"nativeSrc":"13971:19:22","nodeType":"YulFunctionCall","src":"13971:19:22"},"variableNames":[{"name":"tail","nativeSrc":"13963:4:22","nodeType":"YulIdentifier","src":"13963:4:22"}]}]},"name":"abi_encode_tuple_t_stringliteral_12de7e57f38ef3cb4742b8103ea2bfd9784ae418ac798dfc74c2fb64d1412e2f__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"13569:427:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"13720:9:22","nodeType":"YulTypedName","src":"13720:9:22","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"13734:4:22","nodeType":"YulTypedName","src":"13734:4:22","type":""}],"src":"13569:427:22"},{"body":{"nativeSrc":"14068:200:22","nodeType":"YulBlock","src":"14068:200:22","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"14085:3:22","nodeType":"YulIdentifier","src":"14085:3:22"},{"name":"length","nativeSrc":"14090:6:22","nodeType":"YulIdentifier","src":"14090:6:22"}],"functionName":{"name":"mstore","nativeSrc":"14078:6:22","nodeType":"YulIdentifier","src":"14078:6:22"},"nativeSrc":"14078:19:22","nodeType":"YulFunctionCall","src":"14078:19:22"},"nativeSrc":"14078:19:22","nodeType":"YulExpressionStatement","src":"14078:19:22"},{"expression":{"arguments":[{"arguments":[{"name":"pos","nativeSrc":"14123:3:22","nodeType":"YulIdentifier","src":"14123:3:22"},{"kind":"number","nativeSrc":"14128:4:22","nodeType":"YulLiteral","src":"14128:4:22","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"14119:3:22","nodeType":"YulIdentifier","src":"14119:3:22"},"nativeSrc":"14119:14:22","nodeType":"YulFunctionCall","src":"14119:14:22"},{"name":"start","nativeSrc":"14135:5:22","nodeType":"YulIdentifier","src":"14135:5:22"},{"name":"length","nativeSrc":"14142:6:22","nodeType":"YulIdentifier","src":"14142:6:22"}],"functionName":{"name":"calldatacopy","nativeSrc":"14106:12:22","nodeType":"YulIdentifier","src":"14106:12:22"},"nativeSrc":"14106:43:22","nodeType":"YulFunctionCall","src":"14106:43:22"},"nativeSrc":"14106:43:22","nodeType":"YulExpressionStatement","src":"14106:43:22"},{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"pos","nativeSrc":"14173:3:22","nodeType":"YulIdentifier","src":"14173:3:22"},{"name":"length","nativeSrc":"14178:6:22","nodeType":"YulIdentifier","src":"14178:6:22"}],"functionName":{"name":"add","nativeSrc":"14169:3:22","nodeType":"YulIdentifier","src":"14169:3:22"},"nativeSrc":"14169:16:22","nodeType":"YulFunctionCall","src":"14169:16:22"},{"kind":"number","nativeSrc":"14187:4:22","nodeType":"YulLiteral","src":"14187:4:22","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"14165:3:22","nodeType":"YulIdentifier","src":"14165:3:22"},"nativeSrc":"14165:27:22","nodeType":"YulFunctionCall","src":"14165:27:22"},{"kind":"number","nativeSrc":"14194:1:22","nodeType":"YulLiteral","src":"14194:1:22","type":"","value":"0"}],"functionName":{"name":"mstore","nativeSrc":"14158:6:22","nodeType":"YulIdentifier","src":"14158:6:22"},"nativeSrc":"14158:38:22","nodeType":"YulFunctionCall","src":"14158:38:22"},"nativeSrc":"14158:38:22","nodeType":"YulExpressionStatement","src":"14158:38:22"},{"nativeSrc":"14205:57:22","nodeType":"YulAssignment","src":"14205:57:22","value":{"arguments":[{"arguments":[{"name":"pos","nativeSrc":"14220:3:22","nodeType":"YulIdentifier","src":"14220:3:22"},{"arguments":[{"arguments":[{"name":"length","nativeSrc":"14233:6:22","nodeType":"YulIdentifier","src":"14233:6:22"},{"kind":"number","nativeSrc":"14241:2:22","nodeType":"YulLiteral","src":"14241:2:22","type":"","value":"31"}],"functionName":{"name":"add","nativeSrc":"14229:3:22","nodeType":"YulIdentifier","src":"14229:3:22"},"nativeSrc":"14229:15:22","nodeType":"YulFunctionCall","src":"14229:15:22"},{"arguments":[{"kind":"number","nativeSrc":"14250:2:22","nodeType":"YulLiteral","src":"14250:2:22","type":"","value":"31"}],"functionName":{"name":"not","nativeSrc":"14246:3:22","nodeType":"YulIdentifier","src":"14246:3:22"},"nativeSrc":"14246:7:22","nodeType":"YulFunctionCall","src":"14246:7:22"}],"functionName":{"name":"and","nativeSrc":"14225:3:22","nodeType":"YulIdentifier","src":"14225:3:22"},"nativeSrc":"14225:29:22","nodeType":"YulFunctionCall","src":"14225:29:22"}],"functionName":{"name":"add","nativeSrc":"14216:3:22","nodeType":"YulIdentifier","src":"14216:3:22"},"nativeSrc":"14216:39:22","nodeType":"YulFunctionCall","src":"14216:39:22"},{"kind":"number","nativeSrc":"14257:4:22","nodeType":"YulLiteral","src":"14257:4:22","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"14212:3:22","nodeType":"YulIdentifier","src":"14212:3:22"},"nativeSrc":"14212:50:22","nodeType":"YulFunctionCall","src":"14212:50:22"},"variableNames":[{"name":"end","nativeSrc":"14205:3:22","nodeType":"YulIdentifier","src":"14205:3:22"}]}]},"name":"abi_encode_string_calldata","nativeSrc":"14001:267:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"start","nativeSrc":"14037:5:22","nodeType":"YulTypedName","src":"14037:5:22","type":""},{"name":"length","nativeSrc":"14044:6:22","nodeType":"YulTypedName","src":"14044:6:22","type":""},{"name":"pos","nativeSrc":"14052:3:22","nodeType":"YulTypedName","src":"14052:3:22","type":""}],"returnVariables":[{"name":"end","nativeSrc":"14060:3:22","nodeType":"YulTypedName","src":"14060:3:22","type":""}],"src":"14001:267:22"},{"body":{"nativeSrc":"14404:116:22","nodeType":"YulBlock","src":"14404:116:22","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"14421:9:22","nodeType":"YulIdentifier","src":"14421:9:22"},{"kind":"number","nativeSrc":"14432:2:22","nodeType":"YulLiteral","src":"14432:2:22","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"14414:6:22","nodeType":"YulIdentifier","src":"14414:6:22"},"nativeSrc":"14414:21:22","nodeType":"YulFunctionCall","src":"14414:21:22"},"nativeSrc":"14414:21:22","nodeType":"YulExpressionStatement","src":"14414:21:22"},{"nativeSrc":"14444:70:22","nodeType":"YulAssignment","src":"14444:70:22","value":{"arguments":[{"name":"value0","nativeSrc":"14479:6:22","nodeType":"YulIdentifier","src":"14479:6:22"},{"name":"value1","nativeSrc":"14487:6:22","nodeType":"YulIdentifier","src":"14487:6:22"},{"arguments":[{"name":"headStart","nativeSrc":"14499:9:22","nodeType":"YulIdentifier","src":"14499:9:22"},{"kind":"number","nativeSrc":"14510:2:22","nodeType":"YulLiteral","src":"14510:2:22","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"14495:3:22","nodeType":"YulIdentifier","src":"14495:3:22"},"nativeSrc":"14495:18:22","nodeType":"YulFunctionCall","src":"14495:18:22"}],"functionName":{"name":"abi_encode_string_calldata","nativeSrc":"14452:26:22","nodeType":"YulIdentifier","src":"14452:26:22"},"nativeSrc":"14452:62:22","nodeType":"YulFunctionCall","src":"14452:62:22"},"variableNames":[{"name":"tail","nativeSrc":"14444:4:22","nodeType":"YulIdentifier","src":"14444:4:22"}]}]},"name":"abi_encode_tuple_t_string_calldata_ptr__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"14273:247:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"14365:9:22","nodeType":"YulTypedName","src":"14365:9:22","type":""},{"name":"value1","nativeSrc":"14376:6:22","nodeType":"YulTypedName","src":"14376:6:22","type":""},{"name":"value0","nativeSrc":"14384:6:22","nodeType":"YulTypedName","src":"14384:6:22","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"14395:4:22","nodeType":"YulTypedName","src":"14395:4:22","type":""}],"src":"14273:247:22"},{"body":{"nativeSrc":"14664:150:22","nodeType":"YulBlock","src":"14664:150:22","statements":[{"nativeSrc":"14674:27:22","nodeType":"YulVariableDeclaration","src":"14674:27:22","value":{"arguments":[{"name":"value0","nativeSrc":"14694:6:22","nodeType":"YulIdentifier","src":"14694:6:22"}],"functionName":{"name":"mload","nativeSrc":"14688:5:22","nodeType":"YulIdentifier","src":"14688:5:22"},"nativeSrc":"14688:13:22","nodeType":"YulFunctionCall","src":"14688:13:22"},"variables":[{"name":"length","nativeSrc":"14678:6:22","nodeType":"YulTypedName","src":"14678:6:22","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value0","nativeSrc":"14749:6:22","nodeType":"YulIdentifier","src":"14749:6:22"},{"kind":"number","nativeSrc":"14757:4:22","nodeType":"YulLiteral","src":"14757:4:22","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"14745:3:22","nodeType":"YulIdentifier","src":"14745:3:22"},"nativeSrc":"14745:17:22","nodeType":"YulFunctionCall","src":"14745:17:22"},{"name":"pos","nativeSrc":"14764:3:22","nodeType":"YulIdentifier","src":"14764:3:22"},{"name":"length","nativeSrc":"14769:6:22","nodeType":"YulIdentifier","src":"14769:6:22"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nativeSrc":"14710:34:22","nodeType":"YulIdentifier","src":"14710:34:22"},"nativeSrc":"14710:66:22","nodeType":"YulFunctionCall","src":"14710:66:22"},"nativeSrc":"14710:66:22","nodeType":"YulExpressionStatement","src":"14710:66:22"},{"nativeSrc":"14785:23:22","nodeType":"YulAssignment","src":"14785:23:22","value":{"arguments":[{"name":"pos","nativeSrc":"14796:3:22","nodeType":"YulIdentifier","src":"14796:3:22"},{"name":"length","nativeSrc":"14801:6:22","nodeType":"YulIdentifier","src":"14801:6:22"}],"functionName":{"name":"add","nativeSrc":"14792:3:22","nodeType":"YulIdentifier","src":"14792:3:22"},"nativeSrc":"14792:16:22","nodeType":"YulFunctionCall","src":"14792:16:22"},"variableNames":[{"name":"end","nativeSrc":"14785:3:22","nodeType":"YulIdentifier","src":"14785:3:22"}]}]},"name":"abi_encode_tuple_packed_t_string_memory_ptr__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed","nativeSrc":"14525:289:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"14640:3:22","nodeType":"YulTypedName","src":"14640:3:22","type":""},{"name":"value0","nativeSrc":"14645:6:22","nodeType":"YulTypedName","src":"14645:6:22","type":""}],"returnVariables":[{"name":"end","nativeSrc":"14656:3:22","nodeType":"YulTypedName","src":"14656:3:22","type":""}],"src":"14525:289:22"},{"body":{"nativeSrc":"14993:233:22","nodeType":"YulBlock","src":"14993:233:22","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"15010:9:22","nodeType":"YulIdentifier","src":"15010:9:22"},{"kind":"number","nativeSrc":"15021:2:22","nodeType":"YulLiteral","src":"15021:2:22","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"15003:6:22","nodeType":"YulIdentifier","src":"15003:6:22"},"nativeSrc":"15003:21:22","nodeType":"YulFunctionCall","src":"15003:21:22"},"nativeSrc":"15003:21:22","nodeType":"YulExpressionStatement","src":"15003:21:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"15044:9:22","nodeType":"YulIdentifier","src":"15044:9:22"},{"kind":"number","nativeSrc":"15055:2:22","nodeType":"YulLiteral","src":"15055:2:22","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"15040:3:22","nodeType":"YulIdentifier","src":"15040:3:22"},"nativeSrc":"15040:18:22","nodeType":"YulFunctionCall","src":"15040:18:22"},{"kind":"number","nativeSrc":"15060:2:22","nodeType":"YulLiteral","src":"15060:2:22","type":"","value":"43"}],"functionName":{"name":"mstore","nativeSrc":"15033:6:22","nodeType":"YulIdentifier","src":"15033:6:22"},"nativeSrc":"15033:30:22","nodeType":"YulFunctionCall","src":"15033:30:22"},"nativeSrc":"15033:30:22","nodeType":"YulExpressionStatement","src":"15033:30:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"15083:9:22","nodeType":"YulIdentifier","src":"15083:9:22"},{"kind":"number","nativeSrc":"15094:2:22","nodeType":"YulLiteral","src":"15094:2:22","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"15079:3:22","nodeType":"YulIdentifier","src":"15079:3:22"},"nativeSrc":"15079:18:22","nodeType":"YulFunctionCall","src":"15079:18:22"},{"hexValue":"436f6173746572206173736574206e6f7420666f756e6420696e20796f757220","kind":"string","nativeSrc":"15099:34:22","nodeType":"YulLiteral","src":"15099:34:22","type":"","value":"Coaster asset not found in your "}],"functionName":{"name":"mstore","nativeSrc":"15072:6:22","nodeType":"YulIdentifier","src":"15072:6:22"},"nativeSrc":"15072:62:22","nodeType":"YulFunctionCall","src":"15072:62:22"},"nativeSrc":"15072:62:22","nodeType":"YulExpressionStatement","src":"15072:62:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"15154:9:22","nodeType":"YulIdentifier","src":"15154:9:22"},{"kind":"number","nativeSrc":"15165:2:22","nodeType":"YulLiteral","src":"15165:2:22","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"15150:3:22","nodeType":"YulIdentifier","src":"15150:3:22"},"nativeSrc":"15150:18:22","nodeType":"YulFunctionCall","src":"15150:18:22"},{"hexValue":"636f6c6c656374696f6e2e","kind":"string","nativeSrc":"15170:13:22","nodeType":"YulLiteral","src":"15170:13:22","type":"","value":"collection."}],"functionName":{"name":"mstore","nativeSrc":"15143:6:22","nodeType":"YulIdentifier","src":"15143:6:22"},"nativeSrc":"15143:41:22","nodeType":"YulFunctionCall","src":"15143:41:22"},"nativeSrc":"15143:41:22","nodeType":"YulExpressionStatement","src":"15143:41:22"},{"nativeSrc":"15193:27:22","nodeType":"YulAssignment","src":"15193:27:22","value":{"arguments":[{"name":"headStart","nativeSrc":"15205:9:22","nodeType":"YulIdentifier","src":"15205:9:22"},{"kind":"number","nativeSrc":"15216:3:22","nodeType":"YulLiteral","src":"15216:3:22","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"15201:3:22","nodeType":"YulIdentifier","src":"15201:3:22"},"nativeSrc":"15201:19:22","nodeType":"YulFunctionCall","src":"15201:19:22"},"variableNames":[{"name":"tail","nativeSrc":"15193:4:22","nodeType":"YulIdentifier","src":"15193:4:22"}]}]},"name":"abi_encode_tuple_t_stringliteral_161894f84106194f60134a235ea6785ea039b3b0499813672d7f05567d18263d__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"14819:407:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"14970:9:22","nodeType":"YulTypedName","src":"14970:9:22","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"14984:4:22","nodeType":"YulTypedName","src":"14984:4:22","type":""}],"src":"14819:407:22"},{"body":{"nativeSrc":"15405:172:22","nodeType":"YulBlock","src":"15405:172:22","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"15422:9:22","nodeType":"YulIdentifier","src":"15422:9:22"},{"kind":"number","nativeSrc":"15433:2:22","nodeType":"YulLiteral","src":"15433:2:22","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"15415:6:22","nodeType":"YulIdentifier","src":"15415:6:22"},"nativeSrc":"15415:21:22","nodeType":"YulFunctionCall","src":"15415:21:22"},"nativeSrc":"15415:21:22","nodeType":"YulExpressionStatement","src":"15415:21:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"15456:9:22","nodeType":"YulIdentifier","src":"15456:9:22"},{"kind":"number","nativeSrc":"15467:2:22","nodeType":"YulLiteral","src":"15467:2:22","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"15452:3:22","nodeType":"YulIdentifier","src":"15452:3:22"},"nativeSrc":"15452:18:22","nodeType":"YulFunctionCall","src":"15452:18:22"},{"kind":"number","nativeSrc":"15472:2:22","nodeType":"YulLiteral","src":"15472:2:22","type":"","value":"22"}],"functionName":{"name":"mstore","nativeSrc":"15445:6:22","nodeType":"YulIdentifier","src":"15445:6:22"},"nativeSrc":"15445:30:22","nodeType":"YulFunctionCall","src":"15445:30:22"},"nativeSrc":"15445:30:22","nodeType":"YulExpressionStatement","src":"15445:30:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"15495:9:22","nodeType":"YulIdentifier","src":"15495:9:22"},{"kind":"number","nativeSrc":"15506:2:22","nodeType":"YulLiteral","src":"15506:2:22","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"15491:3:22","nodeType":"YulIdentifier","src":"15491:3:22"},"nativeSrc":"15491:18:22","nodeType":"YulFunctionCall","src":"15491:18:22"},{"hexValue":"436f617374657220616c72656164792065786973742e","kind":"string","nativeSrc":"15511:24:22","nodeType":"YulLiteral","src":"15511:24:22","type":"","value":"Coaster already exist."}],"functionName":{"name":"mstore","nativeSrc":"15484:6:22","nodeType":"YulIdentifier","src":"15484:6:22"},"nativeSrc":"15484:52:22","nodeType":"YulFunctionCall","src":"15484:52:22"},"nativeSrc":"15484:52:22","nodeType":"YulExpressionStatement","src":"15484:52:22"},{"nativeSrc":"15545:26:22","nodeType":"YulAssignment","src":"15545:26:22","value":{"arguments":[{"name":"headStart","nativeSrc":"15557:9:22","nodeType":"YulIdentifier","src":"15557:9:22"},{"kind":"number","nativeSrc":"15568:2:22","nodeType":"YulLiteral","src":"15568:2:22","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"15553:3:22","nodeType":"YulIdentifier","src":"15553:3:22"},"nativeSrc":"15553:18:22","nodeType":"YulFunctionCall","src":"15553:18:22"},"variableNames":[{"name":"tail","nativeSrc":"15545:4:22","nodeType":"YulIdentifier","src":"15545:4:22"}]}]},"name":"abi_encode_tuple_t_stringliteral_374180e2178bd46e20d3ad5ffa47410137636792d207c61c23c6b429c903bad4__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"15231:346:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"15382:9:22","nodeType":"YulTypedName","src":"15382:9:22","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"15396:4:22","nodeType":"YulTypedName","src":"15396:4:22","type":""}],"src":"15231:346:22"},{"body":{"nativeSrc":"15756:171:22","nodeType":"YulBlock","src":"15756:171:22","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"15773:9:22","nodeType":"YulIdentifier","src":"15773:9:22"},{"kind":"number","nativeSrc":"15784:2:22","nodeType":"YulLiteral","src":"15784:2:22","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"15766:6:22","nodeType":"YulIdentifier","src":"15766:6:22"},"nativeSrc":"15766:21:22","nodeType":"YulFunctionCall","src":"15766:21:22"},"nativeSrc":"15766:21:22","nodeType":"YulExpressionStatement","src":"15766:21:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"15807:9:22","nodeType":"YulIdentifier","src":"15807:9:22"},{"kind":"number","nativeSrc":"15818:2:22","nodeType":"YulLiteral","src":"15818:2:22","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"15803:3:22","nodeType":"YulIdentifier","src":"15803:3:22"},"nativeSrc":"15803:18:22","nodeType":"YulFunctionCall","src":"15803:18:22"},{"kind":"number","nativeSrc":"15823:2:22","nodeType":"YulLiteral","src":"15823:2:22","type":"","value":"21"}],"functionName":{"name":"mstore","nativeSrc":"15796:6:22","nodeType":"YulIdentifier","src":"15796:6:22"},"nativeSrc":"15796:30:22","nodeType":"YulFunctionCall","src":"15796:30:22"},"nativeSrc":"15796:30:22","nodeType":"YulExpressionStatement","src":"15796:30:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"15846:9:22","nodeType":"YulIdentifier","src":"15846:9:22"},{"kind":"number","nativeSrc":"15857:2:22","nodeType":"YulLiteral","src":"15857:2:22","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"15842:3:22","nodeType":"YulIdentifier","src":"15842:3:22"},"nativeSrc":"15842:18:22","nodeType":"YulFunctionCall","src":"15842:18:22"},{"hexValue":"496e73756666696369656e742062616c616e63652e","kind":"string","nativeSrc":"15862:23:22","nodeType":"YulLiteral","src":"15862:23:22","type":"","value":"Insufficient balance."}],"functionName":{"name":"mstore","nativeSrc":"15835:6:22","nodeType":"YulIdentifier","src":"15835:6:22"},"nativeSrc":"15835:51:22","nodeType":"YulFunctionCall","src":"15835:51:22"},"nativeSrc":"15835:51:22","nodeType":"YulExpressionStatement","src":"15835:51:22"},{"nativeSrc":"15895:26:22","nodeType":"YulAssignment","src":"15895:26:22","value":{"arguments":[{"name":"headStart","nativeSrc":"15907:9:22","nodeType":"YulIdentifier","src":"15907:9:22"},{"kind":"number","nativeSrc":"15918:2:22","nodeType":"YulLiteral","src":"15918:2:22","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"15903:3:22","nodeType":"YulIdentifier","src":"15903:3:22"},"nativeSrc":"15903:18:22","nodeType":"YulFunctionCall","src":"15903:18:22"},"variableNames":[{"name":"tail","nativeSrc":"15895:4:22","nodeType":"YulIdentifier","src":"15895:4:22"}]}]},"name":"abi_encode_tuple_t_stringliteral_7572e40391d07d4b91d51e72cb8caa5f33f56b2b616c219ac11e2b95b18edce9__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"15582:345:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"15733:9:22","nodeType":"YulTypedName","src":"15733:9:22","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"15747:4:22","nodeType":"YulTypedName","src":"15747:4:22","type":""}],"src":"15582:345:22"},{"body":{"nativeSrc":"15979:185:22","nodeType":"YulBlock","src":"15979:185:22","statements":[{"body":{"nativeSrc":"16018:111:22","nodeType":"YulBlock","src":"16018:111:22","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"16039:1:22","nodeType":"YulLiteral","src":"16039:1:22","type":"","value":"0"},{"arguments":[{"kind":"number","nativeSrc":"16046:3:22","nodeType":"YulLiteral","src":"16046:3:22","type":"","value":"224"},{"kind":"number","nativeSrc":"16051:10:22","nodeType":"YulLiteral","src":"16051:10:22","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nativeSrc":"16042:3:22","nodeType":"YulIdentifier","src":"16042:3:22"},"nativeSrc":"16042:20:22","nodeType":"YulFunctionCall","src":"16042:20:22"}],"functionName":{"name":"mstore","nativeSrc":"16032:6:22","nodeType":"YulIdentifier","src":"16032:6:22"},"nativeSrc":"16032:31:22","nodeType":"YulFunctionCall","src":"16032:31:22"},"nativeSrc":"16032:31:22","nodeType":"YulExpressionStatement","src":"16032:31:22"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"16083:1:22","nodeType":"YulLiteral","src":"16083:1:22","type":"","value":"4"},{"kind":"number","nativeSrc":"16086:4:22","nodeType":"YulLiteral","src":"16086:4:22","type":"","value":"0x11"}],"functionName":{"name":"mstore","nativeSrc":"16076:6:22","nodeType":"YulIdentifier","src":"16076:6:22"},"nativeSrc":"16076:15:22","nodeType":"YulFunctionCall","src":"16076:15:22"},"nativeSrc":"16076:15:22","nodeType":"YulExpressionStatement","src":"16076:15:22"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"16111:1:22","nodeType":"YulLiteral","src":"16111:1:22","type":"","value":"0"},{"kind":"number","nativeSrc":"16114:4:22","nodeType":"YulLiteral","src":"16114:4:22","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"16104:6:22","nodeType":"YulIdentifier","src":"16104:6:22"},"nativeSrc":"16104:15:22","nodeType":"YulFunctionCall","src":"16104:15:22"},"nativeSrc":"16104:15:22","nodeType":"YulExpressionStatement","src":"16104:15:22"}]},"condition":{"arguments":[{"name":"value","nativeSrc":"15995:5:22","nodeType":"YulIdentifier","src":"15995:5:22"},{"arguments":[{"kind":"number","nativeSrc":"16006:1:22","nodeType":"YulLiteral","src":"16006:1:22","type":"","value":"0"}],"functionName":{"name":"not","nativeSrc":"16002:3:22","nodeType":"YulIdentifier","src":"16002:3:22"},"nativeSrc":"16002:6:22","nodeType":"YulFunctionCall","src":"16002:6:22"}],"functionName":{"name":"eq","nativeSrc":"15992:2:22","nodeType":"YulIdentifier","src":"15992:2:22"},"nativeSrc":"15992:17:22","nodeType":"YulFunctionCall","src":"15992:17:22"},"nativeSrc":"15989:140:22","nodeType":"YulIf","src":"15989:140:22"},{"nativeSrc":"16138:20:22","nodeType":"YulAssignment","src":"16138:20:22","value":{"arguments":[{"name":"value","nativeSrc":"16149:5:22","nodeType":"YulIdentifier","src":"16149:5:22"},{"kind":"number","nativeSrc":"16156:1:22","nodeType":"YulLiteral","src":"16156:1:22","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"16145:3:22","nodeType":"YulIdentifier","src":"16145:3:22"},"nativeSrc":"16145:13:22","nodeType":"YulFunctionCall","src":"16145:13:22"},"variableNames":[{"name":"ret","nativeSrc":"16138:3:22","nodeType":"YulIdentifier","src":"16138:3:22"}]}]},"name":"increment_t_uint256","nativeSrc":"15932:232:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"15961:5:22","nodeType":"YulTypedName","src":"15961:5:22","type":""}],"returnVariables":[{"name":"ret","nativeSrc":"15971:3:22","nodeType":"YulTypedName","src":"15971:3:22","type":""}],"src":"15932:232:22"},{"body":{"nativeSrc":"16225:65:22","nodeType":"YulBlock","src":"16225:65:22","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"16242:1:22","nodeType":"YulLiteral","src":"16242:1:22","type":"","value":"0"},{"name":"ptr","nativeSrc":"16245:3:22","nodeType":"YulIdentifier","src":"16245:3:22"}],"functionName":{"name":"mstore","nativeSrc":"16235:6:22","nodeType":"YulIdentifier","src":"16235:6:22"},"nativeSrc":"16235:14:22","nodeType":"YulFunctionCall","src":"16235:14:22"},"nativeSrc":"16235:14:22","nodeType":"YulExpressionStatement","src":"16235:14:22"},{"nativeSrc":"16258:26:22","nodeType":"YulAssignment","src":"16258:26:22","value":{"arguments":[{"kind":"number","nativeSrc":"16276:1:22","nodeType":"YulLiteral","src":"16276:1:22","type":"","value":"0"},{"kind":"number","nativeSrc":"16279:4:22","nodeType":"YulLiteral","src":"16279:4:22","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nativeSrc":"16266:9:22","nodeType":"YulIdentifier","src":"16266:9:22"},"nativeSrc":"16266:18:22","nodeType":"YulFunctionCall","src":"16266:18:22"},"variableNames":[{"name":"data","nativeSrc":"16258:4:22","nodeType":"YulIdentifier","src":"16258:4:22"}]}]},"name":"array_dataslot_string_storage","nativeSrc":"16169:121:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nativeSrc":"16208:3:22","nodeType":"YulTypedName","src":"16208:3:22","type":""}],"returnVariables":[{"name":"data","nativeSrc":"16216:4:22","nodeType":"YulTypedName","src":"16216:4:22","type":""}],"src":"16169:121:22"},{"body":{"nativeSrc":"16376:437:22","nodeType":"YulBlock","src":"16376:437:22","statements":[{"body":{"nativeSrc":"16409:398:22","nodeType":"YulBlock","src":"16409:398:22","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"16430:1:22","nodeType":"YulLiteral","src":"16430:1:22","type":"","value":"0"},{"name":"array","nativeSrc":"16433:5:22","nodeType":"YulIdentifier","src":"16433:5:22"}],"functionName":{"name":"mstore","nativeSrc":"16423:6:22","nodeType":"YulIdentifier","src":"16423:6:22"},"nativeSrc":"16423:16:22","nodeType":"YulFunctionCall","src":"16423:16:22"},"nativeSrc":"16423:16:22","nodeType":"YulExpressionStatement","src":"16423:16:22"},{"nativeSrc":"16452:30:22","nodeType":"YulVariableDeclaration","src":"16452:30:22","value":{"arguments":[{"kind":"number","nativeSrc":"16474:1:22","nodeType":"YulLiteral","src":"16474:1:22","type":"","value":"0"},{"kind":"number","nativeSrc":"16477:4:22","nodeType":"YulLiteral","src":"16477:4:22","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nativeSrc":"16464:9:22","nodeType":"YulIdentifier","src":"16464:9:22"},"nativeSrc":"16464:18:22","nodeType":"YulFunctionCall","src":"16464:18:22"},"variables":[{"name":"data","nativeSrc":"16456:4:22","nodeType":"YulTypedName","src":"16456:4:22","type":""}]},{"nativeSrc":"16495:57:22","nodeType":"YulVariableDeclaration","src":"16495:57:22","value":{"arguments":[{"name":"data","nativeSrc":"16518:4:22","nodeType":"YulIdentifier","src":"16518:4:22"},{"arguments":[{"kind":"number","nativeSrc":"16528:1:22","nodeType":"YulLiteral","src":"16528:1:22","type":"","value":"5"},{"arguments":[{"name":"startIndex","nativeSrc":"16535:10:22","nodeType":"YulIdentifier","src":"16535:10:22"},{"kind":"number","nativeSrc":"16547:2:22","nodeType":"YulLiteral","src":"16547:2:22","type":"","value":"31"}],"functionName":{"name":"add","nativeSrc":"16531:3:22","nodeType":"YulIdentifier","src":"16531:3:22"},"nativeSrc":"16531:19:22","nodeType":"YulFunctionCall","src":"16531:19:22"}],"functionName":{"name":"shr","nativeSrc":"16524:3:22","nodeType":"YulIdentifier","src":"16524:3:22"},"nativeSrc":"16524:27:22","nodeType":"YulFunctionCall","src":"16524:27:22"}],"functionName":{"name":"add","nativeSrc":"16514:3:22","nodeType":"YulIdentifier","src":"16514:3:22"},"nativeSrc":"16514:38:22","nodeType":"YulFunctionCall","src":"16514:38:22"},"variables":[{"name":"deleteStart","nativeSrc":"16499:11:22","nodeType":"YulTypedName","src":"16499:11:22","type":""}]},{"body":{"nativeSrc":"16589:23:22","nodeType":"YulBlock","src":"16589:23:22","statements":[{"nativeSrc":"16591:19:22","nodeType":"YulAssignment","src":"16591:19:22","value":{"name":"data","nativeSrc":"16606:4:22","nodeType":"YulIdentifier","src":"16606:4:22"},"variableNames":[{"name":"deleteStart","nativeSrc":"16591:11:22","nodeType":"YulIdentifier","src":"16591:11:22"}]}]},"condition":{"arguments":[{"name":"startIndex","nativeSrc":"16571:10:22","nodeType":"YulIdentifier","src":"16571:10:22"},{"kind":"number","nativeSrc":"16583:4:22","nodeType":"YulLiteral","src":"16583:4:22","type":"","value":"0x20"}],"functionName":{"name":"lt","nativeSrc":"16568:2:22","nodeType":"YulIdentifier","src":"16568:2:22"},"nativeSrc":"16568:20:22","nodeType":"YulFunctionCall","src":"16568:20:22"},"nativeSrc":"16565:47:22","nodeType":"YulIf","src":"16565:47:22"},{"nativeSrc":"16625:41:22","nodeType":"YulVariableDeclaration","src":"16625:41:22","value":{"arguments":[{"name":"data","nativeSrc":"16639:4:22","nodeType":"YulIdentifier","src":"16639:4:22"},{"arguments":[{"kind":"number","nativeSrc":"16649:1:22","nodeType":"YulLiteral","src":"16649:1:22","type":"","value":"5"},{"arguments":[{"name":"len","nativeSrc":"16656:3:22","nodeType":"YulIdentifier","src":"16656:3:22"},{"kind":"number","nativeSrc":"16661:2:22","nodeType":"YulLiteral","src":"16661:2:22","type":"","value":"31"}],"functionName":{"name":"add","nativeSrc":"16652:3:22","nodeType":"YulIdentifier","src":"16652:3:22"},"nativeSrc":"16652:12:22","nodeType":"YulFunctionCall","src":"16652:12:22"}],"functionName":{"name":"shr","nativeSrc":"16645:3:22","nodeType":"YulIdentifier","src":"16645:3:22"},"nativeSrc":"16645:20:22","nodeType":"YulFunctionCall","src":"16645:20:22"}],"functionName":{"name":"add","nativeSrc":"16635:3:22","nodeType":"YulIdentifier","src":"16635:3:22"},"nativeSrc":"16635:31:22","nodeType":"YulFunctionCall","src":"16635:31:22"},"variables":[{"name":"_1","nativeSrc":"16629:2:22","nodeType":"YulTypedName","src":"16629:2:22","type":""}]},{"nativeSrc":"16679:24:22","nodeType":"YulVariableDeclaration","src":"16679:24:22","value":{"name":"deleteStart","nativeSrc":"16692:11:22","nodeType":"YulIdentifier","src":"16692:11:22"},"variables":[{"name":"start","nativeSrc":"16683:5:22","nodeType":"YulTypedName","src":"16683:5:22","type":""}]},{"body":{"nativeSrc":"16777:20:22","nodeType":"YulBlock","src":"16777:20:22","statements":[{"expression":{"arguments":[{"name":"start","nativeSrc":"16786:5:22","nodeType":"YulIdentifier","src":"16786:5:22"},{"kind":"number","nativeSrc":"16793:1:22","nodeType":"YulLiteral","src":"16793:1:22","type":"","value":"0"}],"functionName":{"name":"sstore","nativeSrc":"16779:6:22","nodeType":"YulIdentifier","src":"16779:6:22"},"nativeSrc":"16779:16:22","nodeType":"YulFunctionCall","src":"16779:16:22"},"nativeSrc":"16779:16:22","nodeType":"YulExpressionStatement","src":"16779:16:22"}]},"condition":{"arguments":[{"name":"start","nativeSrc":"16727:5:22","nodeType":"YulIdentifier","src":"16727:5:22"},{"name":"_1","nativeSrc":"16734:2:22","nodeType":"YulIdentifier","src":"16734:2:22"}],"functionName":{"name":"lt","nativeSrc":"16724:2:22","nodeType":"YulIdentifier","src":"16724:2:22"},"nativeSrc":"16724:13:22","nodeType":"YulFunctionCall","src":"16724:13:22"},"nativeSrc":"16716:81:22","nodeType":"YulForLoop","post":{"nativeSrc":"16738:26:22","nodeType":"YulBlock","src":"16738:26:22","statements":[{"nativeSrc":"16740:22:22","nodeType":"YulAssignment","src":"16740:22:22","value":{"arguments":[{"name":"start","nativeSrc":"16753:5:22","nodeType":"YulIdentifier","src":"16753:5:22"},{"kind":"number","nativeSrc":"16760:1:22","nodeType":"YulLiteral","src":"16760:1:22","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"16749:3:22","nodeType":"YulIdentifier","src":"16749:3:22"},"nativeSrc":"16749:13:22","nodeType":"YulFunctionCall","src":"16749:13:22"},"variableNames":[{"name":"start","nativeSrc":"16740:5:22","nodeType":"YulIdentifier","src":"16740:5:22"}]}]},"pre":{"nativeSrc":"16720:3:22","nodeType":"YulBlock","src":"16720:3:22","statements":[]},"src":"16716:81:22"}]},"condition":{"arguments":[{"name":"len","nativeSrc":"16392:3:22","nodeType":"YulIdentifier","src":"16392:3:22"},{"kind":"number","nativeSrc":"16397:2:22","nodeType":"YulLiteral","src":"16397:2:22","type":"","value":"31"}],"functionName":{"name":"gt","nativeSrc":"16389:2:22","nodeType":"YulIdentifier","src":"16389:2:22"},"nativeSrc":"16389:11:22","nodeType":"YulFunctionCall","src":"16389:11:22"},"nativeSrc":"16386:421:22","nodeType":"YulIf","src":"16386:421:22"}]},"name":"clean_up_bytearray_end_slots_string_storage","nativeSrc":"16295:518:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nativeSrc":"16348:5:22","nodeType":"YulTypedName","src":"16348:5:22","type":""},{"name":"len","nativeSrc":"16355:3:22","nodeType":"YulTypedName","src":"16355:3:22","type":""},{"name":"startIndex","nativeSrc":"16360:10:22","nodeType":"YulTypedName","src":"16360:10:22","type":""}],"src":"16295:518:22"},{"body":{"nativeSrc":"16903:81:22","nodeType":"YulBlock","src":"16903:81:22","statements":[{"nativeSrc":"16913:65:22","nodeType":"YulAssignment","src":"16913:65:22","value":{"arguments":[{"arguments":[{"name":"data","nativeSrc":"16928:4:22","nodeType":"YulIdentifier","src":"16928:4:22"},{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"16946:1:22","nodeType":"YulLiteral","src":"16946:1:22","type":"","value":"3"},{"name":"len","nativeSrc":"16949:3:22","nodeType":"YulIdentifier","src":"16949:3:22"}],"functionName":{"name":"shl","nativeSrc":"16942:3:22","nodeType":"YulIdentifier","src":"16942:3:22"},"nativeSrc":"16942:11:22","nodeType":"YulFunctionCall","src":"16942:11:22"},{"arguments":[{"kind":"number","nativeSrc":"16959:1:22","nodeType":"YulLiteral","src":"16959:1:22","type":"","value":"0"}],"functionName":{"name":"not","nativeSrc":"16955:3:22","nodeType":"YulIdentifier","src":"16955:3:22"},"nativeSrc":"16955:6:22","nodeType":"YulFunctionCall","src":"16955:6:22"}],"functionName":{"name":"shr","nativeSrc":"16938:3:22","nodeType":"YulIdentifier","src":"16938:3:22"},"nativeSrc":"16938:24:22","nodeType":"YulFunctionCall","src":"16938:24:22"}],"functionName":{"name":"not","nativeSrc":"16934:3:22","nodeType":"YulIdentifier","src":"16934:3:22"},"nativeSrc":"16934:29:22","nodeType":"YulFunctionCall","src":"16934:29:22"}],"functionName":{"name":"and","nativeSrc":"16924:3:22","nodeType":"YulIdentifier","src":"16924:3:22"},"nativeSrc":"16924:40:22","nodeType":"YulFunctionCall","src":"16924:40:22"},{"arguments":[{"kind":"number","nativeSrc":"16970:1:22","nodeType":"YulLiteral","src":"16970:1:22","type":"","value":"1"},{"name":"len","nativeSrc":"16973:3:22","nodeType":"YulIdentifier","src":"16973:3:22"}],"functionName":{"name":"shl","nativeSrc":"16966:3:22","nodeType":"YulIdentifier","src":"16966:3:22"},"nativeSrc":"16966:11:22","nodeType":"YulFunctionCall","src":"16966:11:22"}],"functionName":{"name":"or","nativeSrc":"16921:2:22","nodeType":"YulIdentifier","src":"16921:2:22"},"nativeSrc":"16921:57:22","nodeType":"YulFunctionCall","src":"16921:57:22"},"variableNames":[{"name":"used","nativeSrc":"16913:4:22","nodeType":"YulIdentifier","src":"16913:4:22"}]}]},"name":"extract_used_part_and_set_length_of_short_byte_array","nativeSrc":"16818:166:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nativeSrc":"16880:4:22","nodeType":"YulTypedName","src":"16880:4:22","type":""},{"name":"len","nativeSrc":"16886:3:22","nodeType":"YulTypedName","src":"16886:3:22","type":""}],"returnVariables":[{"name":"used","nativeSrc":"16894:4:22","nodeType":"YulTypedName","src":"16894:4:22","type":""}],"src":"16818:166:22"},{"body":{"nativeSrc":"17085:1203:22","nodeType":"YulBlock","src":"17085:1203:22","statements":[{"nativeSrc":"17095:24:22","nodeType":"YulVariableDeclaration","src":"17095:24:22","value":{"arguments":[{"name":"src","nativeSrc":"17115:3:22","nodeType":"YulIdentifier","src":"17115:3:22"}],"functionName":{"name":"mload","nativeSrc":"17109:5:22","nodeType":"YulIdentifier","src":"17109:5:22"},"nativeSrc":"17109:10:22","nodeType":"YulFunctionCall","src":"17109:10:22"},"variables":[{"name":"newLen","nativeSrc":"17099:6:22","nodeType":"YulTypedName","src":"17099:6:22","type":""}]},{"body":{"nativeSrc":"17162:22:22","nodeType":"YulBlock","src":"17162:22:22","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nativeSrc":"17164:16:22","nodeType":"YulIdentifier","src":"17164:16:22"},"nativeSrc":"17164:18:22","nodeType":"YulFunctionCall","src":"17164:18:22"},"nativeSrc":"17164:18:22","nodeType":"YulExpressionStatement","src":"17164:18:22"}]},"condition":{"arguments":[{"name":"newLen","nativeSrc":"17134:6:22","nodeType":"YulIdentifier","src":"17134:6:22"},{"kind":"number","nativeSrc":"17142:18:22","nodeType":"YulLiteral","src":"17142:18:22","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"17131:2:22","nodeType":"YulIdentifier","src":"17131:2:22"},"nativeSrc":"17131:30:22","nodeType":"YulFunctionCall","src":"17131:30:22"},"nativeSrc":"17128:56:22","nodeType":"YulIf","src":"17128:56:22"},{"expression":{"arguments":[{"name":"slot","nativeSrc":"17237:4:22","nodeType":"YulIdentifier","src":"17237:4:22"},{"arguments":[{"arguments":[{"name":"slot","nativeSrc":"17275:4:22","nodeType":"YulIdentifier","src":"17275:4:22"}],"functionName":{"name":"sload","nativeSrc":"17269:5:22","nodeType":"YulIdentifier","src":"17269:5:22"},"nativeSrc":"17269:11:22","nodeType":"YulFunctionCall","src":"17269:11:22"}],"functionName":{"name":"extract_byte_array_length","nativeSrc":"17243:25:22","nodeType":"YulIdentifier","src":"17243:25:22"},"nativeSrc":"17243:38:22","nodeType":"YulFunctionCall","src":"17243:38:22"},{"name":"newLen","nativeSrc":"17283:6:22","nodeType":"YulIdentifier","src":"17283:6:22"}],"functionName":{"name":"clean_up_bytearray_end_slots_string_storage","nativeSrc":"17193:43:22","nodeType":"YulIdentifier","src":"17193:43:22"},"nativeSrc":"17193:97:22","nodeType":"YulFunctionCall","src":"17193:97:22"},"nativeSrc":"17193:97:22","nodeType":"YulExpressionStatement","src":"17193:97:22"},{"nativeSrc":"17299:18:22","nodeType":"YulVariableDeclaration","src":"17299:18:22","value":{"kind":"number","nativeSrc":"17316:1:22","nodeType":"YulLiteral","src":"17316:1:22","type":"","value":"0"},"variables":[{"name":"srcOffset","nativeSrc":"17303:9:22","nodeType":"YulTypedName","src":"17303:9:22","type":""}]},{"nativeSrc":"17326:17:22","nodeType":"YulAssignment","src":"17326:17:22","value":{"kind":"number","nativeSrc":"17339:4:22","nodeType":"YulLiteral","src":"17339:4:22","type":"","value":"0x20"},"variableNames":[{"name":"srcOffset","nativeSrc":"17326:9:22","nodeType":"YulIdentifier","src":"17326:9:22"}]},{"cases":[{"body":{"nativeSrc":"17389:642:22","nodeType":"YulBlock","src":"17389:642:22","statements":[{"nativeSrc":"17403:35:22","nodeType":"YulVariableDeclaration","src":"17403:35:22","value":{"arguments":[{"name":"newLen","nativeSrc":"17422:6:22","nodeType":"YulIdentifier","src":"17422:6:22"},{"arguments":[{"kind":"number","nativeSrc":"17434:2:22","nodeType":"YulLiteral","src":"17434:2:22","type":"","value":"31"}],"functionName":{"name":"not","nativeSrc":"17430:3:22","nodeType":"YulIdentifier","src":"17430:3:22"},"nativeSrc":"17430:7:22","nodeType":"YulFunctionCall","src":"17430:7:22"}],"functionName":{"name":"and","nativeSrc":"17418:3:22","nodeType":"YulIdentifier","src":"17418:3:22"},"nativeSrc":"17418:20:22","nodeType":"YulFunctionCall","src":"17418:20:22"},"variables":[{"name":"loopEnd","nativeSrc":"17407:7:22","nodeType":"YulTypedName","src":"17407:7:22","type":""}]},{"nativeSrc":"17451:49:22","nodeType":"YulVariableDeclaration","src":"17451:49:22","value":{"arguments":[{"name":"slot","nativeSrc":"17495:4:22","nodeType":"YulIdentifier","src":"17495:4:22"}],"functionName":{"name":"array_dataslot_string_storage","nativeSrc":"17465:29:22","nodeType":"YulIdentifier","src":"17465:29:22"},"nativeSrc":"17465:35:22","nodeType":"YulFunctionCall","src":"17465:35:22"},"variables":[{"name":"dstPtr","nativeSrc":"17455:6:22","nodeType":"YulTypedName","src":"17455:6:22","type":""}]},{"nativeSrc":"17513:10:22","nodeType":"YulVariableDeclaration","src":"17513:10:22","value":{"kind":"number","nativeSrc":"17522:1:22","nodeType":"YulLiteral","src":"17522:1:22","type":"","value":"0"},"variables":[{"name":"i","nativeSrc":"17517:1:22","nodeType":"YulTypedName","src":"17517:1:22","type":""}]},{"body":{"nativeSrc":"17593:165:22","nodeType":"YulBlock","src":"17593:165:22","statements":[{"expression":{"arguments":[{"name":"dstPtr","nativeSrc":"17618:6:22","nodeType":"YulIdentifier","src":"17618:6:22"},{"arguments":[{"arguments":[{"name":"src","nativeSrc":"17636:3:22","nodeType":"YulIdentifier","src":"17636:3:22"},{"name":"srcOffset","nativeSrc":"17641:9:22","nodeType":"YulIdentifier","src":"17641:9:22"}],"functionName":{"name":"add","nativeSrc":"17632:3:22","nodeType":"YulIdentifier","src":"17632:3:22"},"nativeSrc":"17632:19:22","nodeType":"YulFunctionCall","src":"17632:19:22"}],"functionName":{"name":"mload","nativeSrc":"17626:5:22","nodeType":"YulIdentifier","src":"17626:5:22"},"nativeSrc":"17626:26:22","nodeType":"YulFunctionCall","src":"17626:26:22"}],"functionName":{"name":"sstore","nativeSrc":"17611:6:22","nodeType":"YulIdentifier","src":"17611:6:22"},"nativeSrc":"17611:42:22","nodeType":"YulFunctionCall","src":"17611:42:22"},"nativeSrc":"17611:42:22","nodeType":"YulExpressionStatement","src":"17611:42:22"},{"nativeSrc":"17670:24:22","nodeType":"YulAssignment","src":"17670:24:22","value":{"arguments":[{"name":"dstPtr","nativeSrc":"17684:6:22","nodeType":"YulIdentifier","src":"17684:6:22"},{"kind":"number","nativeSrc":"17692:1:22","nodeType":"YulLiteral","src":"17692:1:22","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"17680:3:22","nodeType":"YulIdentifier","src":"17680:3:22"},"nativeSrc":"17680:14:22","nodeType":"YulFunctionCall","src":"17680:14:22"},"variableNames":[{"name":"dstPtr","nativeSrc":"17670:6:22","nodeType":"YulIdentifier","src":"17670:6:22"}]},{"nativeSrc":"17711:33:22","nodeType":"YulAssignment","src":"17711:33:22","value":{"arguments":[{"name":"srcOffset","nativeSrc":"17728:9:22","nodeType":"YulIdentifier","src":"17728:9:22"},{"kind":"number","nativeSrc":"17739:4:22","nodeType":"YulLiteral","src":"17739:4:22","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"17724:3:22","nodeType":"YulIdentifier","src":"17724:3:22"},"nativeSrc":"17724:20:22","nodeType":"YulFunctionCall","src":"17724:20:22"},"variableNames":[{"name":"srcOffset","nativeSrc":"17711:9:22","nodeType":"YulIdentifier","src":"17711:9:22"}]}]},"condition":{"arguments":[{"name":"i","nativeSrc":"17547:1:22","nodeType":"YulIdentifier","src":"17547:1:22"},{"name":"loopEnd","nativeSrc":"17550:7:22","nodeType":"YulIdentifier","src":"17550:7:22"}],"functionName":{"name":"lt","nativeSrc":"17544:2:22","nodeType":"YulIdentifier","src":"17544:2:22"},"nativeSrc":"17544:14:22","nodeType":"YulFunctionCall","src":"17544:14:22"},"nativeSrc":"17536:222:22","nodeType":"YulForLoop","post":{"nativeSrc":"17559:21:22","nodeType":"YulBlock","src":"17559:21:22","statements":[{"nativeSrc":"17561:17:22","nodeType":"YulAssignment","src":"17561:17:22","value":{"arguments":[{"name":"i","nativeSrc":"17570:1:22","nodeType":"YulIdentifier","src":"17570:1:22"},{"kind":"number","nativeSrc":"17573:4:22","nodeType":"YulLiteral","src":"17573:4:22","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"17566:3:22","nodeType":"YulIdentifier","src":"17566:3:22"},"nativeSrc":"17566:12:22","nodeType":"YulFunctionCall","src":"17566:12:22"},"variableNames":[{"name":"i","nativeSrc":"17561:1:22","nodeType":"YulIdentifier","src":"17561:1:22"}]}]},"pre":{"nativeSrc":"17540:3:22","nodeType":"YulBlock","src":"17540:3:22","statements":[]},"src":"17536:222:22"},{"body":{"nativeSrc":"17806:166:22","nodeType":"YulBlock","src":"17806:166:22","statements":[{"nativeSrc":"17824:43:22","nodeType":"YulVariableDeclaration","src":"17824:43:22","value":{"arguments":[{"arguments":[{"name":"src","nativeSrc":"17851:3:22","nodeType":"YulIdentifier","src":"17851:3:22"},{"name":"srcOffset","nativeSrc":"17856:9:22","nodeType":"YulIdentifier","src":"17856:9:22"}],"functionName":{"name":"add","nativeSrc":"17847:3:22","nodeType":"YulIdentifier","src":"17847:3:22"},"nativeSrc":"17847:19:22","nodeType":"YulFunctionCall","src":"17847:19:22"}],"functionName":{"name":"mload","nativeSrc":"17841:5:22","nodeType":"YulIdentifier","src":"17841:5:22"},"nativeSrc":"17841:26:22","nodeType":"YulFunctionCall","src":"17841:26:22"},"variables":[{"name":"lastValue","nativeSrc":"17828:9:22","nodeType":"YulTypedName","src":"17828:9:22","type":""}]},{"expression":{"arguments":[{"name":"dstPtr","nativeSrc":"17891:6:22","nodeType":"YulIdentifier","src":"17891:6:22"},{"arguments":[{"name":"lastValue","nativeSrc":"17903:9:22","nodeType":"YulIdentifier","src":"17903:9:22"},{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"17930:1:22","nodeType":"YulLiteral","src":"17930:1:22","type":"","value":"3"},{"name":"newLen","nativeSrc":"17933:6:22","nodeType":"YulIdentifier","src":"17933:6:22"}],"functionName":{"name":"shl","nativeSrc":"17926:3:22","nodeType":"YulIdentifier","src":"17926:3:22"},"nativeSrc":"17926:14:22","nodeType":"YulFunctionCall","src":"17926:14:22"},{"kind":"number","nativeSrc":"17942:3:22","nodeType":"YulLiteral","src":"17942:3:22","type":"","value":"248"}],"functionName":{"name":"and","nativeSrc":"17922:3:22","nodeType":"YulIdentifier","src":"17922:3:22"},"nativeSrc":"17922:24:22","nodeType":"YulFunctionCall","src":"17922:24:22"},{"arguments":[{"kind":"number","nativeSrc":"17952:1:22","nodeType":"YulLiteral","src":"17952:1:22","type":"","value":"0"}],"functionName":{"name":"not","nativeSrc":"17948:3:22","nodeType":"YulIdentifier","src":"17948:3:22"},"nativeSrc":"17948:6:22","nodeType":"YulFunctionCall","src":"17948:6:22"}],"functionName":{"name":"shr","nativeSrc":"17918:3:22","nodeType":"YulIdentifier","src":"17918:3:22"},"nativeSrc":"17918:37:22","nodeType":"YulFunctionCall","src":"17918:37:22"}],"functionName":{"name":"not","nativeSrc":"17914:3:22","nodeType":"YulIdentifier","src":"17914:3:22"},"nativeSrc":"17914:42:22","nodeType":"YulFunctionCall","src":"17914:42:22"}],"functionName":{"name":"and","nativeSrc":"17899:3:22","nodeType":"YulIdentifier","src":"17899:3:22"},"nativeSrc":"17899:58:22","nodeType":"YulFunctionCall","src":"17899:58:22"}],"functionName":{"name":"sstore","nativeSrc":"17884:6:22","nodeType":"YulIdentifier","src":"17884:6:22"},"nativeSrc":"17884:74:22","nodeType":"YulFunctionCall","src":"17884:74:22"},"nativeSrc":"17884:74:22","nodeType":"YulExpressionStatement","src":"17884:74:22"}]},"condition":{"arguments":[{"name":"loopEnd","nativeSrc":"17777:7:22","nodeType":"YulIdentifier","src":"17777:7:22"},{"name":"newLen","nativeSrc":"17786:6:22","nodeType":"YulIdentifier","src":"17786:6:22"}],"functionName":{"name":"lt","nativeSrc":"17774:2:22","nodeType":"YulIdentifier","src":"17774:2:22"},"nativeSrc":"17774:19:22","nodeType":"YulFunctionCall","src":"17774:19:22"},"nativeSrc":"17771:201:22","nodeType":"YulIf","src":"17771:201:22"},{"expression":{"arguments":[{"name":"slot","nativeSrc":"17992:4:22","nodeType":"YulIdentifier","src":"17992:4:22"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"18006:1:22","nodeType":"YulLiteral","src":"18006:1:22","type":"","value":"1"},{"name":"newLen","nativeSrc":"18009:6:22","nodeType":"YulIdentifier","src":"18009:6:22"}],"functionName":{"name":"shl","nativeSrc":"18002:3:22","nodeType":"YulIdentifier","src":"18002:3:22"},"nativeSrc":"18002:14:22","nodeType":"YulFunctionCall","src":"18002:14:22"},{"kind":"number","nativeSrc":"18018:1:22","nodeType":"YulLiteral","src":"18018:1:22","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"17998:3:22","nodeType":"YulIdentifier","src":"17998:3:22"},"nativeSrc":"17998:22:22","nodeType":"YulFunctionCall","src":"17998:22:22"}],"functionName":{"name":"sstore","nativeSrc":"17985:6:22","nodeType":"YulIdentifier","src":"17985:6:22"},"nativeSrc":"17985:36:22","nodeType":"YulFunctionCall","src":"17985:36:22"},"nativeSrc":"17985:36:22","nodeType":"YulExpressionStatement","src":"17985:36:22"}]},"nativeSrc":"17382:649:22","nodeType":"YulCase","src":"17382:649:22","value":{"kind":"number","nativeSrc":"17387:1:22","nodeType":"YulLiteral","src":"17387:1:22","type":"","value":"1"}},{"body":{"nativeSrc":"18048:234:22","nodeType":"YulBlock","src":"18048:234:22","statements":[{"nativeSrc":"18062:14:22","nodeType":"YulVariableDeclaration","src":"18062:14:22","value":{"kind":"number","nativeSrc":"18075:1:22","nodeType":"YulLiteral","src":"18075:1:22","type":"","value":"0"},"variables":[{"name":"value","nativeSrc":"18066:5:22","nodeType":"YulTypedName","src":"18066:5:22","type":""}]},{"body":{"nativeSrc":"18111:67:22","nodeType":"YulBlock","src":"18111:67:22","statements":[{"nativeSrc":"18129:35:22","nodeType":"YulAssignment","src":"18129:35:22","value":{"arguments":[{"arguments":[{"name":"src","nativeSrc":"18148:3:22","nodeType":"YulIdentifier","src":"18148:3:22"},{"name":"srcOffset","nativeSrc":"18153:9:22","nodeType":"YulIdentifier","src":"18153:9:22"}],"functionName":{"name":"add","nativeSrc":"18144:3:22","nodeType":"YulIdentifier","src":"18144:3:22"},"nativeSrc":"18144:19:22","nodeType":"YulFunctionCall","src":"18144:19:22"}],"functionName":{"name":"mload","nativeSrc":"18138:5:22","nodeType":"YulIdentifier","src":"18138:5:22"},"nativeSrc":"18138:26:22","nodeType":"YulFunctionCall","src":"18138:26:22"},"variableNames":[{"name":"value","nativeSrc":"18129:5:22","nodeType":"YulIdentifier","src":"18129:5:22"}]}]},"condition":{"name":"newLen","nativeSrc":"18092:6:22","nodeType":"YulIdentifier","src":"18092:6:22"},"nativeSrc":"18089:89:22","nodeType":"YulIf","src":"18089:89:22"},{"expression":{"arguments":[{"name":"slot","nativeSrc":"18198:4:22","nodeType":"YulIdentifier","src":"18198:4:22"},{"arguments":[{"name":"value","nativeSrc":"18257:5:22","nodeType":"YulIdentifier","src":"18257:5:22"},{"name":"newLen","nativeSrc":"18264:6:22","nodeType":"YulIdentifier","src":"18264:6:22"}],"functionName":{"name":"extract_used_part_and_set_length_of_short_byte_array","nativeSrc":"18204:52:22","nodeType":"YulIdentifier","src":"18204:52:22"},"nativeSrc":"18204:67:22","nodeType":"YulFunctionCall","src":"18204:67:22"}],"functionName":{"name":"sstore","nativeSrc":"18191:6:22","nodeType":"YulIdentifier","src":"18191:6:22"},"nativeSrc":"18191:81:22","nodeType":"YulFunctionCall","src":"18191:81:22"},"nativeSrc":"18191:81:22","nodeType":"YulExpressionStatement","src":"18191:81:22"}]},"nativeSrc":"18040:242:22","nodeType":"YulCase","src":"18040:242:22","value":"default"}],"expression":{"arguments":[{"name":"newLen","nativeSrc":"17362:6:22","nodeType":"YulIdentifier","src":"17362:6:22"},{"kind":"number","nativeSrc":"17370:2:22","nodeType":"YulLiteral","src":"17370:2:22","type":"","value":"31"}],"functionName":{"name":"gt","nativeSrc":"17359:2:22","nodeType":"YulIdentifier","src":"17359:2:22"},"nativeSrc":"17359:14:22","nodeType":"YulFunctionCall","src":"17359:14:22"},"nativeSrc":"17352:930:22","nodeType":"YulSwitch","src":"17352:930:22"}]},"name":"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage","nativeSrc":"16989:1299:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nativeSrc":"17070:4:22","nodeType":"YulTypedName","src":"17070:4:22","type":""},{"name":"src","nativeSrc":"17076:3:22","nodeType":"YulTypedName","src":"17076:3:22","type":""}],"src":"16989:1299:22"},{"body":{"nativeSrc":"18467:169:22","nodeType":"YulBlock","src":"18467:169:22","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"18484:9:22","nodeType":"YulIdentifier","src":"18484:9:22"},{"kind":"number","nativeSrc":"18495:2:22","nodeType":"YulLiteral","src":"18495:2:22","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"18477:6:22","nodeType":"YulIdentifier","src":"18477:6:22"},"nativeSrc":"18477:21:22","nodeType":"YulFunctionCall","src":"18477:21:22"},"nativeSrc":"18477:21:22","nodeType":"YulExpressionStatement","src":"18477:21:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"18518:9:22","nodeType":"YulIdentifier","src":"18518:9:22"},{"kind":"number","nativeSrc":"18529:2:22","nodeType":"YulLiteral","src":"18529:2:22","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"18514:3:22","nodeType":"YulIdentifier","src":"18514:3:22"},"nativeSrc":"18514:18:22","nodeType":"YulFunctionCall","src":"18514:18:22"},{"kind":"number","nativeSrc":"18534:2:22","nodeType":"YulLiteral","src":"18534:2:22","type":"","value":"19"}],"functionName":{"name":"mstore","nativeSrc":"18507:6:22","nodeType":"YulIdentifier","src":"18507:6:22"},"nativeSrc":"18507:30:22","nodeType":"YulFunctionCall","src":"18507:30:22"},"nativeSrc":"18507:30:22","nodeType":"YulExpressionStatement","src":"18507:30:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"18557:9:22","nodeType":"YulIdentifier","src":"18557:9:22"},{"kind":"number","nativeSrc":"18568:2:22","nodeType":"YulLiteral","src":"18568:2:22","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"18553:3:22","nodeType":"YulIdentifier","src":"18553:3:22"},"nativeSrc":"18553:18:22","nodeType":"YulFunctionCall","src":"18553:18:22"},{"hexValue":"417373657420616c7265616479206e616d6564","kind":"string","nativeSrc":"18573:21:22","nodeType":"YulLiteral","src":"18573:21:22","type":"","value":"Asset already named"}],"functionName":{"name":"mstore","nativeSrc":"18546:6:22","nodeType":"YulIdentifier","src":"18546:6:22"},"nativeSrc":"18546:49:22","nodeType":"YulFunctionCall","src":"18546:49:22"},"nativeSrc":"18546:49:22","nodeType":"YulExpressionStatement","src":"18546:49:22"},{"nativeSrc":"18604:26:22","nodeType":"YulAssignment","src":"18604:26:22","value":{"arguments":[{"name":"headStart","nativeSrc":"18616:9:22","nodeType":"YulIdentifier","src":"18616:9:22"},{"kind":"number","nativeSrc":"18627:2:22","nodeType":"YulLiteral","src":"18627:2:22","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"18612:3:22","nodeType":"YulIdentifier","src":"18612:3:22"},"nativeSrc":"18612:18:22","nodeType":"YulFunctionCall","src":"18612:18:22"},"variableNames":[{"name":"tail","nativeSrc":"18604:4:22","nodeType":"YulIdentifier","src":"18604:4:22"}]}]},"name":"abi_encode_tuple_t_stringliteral_7495b1928eec20e7a70fd948a18c2ffd1e105a6b9600a16103e7a35603da4874__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"18293:343:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"18444:9:22","nodeType":"YulTypedName","src":"18444:9:22","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"18458:4:22","nodeType":"YulTypedName","src":"18458:4:22","type":""}],"src":"18293:343:22"},{"body":{"nativeSrc":"18815:173:22","nodeType":"YulBlock","src":"18815:173:22","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"18832:9:22","nodeType":"YulIdentifier","src":"18832:9:22"},{"kind":"number","nativeSrc":"18843:2:22","nodeType":"YulLiteral","src":"18843:2:22","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"18825:6:22","nodeType":"YulIdentifier","src":"18825:6:22"},"nativeSrc":"18825:21:22","nodeType":"YulFunctionCall","src":"18825:21:22"},"nativeSrc":"18825:21:22","nodeType":"YulExpressionStatement","src":"18825:21:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"18866:9:22","nodeType":"YulIdentifier","src":"18866:9:22"},{"kind":"number","nativeSrc":"18877:2:22","nodeType":"YulLiteral","src":"18877:2:22","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"18862:3:22","nodeType":"YulIdentifier","src":"18862:3:22"},"nativeSrc":"18862:18:22","nodeType":"YulFunctionCall","src":"18862:18:22"},{"kind":"number","nativeSrc":"18882:2:22","nodeType":"YulLiteral","src":"18882:2:22","type":"","value":"23"}],"functionName":{"name":"mstore","nativeSrc":"18855:6:22","nodeType":"YulIdentifier","src":"18855:6:22"},"nativeSrc":"18855:30:22","nodeType":"YulFunctionCall","src":"18855:30:22"},"nativeSrc":"18855:30:22","nodeType":"YulExpressionStatement","src":"18855:30:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"18905:9:22","nodeType":"YulIdentifier","src":"18905:9:22"},{"kind":"number","nativeSrc":"18916:2:22","nodeType":"YulLiteral","src":"18916:2:22","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"18901:3:22","nodeType":"YulIdentifier","src":"18901:3:22"},"nativeSrc":"18901:18:22","nodeType":"YulFunctionCall","src":"18901:18:22"},{"hexValue":"436f617374657220646f6573206e6f742065786973742e","kind":"string","nativeSrc":"18921:25:22","nodeType":"YulLiteral","src":"18921:25:22","type":"","value":"Coaster does not exist."}],"functionName":{"name":"mstore","nativeSrc":"18894:6:22","nodeType":"YulIdentifier","src":"18894:6:22"},"nativeSrc":"18894:53:22","nodeType":"YulFunctionCall","src":"18894:53:22"},"nativeSrc":"18894:53:22","nodeType":"YulExpressionStatement","src":"18894:53:22"},{"nativeSrc":"18956:26:22","nodeType":"YulAssignment","src":"18956:26:22","value":{"arguments":[{"name":"headStart","nativeSrc":"18968:9:22","nodeType":"YulIdentifier","src":"18968:9:22"},{"kind":"number","nativeSrc":"18979:2:22","nodeType":"YulLiteral","src":"18979:2:22","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"18964:3:22","nodeType":"YulIdentifier","src":"18964:3:22"},"nativeSrc":"18964:18:22","nodeType":"YulFunctionCall","src":"18964:18:22"},"variableNames":[{"name":"tail","nativeSrc":"18956:4:22","nodeType":"YulIdentifier","src":"18956:4:22"}]}]},"name":"abi_encode_tuple_t_stringliteral_f7848f9f96a60d30aa251e250188b2e647f641f6dedaeaaa76f9f0f103da72a6__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"18641:347:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"18792:9:22","nodeType":"YulTypedName","src":"18792:9:22","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"18806:4:22","nodeType":"YulTypedName","src":"18806:4:22","type":""}],"src":"18641:347:22"},{"body":{"nativeSrc":"19096:1103:22","nodeType":"YulBlock","src":"19096:1103:22","statements":[{"body":{"nativeSrc":"19137:22:22","nodeType":"YulBlock","src":"19137:22:22","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nativeSrc":"19139:16:22","nodeType":"YulIdentifier","src":"19139:16:22"},"nativeSrc":"19139:18:22","nodeType":"YulFunctionCall","src":"19139:18:22"},"nativeSrc":"19139:18:22","nodeType":"YulExpressionStatement","src":"19139:18:22"}]},"condition":{"arguments":[{"name":"len","nativeSrc":"19112:3:22","nodeType":"YulIdentifier","src":"19112:3:22"},{"kind":"number","nativeSrc":"19117:18:22","nodeType":"YulLiteral","src":"19117:18:22","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"19109:2:22","nodeType":"YulIdentifier","src":"19109:2:22"},"nativeSrc":"19109:27:22","nodeType":"YulFunctionCall","src":"19109:27:22"},"nativeSrc":"19106:53:22","nodeType":"YulIf","src":"19106:53:22"},{"expression":{"arguments":[{"name":"slot","nativeSrc":"19212:4:22","nodeType":"YulIdentifier","src":"19212:4:22"},{"arguments":[{"arguments":[{"name":"slot","nativeSrc":"19250:4:22","nodeType":"YulIdentifier","src":"19250:4:22"}],"functionName":{"name":"sload","nativeSrc":"19244:5:22","nodeType":"YulIdentifier","src":"19244:5:22"},"nativeSrc":"19244:11:22","nodeType":"YulFunctionCall","src":"19244:11:22"}],"functionName":{"name":"extract_byte_array_length","nativeSrc":"19218:25:22","nodeType":"YulIdentifier","src":"19218:25:22"},"nativeSrc":"19218:38:22","nodeType":"YulFunctionCall","src":"19218:38:22"},{"name":"len","nativeSrc":"19258:3:22","nodeType":"YulIdentifier","src":"19258:3:22"}],"functionName":{"name":"clean_up_bytearray_end_slots_string_storage","nativeSrc":"19168:43:22","nodeType":"YulIdentifier","src":"19168:43:22"},"nativeSrc":"19168:94:22","nodeType":"YulFunctionCall","src":"19168:94:22"},"nativeSrc":"19168:94:22","nodeType":"YulExpressionStatement","src":"19168:94:22"},{"nativeSrc":"19271:18:22","nodeType":"YulVariableDeclaration","src":"19271:18:22","value":{"kind":"number","nativeSrc":"19288:1:22","nodeType":"YulLiteral","src":"19288:1:22","type":"","value":"0"},"variables":[{"name":"srcOffset","nativeSrc":"19275:9:22","nodeType":"YulTypedName","src":"19275:9:22","type":""}]},{"cases":[{"body":{"nativeSrc":"19332:609:22","nodeType":"YulBlock","src":"19332:609:22","statements":[{"nativeSrc":"19346:32:22","nodeType":"YulVariableDeclaration","src":"19346:32:22","value":{"arguments":[{"name":"len","nativeSrc":"19365:3:22","nodeType":"YulIdentifier","src":"19365:3:22"},{"arguments":[{"kind":"number","nativeSrc":"19374:2:22","nodeType":"YulLiteral","src":"19374:2:22","type":"","value":"31"}],"functionName":{"name":"not","nativeSrc":"19370:3:22","nodeType":"YulIdentifier","src":"19370:3:22"},"nativeSrc":"19370:7:22","nodeType":"YulFunctionCall","src":"19370:7:22"}],"functionName":{"name":"and","nativeSrc":"19361:3:22","nodeType":"YulIdentifier","src":"19361:3:22"},"nativeSrc":"19361:17:22","nodeType":"YulFunctionCall","src":"19361:17:22"},"variables":[{"name":"loopEnd","nativeSrc":"19350:7:22","nodeType":"YulTypedName","src":"19350:7:22","type":""}]},{"nativeSrc":"19391:49:22","nodeType":"YulVariableDeclaration","src":"19391:49:22","value":{"arguments":[{"name":"slot","nativeSrc":"19435:4:22","nodeType":"YulIdentifier","src":"19435:4:22"}],"functionName":{"name":"array_dataslot_string_storage","nativeSrc":"19405:29:22","nodeType":"YulIdentifier","src":"19405:29:22"},"nativeSrc":"19405:35:22","nodeType":"YulFunctionCall","src":"19405:35:22"},"variables":[{"name":"dstPtr","nativeSrc":"19395:6:22","nodeType":"YulTypedName","src":"19395:6:22","type":""}]},{"nativeSrc":"19453:18:22","nodeType":"YulVariableDeclaration","src":"19453:18:22","value":{"name":"srcOffset","nativeSrc":"19462:9:22","nodeType":"YulIdentifier","src":"19462:9:22"},"variables":[{"name":"i","nativeSrc":"19457:1:22","nodeType":"YulTypedName","src":"19457:1:22","type":""}]},{"body":{"nativeSrc":"19541:172:22","nodeType":"YulBlock","src":"19541:172:22","statements":[{"expression":{"arguments":[{"name":"dstPtr","nativeSrc":"19566:6:22","nodeType":"YulIdentifier","src":"19566:6:22"},{"arguments":[{"arguments":[{"name":"src","nativeSrc":"19591:3:22","nodeType":"YulIdentifier","src":"19591:3:22"},{"name":"srcOffset","nativeSrc":"19596:9:22","nodeType":"YulIdentifier","src":"19596:9:22"}],"functionName":{"name":"add","nativeSrc":"19587:3:22","nodeType":"YulIdentifier","src":"19587:3:22"},"nativeSrc":"19587:19:22","nodeType":"YulFunctionCall","src":"19587:19:22"}],"functionName":{"name":"calldataload","nativeSrc":"19574:12:22","nodeType":"YulIdentifier","src":"19574:12:22"},"nativeSrc":"19574:33:22","nodeType":"YulFunctionCall","src":"19574:33:22"}],"functionName":{"name":"sstore","nativeSrc":"19559:6:22","nodeType":"YulIdentifier","src":"19559:6:22"},"nativeSrc":"19559:49:22","nodeType":"YulFunctionCall","src":"19559:49:22"},"nativeSrc":"19559:49:22","nodeType":"YulExpressionStatement","src":"19559:49:22"},{"nativeSrc":"19625:24:22","nodeType":"YulAssignment","src":"19625:24:22","value":{"arguments":[{"name":"dstPtr","nativeSrc":"19639:6:22","nodeType":"YulIdentifier","src":"19639:6:22"},{"kind":"number","nativeSrc":"19647:1:22","nodeType":"YulLiteral","src":"19647:1:22","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"19635:3:22","nodeType":"YulIdentifier","src":"19635:3:22"},"nativeSrc":"19635:14:22","nodeType":"YulFunctionCall","src":"19635:14:22"},"variableNames":[{"name":"dstPtr","nativeSrc":"19625:6:22","nodeType":"YulIdentifier","src":"19625:6:22"}]},{"nativeSrc":"19666:33:22","nodeType":"YulAssignment","src":"19666:33:22","value":{"arguments":[{"name":"srcOffset","nativeSrc":"19683:9:22","nodeType":"YulIdentifier","src":"19683:9:22"},{"kind":"number","nativeSrc":"19694:4:22","nodeType":"YulLiteral","src":"19694:4:22","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"19679:3:22","nodeType":"YulIdentifier","src":"19679:3:22"},"nativeSrc":"19679:20:22","nodeType":"YulFunctionCall","src":"19679:20:22"},"variableNames":[{"name":"srcOffset","nativeSrc":"19666:9:22","nodeType":"YulIdentifier","src":"19666:9:22"}]}]},"condition":{"arguments":[{"name":"i","nativeSrc":"19495:1:22","nodeType":"YulIdentifier","src":"19495:1:22"},{"name":"loopEnd","nativeSrc":"19498:7:22","nodeType":"YulIdentifier","src":"19498:7:22"}],"functionName":{"name":"lt","nativeSrc":"19492:2:22","nodeType":"YulIdentifier","src":"19492:2:22"},"nativeSrc":"19492:14:22","nodeType":"YulFunctionCall","src":"19492:14:22"},"nativeSrc":"19484:229:22","nodeType":"YulForLoop","post":{"nativeSrc":"19507:21:22","nodeType":"YulBlock","src":"19507:21:22","statements":[{"nativeSrc":"19509:17:22","nodeType":"YulAssignment","src":"19509:17:22","value":{"arguments":[{"name":"i","nativeSrc":"19518:1:22","nodeType":"YulIdentifier","src":"19518:1:22"},{"kind":"number","nativeSrc":"19521:4:22","nodeType":"YulLiteral","src":"19521:4:22","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"19514:3:22","nodeType":"YulIdentifier","src":"19514:3:22"},"nativeSrc":"19514:12:22","nodeType":"YulFunctionCall","src":"19514:12:22"},"variableNames":[{"name":"i","nativeSrc":"19509:1:22","nodeType":"YulIdentifier","src":"19509:1:22"}]}]},"pre":{"nativeSrc":"19488:3:22","nodeType":"YulBlock","src":"19488:3:22","statements":[]},"src":"19484:229:22"},{"body":{"nativeSrc":"19758:127:22","nodeType":"YulBlock","src":"19758:127:22","statements":[{"expression":{"arguments":[{"name":"dstPtr","nativeSrc":"19783:6:22","nodeType":"YulIdentifier","src":"19783:6:22"},{"arguments":[{"arguments":[{"arguments":[{"name":"src","nativeSrc":"19812:3:22","nodeType":"YulIdentifier","src":"19812:3:22"},{"name":"srcOffset","nativeSrc":"19817:9:22","nodeType":"YulIdentifier","src":"19817:9:22"}],"functionName":{"name":"add","nativeSrc":"19808:3:22","nodeType":"YulIdentifier","src":"19808:3:22"},"nativeSrc":"19808:19:22","nodeType":"YulFunctionCall","src":"19808:19:22"}],"functionName":{"name":"calldataload","nativeSrc":"19795:12:22","nodeType":"YulIdentifier","src":"19795:12:22"},"nativeSrc":"19795:33:22","nodeType":"YulFunctionCall","src":"19795:33:22"},{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"19846:1:22","nodeType":"YulLiteral","src":"19846:1:22","type":"","value":"3"},{"name":"len","nativeSrc":"19849:3:22","nodeType":"YulIdentifier","src":"19849:3:22"}],"functionName":{"name":"shl","nativeSrc":"19842:3:22","nodeType":"YulIdentifier","src":"19842:3:22"},"nativeSrc":"19842:11:22","nodeType":"YulFunctionCall","src":"19842:11:22"},{"kind":"number","nativeSrc":"19855:3:22","nodeType":"YulLiteral","src":"19855:3:22","type":"","value":"248"}],"functionName":{"name":"and","nativeSrc":"19838:3:22","nodeType":"YulIdentifier","src":"19838:3:22"},"nativeSrc":"19838:21:22","nodeType":"YulFunctionCall","src":"19838:21:22"},{"arguments":[{"kind":"number","nativeSrc":"19865:1:22","nodeType":"YulLiteral","src":"19865:1:22","type":"","value":"0"}],"functionName":{"name":"not","nativeSrc":"19861:3:22","nodeType":"YulIdentifier","src":"19861:3:22"},"nativeSrc":"19861:6:22","nodeType":"YulFunctionCall","src":"19861:6:22"}],"functionName":{"name":"shr","nativeSrc":"19834:3:22","nodeType":"YulIdentifier","src":"19834:3:22"},"nativeSrc":"19834:34:22","nodeType":"YulFunctionCall","src":"19834:34:22"}],"functionName":{"name":"not","nativeSrc":"19830:3:22","nodeType":"YulIdentifier","src":"19830:3:22"},"nativeSrc":"19830:39:22","nodeType":"YulFunctionCall","src":"19830:39:22"}],"functionName":{"name":"and","nativeSrc":"19791:3:22","nodeType":"YulIdentifier","src":"19791:3:22"},"nativeSrc":"19791:79:22","nodeType":"YulFunctionCall","src":"19791:79:22"}],"functionName":{"name":"sstore","nativeSrc":"19776:6:22","nodeType":"YulIdentifier","src":"19776:6:22"},"nativeSrc":"19776:95:22","nodeType":"YulFunctionCall","src":"19776:95:22"},"nativeSrc":"19776:95:22","nodeType":"YulExpressionStatement","src":"19776:95:22"}]},"condition":{"arguments":[{"name":"loopEnd","nativeSrc":"19732:7:22","nodeType":"YulIdentifier","src":"19732:7:22"},{"name":"len","nativeSrc":"19741:3:22","nodeType":"YulIdentifier","src":"19741:3:22"}],"functionName":{"name":"lt","nativeSrc":"19729:2:22","nodeType":"YulIdentifier","src":"19729:2:22"},"nativeSrc":"19729:16:22","nodeType":"YulFunctionCall","src":"19729:16:22"},"nativeSrc":"19726:159:22","nodeType":"YulIf","src":"19726:159:22"},{"expression":{"arguments":[{"name":"slot","nativeSrc":"19905:4:22","nodeType":"YulIdentifier","src":"19905:4:22"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"19919:1:22","nodeType":"YulLiteral","src":"19919:1:22","type":"","value":"1"},{"name":"len","nativeSrc":"19922:3:22","nodeType":"YulIdentifier","src":"19922:3:22"}],"functionName":{"name":"shl","nativeSrc":"19915:3:22","nodeType":"YulIdentifier","src":"19915:3:22"},"nativeSrc":"19915:11:22","nodeType":"YulFunctionCall","src":"19915:11:22"},{"kind":"number","nativeSrc":"19928:1:22","nodeType":"YulLiteral","src":"19928:1:22","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"19911:3:22","nodeType":"YulIdentifier","src":"19911:3:22"},"nativeSrc":"19911:19:22","nodeType":"YulFunctionCall","src":"19911:19:22"}],"functionName":{"name":"sstore","nativeSrc":"19898:6:22","nodeType":"YulIdentifier","src":"19898:6:22"},"nativeSrc":"19898:33:22","nodeType":"YulFunctionCall","src":"19898:33:22"},"nativeSrc":"19898:33:22","nodeType":"YulExpressionStatement","src":"19898:33:22"}]},"nativeSrc":"19325:616:22","nodeType":"YulCase","src":"19325:616:22","value":{"kind":"number","nativeSrc":"19330:1:22","nodeType":"YulLiteral","src":"19330:1:22","type":"","value":"1"}},{"body":{"nativeSrc":"19958:235:22","nodeType":"YulBlock","src":"19958:235:22","statements":[{"nativeSrc":"19972:14:22","nodeType":"YulVariableDeclaration","src":"19972:14:22","value":{"kind":"number","nativeSrc":"19985:1:22","nodeType":"YulLiteral","src":"19985:1:22","type":"","value":"0"},"variables":[{"name":"value","nativeSrc":"19976:5:22","nodeType":"YulTypedName","src":"19976:5:22","type":""}]},{"body":{"nativeSrc":"20018:74:22","nodeType":"YulBlock","src":"20018:74:22","statements":[{"nativeSrc":"20036:42:22","nodeType":"YulAssignment","src":"20036:42:22","value":{"arguments":[{"arguments":[{"name":"src","nativeSrc":"20062:3:22","nodeType":"YulIdentifier","src":"20062:3:22"},{"name":"srcOffset","nativeSrc":"20067:9:22","nodeType":"YulIdentifier","src":"20067:9:22"}],"functionName":{"name":"add","nativeSrc":"20058:3:22","nodeType":"YulIdentifier","src":"20058:3:22"},"nativeSrc":"20058:19:22","nodeType":"YulFunctionCall","src":"20058:19:22"}],"functionName":{"name":"calldataload","nativeSrc":"20045:12:22","nodeType":"YulIdentifier","src":"20045:12:22"},"nativeSrc":"20045:33:22","nodeType":"YulFunctionCall","src":"20045:33:22"},"variableNames":[{"name":"value","nativeSrc":"20036:5:22","nodeType":"YulIdentifier","src":"20036:5:22"}]}]},"condition":{"name":"len","nativeSrc":"20002:3:22","nodeType":"YulIdentifier","src":"20002:3:22"},"nativeSrc":"19999:93:22","nodeType":"YulIf","src":"19999:93:22"},{"expression":{"arguments":[{"name":"slot","nativeSrc":"20112:4:22","nodeType":"YulIdentifier","src":"20112:4:22"},{"arguments":[{"name":"value","nativeSrc":"20171:5:22","nodeType":"YulIdentifier","src":"20171:5:22"},{"name":"len","nativeSrc":"20178:3:22","nodeType":"YulIdentifier","src":"20178:3:22"}],"functionName":{"name":"extract_used_part_and_set_length_of_short_byte_array","nativeSrc":"20118:52:22","nodeType":"YulIdentifier","src":"20118:52:22"},"nativeSrc":"20118:64:22","nodeType":"YulFunctionCall","src":"20118:64:22"}],"functionName":{"name":"sstore","nativeSrc":"20105:6:22","nodeType":"YulIdentifier","src":"20105:6:22"},"nativeSrc":"20105:78:22","nodeType":"YulFunctionCall","src":"20105:78:22"},"nativeSrc":"20105:78:22","nodeType":"YulExpressionStatement","src":"20105:78:22"}]},"nativeSrc":"19950:243:22","nodeType":"YulCase","src":"19950:243:22","value":"default"}],"expression":{"arguments":[{"name":"len","nativeSrc":"19308:3:22","nodeType":"YulIdentifier","src":"19308:3:22"},{"kind":"number","nativeSrc":"19313:2:22","nodeType":"YulLiteral","src":"19313:2:22","type":"","value":"31"}],"functionName":{"name":"gt","nativeSrc":"19305:2:22","nodeType":"YulIdentifier","src":"19305:2:22"},"nativeSrc":"19305:11:22","nodeType":"YulFunctionCall","src":"19305:11:22"},"nativeSrc":"19298:895:22","nodeType":"YulSwitch","src":"19298:895:22"}]},"name":"copy_byte_array_to_storage_from_t_string_calldata_ptr_to_t_string_storage","nativeSrc":"18993:1206:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nativeSrc":"19076:4:22","nodeType":"YulTypedName","src":"19076:4:22","type":""},{"name":"src","nativeSrc":"19082:3:22","nodeType":"YulTypedName","src":"19082:3:22","type":""},{"name":"len","nativeSrc":"19087:3:22","nodeType":"YulTypedName","src":"19087:3:22","type":""}],"src":"18993:1206:22"},{"body":{"nativeSrc":"20393:248:22","nodeType":"YulBlock","src":"20393:248:22","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"20410:9:22","nodeType":"YulIdentifier","src":"20410:9:22"},{"kind":"number","nativeSrc":"20421:2:22","nodeType":"YulLiteral","src":"20421:2:22","type":"","value":"64"}],"functionName":{"name":"mstore","nativeSrc":"20403:6:22","nodeType":"YulIdentifier","src":"20403:6:22"},"nativeSrc":"20403:21:22","nodeType":"YulFunctionCall","src":"20403:21:22"},"nativeSrc":"20403:21:22","nodeType":"YulExpressionStatement","src":"20403:21:22"},{"nativeSrc":"20433:76:22","nodeType":"YulVariableDeclaration","src":"20433:76:22","value":{"arguments":[{"name":"value0","nativeSrc":"20474:6:22","nodeType":"YulIdentifier","src":"20474:6:22"},{"name":"value1","nativeSrc":"20482:6:22","nodeType":"YulIdentifier","src":"20482:6:22"},{"arguments":[{"name":"headStart","nativeSrc":"20494:9:22","nodeType":"YulIdentifier","src":"20494:9:22"},{"kind":"number","nativeSrc":"20505:2:22","nodeType":"YulLiteral","src":"20505:2:22","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"20490:3:22","nodeType":"YulIdentifier","src":"20490:3:22"},"nativeSrc":"20490:18:22","nodeType":"YulFunctionCall","src":"20490:18:22"}],"functionName":{"name":"abi_encode_string_calldata","nativeSrc":"20447:26:22","nodeType":"YulIdentifier","src":"20447:26:22"},"nativeSrc":"20447:62:22","nodeType":"YulFunctionCall","src":"20447:62:22"},"variables":[{"name":"tail_1","nativeSrc":"20437:6:22","nodeType":"YulTypedName","src":"20437:6:22","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"20529:9:22","nodeType":"YulIdentifier","src":"20529:9:22"},{"kind":"number","nativeSrc":"20540:2:22","nodeType":"YulLiteral","src":"20540:2:22","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"20525:3:22","nodeType":"YulIdentifier","src":"20525:3:22"},"nativeSrc":"20525:18:22","nodeType":"YulFunctionCall","src":"20525:18:22"},{"arguments":[{"name":"tail_1","nativeSrc":"20549:6:22","nodeType":"YulIdentifier","src":"20549:6:22"},{"name":"headStart","nativeSrc":"20557:9:22","nodeType":"YulIdentifier","src":"20557:9:22"}],"functionName":{"name":"sub","nativeSrc":"20545:3:22","nodeType":"YulIdentifier","src":"20545:3:22"},"nativeSrc":"20545:22:22","nodeType":"YulFunctionCall","src":"20545:22:22"}],"functionName":{"name":"mstore","nativeSrc":"20518:6:22","nodeType":"YulIdentifier","src":"20518:6:22"},"nativeSrc":"20518:50:22","nodeType":"YulFunctionCall","src":"20518:50:22"},"nativeSrc":"20518:50:22","nodeType":"YulExpressionStatement","src":"20518:50:22"},{"nativeSrc":"20577:58:22","nodeType":"YulAssignment","src":"20577:58:22","value":{"arguments":[{"name":"value2","nativeSrc":"20612:6:22","nodeType":"YulIdentifier","src":"20612:6:22"},{"name":"value3","nativeSrc":"20620:6:22","nodeType":"YulIdentifier","src":"20620:6:22"},{"name":"tail_1","nativeSrc":"20628:6:22","nodeType":"YulIdentifier","src":"20628:6:22"}],"functionName":{"name":"abi_encode_string_calldata","nativeSrc":"20585:26:22","nodeType":"YulIdentifier","src":"20585:26:22"},"nativeSrc":"20585:50:22","nodeType":"YulFunctionCall","src":"20585:50:22"},"variableNames":[{"name":"tail","nativeSrc":"20577:4:22","nodeType":"YulIdentifier","src":"20577:4:22"}]}]},"name":"abi_encode_tuple_t_string_calldata_ptr_t_string_calldata_ptr__to_t_string_memory_ptr_t_string_memory_ptr__fromStack_reversed","nativeSrc":"20204:437:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"20338:9:22","nodeType":"YulTypedName","src":"20338:9:22","type":""},{"name":"value3","nativeSrc":"20349:6:22","nodeType":"YulTypedName","src":"20349:6:22","type":""},{"name":"value2","nativeSrc":"20357:6:22","nodeType":"YulTypedName","src":"20357:6:22","type":""},{"name":"value1","nativeSrc":"20365:6:22","nodeType":"YulTypedName","src":"20365:6:22","type":""},{"name":"value0","nativeSrc":"20373:6:22","nodeType":"YulTypedName","src":"20373:6:22","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"20384:4:22","nodeType":"YulTypedName","src":"20384:4:22","type":""}],"src":"20204:437:22"},{"body":{"nativeSrc":"20849:282:22","nodeType":"YulBlock","src":"20849:282:22","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"20866:9:22","nodeType":"YulIdentifier","src":"20866:9:22"},{"arguments":[{"name":"value0","nativeSrc":"20881:6:22","nodeType":"YulIdentifier","src":"20881:6:22"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"20897:3:22","nodeType":"YulLiteral","src":"20897:3:22","type":"","value":"160"},{"kind":"number","nativeSrc":"20902:1:22","nodeType":"YulLiteral","src":"20902:1:22","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"20893:3:22","nodeType":"YulIdentifier","src":"20893:3:22"},"nativeSrc":"20893:11:22","nodeType":"YulFunctionCall","src":"20893:11:22"},{"kind":"number","nativeSrc":"20906:1:22","nodeType":"YulLiteral","src":"20906:1:22","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"20889:3:22","nodeType":"YulIdentifier","src":"20889:3:22"},"nativeSrc":"20889:19:22","nodeType":"YulFunctionCall","src":"20889:19:22"}],"functionName":{"name":"and","nativeSrc":"20877:3:22","nodeType":"YulIdentifier","src":"20877:3:22"},"nativeSrc":"20877:32:22","nodeType":"YulFunctionCall","src":"20877:32:22"}],"functionName":{"name":"mstore","nativeSrc":"20859:6:22","nodeType":"YulIdentifier","src":"20859:6:22"},"nativeSrc":"20859:51:22","nodeType":"YulFunctionCall","src":"20859:51:22"},"nativeSrc":"20859:51:22","nodeType":"YulExpressionStatement","src":"20859:51:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"20930:9:22","nodeType":"YulIdentifier","src":"20930:9:22"},{"kind":"number","nativeSrc":"20941:2:22","nodeType":"YulLiteral","src":"20941:2:22","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"20926:3:22","nodeType":"YulIdentifier","src":"20926:3:22"},"nativeSrc":"20926:18:22","nodeType":"YulFunctionCall","src":"20926:18:22"},{"arguments":[{"name":"value1","nativeSrc":"20950:6:22","nodeType":"YulIdentifier","src":"20950:6:22"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"20966:3:22","nodeType":"YulLiteral","src":"20966:3:22","type":"","value":"160"},{"kind":"number","nativeSrc":"20971:1:22","nodeType":"YulLiteral","src":"20971:1:22","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"20962:3:22","nodeType":"YulIdentifier","src":"20962:3:22"},"nativeSrc":"20962:11:22","nodeType":"YulFunctionCall","src":"20962:11:22"},{"kind":"number","nativeSrc":"20975:1:22","nodeType":"YulLiteral","src":"20975:1:22","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"20958:3:22","nodeType":"YulIdentifier","src":"20958:3:22"},"nativeSrc":"20958:19:22","nodeType":"YulFunctionCall","src":"20958:19:22"}],"functionName":{"name":"and","nativeSrc":"20946:3:22","nodeType":"YulIdentifier","src":"20946:3:22"},"nativeSrc":"20946:32:22","nodeType":"YulFunctionCall","src":"20946:32:22"}],"functionName":{"name":"mstore","nativeSrc":"20919:6:22","nodeType":"YulIdentifier","src":"20919:6:22"},"nativeSrc":"20919:60:22","nodeType":"YulFunctionCall","src":"20919:60:22"},"nativeSrc":"20919:60:22","nodeType":"YulExpressionStatement","src":"20919:60:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"20999:9:22","nodeType":"YulIdentifier","src":"20999:9:22"},{"kind":"number","nativeSrc":"21010:2:22","nodeType":"YulLiteral","src":"21010:2:22","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"20995:3:22","nodeType":"YulIdentifier","src":"20995:3:22"},"nativeSrc":"20995:18:22","nodeType":"YulFunctionCall","src":"20995:18:22"},{"name":"value2","nativeSrc":"21015:6:22","nodeType":"YulIdentifier","src":"21015:6:22"}],"functionName":{"name":"mstore","nativeSrc":"20988:6:22","nodeType":"YulIdentifier","src":"20988:6:22"},"nativeSrc":"20988:34:22","nodeType":"YulFunctionCall","src":"20988:34:22"},"nativeSrc":"20988:34:22","nodeType":"YulExpressionStatement","src":"20988:34:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"21042:9:22","nodeType":"YulIdentifier","src":"21042:9:22"},{"kind":"number","nativeSrc":"21053:2:22","nodeType":"YulLiteral","src":"21053:2:22","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"21038:3:22","nodeType":"YulIdentifier","src":"21038:3:22"},"nativeSrc":"21038:18:22","nodeType":"YulFunctionCall","src":"21038:18:22"},{"kind":"number","nativeSrc":"21058:3:22","nodeType":"YulLiteral","src":"21058:3:22","type":"","value":"128"}],"functionName":{"name":"mstore","nativeSrc":"21031:6:22","nodeType":"YulIdentifier","src":"21031:6:22"},"nativeSrc":"21031:31:22","nodeType":"YulFunctionCall","src":"21031:31:22"},"nativeSrc":"21031:31:22","nodeType":"YulExpressionStatement","src":"21031:31:22"},{"nativeSrc":"21071:54:22","nodeType":"YulAssignment","src":"21071:54:22","value":{"arguments":[{"name":"value3","nativeSrc":"21097:6:22","nodeType":"YulIdentifier","src":"21097:6:22"},{"arguments":[{"name":"headStart","nativeSrc":"21109:9:22","nodeType":"YulIdentifier","src":"21109:9:22"},{"kind":"number","nativeSrc":"21120:3:22","nodeType":"YulLiteral","src":"21120:3:22","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"21105:3:22","nodeType":"YulIdentifier","src":"21105:3:22"},"nativeSrc":"21105:19:22","nodeType":"YulFunctionCall","src":"21105:19:22"}],"functionName":{"name":"abi_encode_string","nativeSrc":"21079:17:22","nodeType":"YulIdentifier","src":"21079:17:22"},"nativeSrc":"21079:46:22","nodeType":"YulFunctionCall","src":"21079:46:22"},"variableNames":[{"name":"tail","nativeSrc":"21071:4:22","nodeType":"YulIdentifier","src":"21071:4:22"}]}]},"name":"abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed","nativeSrc":"20646:485:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"20794:9:22","nodeType":"YulTypedName","src":"20794:9:22","type":""},{"name":"value3","nativeSrc":"20805:6:22","nodeType":"YulTypedName","src":"20805:6:22","type":""},{"name":"value2","nativeSrc":"20813:6:22","nodeType":"YulTypedName","src":"20813:6:22","type":""},{"name":"value1","nativeSrc":"20821:6:22","nodeType":"YulTypedName","src":"20821:6:22","type":""},{"name":"value0","nativeSrc":"20829:6:22","nodeType":"YulTypedName","src":"20829:6:22","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"20840:4:22","nodeType":"YulTypedName","src":"20840:4:22","type":""}],"src":"20646:485:22"},{"body":{"nativeSrc":"21216:169:22","nodeType":"YulBlock","src":"21216:169:22","statements":[{"body":{"nativeSrc":"21262:16:22","nodeType":"YulBlock","src":"21262:16:22","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"21271:1:22","nodeType":"YulLiteral","src":"21271:1:22","type":"","value":"0"},{"kind":"number","nativeSrc":"21274:1:22","nodeType":"YulLiteral","src":"21274:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"21264:6:22","nodeType":"YulIdentifier","src":"21264:6:22"},"nativeSrc":"21264:12:22","nodeType":"YulFunctionCall","src":"21264:12:22"},"nativeSrc":"21264:12:22","nodeType":"YulExpressionStatement","src":"21264:12:22"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"21237:7:22","nodeType":"YulIdentifier","src":"21237:7:22"},{"name":"headStart","nativeSrc":"21246:9:22","nodeType":"YulIdentifier","src":"21246:9:22"}],"functionName":{"name":"sub","nativeSrc":"21233:3:22","nodeType":"YulIdentifier","src":"21233:3:22"},"nativeSrc":"21233:23:22","nodeType":"YulFunctionCall","src":"21233:23:22"},{"kind":"number","nativeSrc":"21258:2:22","nodeType":"YulLiteral","src":"21258:2:22","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"21229:3:22","nodeType":"YulIdentifier","src":"21229:3:22"},"nativeSrc":"21229:32:22","nodeType":"YulFunctionCall","src":"21229:32:22"},"nativeSrc":"21226:52:22","nodeType":"YulIf","src":"21226:52:22"},{"nativeSrc":"21287:29:22","nodeType":"YulVariableDeclaration","src":"21287:29:22","value":{"arguments":[{"name":"headStart","nativeSrc":"21306:9:22","nodeType":"YulIdentifier","src":"21306:9:22"}],"functionName":{"name":"mload","nativeSrc":"21300:5:22","nodeType":"YulIdentifier","src":"21300:5:22"},"nativeSrc":"21300:16:22","nodeType":"YulFunctionCall","src":"21300:16:22"},"variables":[{"name":"value","nativeSrc":"21291:5:22","nodeType":"YulTypedName","src":"21291:5:22","type":""}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"21349:5:22","nodeType":"YulIdentifier","src":"21349:5:22"}],"functionName":{"name":"validator_revert_bytes4","nativeSrc":"21325:23:22","nodeType":"YulIdentifier","src":"21325:23:22"},"nativeSrc":"21325:30:22","nodeType":"YulFunctionCall","src":"21325:30:22"},"nativeSrc":"21325:30:22","nodeType":"YulExpressionStatement","src":"21325:30:22"},{"nativeSrc":"21364:15:22","nodeType":"YulAssignment","src":"21364:15:22","value":{"name":"value","nativeSrc":"21374:5:22","nodeType":"YulIdentifier","src":"21374:5:22"},"variableNames":[{"name":"value0","nativeSrc":"21364:6:22","nodeType":"YulIdentifier","src":"21364:6:22"}]}]},"name":"abi_decode_tuple_t_bytes4_fromMemory","nativeSrc":"21136:249:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"21182:9:22","nodeType":"YulTypedName","src":"21182:9:22","type":""},{"name":"dataEnd","nativeSrc":"21193:7:22","nodeType":"YulTypedName","src":"21193:7:22","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"21205:6:22","nodeType":"YulTypedName","src":"21205:6:22","type":""}],"src":"21136:249:22"},{"body":{"nativeSrc":"21577:309:22","nodeType":"YulBlock","src":"21577:309:22","statements":[{"nativeSrc":"21587:27:22","nodeType":"YulVariableDeclaration","src":"21587:27:22","value":{"arguments":[{"name":"value0","nativeSrc":"21607:6:22","nodeType":"YulIdentifier","src":"21607:6:22"}],"functionName":{"name":"mload","nativeSrc":"21601:5:22","nodeType":"YulIdentifier","src":"21601:5:22"},"nativeSrc":"21601:13:22","nodeType":"YulFunctionCall","src":"21601:13:22"},"variables":[{"name":"length","nativeSrc":"21591:6:22","nodeType":"YulTypedName","src":"21591:6:22","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value0","nativeSrc":"21662:6:22","nodeType":"YulIdentifier","src":"21662:6:22"},{"kind":"number","nativeSrc":"21670:4:22","nodeType":"YulLiteral","src":"21670:4:22","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"21658:3:22","nodeType":"YulIdentifier","src":"21658:3:22"},"nativeSrc":"21658:17:22","nodeType":"YulFunctionCall","src":"21658:17:22"},{"name":"pos","nativeSrc":"21677:3:22","nodeType":"YulIdentifier","src":"21677:3:22"},{"name":"length","nativeSrc":"21682:6:22","nodeType":"YulIdentifier","src":"21682:6:22"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nativeSrc":"21623:34:22","nodeType":"YulIdentifier","src":"21623:34:22"},"nativeSrc":"21623:66:22","nodeType":"YulFunctionCall","src":"21623:66:22"},"nativeSrc":"21623:66:22","nodeType":"YulExpressionStatement","src":"21623:66:22"},{"nativeSrc":"21698:29:22","nodeType":"YulVariableDeclaration","src":"21698:29:22","value":{"arguments":[{"name":"pos","nativeSrc":"21715:3:22","nodeType":"YulIdentifier","src":"21715:3:22"},{"name":"length","nativeSrc":"21720:6:22","nodeType":"YulIdentifier","src":"21720:6:22"}],"functionName":{"name":"add","nativeSrc":"21711:3:22","nodeType":"YulIdentifier","src":"21711:3:22"},"nativeSrc":"21711:16:22","nodeType":"YulFunctionCall","src":"21711:16:22"},"variables":[{"name":"end_1","nativeSrc":"21702:5:22","nodeType":"YulTypedName","src":"21702:5:22","type":""}]},{"nativeSrc":"21736:29:22","nodeType":"YulVariableDeclaration","src":"21736:29:22","value":{"arguments":[{"name":"value1","nativeSrc":"21758:6:22","nodeType":"YulIdentifier","src":"21758:6:22"}],"functionName":{"name":"mload","nativeSrc":"21752:5:22","nodeType":"YulIdentifier","src":"21752:5:22"},"nativeSrc":"21752:13:22","nodeType":"YulFunctionCall","src":"21752:13:22"},"variables":[{"name":"length_1","nativeSrc":"21740:8:22","nodeType":"YulTypedName","src":"21740:8:22","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value1","nativeSrc":"21813:6:22","nodeType":"YulIdentifier","src":"21813:6:22"},{"kind":"number","nativeSrc":"21821:4:22","nodeType":"YulLiteral","src":"21821:4:22","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"21809:3:22","nodeType":"YulIdentifier","src":"21809:3:22"},"nativeSrc":"21809:17:22","nodeType":"YulFunctionCall","src":"21809:17:22"},{"name":"end_1","nativeSrc":"21828:5:22","nodeType":"YulIdentifier","src":"21828:5:22"},{"name":"length_1","nativeSrc":"21835:8:22","nodeType":"YulIdentifier","src":"21835:8:22"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nativeSrc":"21774:34:22","nodeType":"YulIdentifier","src":"21774:34:22"},"nativeSrc":"21774:70:22","nodeType":"YulFunctionCall","src":"21774:70:22"},"nativeSrc":"21774:70:22","nodeType":"YulExpressionStatement","src":"21774:70:22"},{"nativeSrc":"21853:27:22","nodeType":"YulAssignment","src":"21853:27:22","value":{"arguments":[{"name":"end_1","nativeSrc":"21864:5:22","nodeType":"YulIdentifier","src":"21864:5:22"},{"name":"length_1","nativeSrc":"21871:8:22","nodeType":"YulIdentifier","src":"21871:8:22"}],"functionName":{"name":"add","nativeSrc":"21860:3:22","nodeType":"YulIdentifier","src":"21860:3:22"},"nativeSrc":"21860:20:22","nodeType":"YulFunctionCall","src":"21860:20:22"},"variableNames":[{"name":"end","nativeSrc":"21853:3:22","nodeType":"YulIdentifier","src":"21853:3:22"}]}]},"name":"abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed","nativeSrc":"21390:496:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"21545:3:22","nodeType":"YulTypedName","src":"21545:3:22","type":""},{"name":"value1","nativeSrc":"21550:6:22","nodeType":"YulTypedName","src":"21550:6:22","type":""},{"name":"value0","nativeSrc":"21558:6:22","nodeType":"YulTypedName","src":"21558:6:22","type":""}],"returnVariables":[{"name":"end","nativeSrc":"21569:3:22","nodeType":"YulTypedName","src":"21569:3:22","type":""}],"src":"21390:496:22"},{"body":{"nativeSrc":"22020:145:22","nodeType":"YulBlock","src":"22020:145:22","statements":[{"nativeSrc":"22030:26:22","nodeType":"YulAssignment","src":"22030:26:22","value":{"arguments":[{"name":"headStart","nativeSrc":"22042:9:22","nodeType":"YulIdentifier","src":"22042:9:22"},{"kind":"number","nativeSrc":"22053:2:22","nodeType":"YulLiteral","src":"22053:2:22","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"22038:3:22","nodeType":"YulIdentifier","src":"22038:3:22"},"nativeSrc":"22038:18:22","nodeType":"YulFunctionCall","src":"22038:18:22"},"variableNames":[{"name":"tail","nativeSrc":"22030:4:22","nodeType":"YulIdentifier","src":"22030:4:22"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"22072:9:22","nodeType":"YulIdentifier","src":"22072:9:22"},{"arguments":[{"name":"value0","nativeSrc":"22087:6:22","nodeType":"YulIdentifier","src":"22087:6:22"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"22103:3:22","nodeType":"YulLiteral","src":"22103:3:22","type":"","value":"160"},{"kind":"number","nativeSrc":"22108:1:22","nodeType":"YulLiteral","src":"22108:1:22","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"22099:3:22","nodeType":"YulIdentifier","src":"22099:3:22"},"nativeSrc":"22099:11:22","nodeType":"YulFunctionCall","src":"22099:11:22"},{"kind":"number","nativeSrc":"22112:1:22","nodeType":"YulLiteral","src":"22112:1:22","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"22095:3:22","nodeType":"YulIdentifier","src":"22095:3:22"},"nativeSrc":"22095:19:22","nodeType":"YulFunctionCall","src":"22095:19:22"}],"functionName":{"name":"and","nativeSrc":"22083:3:22","nodeType":"YulIdentifier","src":"22083:3:22"},"nativeSrc":"22083:32:22","nodeType":"YulFunctionCall","src":"22083:32:22"}],"functionName":{"name":"mstore","nativeSrc":"22065:6:22","nodeType":"YulIdentifier","src":"22065:6:22"},"nativeSrc":"22065:51:22","nodeType":"YulFunctionCall","src":"22065:51:22"},"nativeSrc":"22065:51:22","nodeType":"YulExpressionStatement","src":"22065:51:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"22136:9:22","nodeType":"YulIdentifier","src":"22136:9:22"},{"kind":"number","nativeSrc":"22147:2:22","nodeType":"YulLiteral","src":"22147:2:22","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"22132:3:22","nodeType":"YulIdentifier","src":"22132:3:22"},"nativeSrc":"22132:18:22","nodeType":"YulFunctionCall","src":"22132:18:22"},{"name":"value1","nativeSrc":"22152:6:22","nodeType":"YulIdentifier","src":"22152:6:22"}],"functionName":{"name":"mstore","nativeSrc":"22125:6:22","nodeType":"YulIdentifier","src":"22125:6:22"},"nativeSrc":"22125:34:22","nodeType":"YulFunctionCall","src":"22125:34:22"},"nativeSrc":"22125:34:22","nodeType":"YulExpressionStatement","src":"22125:34:22"}]},"name":"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed","nativeSrc":"21891:274:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"21981:9:22","nodeType":"YulTypedName","src":"21981:9:22","type":""},{"name":"value1","nativeSrc":"21992:6:22","nodeType":"YulTypedName","src":"21992:6:22","type":""},{"name":"value0","nativeSrc":"22000:6:22","nodeType":"YulTypedName","src":"22000:6:22","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"22011:4:22","nodeType":"YulTypedName","src":"22011:4:22","type":""}],"src":"21891:274:22"},{"body":{"nativeSrc":"22202:95:22","nodeType":"YulBlock","src":"22202:95:22","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"22219:1:22","nodeType":"YulLiteral","src":"22219:1:22","type":"","value":"0"},{"arguments":[{"kind":"number","nativeSrc":"22226:3:22","nodeType":"YulLiteral","src":"22226:3:22","type":"","value":"224"},{"kind":"number","nativeSrc":"22231:10:22","nodeType":"YulLiteral","src":"22231:10:22","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nativeSrc":"22222:3:22","nodeType":"YulIdentifier","src":"22222:3:22"},"nativeSrc":"22222:20:22","nodeType":"YulFunctionCall","src":"22222:20:22"}],"functionName":{"name":"mstore","nativeSrc":"22212:6:22","nodeType":"YulIdentifier","src":"22212:6:22"},"nativeSrc":"22212:31:22","nodeType":"YulFunctionCall","src":"22212:31:22"},"nativeSrc":"22212:31:22","nodeType":"YulExpressionStatement","src":"22212:31:22"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"22259:1:22","nodeType":"YulLiteral","src":"22259:1:22","type":"","value":"4"},{"kind":"number","nativeSrc":"22262:4:22","nodeType":"YulLiteral","src":"22262:4:22","type":"","value":"0x12"}],"functionName":{"name":"mstore","nativeSrc":"22252:6:22","nodeType":"YulIdentifier","src":"22252:6:22"},"nativeSrc":"22252:15:22","nodeType":"YulFunctionCall","src":"22252:15:22"},"nativeSrc":"22252:15:22","nodeType":"YulExpressionStatement","src":"22252:15:22"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"22283:1:22","nodeType":"YulLiteral","src":"22283:1:22","type":"","value":"0"},{"kind":"number","nativeSrc":"22286:4:22","nodeType":"YulLiteral","src":"22286:4:22","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"22276:6:22","nodeType":"YulIdentifier","src":"22276:6:22"},"nativeSrc":"22276:15:22","nodeType":"YulFunctionCall","src":"22276:15:22"},"nativeSrc":"22276:15:22","nodeType":"YulExpressionStatement","src":"22276:15:22"}]},"name":"panic_error_0x12","nativeSrc":"22170:127:22","nodeType":"YulFunctionDefinition","src":"22170:127:22"}]},"contents":"{\n    { }\n    function validator_revert_bytes4(value)\n    {\n        if iszero(eq(value, and(value, shl(224, 0xffffffff)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_bytes4(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function copy_memory_to_memory_with_cleanup(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n    function abi_encode_string(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), add(pos, 0x20), length)\n        end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_string(value0, add(headStart, 32))\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := 0\n        value := calldataload(headStart)\n        value0 := value\n    }\n    function abi_encode_address(value, pos)\n    {\n        mstore(pos, and(value, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let value := 0\n        value := calldataload(add(headStart, 32))\n        value1 := value\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        let value := 0\n        value := calldataload(add(headStart, 64))\n        value2 := value\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_string_calldata(offset, end) -> arrayPos, length\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        length := calldataload(offset)\n        if gt(length, 0xffffffffffffffff) { revert(0, 0) }\n        arrayPos := add(offset, 0x20)\n        if gt(add(add(offset, length), 0x20), end) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256t_string_calldata_ptr(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let value := 0\n        value := calldataload(add(headStart, 32))\n        value1 := value\n        let offset := calldataload(add(headStart, 64))\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        let value2_1, value3_1 := abi_decode_string_calldata(add(headStart, offset), dataEnd)\n        value2 := value2_1\n        value3 := value3_1\n    }\n    function abi_encode_tuple_t_contract$_INRCoin_$5690__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_available_length_string(src, length, end) -> array\n    {\n        let size := 0\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n        let result := and(add(length, 31), not(31))\n        size := add(result, 0x20)\n        let memPtr := 0\n        memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(result, 63), not(31)))\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        array := memPtr\n        mstore(memPtr, length)\n        if gt(add(src, length), end) { revert(0, 0) }\n        calldatacopy(add(memPtr, 0x20), src, length)\n        mstore(add(add(memPtr, length), 0x20), 0)\n    }\n    function abi_decode_tuple_t_addresst_string_memory_ptr(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let offset := calldataload(add(headStart, 32))\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        let _1 := add(headStart, offset)\n        if iszero(slt(add(_1, 0x1f), dataEnd)) { revert(0, 0) }\n        value1 := abi_decode_available_length_string(add(_1, 32), calldataload(_1), dataEnd)\n    }\n    function abi_encode_array_address_dyn(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        pos := add(pos, 0x20)\n        let srcPtr := add(value, 0x20)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, and(mload(srcPtr), sub(shl(160, 1), 1)))\n            pos := add(pos, 0x20)\n            srcPtr := add(srcPtr, 0x20)\n        }\n        end := pos\n    }\n    function abi_encode_tuple_t_struct$_Coaster_$5736_memory_ptr__to_t_struct$_Coaster_$5736_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        let memberValue0 := mload(value0)\n        mstore(add(headStart, 32), 0x0100)\n        let tail_1 := abi_encode_string(memberValue0, add(headStart, 288))\n        let memberValue0_1 := mload(add(value0, 32))\n        mstore(add(headStart, 64), add(sub(tail_1, headStart), not(31)))\n        let tail_2 := abi_encode_string(memberValue0_1, tail_1)\n        let memberValue0_2 := mload(add(value0, 64))\n        mstore(add(headStart, 96), add(sub(tail_2, headStart), not(31)))\n        let tail_3 := abi_encode_string(memberValue0_2, tail_2)\n        let memberValue0_3 := mload(add(value0, 96))\n        mstore(add(headStart, 128), add(sub(tail_3, headStart), not(31)))\n        let tail_4 := abi_encode_string(memberValue0_3, tail_3)\n        let memberValue0_4 := mload(add(value0, 128))\n        abi_encode_address(memberValue0_4, add(headStart, 160))\n        let memberValue0_5 := mload(add(value0, 160))\n        mstore(add(headStart, 192), add(sub(tail_4, headStart), not(31)))\n        let tail_5 := abi_encode_string(memberValue0_5, tail_4)\n        let memberValue0_6 := mload(add(value0, 192))\n        abi_encode_address(memberValue0_6, add(headStart, 224))\n        let memberValue0_7 := mload(add(value0, 224))\n        mstore(add(headStart, 0x0100), add(sub(tail_5, headStart), not(31)))\n        tail := abi_encode_array_address_dyn(memberValue0_7, tail_5)\n    }\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let value := calldataload(add(headStart, 32))\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value1 := value\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        let value := 0\n        value := calldataload(add(headStart, 64))\n        value2 := value\n        let offset := calldataload(add(headStart, 96))\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        let _1 := add(headStart, offset)\n        if iszero(slt(add(_1, 0x1f), dataEnd)) { revert(0, 0) }\n        value3 := abi_decode_available_length_string(add(_1, 32), calldataload(_1), dataEnd)\n    }\n    function abi_decode_tuple_t_addresst_string_calldata_ptrt_string_calldata_ptrt_string_calldata_ptrt_string_calldata_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5, value6, value7, value8\n    {\n        if slt(sub(dataEnd, headStart), 160) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let offset := calldataload(add(headStart, 32))\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        let value1_1, value2_1 := abi_decode_string_calldata(add(headStart, offset), dataEnd)\n        value1 := value1_1\n        value2 := value2_1\n        let offset_1 := calldataload(add(headStart, 64))\n        if gt(offset_1, 0xffffffffffffffff) { revert(0, 0) }\n        let value3_1, value4_1 := abi_decode_string_calldata(add(headStart, offset_1), dataEnd)\n        value3 := value3_1\n        value4 := value4_1\n        let offset_2 := calldataload(add(headStart, 96))\n        if gt(offset_2, 0xffffffffffffffff) { revert(0, 0) }\n        let value5_1, value6_1 := abi_decode_string_calldata(add(headStart, offset_2), dataEnd)\n        value5 := value5_1\n        value6 := value6_1\n        let offset_3 := calldataload(add(headStart, 128))\n        if gt(offset_3, 0xffffffffffffffff) { revert(0, 0) }\n        let value7_1, value8_1 := abi_decode_string_calldata(add(headStart, offset_3), dataEnd)\n        value7 := value7_1\n        value8 := value8_1\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_addresst_string_calldata_ptrt_string_calldata_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let offset := calldataload(add(headStart, 32))\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        let value1_1, value2_1 := abi_decode_string_calldata(add(headStart, offset), dataEnd)\n        value1 := value1_1\n        value2 := value2_1\n        let offset_1 := calldataload(add(headStart, 64))\n        if gt(offset_1, 0xffffffffffffffff) { revert(0, 0) }\n        let value3_1, value4_1 := abi_decode_string_calldata(add(headStart, offset_1), dataEnd)\n        value3 := value3_1\n        value4 := value4_1\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_t_address_t_uint256_t_address__to_t_address_t_uint256_t_address__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), and(value2, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_packed_t_string_calldata_ptr__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value1, value0) -> end\n    {\n        calldatacopy(pos, value0, value1)\n        let _1 := add(pos, value1)\n        mstore(_1, 0)\n        end := _1\n    }\n    function abi_encode_tuple_t_stringliteral_6397d8391ec10cb4049b569dd407a6acb94a7aa795742ed7e668b1eed10eab04__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 24)\n        mstore(add(headStart, 64), \"Coaster already scanned.\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_a60f8625a5ac2a62e25d3594e822288b44825183565533b1d915245d8c386ead__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"You can not scan your own Coaste\")\n        mstore(add(headStart, 96), \"r.\")\n        tail := add(headStart, 128)\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n    function abi_encode_tuple_t_stringliteral_38b84b28ce7f687a4159aa3c3ed79b1bf1faf0b83ba6e19eed8306e5b73a5699__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 21)\n        mstore(add(headStart, 64), \"Invalid user account.\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_12de7e57f38ef3cb4742b8103ea2bfd9784ae418ac798dfc74c2fb64d1412e2f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 63)\n        mstore(add(headStart, 64), \"You have reached your daily limi\")\n        mstore(add(headStart, 96), \"t of scans. Try again tomorrow.\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_string_calldata(start, length, pos) -> end\n    {\n        mstore(pos, length)\n        calldatacopy(add(pos, 0x20), start, length)\n        mstore(add(add(pos, length), 0x20), 0)\n        end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n    }\n    function abi_encode_tuple_t_string_calldata_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_string_calldata(value0, value1, add(headStart, 32))\n    }\n    function abi_encode_tuple_packed_t_string_memory_ptr__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        let length := mload(value0)\n        copy_memory_to_memory_with_cleanup(add(value0, 0x20), pos, length)\n        end := add(pos, length)\n    }\n    function abi_encode_tuple_t_stringliteral_161894f84106194f60134a235ea6785ea039b3b0499813672d7f05567d18263d__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 43)\n        mstore(add(headStart, 64), \"Coaster asset not found in your \")\n        mstore(add(headStart, 96), \"collection.\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_374180e2178bd46e20d3ad5ffa47410137636792d207c61c23c6b429c903bad4__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 22)\n        mstore(add(headStart, 64), \"Coaster already exist.\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_7572e40391d07d4b91d51e72cb8caa5f33f56b2b616c219ac11e2b95b18edce9__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 21)\n        mstore(add(headStart, 64), \"Insufficient balance.\")\n        tail := add(headStart, 96)\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n        ret := add(value, 1)\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            mstore(0, array)\n            let data := keccak256(0, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _1 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _1) { start := add(start, 1) }\n            { sstore(start, 0) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        srcOffset := 0x20\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 0x20)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n    function abi_encode_tuple_t_stringliteral_7495b1928eec20e7a70fd948a18c2ffd1e105a6b9600a16103e7a35603da4874__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 19)\n        mstore(add(headStart, 64), \"Asset already named\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_f7848f9f96a60d30aa251e250188b2e647f641f6dedaeaaa76f9f0f103da72a6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 23)\n        mstore(add(headStart, 64), \"Coaster does not exist.\")\n        tail := add(headStart, 96)\n    }\n    function copy_byte_array_to_storage_from_t_string_calldata_ptr_to_t_string_storage(slot, src, len)\n    {\n        if gt(len, 0xffffffffffffffff) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), len)\n        let srcOffset := 0\n        switch gt(len, 31)\n        case 1 {\n            let loopEnd := and(len, not(31))\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := srcOffset\n            for { } lt(i, loopEnd) { i := add(i, 0x20) }\n            {\n                sstore(dstPtr, calldataload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 0x20)\n            }\n            if lt(loopEnd, len)\n            {\n                sstore(dstPtr, and(calldataload(add(src, srcOffset)), not(shr(and(shl(3, len), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, len), 1))\n        }\n        default {\n            let value := 0\n            if len\n            {\n                value := calldataload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, len))\n        }\n    }\n    function abi_encode_tuple_t_string_calldata_ptr_t_string_calldata_ptr__to_t_string_memory_ptr_t_string_memory_ptr__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        mstore(headStart, 64)\n        let tail_1 := abi_encode_string_calldata(value0, value1, add(headStart, 64))\n        mstore(add(headStart, 32), sub(tail_1, headStart))\n        tail := abi_encode_string_calldata(value2, value3, tail_1)\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), and(value1, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), 128)\n        tail := abi_encode_string(value3, add(headStart, 128))\n    }\n    function abi_decode_tuple_t_bytes4_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_bytes4(value)\n        value0 := value\n    }\n    function abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value1, value0) -> end\n    {\n        let length := mload(value0)\n        copy_memory_to_memory_with_cleanup(add(value0, 0x20), pos, length)\n        let end_1 := add(pos, length)\n        let length_1 := mload(value1)\n        copy_memory_to_memory_with_cleanup(add(value1, 0x20), end_1, length_1)\n        end := add(end_1, length_1)\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function panic_error_0x12()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n}","id":22,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106101c45760003560e01c8063715018a6116100f9578063bd228bbd11610097578063e985e9c511610071578063e985e9c5146103b5578063ea52a156146103c8578063ee84eb7714610407578063f2fde38b1461041a57600080fd5b8063bd228bbd14610350578063c87b56dd1461038f578063cee28be1146103a257600080fd5b806395d89b41116100d357806395d89b41146103225780639af52a9114610282578063a22cb4651461032a578063b88d4fde1461033d57600080fd5b8063715018a6146102e95780638da5cb5b146102f15780639199aeca1461030257600080fd5b806341e36364116101665780635dc2e20d116101405780635dc2e20d1461026c5780636352211e146102b05780636e0690a2146102c357806370a08231146102d657600080fd5b806341e363641461028257806342842e0e1461028a5780634918c4f61461029d57600080fd5b8063095ea7b3116101a2578063095ea7b3146102315780632365dce21461024657806323b872dd1461025957806330c293de1461026c57600080fd5b806301ffc9a7146101c957806306fdde03146101f1578063081812fc14610206575b600080fd5b6101dc6101d7366004611fd1565b61042d565b60405190151581526020015b60405180910390f35b6101f961043e565b6040516101e8919061203e565b610219610214366004612051565b6104d0565b6040516001600160a01b0390911681526020016101e8565b61024461023f366004612086565b6104f9565b005b610219610254366004612051565b610508565b6102446102673660046120b0565b610532565b610274600581565b6040519081526020016101e8565b610274600181565b6102446102983660046120b0565b6105c2565b6102446102ab366004612135565b6105e2565b6102196102be366004612051565b61091d565b600954610219906001600160a01b031681565b6102746102e436600461218e565b610928565b610244610970565b6008546001600160a01b0316610219565b610315610310366004612237565b610984565b6040516101e891906122dd565b6101f9610e5a565b6102446103383660046123d0565b610e69565b61024461034b36600461240c565b610e74565b6101dc61035e366004612237565b600e602090815260009283526040909220815180830184018051928152908401929093019190912091525460ff1681565b6101f961039d366004612051565b610e8c565b6102446103b0366004612487565b610e97565b6101dc6103c336600461256d565b6112f4565b6101dc6103d6366004612237565b600d602090815260009283526040909220815180830184018051928152908401929093019190912091525460ff1681565b6102446104153660046125a0565b611322565b61024461042836600461218e565b611539565b600061043882611577565b92915050565b60606000805461044d90612624565b80601f016020809104026020016040519081016040528092919081815260200182805461047990612624565b80156104c65780601f1061049b576101008083540402835291602001916104c6565b820191906000526020600020905b8154815290600101906020018083116104a957829003601f168201915b5050505050905090565b60006104db8261159c565b506000828152600460205260409020546001600160a01b0316610438565b6105048282336115d5565b5050565b600b818154811061051857600080fd5b6000918252602090912001546001600160a01b0316905081565b6001600160a01b03821661056157604051633250574960e11b8152600060048201526024015b60405180910390fd5b600061056e8383336115e2565b9050836001600160a01b0316816001600160a01b0316146105bc576040516364283d7b60e01b81526001600160a01b0380861660048301526024820184905282166044820152606401610558565b50505050565b6105dd83838360405180602001604052806000815250610e74565b505050565b6105ea6116db565b6105f2611708565b6001600160a01b0384166000908152600e602052604090819020905161061b908490849061265e565b9081526040519081900360200190205460ff161561067b5760405162461bcd60e51b815260206004820152601860248201527f436f617374657220616c7265616479207363616e6e65642e00000000000000006044820152606401610558565b6001600160a01b0384166000908152600d60205260409081902090516106a4908490849061265e565b9081526040519081900360200190205460ff161561070f5760405162461bcd60e51b815260206004820152602260248201527f596f752063616e206e6f74207363616e20796f7572206f776e20436f61737465604482015261391760f11b6064820152608401610558565b600954604051630103c92b60e01b81526001600160a01b0386811660048301526000921690630103c92b90602401602060405180830381865afa15801561075a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061077e919061266e565b10156107c45760405162461bcd60e51b815260206004820152601560248201527424b73b30b634b2103ab9b2b91030b1b1b7bab73a1760591b6044820152606401610558565b600583111561083b5760405162461bcd60e51b815260206004820152603f60248201527f596f752068617665207265616368656420796f7572206461696c79206c696d6960448201527f74206f66207363616e732e2054727920616761696e20746f6d6f72726f772e006064820152608401610558565b6001600160a01b0384166000908152600e602052604090819020905160019190610868908590859061265e565b908152604051908190036020018120805492151560ff1990931692909217909155600c90610899908490849061265e565b9081526040519081900360209081018220600701805460018101825560009182529190200180546001600160a01b0387166001600160a01b03199091168117909155907fa102e7cfa1a123ee2b7875a4863e2da990b4480be2b4c43ced07d863be7c59269061090b90859085906126b0565b60405180910390a26105bc6001600755565b60006104388261159c565b60006001600160a01b038216610954576040516322718ad960e21b815260006004820152602401610558565b506001600160a01b031660009081526003602052604090205490565b6109786116db565b6109826000611732565b565b6109de6040518061010001604052806060815260200160608152602001606081526020016060815260200160006001600160a01b031681526020016060815260200160006001600160a01b03168152602001606081525090565b6109e66116db565b6001600160a01b0383166000908152600d6020526040908190209051610a0d9084906126c4565b9081526040519081900360200190205460ff1680610a6157506001600160a01b0383166000908152600e6020526040908190209051610a4d9084906126c4565b9081526040519081900360200190205460ff165b610ac15760405162461bcd60e51b815260206004820152602b60248201527f436f6173746572206173736574206e6f7420666f756e6420696e20796f75722060448201526a31b7b63632b1ba34b7b71760a91b6064820152608401610558565b6000600c83604051610ad391906126c4565b908152602001604051809103902060405180610100016040529081600082018054610afd90612624565b80601f0160208091040260200160405190810160405280929190818152602001828054610b2990612624565b8015610b765780601f10610b4b57610100808354040283529160200191610b76565b820191906000526020600020905b815481529060010190602001808311610b5957829003601f168201915b50505050508152602001600182018054610b8f90612624565b80601f0160208091040260200160405190810160405280929190818152602001828054610bbb90612624565b8015610c085780601f10610bdd57610100808354040283529160200191610c08565b820191906000526020600020905b815481529060010190602001808311610beb57829003601f168201915b50505050508152602001600282018054610c2190612624565b80601f0160208091040260200160405190810160405280929190818152602001828054610c4d90612624565b8015610c9a5780601f10610c6f57610100808354040283529160200191610c9a565b820191906000526020600020905b815481529060010190602001808311610c7d57829003601f168201915b50505050508152602001600382018054610cb390612624565b80601f0160208091040260200160405190810160405280929190818152602001828054610cdf90612624565b8015610d2c5780601f10610d0157610100808354040283529160200191610d2c565b820191906000526020600020905b815481529060010190602001808311610d0f57829003601f168201915b505050918352505060048201546001600160a01b03166020820152600582018054604090920191610d5c90612624565b80601f0160208091040260200160405190810160405280929190818152602001828054610d8890612624565b8015610dd55780601f10610daa57610100808354040283529160200191610dd5565b820191906000526020600020905b815481529060010190602001808311610db857829003601f168201915b505050918352505060068201546001600160a01b03166020808301919091526007830180546040805182850281018501825282815294019392830182828015610e4757602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311610e29575b5050509190925250919695505050505050565b60606001805461044d90612624565b610504338383611784565b610e7f848484610532565b6105bc3385858585611823565b60606104388261194d565b610e9f6116db565b610ea7611708565b600c8282604051610eb992919061265e565b9081526040519081900360200190208054610ed390612624565b159050610f1b5760405162461bcd60e51b815260206004820152601660248201527521b7b0b9ba32b91030b63932b0b23c9032bc34b9ba1760511b6044820152606401610558565b600954604051630103c92b60e01b81526001600160a01b038b811660048301526005921690630103c92b90602401602060405180830381865afa158015610f66573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f8a919061266e565b1015610fd05760405162461bcd60e51b815260206004820152601560248201527424b739bab33334b1b4b2b73a103130b630b731b29760591b6044820152606401610558565b600a8054906000610fe0836126e0565b9091555050600a54610ff28a82611a5e565b6110328186868080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250611a7892505050565b60405180610100016040528084848080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250505090825250604080516020601f8d018190048102820181019092528b815291810191908c908c9081908401838280828437600092019190915250505090825250604080516020601f8b0181900481028201810190925289815291810191908a908a9081908401838280828437600092019190915250505090825250604080516020601f89018190048102820181019092528781529181019190889088908190840183828082843760009201829052509385525050506001600160a01b038d1660208084019190915260408051808301825283815281850152606084018390528051928352908201815260809092015251600c90611172908690869061265e565b9081526040519081900360200190208151819061118f908261274e565b50602082015160018201906111a4908261274e565b50604082015160028201906111b9908261274e565b50606082015160038201906111ce908261274e565b5060808201516004820180546001600160a01b0319166001600160a01b0390921691909117905560a08201516005820190611209908261274e565b5060c08201516006820180546001600160a01b0319166001600160a01b0390921691909117905560e0820151805161124b916007840191602090910190611f41565b5050506001600160a01b038a166000908152600d60205260409081902090516001919061127b908690869061265e565b908152604051908190036020018120805492151560ff19909316929092179091556001600160a01b038b16907f371f376692dd846fa34380a8fd44c6a140dc5cd442cd8ae5657963685f17ebed906112d690869086906126b0565b60405180910390a2506112e96001600755565b505050505050505050565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b61132a6116db565b611332611708565b600954604051630103c92b60e01b81526001600160a01b0387811660048301526001921690630103c92b90602401602060405180830381865afa15801561137d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113a1919061266e565b10156113e75760405162461bcd60e51b815260206004820152601560248201527424b739bab33334b1b4b2b73a103130b630b731b29760591b6044820152606401610558565b6000600c85856040516113fb92919061265e565b9081526020016040518091039020905080600501805461141a90612624565b15905061145f5760405162461bcd60e51b8152602060048201526013602482015272105cdcd95d08185b1c9958591e481b985b5959606a1b6044820152606401610558565b60048101546001600160a01b03166114b95760405162461bcd60e51b815260206004820152601760248201527f436f617374657220646f6573206e6f742065786973742e0000000000000000006044820152606401610558565b600581016114c883858361280c565b506006810180546001600160a01b0319166001600160a01b0388169081179091556040517f8ddc804fe891e93143e1ff64637459a983d0c09831f8c83fa2264ddf2e46932e9061151f9088908890889088906128cb565b60405180910390a2506115326001600755565b5050505050565b6115416116db565b6001600160a01b03811661156b57604051631e4fbdf760e01b815260006004820152602401610558565b61157481611732565b50565b60006001600160e01b03198216632483248360e11b1480610438575061043882611ac8565b6000818152600260205260408120546001600160a01b03168061043857604051637e27328960e01b815260048101849052602401610558565b6105dd8383836001611b18565b6000828152600260205260408120546001600160a01b039081169083161561160f5761160f818486611c1e565b6001600160a01b0381161561164d5761162c600085600080611b18565b6001600160a01b038116600090815260036020526040902080546000190190555b6001600160a01b0385161561167c576001600160a01b0385166000908152600360205260409020805460010190555b60008481526002602052604080822080546001600160a01b0319166001600160a01b0389811691821790925591518793918516917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4949350505050565b6008546001600160a01b031633146109825760405163118cdaa760e01b8152336004820152602401610558565b60026007540361172b57604051633ee5aeb560e01b815260040160405180910390fd5b6002600755565b600880546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6001600160a01b0382166117b657604051630b61174360e31b81526001600160a01b0383166004820152602401610558565b6001600160a01b03838116600081815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b6001600160a01b0383163b1561153257604051630a85bd0160e11b81526001600160a01b0384169063150b7a02906118659088908890879087906004016128fd565b6020604051808303816000875af19250505080156118a0575060408051601f3d908101601f1916820190925261189d9181019061293a565b60015b611909573d8080156118ce576040519150601f19603f3d011682016040523d82523d6000602084013e6118d3565b606091505b50805160000361190157604051633250574960e11b81526001600160a01b0385166004820152602401610558565b805181602001fd5b6001600160e01b03198116630a85bd0160e11b1461194557604051633250574960e11b81526001600160a01b0385166004820152602401610558565b505050505050565b60606119588261159c565b506000828152600660205260408120805461197290612624565b80601f016020809104026020016040519081016040528092919081815260200182805461199e90612624565b80156119eb5780601f106119c0576101008083540402835291602001916119eb565b820191906000526020600020905b8154815290600101906020018083116119ce57829003601f168201915b505050505090506000611a0960408051602081019091526000815290565b90508051600003611a1b575092915050565b815115611a4d578082604051602001611a35929190612957565b60405160208183030381529060405292505050919050565b611a5684611c82565b949350505050565b610504828260405180602001604052806000815250611cf7565b6000828152600660205260409020611a90828261274e565b506040518281527ff8e1a15aba9398e019f0b49df1a4fde98ee17ae345cb5f6b5e2c27f5033e8ce79060200160405180910390a15050565b60006001600160e01b031982166380ac58cd60e01b1480611af957506001600160e01b03198216635b5e139f60e01b145b8061043857506301ffc9a760e01b6001600160e01b0319831614610438565b8080611b2c57506001600160a01b03821615155b15611bee576000611b3c8461159c565b90506001600160a01b03831615801590611b685750826001600160a01b0316816001600160a01b031614155b8015611b7b5750611b7981846112f4565b155b15611ba45760405163a9fbf51f60e01b81526001600160a01b0384166004820152602401610558565b8115611bec5783856001600160a01b0316826001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45b505b5050600090815260046020526040902080546001600160a01b0319166001600160a01b0392909216919091179055565b611c29838383611d0f565b6105dd576001600160a01b038316611c5757604051637e27328960e01b815260048101829052602401610558565b60405163177e802f60e01b81526001600160a01b038316600482015260248101829052604401610558565b6060611c8d8261159c565b506000611ca560408051602081019091526000815290565b90506000815111611cc55760405180602001604052806000815250611cf0565b80611ccf84611d72565b604051602001611ce0929190612957565b6040516020818303038152906040525b9392505050565b611d018383611e04565b6105dd336000858585611823565b60006001600160a01b03831615801590611a565750826001600160a01b0316846001600160a01b03161480611d495750611d4984846112f4565b80611a565750506000908152600460205260409020546001600160a01b03908116911614919050565b60606000611d7f83611e69565b60010190506000816001600160401b03811115611d9e57611d9e6121a9565b6040519080825280601f01601f191660200182016040528015611dc8576020820181803683370190505b5090508181016020015b600019016f181899199a1a9b1b9c1cb0b131b232b360811b600a86061a8153600a8504945084611dd257509392505050565b6001600160a01b038216611e2e57604051633250574960e11b815260006004820152602401610558565b6000611e3c838360006115e2565b90506001600160a01b038116156105dd576040516339e3563760e11b815260006004820152602401610558565b60008072184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b8310611ea85772184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b830492506040015b6d04ee2d6d415b85acef81000000008310611ed4576d04ee2d6d415b85acef8100000000830492506020015b662386f26fc100008310611ef257662386f26fc10000830492506010015b6305f5e1008310611f0a576305f5e100830492506008015b6127108310611f1e57612710830492506004015b60648310611f30576064830492506002015b600a83106104385760010192915050565b828054828255906000526020600020908101928215611f96579160200282015b82811115611f9657825182546001600160a01b0319166001600160a01b03909116178255602090920191600190910190611f61565b50611fa2929150611fa6565b5090565b5b80821115611fa25760008155600101611fa7565b6001600160e01b03198116811461157457600080fd5b600060208284031215611fe357600080fd5b8135611cf081611fbb565b60005b83811015612009578181015183820152602001611ff1565b50506000910152565b6000815180845261202a816020860160208601611fee565b601f01601f19169290920160200192915050565b602081526000611cf06020830184612012565b60006020828403121561206357600080fd5b5035919050565b80356001600160a01b038116811461208157600080fd5b919050565b6000806040838503121561209957600080fd5b6120a28361206a565b946020939093013593505050565b6000806000606084860312156120c557600080fd5b6120ce8461206a565b92506120dc6020850161206a565b929592945050506040919091013590565b60008083601f8401126120ff57600080fd5b5081356001600160401b0381111561211657600080fd5b60208301915083602082850101111561212e57600080fd5b9250929050565b6000806000806060858703121561214b57600080fd5b6121548561206a565b93506020850135925060408501356001600160401b0381111561217657600080fd5b612182878288016120ed565b95989497509550505050565b6000602082840312156121a057600080fd5b611cf08261206a565b634e487b7160e01b600052604160045260246000fd5b6000806001600160401b038411156121d9576121d96121a9565b50604051601f19601f85018116603f011681018181106001600160401b0382111715612207576122076121a9565b60405283815290508082840185101561221f57600080fd5b83836020830137600060208583010152509392505050565b6000806040838503121561224a57600080fd5b6122538361206a565b915060208301356001600160401b0381111561226e57600080fd5b8301601f8101851361227f57600080fd5b61228e858235602084016121bf565b9150509250929050565b600081518084526020840193506020830160005b828110156122d35781516001600160a01b03168652602095860195909101906001016122ac565b5093949350505050565b602081526000825161010060208401526122fb610120840182612012565b90506020840151601f198483030160408501526123188282612012565b9150506040840151601f198483030160608501526123368282612012565b9150506060840151601f198483030160808501526123548282612012565b915050608084015161237160a08501826001600160a01b03169052565b5060a0840151838203601f190160c085015261238d8282612012565b91505060c08401516123aa60e08501826001600160a01b03169052565b5060e0840151838203601f19016101008501526123c78282612298565b95945050505050565b600080604083850312156123e357600080fd5b6123ec8361206a565b91506020830135801515811461240157600080fd5b809150509250929050565b6000806000806080858703121561242257600080fd5b61242b8561206a565b93506124396020860161206a565b92506040850135915060608501356001600160401b0381111561245b57600080fd5b8501601f8101871361246c57600080fd5b61247b878235602084016121bf565b91505092959194509250565b600080600080600080600080600060a08a8c0312156124a557600080fd5b6124ae8a61206a565b985060208a01356001600160401b038111156124c957600080fd5b6124d58c828d016120ed565b90995097505060408a01356001600160401b038111156124f457600080fd5b6125008c828d016120ed565b90975095505060608a01356001600160401b0381111561251f57600080fd5b61252b8c828d016120ed565b90955093505060808a01356001600160401b0381111561254a57600080fd5b6125568c828d016120ed565b915080935050809150509295985092959850929598565b6000806040838503121561258057600080fd5b6125898361206a565b91506125976020840161206a565b90509250929050565b6000806000806000606086880312156125b857600080fd5b6125c18661206a565b945060208601356001600160401b038111156125dc57600080fd5b6125e8888289016120ed565b90955093505060408601356001600160401b0381111561260757600080fd5b612613888289016120ed565b969995985093965092949392505050565b600181811c9082168061263857607f821691505b60208210810361265857634e487b7160e01b600052602260045260246000fd5b50919050565b8183823760009101908152919050565b60006020828403121561268057600080fd5b5051919050565b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b602081526000611a56602083018486612687565b600082516126d6818460208701611fee565b9190910192915050565b60006001820161270057634e487b7160e01b600052601160045260246000fd5b5060010190565b601f8211156105dd57806000526020600020601f840160051c8101602085101561272e5750805b601f840160051c820191505b81811015611532576000815560010161273a565b81516001600160401b03811115612767576127676121a9565b61277b816127758454612624565b84612707565b6020601f8211600181146127af57600083156127975750848201515b600019600385901b1c1916600184901b178455611532565b600084815260208120601f198516915b828110156127df57878501518255602094850194600190920191016127bf565b50848210156127fd5786840151600019600387901b60f8161c191681555b50505050600190811b01905550565b6001600160401b03831115612823576128236121a9565b612837836128318354612624565b83612707565b6000601f84116001811461286b57600085156128535750838201355b600019600387901b1c1916600186901b178355611532565b600083815260209020601f19861690835b8281101561289c578685013582556020948501946001909201910161287c565b50868210156128b95760001960f88860031b161c19848701351681555b505060018560011b0183555050505050565b6040815260006128df604083018688612687565b82810360208401526128f2818587612687565b979650505050505050565b6001600160a01b038581168252841660208201526040810183905260806060820181905260009061293090830184612012565b9695505050505050565b60006020828403121561294c57600080fd5b8151611cf081611fbb565b60008351612969818460208801611fee565b83519083019061297d818360208801611fee565b0194935050505056fea26469706673582212206cd6cacfcc90718978620ebe7b1b015c84f6bdb38f5eb8ee4dc4227ed0cf8cf564736f6c634300081b0033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1C4 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0xF9 JUMPI DUP1 PUSH4 0xBD228BBD GT PUSH2 0x97 JUMPI DUP1 PUSH4 0xE985E9C5 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x3B5 JUMPI DUP1 PUSH4 0xEA52A156 EQ PUSH2 0x3C8 JUMPI DUP1 PUSH4 0xEE84EB77 EQ PUSH2 0x407 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x41A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xBD228BBD EQ PUSH2 0x350 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x38F JUMPI DUP1 PUSH4 0xCEE28BE1 EQ PUSH2 0x3A2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x95D89B41 GT PUSH2 0xD3 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x322 JUMPI DUP1 PUSH4 0x9AF52A91 EQ PUSH2 0x282 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x32A JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x33D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x2E9 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x2F1 JUMPI DUP1 PUSH4 0x9199AECA EQ PUSH2 0x302 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x41E36364 GT PUSH2 0x166 JUMPI DUP1 PUSH4 0x5DC2E20D GT PUSH2 0x140 JUMPI DUP1 PUSH4 0x5DC2E20D EQ PUSH2 0x26C JUMPI DUP1 PUSH4 0x6352211E EQ PUSH2 0x2B0 JUMPI DUP1 PUSH4 0x6E0690A2 EQ PUSH2 0x2C3 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x2D6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x41E36364 EQ PUSH2 0x282 JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x28A JUMPI DUP1 PUSH4 0x4918C4F6 EQ PUSH2 0x29D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x95EA7B3 GT PUSH2 0x1A2 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x231 JUMPI DUP1 PUSH4 0x2365DCE2 EQ PUSH2 0x246 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x259 JUMPI DUP1 PUSH4 0x30C293DE EQ PUSH2 0x26C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x1C9 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x1F1 JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x206 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1DC PUSH2 0x1D7 CALLDATASIZE PUSH1 0x4 PUSH2 0x1FD1 JUMP JUMPDEST PUSH2 0x42D JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1F9 PUSH2 0x43E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E8 SWAP2 SWAP1 PUSH2 0x203E JUMP JUMPDEST PUSH2 0x219 PUSH2 0x214 CALLDATASIZE PUSH1 0x4 PUSH2 0x2051 JUMP JUMPDEST PUSH2 0x4D0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1E8 JUMP JUMPDEST PUSH2 0x244 PUSH2 0x23F CALLDATASIZE PUSH1 0x4 PUSH2 0x2086 JUMP JUMPDEST PUSH2 0x4F9 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x219 PUSH2 0x254 CALLDATASIZE PUSH1 0x4 PUSH2 0x2051 JUMP JUMPDEST PUSH2 0x508 JUMP JUMPDEST PUSH2 0x244 PUSH2 0x267 CALLDATASIZE PUSH1 0x4 PUSH2 0x20B0 JUMP JUMPDEST PUSH2 0x532 JUMP JUMPDEST PUSH2 0x274 PUSH1 0x5 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1E8 JUMP JUMPDEST PUSH2 0x274 PUSH1 0x1 DUP2 JUMP JUMPDEST PUSH2 0x244 PUSH2 0x298 CALLDATASIZE PUSH1 0x4 PUSH2 0x20B0 JUMP JUMPDEST PUSH2 0x5C2 JUMP JUMPDEST PUSH2 0x244 PUSH2 0x2AB CALLDATASIZE PUSH1 0x4 PUSH2 0x2135 JUMP JUMPDEST PUSH2 0x5E2 JUMP JUMPDEST PUSH2 0x219 PUSH2 0x2BE CALLDATASIZE PUSH1 0x4 PUSH2 0x2051 JUMP JUMPDEST PUSH2 0x91D JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH2 0x219 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x274 PUSH2 0x2E4 CALLDATASIZE PUSH1 0x4 PUSH2 0x218E JUMP JUMPDEST PUSH2 0x928 JUMP JUMPDEST PUSH2 0x244 PUSH2 0x970 JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x219 JUMP JUMPDEST PUSH2 0x315 PUSH2 0x310 CALLDATASIZE PUSH1 0x4 PUSH2 0x2237 JUMP JUMPDEST PUSH2 0x984 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E8 SWAP2 SWAP1 PUSH2 0x22DD JUMP JUMPDEST PUSH2 0x1F9 PUSH2 0xE5A JUMP JUMPDEST PUSH2 0x244 PUSH2 0x338 CALLDATASIZE PUSH1 0x4 PUSH2 0x23D0 JUMP JUMPDEST PUSH2 0xE69 JUMP JUMPDEST PUSH2 0x244 PUSH2 0x34B CALLDATASIZE PUSH1 0x4 PUSH2 0x240C JUMP JUMPDEST PUSH2 0xE74 JUMP JUMPDEST PUSH2 0x1DC PUSH2 0x35E CALLDATASIZE PUSH1 0x4 PUSH2 0x2237 JUMP JUMPDEST PUSH1 0xE PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x40 SWAP1 SWAP3 KECCAK256 DUP2 MLOAD DUP1 DUP4 ADD DUP5 ADD DUP1 MLOAD SWAP3 DUP2 MSTORE SWAP1 DUP5 ADD SWAP3 SWAP1 SWAP4 ADD SWAP2 SWAP1 SWAP2 KECCAK256 SWAP2 MSTORE SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x1F9 PUSH2 0x39D CALLDATASIZE PUSH1 0x4 PUSH2 0x2051 JUMP JUMPDEST PUSH2 0xE8C JUMP JUMPDEST PUSH2 0x244 PUSH2 0x3B0 CALLDATASIZE PUSH1 0x4 PUSH2 0x2487 JUMP JUMPDEST PUSH2 0xE97 JUMP JUMPDEST PUSH2 0x1DC PUSH2 0x3C3 CALLDATASIZE PUSH1 0x4 PUSH2 0x256D JUMP JUMPDEST PUSH2 0x12F4 JUMP JUMPDEST PUSH2 0x1DC PUSH2 0x3D6 CALLDATASIZE PUSH1 0x4 PUSH2 0x2237 JUMP JUMPDEST PUSH1 0xD PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x40 SWAP1 SWAP3 KECCAK256 DUP2 MLOAD DUP1 DUP4 ADD DUP5 ADD DUP1 MLOAD SWAP3 DUP2 MSTORE SWAP1 DUP5 ADD SWAP3 SWAP1 SWAP4 ADD SWAP2 SWAP1 SWAP2 KECCAK256 SWAP2 MSTORE SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x244 PUSH2 0x415 CALLDATASIZE PUSH1 0x4 PUSH2 0x25A0 JUMP JUMPDEST PUSH2 0x1322 JUMP JUMPDEST PUSH2 0x244 PUSH2 0x428 CALLDATASIZE PUSH1 0x4 PUSH2 0x218E JUMP JUMPDEST PUSH2 0x1539 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x438 DUP3 PUSH2 0x1577 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 SLOAD PUSH2 0x44D SWAP1 PUSH2 0x2624 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x479 SWAP1 PUSH2 0x2624 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x4C6 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x49B JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x4C6 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x4A9 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4DB DUP3 PUSH2 0x159C JUMP JUMPDEST POP PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x438 JUMP JUMPDEST PUSH2 0x504 DUP3 DUP3 CALLER PUSH2 0x15D5 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0xB DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x518 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 POP DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x561 JUMPI PUSH1 0x40 MLOAD PUSH4 0x32505749 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x56E DUP4 DUP4 CALLER PUSH2 0x15E2 JUMP JUMPDEST SWAP1 POP DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x5BC JUMPI PUSH1 0x40 MLOAD PUSH4 0x64283D7B PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP7 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP5 SWAP1 MSTORE DUP3 AND PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x558 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x5DD DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0xE74 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x5EA PUSH2 0x16DB JUMP JUMPDEST PUSH2 0x5F2 PUSH2 0x1708 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 SWAP1 MLOAD PUSH2 0x61B SWAP1 DUP5 SWAP1 DUP5 SWAP1 PUSH2 0x265E JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x67B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x436F617374657220616C7265616479207363616E6E65642E0000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x558 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 SWAP1 MLOAD PUSH2 0x6A4 SWAP1 DUP5 SWAP1 DUP5 SWAP1 PUSH2 0x265E JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x70F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x596F752063616E206E6F74207363616E20796F7572206F776E20436F61737465 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x3917 PUSH1 0xF1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x558 JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH1 0x40 MLOAD PUSH4 0x103C92B PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x0 SWAP3 AND SWAP1 PUSH4 0x103C92B SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x75A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x77E SWAP2 SWAP1 PUSH2 0x266E JUMP JUMPDEST LT ISZERO PUSH2 0x7C4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x24B73B30B634B2103AB9B2B91030B1B1B7BAB73A17 PUSH1 0x59 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x558 JUMP JUMPDEST PUSH1 0x5 DUP4 GT ISZERO PUSH2 0x83B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x596F752068617665207265616368656420796F7572206461696C79206C696D69 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x74206F66207363616E732E2054727920616761696E20746F6D6F72726F772E00 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x558 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 SWAP1 MLOAD PUSH1 0x1 SWAP2 SWAP1 PUSH2 0x868 SWAP1 DUP6 SWAP1 DUP6 SWAP1 PUSH2 0x265E JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD DUP2 KECCAK256 DUP1 SLOAD SWAP3 ISZERO ISZERO PUSH1 0xFF NOT SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 SSTORE PUSH1 0xC SWAP1 PUSH2 0x899 SWAP1 DUP5 SWAP1 DUP5 SWAP1 PUSH2 0x265E JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 SWAP1 DUP2 ADD DUP3 KECCAK256 PUSH1 0x7 ADD DUP1 SLOAD PUSH1 0x1 DUP2 ADD DUP3 SSTORE PUSH1 0x0 SWAP2 DUP3 MSTORE SWAP2 SWAP1 KECCAK256 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 SWAP2 AND DUP2 OR SWAP1 SWAP2 SSTORE SWAP1 PUSH32 0xA102E7CFA1A123EE2B7875A4863E2DA990B4480BE2B4C43CED07D863BE7C5926 SWAP1 PUSH2 0x90B SWAP1 DUP6 SWAP1 DUP6 SWAP1 PUSH2 0x26B0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH2 0x5BC PUSH1 0x1 PUSH1 0x7 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH2 0x438 DUP3 PUSH2 0x159C JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x954 JUMPI PUSH1 0x40 MLOAD PUSH4 0x22718AD9 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x558 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x978 PUSH2 0x16DB JUMP JUMPDEST PUSH2 0x982 PUSH1 0x0 PUSH2 0x1732 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x9DE PUSH1 0x40 MLOAD DUP1 PUSH2 0x100 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x60 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH2 0x9E6 PUSH2 0x16DB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 SWAP1 MLOAD PUSH2 0xA0D SWAP1 DUP5 SWAP1 PUSH2 0x26C4 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP1 PUSH2 0xA61 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 SWAP1 MLOAD PUSH2 0xA4D SWAP1 DUP5 SWAP1 PUSH2 0x26C4 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST PUSH2 0xAC1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x436F6173746572206173736574206E6F7420666F756E6420696E20796F757220 PUSH1 0x44 DUP3 ADD MSTORE PUSH11 0x31B7B63632B1BA34B7B717 PUSH1 0xA9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x558 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xC DUP4 PUSH1 0x40 MLOAD PUSH2 0xAD3 SWAP2 SWAP1 PUSH2 0x26C4 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH2 0x100 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD DUP1 SLOAD PUSH2 0xAFD SWAP1 PUSH2 0x2624 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xB29 SWAP1 PUSH2 0x2624 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xB76 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xB4B JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xB76 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xB59 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD DUP1 SLOAD PUSH2 0xB8F SWAP1 PUSH2 0x2624 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xBBB SWAP1 PUSH2 0x2624 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xC08 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xBDD JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xC08 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xBEB JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD DUP1 SLOAD PUSH2 0xC21 SWAP1 PUSH2 0x2624 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xC4D SWAP1 PUSH2 0x2624 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xC9A JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xC6F JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xC9A JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xC7D JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD DUP1 SLOAD PUSH2 0xCB3 SWAP1 PUSH2 0x2624 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xCDF SWAP1 PUSH2 0x2624 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xD2C JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xD01 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xD2C JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xD0F JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP SWAP2 DUP4 MSTORE POP POP PUSH1 0x4 DUP3 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x5 DUP3 ADD DUP1 SLOAD PUSH1 0x40 SWAP1 SWAP3 ADD SWAP2 PUSH2 0xD5C SWAP1 PUSH2 0x2624 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xD88 SWAP1 PUSH2 0x2624 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xDD5 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xDAA JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xDD5 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xDB8 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP SWAP2 DUP4 MSTORE POP POP PUSH1 0x6 DUP3 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x20 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x7 DUP4 ADD DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD DUP3 DUP6 MUL DUP2 ADD DUP6 ADD DUP3 MSTORE DUP3 DUP2 MSTORE SWAP5 ADD SWAP4 SWAP3 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0xE47 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xE29 JUMPI JUMPDEST POP POP POP SWAP2 SWAP1 SWAP3 MSTORE POP SWAP2 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x44D SWAP1 PUSH2 0x2624 JUMP JUMPDEST PUSH2 0x504 CALLER DUP4 DUP4 PUSH2 0x1784 JUMP JUMPDEST PUSH2 0xE7F DUP5 DUP5 DUP5 PUSH2 0x532 JUMP JUMPDEST PUSH2 0x5BC CALLER DUP6 DUP6 DUP6 DUP6 PUSH2 0x1823 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x438 DUP3 PUSH2 0x194D JUMP JUMPDEST PUSH2 0xE9F PUSH2 0x16DB JUMP JUMPDEST PUSH2 0xEA7 PUSH2 0x1708 JUMP JUMPDEST PUSH1 0xC DUP3 DUP3 PUSH1 0x40 MLOAD PUSH2 0xEB9 SWAP3 SWAP2 SWAP1 PUSH2 0x265E JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 KECCAK256 DUP1 SLOAD PUSH2 0xED3 SWAP1 PUSH2 0x2624 JUMP JUMPDEST ISZERO SWAP1 POP PUSH2 0xF1B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x21B7B0B9BA32B91030B63932B0B23C9032BC34B9BA17 PUSH1 0x51 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x558 JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH1 0x40 MLOAD PUSH4 0x103C92B PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP12 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x5 SWAP3 AND SWAP1 PUSH4 0x103C92B SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xF66 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xF8A SWAP2 SWAP1 PUSH2 0x266E JUMP JUMPDEST LT ISZERO PUSH2 0xFD0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x24B739BAB33334B1B4B2B73A103130B630B731B297 PUSH1 0x59 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x558 JUMP JUMPDEST PUSH1 0xA DUP1 SLOAD SWAP1 PUSH1 0x0 PUSH2 0xFE0 DUP4 PUSH2 0x26E0 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0xA SLOAD PUSH2 0xFF2 DUP11 DUP3 PUSH2 0x1A5E JUMP JUMPDEST PUSH2 0x1032 DUP2 DUP7 DUP7 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP PUSH2 0x1A78 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH2 0x100 ADD PUSH1 0x40 MSTORE DUP1 DUP5 DUP5 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP POP POP SWAP1 DUP3 MSTORE POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F DUP14 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP12 DUP2 MSTORE SWAP2 DUP2 ADD SWAP2 SWAP1 DUP13 SWAP1 DUP13 SWAP1 DUP2 SWAP1 DUP5 ADD DUP4 DUP3 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP POP POP SWAP1 DUP3 MSTORE POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F DUP12 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP10 DUP2 MSTORE SWAP2 DUP2 ADD SWAP2 SWAP1 DUP11 SWAP1 DUP11 SWAP1 DUP2 SWAP1 DUP5 ADD DUP4 DUP3 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP POP POP SWAP1 DUP3 MSTORE POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F DUP10 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP8 DUP2 MSTORE SWAP2 DUP2 ADD SWAP2 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP2 SWAP1 DUP5 ADD DUP4 DUP3 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD DUP3 SWAP1 MSTORE POP SWAP4 DUP6 MSTORE POP POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP14 AND PUSH1 0x20 DUP1 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 DUP1 MLOAD DUP1 DUP4 ADD DUP3 MSTORE DUP4 DUP2 MSTORE DUP2 DUP6 ADD MSTORE PUSH1 0x60 DUP5 ADD DUP4 SWAP1 MSTORE DUP1 MLOAD SWAP3 DUP4 MSTORE SWAP1 DUP3 ADD DUP2 MSTORE PUSH1 0x80 SWAP1 SWAP3 ADD MSTORE MLOAD PUSH1 0xC SWAP1 PUSH2 0x1172 SWAP1 DUP7 SWAP1 DUP7 SWAP1 PUSH2 0x265E JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 KECCAK256 DUP2 MLOAD DUP2 SWAP1 PUSH2 0x118F SWAP1 DUP3 PUSH2 0x274E JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH1 0x1 DUP3 ADD SWAP1 PUSH2 0x11A4 SWAP1 DUP3 PUSH2 0x274E JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD PUSH1 0x2 DUP3 ADD SWAP1 PUSH2 0x11B9 SWAP1 DUP3 PUSH2 0x274E JUMP JUMPDEST POP PUSH1 0x60 DUP3 ADD MLOAD PUSH1 0x3 DUP3 ADD SWAP1 PUSH2 0x11CE SWAP1 DUP3 PUSH2 0x274E JUMP JUMPDEST POP PUSH1 0x80 DUP3 ADD MLOAD PUSH1 0x4 DUP3 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0xA0 DUP3 ADD MLOAD PUSH1 0x5 DUP3 ADD SWAP1 PUSH2 0x1209 SWAP1 DUP3 PUSH2 0x274E JUMP JUMPDEST POP PUSH1 0xC0 DUP3 ADD MLOAD PUSH1 0x6 DUP3 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0xE0 DUP3 ADD MLOAD DUP1 MLOAD PUSH2 0x124B SWAP2 PUSH1 0x7 DUP5 ADD SWAP2 PUSH1 0x20 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x1F41 JUMP JUMPDEST POP POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 SWAP1 MLOAD PUSH1 0x1 SWAP2 SWAP1 PUSH2 0x127B SWAP1 DUP7 SWAP1 DUP7 SWAP1 PUSH2 0x265E JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD DUP2 KECCAK256 DUP1 SLOAD SWAP3 ISZERO ISZERO PUSH1 0xFF NOT SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP12 AND SWAP1 PUSH32 0x371F376692DD846FA34380A8FD44C6A140DC5CD442CD8AE5657963685F17EBED SWAP1 PUSH2 0x12D6 SWAP1 DUP7 SWAP1 DUP7 SWAP1 PUSH2 0x26B0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP PUSH2 0x12E9 PUSH1 0x1 PUSH1 0x7 SSTORE JUMP JUMPDEST POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH2 0x132A PUSH2 0x16DB JUMP JUMPDEST PUSH2 0x1332 PUSH2 0x1708 JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH1 0x40 MLOAD PUSH4 0x103C92B PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x1 SWAP3 AND SWAP1 PUSH4 0x103C92B SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x137D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x13A1 SWAP2 SWAP1 PUSH2 0x266E JUMP JUMPDEST LT ISZERO PUSH2 0x13E7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x24B739BAB33334B1B4B2B73A103130B630B731B297 PUSH1 0x59 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x558 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xC DUP6 DUP6 PUSH1 0x40 MLOAD PUSH2 0x13FB SWAP3 SWAP2 SWAP1 PUSH2 0x265E JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 SWAP1 POP DUP1 PUSH1 0x5 ADD DUP1 SLOAD PUSH2 0x141A SWAP1 PUSH2 0x2624 JUMP JUMPDEST ISZERO SWAP1 POP PUSH2 0x145F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x105CDCD95D08185B1C9958591E481B985B5959 PUSH1 0x6A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x558 JUMP JUMPDEST PUSH1 0x4 DUP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x14B9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x436F617374657220646F6573206E6F742065786973742E000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x558 JUMP JUMPDEST PUSH1 0x5 DUP2 ADD PUSH2 0x14C8 DUP4 DUP6 DUP4 PUSH2 0x280C JUMP JUMPDEST POP PUSH1 0x6 DUP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD PUSH32 0x8DDC804FE891E93143E1FF64637459A983D0C09831F8C83FA2264DDF2E46932E SWAP1 PUSH2 0x151F SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH2 0x28CB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP PUSH2 0x1532 PUSH1 0x1 PUSH1 0x7 SSTORE JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH2 0x1541 PUSH2 0x16DB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x156B JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x558 JUMP JUMPDEST PUSH2 0x1574 DUP2 PUSH2 0x1732 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x24832483 PUSH1 0xE1 SHL EQ DUP1 PUSH2 0x438 JUMPI POP PUSH2 0x438 DUP3 PUSH2 0x1AC8 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 PUSH2 0x438 JUMPI PUSH1 0x40 MLOAD PUSH4 0x7E273289 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x558 JUMP JUMPDEST PUSH2 0x5DD DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x1B18 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP1 DUP4 AND ISZERO PUSH2 0x160F JUMPI PUSH2 0x160F DUP2 DUP5 DUP7 PUSH2 0x1C1E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO PUSH2 0x164D JUMPI PUSH2 0x162C PUSH1 0x0 DUP6 PUSH1 0x0 DUP1 PUSH2 0x1B18 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x0 NOT ADD SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND ISZERO PUSH2 0x167C JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 DUP2 AND SWAP2 DUP3 OR SWAP1 SWAP3 SSTORE SWAP2 MLOAD DUP8 SWAP4 SWAP2 DUP6 AND SWAP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 LOG4 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x982 JUMPI PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x558 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x7 SLOAD SUB PUSH2 0x172B JUMPI PUSH1 0x40 MLOAD PUSH4 0x3EE5AEB5 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x7 SSTORE JUMP JUMPDEST PUSH1 0x8 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x17B6 JUMPI PUSH1 0x40 MLOAD PUSH4 0xB611743 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x558 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP7 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP2 MLOAD SWAP2 DUP3 MSTORE PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND EXTCODESIZE ISZERO PUSH2 0x1532 JUMPI PUSH1 0x40 MLOAD PUSH4 0xA85BD01 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 PUSH4 0x150B7A02 SWAP1 PUSH2 0x1865 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP8 SWAP1 DUP8 SWAP1 PUSH1 0x4 ADD PUSH2 0x28FD JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x18A0 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x189D SWAP2 DUP2 ADD SWAP1 PUSH2 0x293A JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x1909 JUMPI RETURNDATASIZE DUP1 DUP1 ISZERO PUSH2 0x18CE JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x18D3 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP DUP1 MLOAD PUSH1 0x0 SUB PUSH2 0x1901 JUMPI PUSH1 0x40 MLOAD PUSH4 0x32505749 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x558 JUMP JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH4 0xA85BD01 PUSH1 0xE1 SHL EQ PUSH2 0x1945 JUMPI PUSH1 0x40 MLOAD PUSH4 0x32505749 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x558 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x1958 DUP3 PUSH2 0x159C JUMP JUMPDEST POP PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH2 0x1972 SWAP1 PUSH2 0x2624 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x199E SWAP1 PUSH2 0x2624 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x19EB JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x19C0 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x19EB JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x19CE JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP PUSH1 0x0 PUSH2 0x1A09 PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP2 MSTORE SWAP1 JUMP JUMPDEST SWAP1 POP DUP1 MLOAD PUSH1 0x0 SUB PUSH2 0x1A1B JUMPI POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP2 MLOAD ISZERO PUSH2 0x1A4D JUMPI DUP1 DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1A35 SWAP3 SWAP2 SWAP1 PUSH2 0x2957 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1A56 DUP5 PUSH2 0x1C82 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x504 DUP3 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x1CF7 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH2 0x1A90 DUP3 DUP3 PUSH2 0x274E JUMP JUMPDEST POP PUSH1 0x40 MLOAD DUP3 DUP2 MSTORE PUSH32 0xF8E1A15ABA9398E019F0B49DF1A4FDE98EE17AE345CB5F6B5E2C27F5033E8CE7 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x80AC58CD PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x1AF9 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x5B5E139F PUSH1 0xE0 SHL EQ JUMPDEST DUP1 PUSH2 0x438 JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ PUSH2 0x438 JUMP JUMPDEST DUP1 DUP1 PUSH2 0x1B2C JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND ISZERO ISZERO JUMPDEST ISZERO PUSH2 0x1BEE JUMPI PUSH1 0x0 PUSH2 0x1B3C DUP5 PUSH2 0x159C JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ISZERO DUP1 ISZERO SWAP1 PUSH2 0x1B68 JUMPI POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x1B7B JUMPI POP PUSH2 0x1B79 DUP2 DUP5 PUSH2 0x12F4 JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x1BA4 JUMPI PUSH1 0x40 MLOAD PUSH4 0xA9FBF51F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x558 JUMP JUMPDEST DUP2 ISZERO PUSH2 0x1BEC JUMPI DUP4 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP JUMPDEST POP POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x1C29 DUP4 DUP4 DUP4 PUSH2 0x1D0F JUMP JUMPDEST PUSH2 0x5DD JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x1C57 JUMPI PUSH1 0x40 MLOAD PUSH4 0x7E273289 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x558 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x177E802F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 ADD PUSH2 0x558 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x1C8D DUP3 PUSH2 0x159C JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0x1CA5 PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP2 MSTORE SWAP1 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT PUSH2 0x1CC5 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x1CF0 JUMP JUMPDEST DUP1 PUSH2 0x1CCF DUP5 PUSH2 0x1D72 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1CE0 SWAP3 SWAP2 SWAP1 PUSH2 0x2957 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x1D01 DUP4 DUP4 PUSH2 0x1E04 JUMP JUMPDEST PUSH2 0x5DD CALLER PUSH1 0x0 DUP6 DUP6 DUP6 PUSH2 0x1823 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ISZERO DUP1 ISZERO SWAP1 PUSH2 0x1A56 JUMPI POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 PUSH2 0x1D49 JUMPI POP PUSH2 0x1D49 DUP5 DUP5 PUSH2 0x12F4 JUMP JUMPDEST DUP1 PUSH2 0x1A56 JUMPI POP POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x1D7F DUP4 PUSH2 0x1E69 JUMP JUMPDEST PUSH1 0x1 ADD SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x1D9E JUMPI PUSH2 0x1D9E PUSH2 0x21A9 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1DC8 JUMPI PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP DUP2 DUP2 ADD PUSH1 0x20 ADD JUMPDEST PUSH1 0x0 NOT ADD PUSH16 0x181899199A1A9B1B9C1CB0B131B232B3 PUSH1 0x81 SHL PUSH1 0xA DUP7 MOD BYTE DUP2 MSTORE8 PUSH1 0xA DUP6 DIV SWAP5 POP DUP5 PUSH2 0x1DD2 JUMPI POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x1E2E JUMPI PUSH1 0x40 MLOAD PUSH4 0x32505749 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x558 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E3C DUP4 DUP4 PUSH1 0x0 PUSH2 0x15E2 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO PUSH2 0x5DD JUMPI PUSH1 0x40 MLOAD PUSH4 0x39E35637 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x558 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH19 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F01 PUSH1 0x40 SHL DUP4 LT PUSH2 0x1EA8 JUMPI PUSH19 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F01 PUSH1 0x40 SHL DUP4 DIV SWAP3 POP PUSH1 0x40 ADD JUMPDEST PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 LT PUSH2 0x1ED4 JUMPI PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 DIV SWAP3 POP PUSH1 0x20 ADD JUMPDEST PUSH7 0x2386F26FC10000 DUP4 LT PUSH2 0x1EF2 JUMPI PUSH7 0x2386F26FC10000 DUP4 DIV SWAP3 POP PUSH1 0x10 ADD JUMPDEST PUSH4 0x5F5E100 DUP4 LT PUSH2 0x1F0A JUMPI PUSH4 0x5F5E100 DUP4 DIV SWAP3 POP PUSH1 0x8 ADD JUMPDEST PUSH2 0x2710 DUP4 LT PUSH2 0x1F1E JUMPI PUSH2 0x2710 DUP4 DIV SWAP3 POP PUSH1 0x4 ADD JUMPDEST PUSH1 0x64 DUP4 LT PUSH2 0x1F30 JUMPI PUSH1 0x64 DUP4 DIV SWAP3 POP PUSH1 0x2 ADD JUMPDEST PUSH1 0xA DUP4 LT PUSH2 0x438 JUMPI PUSH1 0x1 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP1 SLOAD DUP3 DUP3 SSTORE SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP3 DUP3 ISZERO PUSH2 0x1F96 JUMPI SWAP2 PUSH1 0x20 MUL DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x1F96 JUMPI DUP3 MLOAD DUP3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND OR DUP3 SSTORE PUSH1 0x20 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x1F61 JUMP JUMPDEST POP PUSH2 0x1FA2 SWAP3 SWAP2 POP PUSH2 0x1FA6 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x1FA2 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x1FA7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x1574 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1FE3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1CF0 DUP2 PUSH2 0x1FBB JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2009 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1FF1 JUMP JUMPDEST POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0x202A DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x1FEE JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x1CF0 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2012 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2063 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x2081 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2099 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x20A2 DUP4 PUSH2 0x206A JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x20C5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x20CE DUP5 PUSH2 0x206A JUMP JUMPDEST SWAP3 POP PUSH2 0x20DC PUSH1 0x20 DUP6 ADD PUSH2 0x206A JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x20FF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x2116 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x212E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x60 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x214B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2154 DUP6 PUSH2 0x206A JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x2176 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2182 DUP8 DUP3 DUP9 ADD PUSH2 0x20ED JUMP JUMPDEST SWAP6 SWAP9 SWAP5 SWAP8 POP SWAP6 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x21A0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1CF0 DUP3 PUSH2 0x206A JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP5 GT ISZERO PUSH2 0x21D9 JUMPI PUSH2 0x21D9 PUSH2 0x21A9 JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH1 0x1F NOT PUSH1 0x1F DUP6 ADD DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD DUP2 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR ISZERO PUSH2 0x2207 JUMPI PUSH2 0x2207 PUSH2 0x21A9 JUMP JUMPDEST PUSH1 0x40 MSTORE DUP4 DUP2 MSTORE SWAP1 POP DUP1 DUP3 DUP5 ADD DUP6 LT ISZERO PUSH2 0x221F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 DUP4 PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP6 DUP4 ADD ADD MSTORE POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x224A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2253 DUP4 PUSH2 0x206A JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x226E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 ADD PUSH1 0x1F DUP2 ADD DUP6 SGT PUSH2 0x227F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x228E DUP6 DUP3 CALLDATALOAD PUSH1 0x20 DUP5 ADD PUSH2 0x21BF JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP PUSH1 0x20 DUP4 ADD PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x22D3 JUMPI DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP7 MSTORE PUSH1 0x20 SWAP6 DUP7 ADD SWAP6 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x22AC JUMP JUMPDEST POP SWAP4 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD PUSH2 0x100 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x22FB PUSH2 0x120 DUP5 ADD DUP3 PUSH2 0x2012 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP5 ADD MLOAD PUSH1 0x1F NOT DUP5 DUP4 SUB ADD PUSH1 0x40 DUP6 ADD MSTORE PUSH2 0x2318 DUP3 DUP3 PUSH2 0x2012 JUMP JUMPDEST SWAP2 POP POP PUSH1 0x40 DUP5 ADD MLOAD PUSH1 0x1F NOT DUP5 DUP4 SUB ADD PUSH1 0x60 DUP6 ADD MSTORE PUSH2 0x2336 DUP3 DUP3 PUSH2 0x2012 JUMP JUMPDEST SWAP2 POP POP PUSH1 0x60 DUP5 ADD MLOAD PUSH1 0x1F NOT DUP5 DUP4 SUB ADD PUSH1 0x80 DUP6 ADD MSTORE PUSH2 0x2354 DUP3 DUP3 PUSH2 0x2012 JUMP JUMPDEST SWAP2 POP POP PUSH1 0x80 DUP5 ADD MLOAD PUSH2 0x2371 PUSH1 0xA0 DUP6 ADD DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 MSTORE JUMP JUMPDEST POP PUSH1 0xA0 DUP5 ADD MLOAD DUP4 DUP3 SUB PUSH1 0x1F NOT ADD PUSH1 0xC0 DUP6 ADD MSTORE PUSH2 0x238D DUP3 DUP3 PUSH2 0x2012 JUMP JUMPDEST SWAP2 POP POP PUSH1 0xC0 DUP5 ADD MLOAD PUSH2 0x23AA PUSH1 0xE0 DUP6 ADD DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 MSTORE JUMP JUMPDEST POP PUSH1 0xE0 DUP5 ADD MLOAD DUP4 DUP3 SUB PUSH1 0x1F NOT ADD PUSH2 0x100 DUP6 ADD MSTORE PUSH2 0x23C7 DUP3 DUP3 PUSH2 0x2298 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x23E3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x23EC DUP4 PUSH2 0x206A JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x2401 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x2422 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x242B DUP6 PUSH2 0x206A JUMP JUMPDEST SWAP4 POP PUSH2 0x2439 PUSH1 0x20 DUP7 ADD PUSH2 0x206A JUMP JUMPDEST SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP2 POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x245B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 ADD PUSH1 0x1F DUP2 ADD DUP8 SGT PUSH2 0x246C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x247B DUP8 DUP3 CALLDATALOAD PUSH1 0x20 DUP5 ADD PUSH2 0x21BF JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP11 DUP13 SUB SLT ISZERO PUSH2 0x24A5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x24AE DUP11 PUSH2 0x206A JUMP JUMPDEST SWAP9 POP PUSH1 0x20 DUP11 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x24C9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x24D5 DUP13 DUP3 DUP14 ADD PUSH2 0x20ED JUMP JUMPDEST SWAP1 SWAP10 POP SWAP8 POP POP PUSH1 0x40 DUP11 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x24F4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2500 DUP13 DUP3 DUP14 ADD PUSH2 0x20ED JUMP JUMPDEST SWAP1 SWAP8 POP SWAP6 POP POP PUSH1 0x60 DUP11 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x251F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x252B DUP13 DUP3 DUP14 ADD PUSH2 0x20ED JUMP JUMPDEST SWAP1 SWAP6 POP SWAP4 POP POP PUSH1 0x80 DUP11 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x254A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2556 DUP13 DUP3 DUP14 ADD PUSH2 0x20ED JUMP JUMPDEST SWAP2 POP DUP1 SWAP4 POP POP DUP1 SWAP2 POP POP SWAP3 SWAP6 SWAP9 POP SWAP3 SWAP6 SWAP9 POP SWAP3 SWAP6 SWAP9 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2580 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2589 DUP4 PUSH2 0x206A JUMP JUMPDEST SWAP2 POP PUSH2 0x2597 PUSH1 0x20 DUP5 ADD PUSH2 0x206A JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x25B8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x25C1 DUP7 PUSH2 0x206A JUMP JUMPDEST SWAP5 POP PUSH1 0x20 DUP7 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x25DC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x25E8 DUP9 DUP3 DUP10 ADD PUSH2 0x20ED JUMP JUMPDEST SWAP1 SWAP6 POP SWAP4 POP POP PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x2607 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2613 DUP9 DUP3 DUP10 ADD PUSH2 0x20ED JUMP JUMPDEST SWAP7 SWAP10 SWAP6 SWAP9 POP SWAP4 SWAP7 POP SWAP3 SWAP5 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x2638 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x2658 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP2 DUP4 DUP3 CALLDATACOPY PUSH1 0x0 SWAP2 ADD SWAP1 DUP2 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2680 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP2 DUP4 MSTORE DUP2 DUP2 PUSH1 0x20 DUP6 ADD CALLDATACOPY POP PUSH1 0x0 DUP3 DUP3 ADD PUSH1 0x20 SWAP1 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x1F SWAP1 SWAP2 ADD PUSH1 0x1F NOT AND SWAP1 SWAP2 ADD ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x1A56 PUSH1 0x20 DUP4 ADD DUP5 DUP7 PUSH2 0x2687 JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x26D6 DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x1FEE JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0x2700 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x5DD JUMPI DUP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x272E JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1532 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x273A JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x2767 JUMPI PUSH2 0x2767 PUSH2 0x21A9 JUMP JUMPDEST PUSH2 0x277B DUP2 PUSH2 0x2775 DUP5 SLOAD PUSH2 0x2624 JUMP JUMPDEST DUP5 PUSH2 0x2707 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x1F DUP3 GT PUSH1 0x1 DUP2 EQ PUSH2 0x27AF JUMPI PUSH1 0x0 DUP4 ISZERO PUSH2 0x2797 JUMPI POP DUP5 DUP3 ADD MLOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP6 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP5 SWAP1 SHL OR DUP5 SSTORE PUSH2 0x1532 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP6 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x27DF JUMPI DUP8 DUP6 ADD MLOAD DUP3 SSTORE PUSH1 0x20 SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP3 ADD SWAP2 ADD PUSH2 0x27BF JUMP JUMPDEST POP DUP5 DUP3 LT ISZERO PUSH2 0x27FD JUMPI DUP7 DUP5 ADD MLOAD PUSH1 0x0 NOT PUSH1 0x3 DUP8 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP4 GT ISZERO PUSH2 0x2823 JUMPI PUSH2 0x2823 PUSH2 0x21A9 JUMP JUMPDEST PUSH2 0x2837 DUP4 PUSH2 0x2831 DUP4 SLOAD PUSH2 0x2624 JUMP JUMPDEST DUP4 PUSH2 0x2707 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F DUP5 GT PUSH1 0x1 DUP2 EQ PUSH2 0x286B JUMPI PUSH1 0x0 DUP6 ISZERO PUSH2 0x2853 JUMPI POP DUP4 DUP3 ADD CALLDATALOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP8 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP7 SWAP1 SHL OR DUP4 SSTORE PUSH2 0x1532 JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 SWAP1 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP1 DUP4 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x289C JUMPI DUP7 DUP6 ADD CALLDATALOAD DUP3 SSTORE PUSH1 0x20 SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP3 ADD SWAP2 ADD PUSH2 0x287C JUMP JUMPDEST POP DUP7 DUP3 LT ISZERO PUSH2 0x28B9 JUMPI PUSH1 0x0 NOT PUSH1 0xF8 DUP9 PUSH1 0x3 SHL AND SHR NOT DUP5 DUP8 ADD CALLDATALOAD AND DUP2 SSTORE JUMPDEST POP POP PUSH1 0x1 DUP6 PUSH1 0x1 SHL ADD DUP4 SSTORE POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP2 MSTORE PUSH1 0x0 PUSH2 0x28DF PUSH1 0x40 DUP4 ADD DUP7 DUP9 PUSH2 0x2687 JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x28F2 DUP2 DUP6 DUP8 PUSH2 0x2687 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND DUP3 MSTORE DUP5 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x80 PUSH1 0x60 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x2930 SWAP1 DUP4 ADD DUP5 PUSH2 0x2012 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x294C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x1CF0 DUP2 PUSH2 0x1FBB JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD PUSH2 0x2969 DUP2 DUP5 PUSH1 0x20 DUP9 ADD PUSH2 0x1FEE JUMP JUMPDEST DUP4 MLOAD SWAP1 DUP4 ADD SWAP1 PUSH2 0x297D DUP2 DUP4 PUSH1 0x20 DUP9 ADD PUSH2 0x1FEE JUMP JUMPDEST ADD SWAP5 SWAP4 POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH13 0xD6CACFCC90718978620EBE7B1B ADD TLOAD DUP5 0xF6 0xBD 0xB3 DUP16 MCOPY 0xB8 0xEE 0x4D 0xC4 0x22 PUSH31 0xD0CF8CF564736F6C634300081B003300000000000000000000000000000000 ","sourceMap":"557:6571:21:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2757:179;;;;;;:::i;:::-;;:::i;:::-;;;565:14:22;;558:22;540:41;;528:2;513:18;2757:179:21;;;;;;;;2364:89:5;;;:::i;:::-;;;;;;;:::i;3496:154::-;;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;1852:32:22;;;1834:51;;1822:2;1807:18;3496:154:5;1688:203:22;3322:113:5;;;;;;:::i;:::-;;:::i;:::-;;1524:40:21;;;;;;:::i;:::-;;:::i;4142:578:5:-;;;;;;:::i;:::-;;:::i;1068:43:21:-;;1110:1;1068:43;;;;;2904:25:22;;;2892:2;2877:18;1068:43:21;2758:177:22;940:37:21;;976:1;940:37;;4786:132:5;;;;;;:::i;:::-;;:::i;4972:740:21:-;;;;;;:::i;:::-;;:::i;2184:118:5:-;;;;;;:::i;:::-;;:::i;684:21:21:-;;;;;-1:-1:-1;;;;;684:21:21;;;1919:208:5;;;;;;:::i;:::-;;:::i;2293:101:0:-;;;:::i;1638:85::-;1710:6;;-1:-1:-1;;;;;1710:6:0;1638:85;;6787:338:21;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;2517:93:5:-;;;:::i;3717:144::-;;;;;;:::i;:::-;;:::i;4984:233::-;;;;;;:::i;:::-;;:::i;1794:66:21:-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2944:163;;;;;;:::i;:::-;;:::i;3533:1188::-;;;;;;:::i;:::-;;:::i;3927:153:5:-;;;;;;:::i;:::-;;:::i;1723:64:21:-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5929:717;;;;;;:::i;:::-;;:::i;2543:215:0:-;;;;;;:::i;:::-;;:::i;2757:179:21:-;2868:4;2892:36;2916:11;2892:23;:36::i;:::-;2885:43;2757:179;-1:-1:-1;;2757:179:21:o;2364:89:5:-;2409:13;2441:5;2434:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2364:89;:::o;3496:154::-;3563:7;3582:22;3596:7;3582:13;:22::i;:::-;-1:-1:-1;6033:7:5;6059:24;;;:15;:24;;;;;;-1:-1:-1;;;;;6059:24:5;3622:21;5963:127;3322:113;3393:35;3402:2;3406:7;735:10:11;3393:8:5;:35::i;:::-;3322:113;;:::o;1524:40:21:-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1524:40:21;;-1:-1:-1;1524:40:21;:::o;4142:578:5:-;-1:-1:-1;;;;;4236:16:5;;4232:87;;4275:33;;-1:-1:-1;;;4275:33:5;;4305:1;4275:33;;;1834:51:22;1807:18;;4275:33:5;;;;;;;;4232:87;4537:21;4561:34;4569:2;4573:7;735:10:11;4561:7:5;:34::i;:::-;4537:58;;4626:4;-1:-1:-1;;;;;4609:21:5;:13;-1:-1:-1;;;;;4609:21:5;;4605:109;;4653:50;;-1:-1:-1;;;4653:50:5;;-1:-1:-1;;;;;11840:32:22;;;4653:50:5;;;11822:51:22;11889:18;;;11882:34;;;11952:32;;11932:18;;;11925:60;11795:18;;4653:50:5;11620:371:22;4605:109:5;4222:498;4142:578;;;:::o;4786:132::-;4872:39;4889:4;4895:2;4899:7;4872:39;;;;;;;;;;;;:16;:39::i;:::-;4786:132;;;:::o;4972:740:21:-;1531:13:0;:11;:13::i;:::-;2500:21:13::1;:19;:21::i;:::-;-1:-1:-1::0;;;;;5108:22:21;::::2;;::::0;;;:15:::2;:22;::::0;;;;;;:34;;::::2;::::0;5131:10;;;;5108:34:::2;:::i;:::-;::::0;;;::::2;::::0;;;;;::::2;::::0;;;;::::2;;5107:35;5099:72;;;::::0;-1:-1:-1;;;5099:72:21;;12476:2:22;5099:72:21::2;::::0;::::2;12458:21:22::0;12515:2;12495:18;;;12488:30;12554:26;12534:18;;;12527:54;12598:18;;5099:72:21::2;12274:348:22::0;5099:72:21::2;-1:-1:-1::0;;;;;5191:20:21;::::2;;::::0;;;:13:::2;:20;::::0;;;;;;:32;;::::2;::::0;5212:10;;;;5191:32:::2;:::i;:::-;::::0;;;::::2;::::0;;;;;::::2;::::0;;;;::::2;;5190:33;5182:80;;;::::0;-1:-1:-1;;;5182:80:21;;12829:2:22;5182:80:21::2;::::0;::::2;12811:21:22::0;12868:2;12848:18;;;12841:30;12907:34;12887:18;;;12880:62;-1:-1:-1;;;12958:18:22;;;12951:32;13000:19;;5182:80:21::2;12627:398:22::0;5182:80:21::2;5281:6;::::0;:25:::2;::::0;-1:-1:-1;;;5281:25:21;;-1:-1:-1;;;;;1852:32:22;;;5281:25:21::2;::::0;::::2;1834:51:22::0;5310:1:21::2;::::0;5281:6:::2;::::0;:18:::2;::::0;1807::22;;5281:25:21::2;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:30;;5273:64;;;::::0;-1:-1:-1;;;5273:64:21;;13421:2:22;5273:64:21::2;::::0;::::2;13403:21:22::0;13460:2;13440:18;;;13433:30;-1:-1:-1;;;13479:18:22;;;13472:51;13540:18;;5273:64:21::2;13219:345:22::0;5273:64:21::2;777:1;5356:10;:28;;5348:104;;;::::0;-1:-1:-1;;;5348:104:21;;13771:2:22;5348:104:21::2;::::0;::::2;13753:21:22::0;13810:2;13790:18;;;13783:30;13849:34;13829:18;;;13822:62;13920:33;13900:18;;;13893:61;13971:19;;5348:104:21::2;13569:427:22::0;5348:104:21::2;-1:-1:-1::0;;;;;5465:22:21;::::2;;::::0;;;:15:::2;:22;::::0;;;;;;:34;;5502:4:::2;::::0;5465:22;:34:::2;::::0;5488:10;;;;5465:34:::2;:::i;:::-;::::0;;;::::2;::::0;;;;;::::2;::::0;;;:41;;;::::2;;-1:-1:-1::0;;5465:41:21;;::::2;::::0;;;::::2;::::0;;;5519:8:::2;::::0;:20:::2;::::0;5528:10;;;;5519:20:::2;:::i;:::-;::::0;;;::::2;::::0;;;;;::::2;::::0;;;;;:36:::2;;:48:::0;;::::2;::::0;::::2;::::0;;-1:-1:-1;5519:48:21;;;;;;::::2;::::0;;-1:-1:-1;;;;;5519:48:21;::::2;-1:-1:-1::0;;;;;;5519:48:21;;::::2;::::0;::::2;::::0;;;;5671:33:::2;::::0;::::2;::::0;5693:10;;;;5671:33:::2;:::i;:::-;;;;;;;;2542:20:13::1;1857:1:::0;3068:7;:21;2888:208;2184:118:5;2247:7;2273:22;2287:7;2273:13;:22::i;1919:208::-;1982:7;-1:-1:-1;;;;;2005:19:5;;2001:87;;2047:30;;-1:-1:-1;;;2047:30:5;;2074:1;2047:30;;;1834:51:22;1807:18;;2047:30:5;1688:203:22;2001:87:5;-1:-1:-1;;;;;;2104:16:5;;;;;:9;:16;;;;;;;1919:208::o;2293:101:0:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;6787:338:21:-;6877:14;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6877:14:21;1531:13:0;:11;:13::i;:::-;-1:-1:-1;;;;;6912:20:21;::::1;;::::0;;;:13:::1;:20;::::0;;;;;;:32;;::::1;::::0;6933:10;;6912:32:::1;:::i;:::-;::::0;;;::::1;::::0;;;;;::::1;::::0;;;;::::1;;::::0;:70:::1;;-1:-1:-1::0;;;;;;6948:22:21;::::1;;::::0;;;:15:::1;:22;::::0;;;;;;:34;;::::1;::::0;6971:10;;6948:34:::1;:::i;:::-;::::0;;;::::1;::::0;;;;;::::1;::::0;;;;::::1;;6912:70;6904:126;;;::::0;-1:-1:-1;;;6904:126:21;;15021:2:22;6904:126:21::1;::::0;::::1;15003:21:22::0;15060:2;15040:18;;;15033:30;15099:34;15079:18;;;15072:62;-1:-1:-1;;;15150:18:22;;;15143:41;15201:19;;6904:126:21::1;14819:407:22::0;6904:126:21::1;7043:23;7069:8;7078:10;7069:20;;;;;;:::i;:::-;;;;;;;;;;;;;7043:46;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1::0;;;7043:46:21;;;-1:-1:-1;;7043:46:21::1;::::0;::::1;::::0;-1:-1:-1;;;;;7043:46:21::1;;::::0;::::1;::::0;::::1;::::0;::::1;::::0;;;;;;;::::1;::::0;::::1;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1::0;;;7043:46:21;;;-1:-1:-1;;7043:46:21::1;::::0;::::1;::::0;-1:-1:-1;;;;;7043:46:21::1;;::::0;;::::1;::::0;;;;::::1;::::0;::::1;::::0;;;;;;;::::1;::::0;;;;;;;;;;;;;;::::1;::::0;;;::::1;;;;;;;;;;;;;;;;::::0;;-1:-1:-1;;;;;7043:46:21::1;::::0;;;;;::::1;::::0;::::1;;::::0;;::::1;;;;-1:-1:-1::0;;;7043:46:21;;;;-1:-1:-1;7043:46:21;;6787:338;-1:-1:-1;;;;;;6787:338:21:o;2517:93:5:-;2564:13;2596:7;2589:14;;;;;:::i;3717:144::-;3802:52;735:10:11;3835:8:5;3845;3802:18;:52::i;4984:233::-;5097:31;5110:4;5116:2;5120:7;5097:12;:31::i;:::-;5138:72;735:10:11;5186:4:5;5192:2;5196:7;5205:4;5138:33;:72::i;2944:163:21:-;3043:13;3076:23;3091:7;3076:14;:23::i;3533:1188::-;1531:13:0;:11;:13::i;:::-;2500:21:13::1;:19;:21::i;:::-;3784:8:21::2;3793;;3784:18;;;;;;;:::i;:::-;::::0;;;::::2;::::0;;;;;::::2;::::0;;;3778:35;;::::2;::::0;::::2;:::i;:::-;:40:::0;;-1:-1:-1;3770:75:21::2;;;::::0;-1:-1:-1;;;3770:75:21;;15433:2:22;3770:75:21::2;::::0;::::2;15415:21:22::0;15472:2;15452:18;;;15445:30;-1:-1:-1;;;15491:18:22;;;15484:52;15553:18;;3770:75:21::2;15231:346:22::0;3770:75:21::2;3864:6;::::0;:25:::2;::::0;-1:-1:-1;;;3864:25:21;;-1:-1:-1;;;;;1852:32:22;;;3864:25:21::2;::::0;::::2;1834:51:22::0;1110:1:21::2;::::0;3864:6:::2;::::0;:18:::2;::::0;1807::22;;3864:25:21::2;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:44;;3856:78;;;::::0;-1:-1:-1;;;3856:78:21;;15784:2:22;3856:78:21::2;::::0;::::2;15766:21:22::0;15823:2;15803:18;;;15796:30;-1:-1:-1;;;15842:18:22;;;15835:51;15903:18;;3856:78:21::2;15582:345:22::0;3856:78:21::2;3947:13;:15:::0;;;:13:::2;:15;::::0;::::2;:::i;:::-;::::0;;;-1:-1:-1;;4037:13:21::2;::::0;4061:23:::2;4071:5:::0;4037:13;4061:9:::2;:23::i;:::-;4095:30;4108:5;4115:9;;4095:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::2;::::0;;;;-1:-1:-1;4095:12:21::2;::::0;-1:-1:-1;;;4095:30:21:i:2;:::-;4229:289;;;;;;;;4256:8;;4229:289;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::2;::::0;;;;-1:-1:-1;;;4229:289:21;;;-1:-1:-1;4229:289:21::2;::::0;;::::2;;::::0;::::2;::::0;;::::2;::::0;::::2;::::0;;;;;;;;;;;;::::2;::::0;;4312:5;;;;;;4229:289;::::2;4312:5:::0;;;;4229:289;::::2;;::::0;::::2;::::0;;;;-1:-1:-1;;;4229:289:21;;;-1:-1:-1;4229:289:21::2;::::0;;::::2;;::::0;::::2;::::0;;::::2;::::0;::::2;::::0;;;;;;;;;;;;::::2;::::0;;4379:12;;;;;;4229:289;::::2;4379:12:::0;;;;4229:289;::::2;;::::0;::::2;::::0;;;;-1:-1:-1;;;4229:289:21;;;-1:-1:-1;4229:289:21::2;::::0;;::::2;;::::0;::::2;::::0;;::::2;::::0;::::2;::::0;;;;;;;;;;;;::::2;::::0;;4342:9;;;;;;4229:289;::::2;4342:9:::0;;;;4229:289;::::2;;::::0;::::2;::::0;;;-1:-1:-1;4229:289:21;;;-1:-1:-1;;;;;;;;4229:289:21;::::2;;::::0;;::::2;::::0;;;;;;;;;::::2;::::0;;;;;;;;;;;;;;;4489:16;;;;;;;::::2;::::0;;4229:289;;;;;4208:18;:8:::2;::::0;:18:::2;::::0;4217:8;;;;4208:18:::2;:::i;:::-;::::0;;;::::2;::::0;;;;;::::2;::::0;;;:310;;:18;;:310:::2;::::0;:18;:310:::2;:::i;:::-;-1:-1:-1::0;4208:310:21::2;::::0;::::2;::::0;::::2;::::0;::::2;::::0;::::2;::::0;;::::2;:::i;:::-;-1:-1:-1::0;4208:310:21::2;::::0;::::2;::::0;::::2;::::0;::::2;::::0;::::2;::::0;;::::2;:::i;:::-;-1:-1:-1::0;4208:310:21::2;::::0;::::2;::::0;::::2;::::0;::::2;::::0;::::2;::::0;;::::2;:::i;:::-;-1:-1:-1::0;4208:310:21::2;::::0;::::2;::::0;::::2;::::0;::::2;::::0;;-1:-1:-1;;;;;;4208:310:21::2;-1:-1:-1::0;;;;;4208:310:21;;::::2;::::0;;;::::2;::::0;;::::2;::::0;::::2;::::0;::::2;::::0;::::2;::::0;::::2;::::0;;::::2;:::i;:::-;-1:-1:-1::0;4208:310:21::2;::::0;::::2;::::0;::::2;::::0;::::2;::::0;;-1:-1:-1;;;;;;4208:310:21::2;-1:-1:-1::0;;;;;4208:310:21;;::::2;::::0;;;::::2;::::0;;::::2;::::0;::::2;::::0;;;::::2;::::0;::::2;::::0;::::2;::::0;::::2;::::0;;::::2;::::0;::::2;:::i;:::-;-1:-1:-1::0;;;;;;;;4632:20:21;::::2;;::::0;;;:13:::2;:20;::::0;;;;;;:30;;4665:4:::2;::::0;4632:20;:30:::2;::::0;4653:8;;;;4632:30:::2;:::i;:::-;::::0;;;::::2;::::0;;;;;::::2;::::0;;;:37;;;::::2;;-1:-1:-1::0;;4632:37:21;;::::2;::::0;;;::::2;::::0;;;-1:-1:-1;;;;;4687:26:21;::::2;::::0;::::2;::::0;::::2;::::0;4704:8;;;;4687:26:::2;:::i;:::-;;;;;;;;3759:962;2542:20:13::1;1857:1:::0;3068:7;:21;2888:208;2542:20:::1;3533:1188:21::0;;;;;;;;;:::o;3927:153:5:-;-1:-1:-1;;;;;4038:25:5;;;4015:4;4038:25;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;;;3927:153::o;5929:717:21:-;1531:13:0;:11;:13::i;:::-;2500:21:13::1;:19;:21::i;:::-;6105:6:21::2;::::0;:25:::2;::::0;-1:-1:-1;;;6105:25:21;;-1:-1:-1;;;;;1852:32:22;;;6105:25:21::2;::::0;::::2;1834:51:22::0;860:1:21::2;::::0;6105:6:::2;::::0;:18:::2;::::0;1807::22;;6105:25:21::2;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:50;;6097:84;;;::::0;-1:-1:-1;;;6097:84:21;;15784:2:22;6097:84:21::2;::::0;::::2;15766:21:22::0;15823:2;15803:18;;;15796:30;-1:-1:-1;;;15842:18:22;;;15835:51;15903:18;;6097:84:21::2;15582:345:22::0;6097:84:21::2;6194:23;6220:8;6229;;6220:18;;;;;;;:::i;:::-;;;;;;;;;;;;;6194:44;;6263:7;:16;;6257:30;;;;;:::i;:::-;:35:::0;;-1:-1:-1;6249:67:21::2;;;::::0;-1:-1:-1;;;6249:67:21;;18495:2:22;6249:67:21::2;::::0;::::2;18477:21:22::0;18534:2;18514:18;;;18507:30;-1:-1:-1;;;18553:18:22;;;18546:49;18612:18;;6249:67:21::2;18293:343:22::0;6249:67:21::2;6335:13;::::0;::::2;::::0;-1:-1:-1;;;;;6335:13:21::2;6327:63;;;::::0;-1:-1:-1;;;6327:63:21;;18843:2:22;6327:63:21::2;::::0;::::2;18825:21:22::0;18882:2;18862:18;;;18855:30;18921:25;18901:18;;;18894:53;18964:18;;6327:63:21::2;18641:347:22::0;6327:63:21::2;6403:16;::::0;::::2;:28;6422:9:::0;;6403:16;:28:::2;:::i;:::-;-1:-1:-1::0;6442:20:21::2;::::0;::::2;:28:::0;;-1:-1:-1;;;;;;6442:28:21::2;-1:-1:-1::0;;;;;6442:28:21;::::2;::::0;;::::2;::::0;;;6598:40:::2;::::0;::::2;::::0;::::2;::::0;6618:8;;;;6628:9;;;;6598:40:::2;:::i;:::-;;;;;;;;6086:560;2542:20:13::1;1857:1:::0;3068:7;:21;2888:208;2542:20:::1;5929:717:21::0;;;;;:::o;2543:215:0:-;1531:13;:11;:13::i;:::-;-1:-1:-1;;;;;2627:22:0;::::1;2623:91;;2672:31;::::0;-1:-1:-1;;;2672:31:0;;2700:1:::1;2672:31;::::0;::::1;1834:51:22::0;1807:18;;2672:31:0::1;1688:203:22::0;2623:91:0::1;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;938:207:8:-;1040:4;-1:-1:-1;;;;;;1063:35:8;;-1:-1:-1;;;1063:35:8;;:75;;;1102:36;1126:11;1102:23;:36::i;16212:241:5:-;16275:7;5824:16;;;:7;:16;;;;;;-1:-1:-1;;;;;5824:16:5;;16337:88;;16383:31;;-1:-1:-1;;;16383:31:5;;;;;2904:25:22;;;2877:18;;16383:31:5;2758:177:22;14492:120:5;14572:33;14581:2;14585:7;14594:4;14600;14572:8;:33::i;8861:795::-;8947:7;5824:16;;;:7;:16;;;;;;-1:-1:-1;;;;;5824:16:5;;;;9058:18;;;9054:86;;9092:37;9109:4;9115;9121:7;9092:16;:37::i;:::-;-1:-1:-1;;;;;9184:18:5;;;9180:256;;9300:48;9317:1;9321:7;9338:1;9342:5;9300:8;:48::i;:::-;-1:-1:-1;;;;;9391:15:5;;;;;;:9;:15;;;;;:20;;-1:-1:-1;;9391:20:5;;;9180:256;-1:-1:-1;;;;;9450:16:5;;;9446:107;;-1:-1:-1;;;;;9510:13:5;;;;;;:9;:13;;;;;:18;;9527:1;9510:18;;;9446:107;9563:16;;;;:7;:16;;;;;;:21;;-1:-1:-1;;;;;;9563:21:5;-1:-1:-1;;;;;9563:21:5;;;;;;;;;9600:27;;9563:16;;9600:27;;;;;;;9645:4;8861:795;-1:-1:-1;;;;8861:795:5:o;1796:162:0:-;1710:6;;-1:-1:-1;;;;;1710:6:0;735:10:11;1855:23:0;1851:101;;1901:40;;-1:-1:-1;;;1901:40:0;;735:10:11;1901:40:0;;;1834:51:22;1807:18;;1901:40:0;1688:203:22;2575:307:13;1899:1;2702:7;;:18;2698:86;;2743:30;;-1:-1:-1;;;2743:30:13;;;;;;;;;;;2698:86;1899:1;2858:7;:17;2575:307::o;2912:187:0:-;3004:6;;;-1:-1:-1;;;;;3020:17:0;;;-1:-1:-1;;;;;;3020:17:0;;;;;;;3052:40;;3004:6;;;3020:17;3004:6;;3052:40;;2985:16;;3052:40;2975:124;2912:187;:::o;15665:312:5:-;-1:-1:-1;;;;;15772:22:5;;15768:91;;15817:31;;-1:-1:-1;;;15817:31:5;;-1:-1:-1;;;;;1852:32:22;;15817:31:5;;;1834:51:22;1807:18;;15817:31:5;1688:203:22;15768:91:5;-1:-1:-1;;;;;15868:25:5;;;;;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;:46;;-1:-1:-1;;15868:46:5;;;;;;;;;;15929:41;;540::22;;;15929::5;;513:18:22;15929:41:5;;;;;;;15665:312;;;:::o;985:924:10:-;-1:-1:-1;;;;;1165:14:10;;;:18;1161:742;;1203:67;;-1:-1:-1;;;1203:67:10;;-1:-1:-1;;;;;1203:36:10;;;;;:67;;1240:8;;1250:4;;1256:7;;1265:4;;1203:67;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1203:67:10;;;;;;;;-1:-1:-1;;1203:67:10;;;;;;;;;;;;:::i;:::-;;;1199:694;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1560:6;:13;1577:1;1560:18;1556:323;;1664:39;;-1:-1:-1;;;1664:39:10;;-1:-1:-1;;;;;1852:32:22;;1664:39:10;;;1834:51:22;1807:18;;1664:39:10;1688:203:22;1556:323:10;1831:6;1825:13;1816:6;1812:2;1808:15;1801:38;1199:694;-1:-1:-1;;;;;;1317:51:10;;-1:-1:-1;;;1317:51:10;1313:182;;1437:39;;-1:-1:-1;;;1437:39:10;;-1:-1:-1;;;;;1852:32:22;;1437:39:10;;;1834:51:22;1807:18;;1437:39:10;1688:203:22;1313:182:10;1271:238;985:924;;;;;:::o;1211:593:8:-;1284:13;1309:22;1323:7;1309:13;:22::i;:::-;-1:-1:-1;1342:23:8;1368:19;;;:10;:19;;;;;1342:45;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1397:18;1418:10;3249:9:5;;;;;;;;;-1:-1:-1;3249:9:5;;;3173:92;1418:10:8;1397:31;;1507:4;1501:18;1523:1;1501:23;1497:70;;-1:-1:-1;1547:9:8;1211:593;-1:-1:-1;;1211:593:8:o;1497:70::-;1666:23;;:27;1662:95;;1730:4;1736:9;1716:30;;;;;;;;;:::i;:::-;;;;;;;;;;;;;1709:37;;;;1211:593;;;:::o;1662:95::-;1774:23;1789:7;1774:14;:23::i;:::-;1767:30;1211:593;-1:-1:-1;;;;1211:593:8:o;10656:100:5:-;10723:26;10733:2;10737:7;10723:26;;;;;;;;;;;;:9;:26::i;1923:167:8:-;2014:19;;;;:10;:19;;;;;:31;2036:9;2014:19;:31;:::i;:::-;-1:-1:-1;2060:23:8;;2904:25:22;;;2060:23:8;;2892:2:22;2877:18;2060:23:8;;;;;;;1923:167;;:::o;1560:300:5:-;1662:4;-1:-1:-1;;;;;;1697:40:5;;-1:-1:-1;;;1697:40:5;;:104;;-1:-1:-1;;;;;;;1753:48:5;;-1:-1:-1;;;1753:48:5;1697:104;:156;;;-1:-1:-1;;;;;;;;;;862:40:15;;;1817:36:5;763:146:15;14794:662:5;14954:9;:31;;;-1:-1:-1;;;;;;14967:18:5;;;;14954:31;14950:460;;;15001:13;15017:22;15031:7;15017:13;:22::i;:::-;15001:38;-1:-1:-1;;;;;;15167:18:5;;;;;;:35;;;15198:4;-1:-1:-1;;;;;15189:13:5;:5;-1:-1:-1;;;;;15189:13:5;;;15167:35;:69;;;;;15207:29;15224:5;15231:4;15207:16;:29::i;:::-;15206:30;15167:69;15163:142;;;15263:27;;-1:-1:-1;;;15263:27:5;;-1:-1:-1;;;;;1852:32:22;;15263:27:5;;;1834:51:22;1807:18;;15263:27:5;1688:203:22;15163:142:5;15323:9;15319:81;;;15377:7;15373:2;-1:-1:-1;;;;;15357:28:5;15366:5;-1:-1:-1;;;;;15357:28:5;;;;;;;;;;;15319:81;14987:423;14950:460;-1:-1:-1;;15420:24:5;;;;:15;:24;;;;;:29;;-1:-1:-1;;;;;;15420:29:5;-1:-1:-1;;;;;15420:29:5;;;;;;;;;;14794:662::o;7105:368::-;7217:38;7231:5;7238:7;7247;7217:13;:38::i;:::-;7212:255;;-1:-1:-1;;;;;7275:19:5;;7271:186;;7321:31;;-1:-1:-1;;;7321:31:5;;;;;2904:25:22;;;2877:18;;7321:31:5;2758:177:22;7271:186:5;7398:44;;-1:-1:-1;;;7398:44:5;;-1:-1:-1;;;;;22083:32:22;;7398:44:5;;;22065:51:22;22132:18;;;22125:34;;;22038:18;;7398:44:5;21891:274:22;2676:255:5;2740:13;2765:22;2779:7;2765:13;:22::i;:::-;;2798:21;2822:10;3249:9;;;;;;;;;-1:-1:-1;3249:9:5;;;3173:92;2822:10;2798:34;;2873:1;2855:7;2849:21;:25;:75;;;;;;;;;;;;;;;;;2891:7;2900:18;:7;:16;:18::i;:::-;2877:42;;;;;;;;;:::i;:::-;;;;;;;;;;;;;2849:75;2842:82;2676:255;-1:-1:-1;;;2676:255:5:o;10977:207::-;11071:18;11077:2;11081:7;11071:5;:18::i;:::-;11099:78;735:10:11;11155:1:5;11159:2;11163:7;11172:4;11099:33;:78::i;6401:272::-;6504:4;-1:-1:-1;;;;;6539:21:5;;;;;;:127;;;6586:7;-1:-1:-1;;;;;6577:16:5;:5;-1:-1:-1;;;;;6577:16:5;;:52;;;;6597:32;6614:5;6621:7;6597:16;:32::i;:::-;6577:88;;;-1:-1:-1;;6033:7:5;6059:24;;;:15;:24;;;;;;-1:-1:-1;;;;;6059:24:5;;;6633:32;;;;6520:146;-1:-1:-1;6401:272:5:o;637:632:14:-;693:13;742:14;759:17;770:5;759:10;:17::i;:::-;779:1;759:21;742:38;;794:20;828:6;-1:-1:-1;;;;;817:18:14;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;817:18:14;-1:-1:-1;794:41:14;-1:-1:-1;924:28:14;;;940:2;924:28;979:247;-1:-1:-1;;1010:5:14;-1:-1:-1;;;1109:2:14;1098:14;;1093:32;1010:5;1080:46;1170:2;1161:11;;;-1:-1:-1;1190:21:14;979:247;1190:21;-1:-1:-1;1246:6:14;637:632;-1:-1:-1;;;637:632:14:o;9978:327:5:-;-1:-1:-1;;;;;10045:16:5;;10041:87;;10084:33;;-1:-1:-1;;;10084:33:5;;10114:1;10084:33;;;1834:51:22;1807:18;;10084:33:5;1688:203:22;10041:87:5;10137:21;10161:32;10169:2;10173:7;10190:1;10161:7;:32::i;:::-;10137:56;-1:-1:-1;;;;;;10207:27:5;;;10203:96;;10257:31;;-1:-1:-1;;;10257:31:5;;10285:1;10257:31;;;1834:51:22;1807:18;;10257:31:5;1688:203:22;25316:916:17;25369:7;;-1:-1:-1;;;25444:17:17;;25440:103;;-1:-1:-1;;;25481:17:17;;;-1:-1:-1;25526:2:17;25516:12;25440:103;25569:8;25560:5;:17;25556:103;;25606:8;25597:17;;;-1:-1:-1;25642:2:17;25632:12;25556:103;25685:8;25676:5;:17;25672:103;;25722:8;25713:17;;;-1:-1:-1;25758:2:17;25748:12;25672:103;25801:7;25792:5;:16;25788:100;;25837:7;25828:16;;;-1:-1:-1;25872:1:17;25862:11;25788:100;25914:7;25905:5;:16;25901:100;;25950:7;25941:16;;;-1:-1:-1;25985:1:17;25975:11;25901:100;26027:7;26018:5;:16;26014:100;;26063:7;26054:16;;;-1:-1:-1;26098:1:17;26088:11;26014:100;26140:7;26131:5;:16;26127:66;;26177:1;26167:11;26219:6;25316:916;-1:-1:-1;;25316:916:17:o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:131:22;-1:-1:-1;;;;;;88:32:22;;78:43;;68:71;;135:1;132;125:12;150:245;208:6;261:2;249:9;240:7;236:23;232:32;229:52;;;277:1;274;267:12;229:52;316:9;303:23;335:30;359:5;335:30;:::i;592:250::-;677:1;687:113;701:6;698:1;695:13;687:113;;;777:11;;;771:18;758:11;;;751:39;723:2;716:10;687:113;;;-1:-1:-1;;834:1:22;816:16;;809:27;592:250::o;847:271::-;889:3;927:5;921:12;954:6;949:3;942:19;970:76;1039:6;1032:4;1027:3;1023:14;1016:4;1009:5;1005:16;970:76;:::i;:::-;1100:2;1079:15;-1:-1:-1;;1075:29:22;1066:39;;;;1107:4;1062:50;;847:271;-1:-1:-1;;847:271:22:o;1123:220::-;1272:2;1261:9;1254:21;1235:4;1292:45;1333:2;1322:9;1318:18;1310:6;1292:45;:::i;1348:226::-;1407:6;1460:2;1448:9;1439:7;1435:23;1431:32;1428:52;;;1476:1;1473;1466:12;1428:52;-1:-1:-1;1521:23:22;;1348:226;-1:-1:-1;1348:226:22:o;1896:173::-;1964:20;;-1:-1:-1;;;;;2013:31:22;;2003:42;;1993:70;;2059:1;2056;2049:12;1993:70;1896:173;;;:::o;2074:300::-;2142:6;2150;2203:2;2191:9;2182:7;2178:23;2174:32;2171:52;;;2219:1;2216;2209:12;2171:52;2242:29;2261:9;2242:29;:::i;:::-;2232:39;2340:2;2325:18;;;;2312:32;;-1:-1:-1;;;2074:300:22:o;2379:374::-;2456:6;2464;2472;2525:2;2513:9;2504:7;2500:23;2496:32;2493:52;;;2541:1;2538;2531:12;2493:52;2564:29;2583:9;2564:29;:::i;:::-;2554:39;;2612:38;2646:2;2635:9;2631:18;2612:38;:::i;:::-;2379:374;;2602:48;;-1:-1:-1;;;2719:2:22;2704:18;;;;2691:32;;2379:374::o;2940:348::-;2992:8;3002:6;3056:3;3049:4;3041:6;3037:17;3033:27;3023:55;;3074:1;3071;3064:12;3023:55;-1:-1:-1;3097:20:22;;-1:-1:-1;;;;;3129:30:22;;3126:50;;;3172:1;3169;3162:12;3126:50;3209:4;3201:6;3197:17;3185:29;;3261:3;3254:4;3245:6;3237;3233:19;3229:30;3226:39;3223:59;;;3278:1;3275;3268:12;3223:59;2940:348;;;;;:::o;3293:599::-;3382:6;3390;3398;3406;3459:2;3447:9;3438:7;3434:23;3430:32;3427:52;;;3475:1;3472;3465:12;3427:52;3498:29;3517:9;3498:29;:::i;:::-;3488:39;-1:-1:-1;3596:2:22;3581:18;;3568:32;;-1:-1:-1;3675:2:22;3660:18;;3647:32;-1:-1:-1;;;;;3691:30:22;;3688:50;;;3734:1;3731;3724:12;3688:50;3773:59;3824:7;3815:6;3804:9;3800:22;3773:59;:::i;:::-;3293:599;;;;-1:-1:-1;3851:8:22;-1:-1:-1;;;;3293:599:22:o;4121:186::-;4180:6;4233:2;4221:9;4212:7;4208:23;4204:32;4201:52;;;4249:1;4246;4239:12;4201:52;4272:29;4291:9;4272:29;:::i;4312:127::-;4373:10;4368:3;4364:20;4361:1;4354:31;4404:4;4401:1;4394:15;4428:4;4425:1;4418:15;4444:716;4509:5;4541:1;-1:-1:-1;;;;;4557:6:22;4554:30;4551:56;;;4587:18;;:::i;:::-;-1:-1:-1;4742:2:22;4736:9;-1:-1:-1;;4655:2:22;4634:15;;4630:29;;4800:2;4788:15;4784:29;4772:42;;4865:22;;;-1:-1:-1;;;;;4829:34:22;;4826:62;4823:88;;;4891:18;;:::i;:::-;4927:2;4920:22;4975;;;4960:6;-1:-1:-1;4960:6:22;5012:16;;;5009:25;-1:-1:-1;5006:45:22;;;5047:1;5044;5037:12;5006:45;5097:6;5092:3;5085:4;5077:6;5073:17;5060:44;5152:1;5145:4;5136:6;5128;5124:19;5120:30;5113:41;;4444:716;;;;;:::o;5165:525::-;5243:6;5251;5304:2;5292:9;5283:7;5279:23;5275:32;5272:52;;;5320:1;5317;5310:12;5272:52;5343:29;5362:9;5343:29;:::i;:::-;5333:39;;5423:2;5412:9;5408:18;5395:32;-1:-1:-1;;;;;5442:6:22;5439:30;5436:50;;;5482:1;5479;5472:12;5436:50;5505:22;;5558:4;5550:13;;5546:27;-1:-1:-1;5536:55:22;;5587:1;5584;5577:12;5536:55;5610:74;5676:7;5671:2;5658:16;5653:2;5649;5645:11;5610:74;:::i;:::-;5600:84;;;5165:525;;;;;:::o;5695:446::-;5748:3;5786:5;5780:12;5813:6;5808:3;5801:19;5845:4;5840:3;5836:14;5829:21;;5884:4;5877:5;5873:16;5907:1;5917:199;5931:6;5928:1;5925:13;5917:199;;;5996:13;;-1:-1:-1;;;;;5992:39:22;5980:52;;6061:4;6052:14;;;;6089:17;;;;6028:1;5946:9;5917:199;;;-1:-1:-1;6132:3:22;;5695:446;-1:-1:-1;;;;5695:446:22:o;6146:1547::-;6325:2;6314:9;6307:21;6288:4;6363:6;6357:13;6406:6;6401:2;6390:9;6386:18;6379:34;6436:52;6483:3;6472:9;6468:19;6454:12;6436:52;:::i;:::-;6422:66;;6537:2;6529:6;6525:15;6519:22;6609:2;6605:7;6593:9;6585:6;6581:22;6577:36;6572:2;6561:9;6557:18;6550:64;6637:41;6671:6;6655:14;6637:41;:::i;:::-;6623:55;;;6727:2;6719:6;6715:15;6709:22;6799:2;6795:7;6783:9;6775:6;6771:22;6767:36;6762:2;6751:9;6747:18;6740:64;6827:41;6861:6;6845:14;6827:41;:::i;:::-;6813:55;;;6917:2;6909:6;6905:15;6899:22;6990:2;6986:7;6974:9;6966:6;6962:22;6958:36;6952:3;6941:9;6937:19;6930:65;7018:41;7052:6;7036:14;7018:41;:::i;:::-;7004:55;;;7108:3;7100:6;7096:16;7090:23;7122:55;7172:3;7161:9;7157:19;7141:14;-1:-1:-1;;;;;1645:31:22;1633:44;;1579:104;7122:55;-1:-1:-1;7226:3:22;7214:16;;7208:23;7272:22;;;-1:-1:-1;;7268:36:22;7262:3;7247:19;;7240:65;7328:41;7276:6;7208:23;7328:41;:::i;:::-;7314:55;;;7418:3;7410:6;7406:16;7400:23;7432:55;7482:3;7471:9;7467:19;7451:14;-1:-1:-1;;;;;1645:31:22;1633:44;;1579:104;7432:55;-1:-1:-1;7536:3:22;7524:16;;7518:23;7585:22;;;-1:-1:-1;;7581:36:22;7572:6;7557:22;;7550:68;7635:52;7589:6;7518:23;7635:52;:::i;:::-;7627:60;6146:1547;-1:-1:-1;;;;;6146:1547:22:o;7698:347::-;7763:6;7771;7824:2;7812:9;7803:7;7799:23;7795:32;7792:52;;;7840:1;7837;7830:12;7792:52;7863:29;7882:9;7863:29;:::i;:::-;7853:39;;7942:2;7931:9;7927:18;7914:32;7989:5;7982:13;7975:21;7968:5;7965:32;7955:60;;8011:1;8008;8001:12;7955:60;8034:5;8024:15;;;7698:347;;;;;:::o;8050:713::-;8145:6;8153;8161;8169;8222:3;8210:9;8201:7;8197:23;8193:33;8190:53;;;8239:1;8236;8229:12;8190:53;8262:29;8281:9;8262:29;:::i;:::-;8252:39;;8310:38;8344:2;8333:9;8329:18;8310:38;:::i;:::-;8300:48;-1:-1:-1;8417:2:22;8402:18;;8389:32;;-1:-1:-1;8496:2:22;8481:18;;8468:32;-1:-1:-1;;;;;8512:30:22;;8509:50;;;8555:1;8552;8545:12;8509:50;8578:22;;8631:4;8623:13;;8619:27;-1:-1:-1;8609:55:22;;8660:1;8657;8650:12;8609:55;8683:74;8749:7;8744:2;8731:16;8726:2;8722;8718:11;8683:74;:::i;:::-;8673:84;;;8050:713;;;;;;;:::o;8768:1402::-;8911:6;8919;8927;8935;8943;8951;8959;8967;8975;9028:3;9016:9;9007:7;9003:23;8999:33;8996:53;;;9045:1;9042;9035:12;8996:53;9068:29;9087:9;9068:29;:::i;:::-;9058:39;;9148:2;9137:9;9133:18;9120:32;-1:-1:-1;;;;;9167:6:22;9164:30;9161:50;;;9207:1;9204;9197:12;9161:50;9246:59;9297:7;9288:6;9277:9;9273:22;9246:59;:::i;:::-;9324:8;;-1:-1:-1;9220:85:22;-1:-1:-1;;9412:2:22;9397:18;;9384:32;-1:-1:-1;;;;;9428:32:22;;9425:52;;;9473:1;9470;9463:12;9425:52;9512:61;9565:7;9554:8;9543:9;9539:24;9512:61;:::i;:::-;9592:8;;-1:-1:-1;9486:87:22;-1:-1:-1;;9680:2:22;9665:18;;9652:32;-1:-1:-1;;;;;9696:32:22;;9693:52;;;9741:1;9738;9731:12;9693:52;9780:61;9833:7;9822:8;9811:9;9807:24;9780:61;:::i;:::-;9860:8;;-1:-1:-1;9754:87:22;-1:-1:-1;;9948:3:22;9933:19;;9920:33;-1:-1:-1;;;;;9965:32:22;;9962:52;;;10010:1;10007;10000:12;9962:52;10049:61;10102:7;10091:8;10080:9;10076:24;10049:61;:::i;:::-;10023:87;;10129:8;10119:18;;;10156:8;10146:18;;;8768:1402;;;;;;;;;;;:::o;10175:260::-;10243:6;10251;10304:2;10292:9;10283:7;10279:23;10275:32;10272:52;;;10320:1;10317;10310:12;10272:52;10343:29;10362:9;10343:29;:::i;:::-;10333:39;;10391:38;10425:2;10414:9;10410:18;10391:38;:::i;:::-;10381:48;;10175:260;;;;;:::o;10440:790::-;10541:6;10549;10557;10565;10573;10626:2;10614:9;10605:7;10601:23;10597:32;10594:52;;;10642:1;10639;10632:12;10594:52;10665:29;10684:9;10665:29;:::i;:::-;10655:39;;10745:2;10734:9;10730:18;10717:32;-1:-1:-1;;;;;10764:6:22;10761:30;10758:50;;;10804:1;10801;10794:12;10758:50;10843:59;10894:7;10885:6;10874:9;10870:22;10843:59;:::i;:::-;10921:8;;-1:-1:-1;10817:85:22;-1:-1:-1;;11009:2:22;10994:18;;10981:32;-1:-1:-1;;;;;11025:32:22;;11022:52;;;11070:1;11067;11060:12;11022:52;11109:61;11162:7;11151:8;11140:9;11136:24;11109:61;:::i;:::-;10440:790;;;;-1:-1:-1;10440:790:22;;-1:-1:-1;11189:8:22;;11083:87;10440:790;-1:-1:-1;;;10440:790:22:o;11235:380::-;11314:1;11310:12;;;;11357;;;11378:61;;11432:4;11424:6;11420:17;11410:27;;11378:61;11485:2;11477:6;11474:14;11454:18;11451:38;11448:161;;11531:10;11526:3;11522:20;11519:1;11512:31;11566:4;11563:1;11556:15;11594:4;11591:1;11584:15;11448:161;;11235:380;;;:::o;11996:273::-;12181:6;12173;12168:3;12155:33;12137:3;12207:16;;12232:13;;;12207:16;11996:273;-1:-1:-1;11996:273:22:o;13030:184::-;13100:6;13153:2;13141:9;13132:7;13128:23;13124:32;13121:52;;;13169:1;13166;13159:12;13121:52;-1:-1:-1;13192:16:22;;13030:184;-1:-1:-1;13030:184:22:o;14001:267::-;14090:6;14085:3;14078:19;14142:6;14135:5;14128:4;14123:3;14119:14;14106:43;-1:-1:-1;14194:1:22;14169:16;;;14187:4;14165:27;;;14158:38;;;;14250:2;14229:15;;;-1:-1:-1;;14225:29:22;14216:39;;;14212:50;;14001:267::o;14273:247::-;14432:2;14421:9;14414:21;14395:4;14452:62;14510:2;14499:9;14495:18;14487:6;14479;14452:62;:::i;14525:289::-;14656:3;14694:6;14688:13;14710:66;14769:6;14764:3;14757:4;14749:6;14745:17;14710:66;:::i;:::-;14792:16;;;;;14525:289;-1:-1:-1;;14525:289:22:o;15932:232::-;15971:3;15992:17;;;15989:140;;16051:10;16046:3;16042:20;16039:1;16032:31;16086:4;16083:1;16076:15;16114:4;16111:1;16104:15;15989:140;-1:-1:-1;16156:1:22;16145:13;;15932:232::o;16295:518::-;16397:2;16392:3;16389:11;16386:421;;;16433:5;16430:1;16423:16;16477:4;16474:1;16464:18;16547:2;16535:10;16531:19;16528:1;16524:27;16518:4;16514:38;16583:4;16571:10;16568:20;16565:47;;;-1:-1:-1;16606:4:22;16565:47;16661:2;16656:3;16652:12;16649:1;16645:20;16639:4;16635:31;16625:41;;16716:81;16734:2;16727:5;16724:13;16716:81;;;16793:1;16779:16;;16760:1;16749:13;16716:81;;16989:1299;17115:3;17109:10;-1:-1:-1;;;;;17134:6:22;17131:30;17128:56;;;17164:18;;:::i;:::-;17193:97;17283:6;17243:38;17275:4;17269:11;17243:38;:::i;:::-;17237:4;17193:97;:::i;:::-;17339:4;17370:2;17359:14;;17387:1;17382:649;;;;18075:1;18092:6;18089:89;;;-1:-1:-1;18144:19:22;;;18138:26;18089:89;-1:-1:-1;;16946:1:22;16942:11;;;16938:24;16934:29;16924:40;16970:1;16966:11;;;16921:57;18191:81;;17352:930;;17382:649;16242:1;16235:14;;;16279:4;16266:18;;-1:-1:-1;;17418:20:22;;;17536:222;17550:7;17547:1;17544:14;17536:222;;;17632:19;;;17626:26;17611:42;;17739:4;17724:20;;;;17692:1;17680:14;;;;17566:12;17536:222;;;17540:3;17786:6;17777:7;17774:19;17771:201;;;17847:19;;;17841:26;-1:-1:-1;;17930:1:22;17926:14;;;17942:3;17922:24;17918:37;17914:42;17899:58;17884:74;;17771:201;-1:-1:-1;;;;18018:1:22;18002:14;;;17998:22;17985:36;;-1:-1:-1;16989:1299:22:o;18993:1206::-;-1:-1:-1;;;;;19112:3:22;19109:27;19106:53;;;19139:18;;:::i;:::-;19168:94;19258:3;19218:38;19250:4;19244:11;19218:38;:::i;:::-;19212:4;19168:94;:::i;:::-;19288:1;19313:2;19308:3;19305:11;19330:1;19325:616;;;;19985:1;20002:3;19999:93;;;-1:-1:-1;20058:19:22;;;20045:33;19999:93;-1:-1:-1;;16946:1:22;16942:11;;;16938:24;16934:29;16924:40;16970:1;16966:11;;;16921:57;20105:78;;19298:895;;19325:616;16242:1;16235:14;;;16279:4;16266:18;;-1:-1:-1;;19361:17:22;;;19462:9;19484:229;19498:7;19495:1;19492:14;19484:229;;;19587:19;;;19574:33;19559:49;;19694:4;19679:20;;;;19647:1;19635:14;;;;19514:12;19484:229;;;19488:3;19741;19732:7;19729:16;19726:159;;;19865:1;19861:6;19855:3;19849;19846:1;19842:11;19838:21;19834:34;19830:39;19817:9;19812:3;19808:19;19795:33;19791:79;19783:6;19776:95;19726:159;;;19928:1;19922:3;19919:1;19915:11;19911:19;19905:4;19898:33;19298:895;;18993:1206;;;:::o;20204:437::-;20421:2;20410:9;20403:21;20384:4;20447:62;20505:2;20494:9;20490:18;20482:6;20474;20447:62;:::i;:::-;20557:9;20549:6;20545:22;20540:2;20529:9;20525:18;20518:50;20585;20628:6;20620;20612;20585:50;:::i;:::-;20577:58;20204:437;-1:-1:-1;;;;;;;20204:437:22:o;20646:485::-;-1:-1:-1;;;;;20877:32:22;;;20859:51;;20946:32;;20941:2;20926:18;;20919:60;21010:2;20995:18;;20988:34;;;21058:3;21053:2;21038:18;;21031:31;;;-1:-1:-1;;21079:46:22;;21105:19;;21097:6;21079:46;:::i;:::-;21071:54;20646:485;-1:-1:-1;;;;;;20646:485:22:o;21136:249::-;21205:6;21258:2;21246:9;21237:7;21233:23;21229:32;21226:52;;;21274:1;21271;21264:12;21226:52;21306:9;21300:16;21325:30;21349:5;21325:30;:::i;21390:496::-;21569:3;21607:6;21601:13;21623:66;21682:6;21677:3;21670:4;21662:6;21658:17;21623:66;:::i;:::-;21752:13;;21711:16;;;;21774:70;21752:13;21711:16;21821:4;21809:17;;21774:70;:::i;:::-;21860:20;;21390:496;-1:-1:-1;;;;21390:496:22:o"},"methodIdentifiers":{"DailyScanLimit()":"5dc2e20d","NRCPricePerMint()":"30c293de","NRCPricePerNicknaming()":"9af52a91","NRCReward()":"41e36364","NRCoin()":"6e0690a2","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","getNFT(address,string)":"9199aeca","isApprovedForAll(address,address)":"e985e9c5","mintNFT(address,string,string,string,string)":"cee28be1","name()":"06fdde03","nicknameNFT(address,string,string)":"ee84eb77","ownedCoasters(address,string)":"ea52a156","owner()":"8da5cb5b","ownerOf(uint256)":"6352211e","registeredUserAddresses(uint256)":"2365dce2","renounceOwnership()":"715018a6","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","scanCoaster(address,uint256,string)":"4918c4f6","scannedCoasters(address,string)":"bd228bbd","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","symbol()":"95d89b41","tokenURI(uint256)":"c87b56dd","transferFrom(address,address,uint256)":"23b872dd","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_NRCoin\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_fromTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_toTokenId\",\"type\":\"uint256\"}],\"name\":\"BatchMetadataUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_namerAccount\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"_assetId\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"_nickname\",\"type\":\"string\"}],\"name\":\"CoasterNamed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"_coasterId\",\"type\":\"string\"}],\"name\":\"CoasterScanned\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"MetadataUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"_assetId\",\"type\":\"string\"}],\"name\":\"NFTMinted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"UserRegistered\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DailyScanLimit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"NRCPricePerMint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"NRCPricePerNicknaming\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"NRCReward\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"NRCoin\",\"outputs\":[{\"internalType\":\"contract INRCoin\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_coasterId\",\"type\":\"string\"}],\"name\":\"getNFT\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"id\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"assetURI\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"nickname\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"namerAccount\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"scannersAccount\",\"type\":\"address[]\"}],\"internalType\":\"struct NextRoundNFT.Coaster\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_description\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_assetURI\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_assetId\",\"type\":\"string\"}],\"name\":\"mintNFT\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_assetId\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_nickname\",\"type\":\"string\"}],\"name\":\"nicknameNFT\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"ownedCoasters\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"registeredUserAddresses\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_scanCount\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_coasterId\",\"type\":\"string\"}],\"name\":\"scanCoaster\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"scannedCoasters\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}],\"ReentrancyGuardReentrantCall()\":[{\"details\":\"Unauthorized reentrant call.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"BatchMetadataUpdate(uint256,uint256)\":{\"details\":\"This event emits when the metadata of a range of tokens is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFTs.\"},\"MetadataUpdate(uint256)\":{\"details\":\"This event emits when the metadata of a token is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFT.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"constructor\":{\"params\":{\"_NRCoin\":\"The contract address for the NR Platform (Coin) contract\"}},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"getNFT(address,string)\":{\"details\":\"Get NFT detail\",\"params\":{\"_coasterId\":\"Coaster ID to fetch by user\",\"_user\":\"Wallet of user\"}},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"mintNFT(address,string,string,string,string)\":{\"details\":\"Mint an NFT asset\",\"params\":{\"_assetId\":\"ID of the asset to mint\",\"_assetURI\":\"Location resource (image url) of the asset to mint\",\"_description\":\"Description of the asset to mint\",\"_name\":\"Name of the asset to mint\",\"_user\":\"wallet address of user who is scanning\"}},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"nicknameNFT(address,string,string)\":{\"details\":\"Nickname NFT by first scanner\",\"params\":{\"_assetId\":\"ID of the NFT asset to name\",\"_nickname\":\"Nick name to give NFT\",\"_user\":\"Wallet address of first scanner\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"scanCoaster(address,uint256,string)\":{\"details\":\"Record a scan and reward a user\",\"params\":{\"_coasterId\":\"ID of the coaster asset to scan\",\"_scanCount\":\"total scans for the user (resets daily)\",\"_user\":\"wallet address of user who is scanning\"}},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"constructor\":{\"notice\":\"Constructor for the NextRound NFT Smart Contract\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/NextRoundNFT.sol\":\"NextRoundNFT\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"@openzeppelin/contracts/interfaces/IERC4906.sol\":{\"keccak256\":\"0x1b8691e244f6e11d987459993671db0af33e6a29f7805eac6a9925cc6b601957\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a9e2a5efc2e14e98f5fe91bbab769199b4987a40dd3b96075b04957fda2ae80f\",\"dweb:/ipfs/QmbAjrSSVBiJ6MbgF7Jkr53m674iGMZ6haWbbRrWDZJraK\"]},\"@openzeppelin/contracts/interfaces/IERC721.sol\":{\"keccak256\":\"0xc4d7ebf63eb2f6bf3fee1b6c0ee775efa9f31b4843a5511d07eea147e212932d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://01c66a2fad66bc710db7510419a7eee569b40b67cd9f01b70a3fc90d6f76c03b\",\"dweb:/ipfs/QmT1CjJZq4eTNA4nu8E9ZrWfaZu6ReUsDbjcK8DbEFqwx5\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x39ed367e54765186281efcfe83e47cf0ad62cc879f10e191360712507125f29a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2c5ae6d85bd48cca8d6d2fcec8c63efd86f56f8a5832577a47e403ce0e65cb09\",\"dweb:/ipfs/QmUtcS8AbRSWhuc61puYet58os8FvSqm329ChoW8wwZXZk\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5dc63d1c6a12fe1b17793e1745877b2fcbe1964c3edfd0a482fac21ca8f18261\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6b7f97c5960a50fd1822cb298551ffc908e37b7893a68d6d08bce18a11cb0f11\",\"dweb:/ipfs/QmQQvxBytoY1eBt3pRQDmvH2hZ2yjhs12YqVfzGm7KSURq\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xb5afb8e8eebc4d1c6404df2f5e1e6d2c3d24fd01e5dfc855314951ecfaae462d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://78586466c424f076c6a2a551d848cfbe3f7c49e723830807598484a1047b3b34\",\"dweb:/ipfs/Qmb717ovcFxm7qgNKEShiV6M9SPR3v1qnNpAGH84D6w29p\"]},\"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":{\"keccak256\":\"0xe52813067c6d5838eeb34e1da8beb2514371a7d778266013b04ca3be1dda7100\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://53fb552d625eb5f60ef9dce439c826bb780952cbbafc985db6e48ac6382a5585\",\"dweb:/ipfs/QmSEbLqEWN1SqsWekfqt6RWC4oEajFWtZ5j8i6gKaGdtKr\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x37d1aaaa5a2908a09e9dcf56a26ddf762ecf295afb5964695937344fc6802ce1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed0bfc1b92153c5000e50f4021367b931bbe96372ac6facec3c4961b72053d02\",\"dweb:/ipfs/Qmbwp8VDerjS5SV1quwHH1oMXxPQ93fzfLVqJ2RCqbowGE\"]},\"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol\":{\"keccak256\":\"0x40399695922383778f9f540a620bec475a2f8e0f08d41f0005682842e28a9855\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://746d295e403931aeb9d6065fd5a0871f43ab5459814a60623611e4b6641a09fd\",\"dweb:/ipfs/QmWrgT8YJrQ9FfD1o3YYArwo57e7MGdpFKuM74qJ4qE34E\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0x11a5a79827df29e915a12740caf62fe21ebe27c08c9ae3e09abe9ee3ba3866d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3cf0c69ab827e3251db9ee6a50647d62c90ba580a4d7bbff21f2bea39e7b2f4a\",\"dweb:/ipfs/QmZiKwtKU1SBX4RGfQtY7PZfiapbbu6SZ9vizGQD9UHjRA\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x725209b582291bb83058e3078624b53d15a133f7401c30295e7f3704181d2aed\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0564ddb19c6d870e27b789d8f985283d815267ad7224883c2d5243c8bacc7dc0\",\"dweb:/ipfs/QmeC953H4sj88ZRFdJNFdmpf7J9SksP1wK4jyMHLo66z49\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xddce8e17e3d3f9ed818b4f4c4478a8262aab8b11ed322f1bf5ed705bb4bd97fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8084aa71a4cc7d2980972412a88fe4f114869faea3fefa5436431644eb5c0287\",\"dweb:/ipfs/Qmbqfs5dRdPvHVKY8kTaeyc65NdqXRQwRK7h9s5UJEhD1p\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa00be322d7db5786750ce0ac7e2f5b633ac30a5ed5fa1ced1e74acfc19acecea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c84e822f87cbdc4082533b626667b6928715bb2b1e8e7eb96954cebb9e38c8d\",\"dweb:/ipfs/QmZmy9dgxLTerBAQDuuHqbL6EpgRxddqgv5KmwpXYVbKz1\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]},\"contracts/NextRoundNFT.sol\":{\"keccak256\":\"0x59eaf2221505ead4742e412d153aaf0a821b6b83ba1c71ef538188bbf2d3be05\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://eab7ce0795faf65e99179d8c02ae5b4c0acf219b90691ac7bc36945ee3648c25\",\"dweb:/ipfs/QmZvBDpLfTzEBv9DWiJY1WuPJb74jGp7QoZv6n3sgU5KQB\"]}},\"version\":1}"}}}}}